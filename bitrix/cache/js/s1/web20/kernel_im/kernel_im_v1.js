; /* /bitrix/js/im/common.js?1697617525531247*/
; /* /bitrix/js/im/im.min.js?1697617533722828*/

; /* Start:"a:4:{s:4:"full";s:40:"/bitrix/js/im/common.js?1697617525531247";s:6:"source";s:23:"/bitrix/js/im/common.js";s:3:"min";s:0:"";s:3:"map";s:0:"";}"*/
;(function (window)
{
	if (window.BX.MessengerCommon) return;

	var BX = window.BX;

	var MessengerCommon = function ()
	{
		this.BXIM = {};
		this.sendBotCommand = false;
		this.sendBotCommandBlock = {};
		this.tryCheckConnect = {};
		this.externalLink = {};
	};

	/* Section: Context */
	MessengerCommon.prototype.setBxIm = function(dom)
	{
		this.BXIM = dom;
	}

	MessengerCommon.prototype.isIntranet = function()
	{
		return this.BXIM.bitrixIntranet;
	}

	MessengerCommon.prototype.isPage = function()
	{
		//return typeof(BX.MessengerWindow) != 'undefined' && !(this.BXIM.context == 'POPUP-FULLSCREEN'/* && BX.browser.IsMobile()*/); // TODO
		return typeof(BX.MessengerWindow) != 'undefined';
	}

	MessengerCommon.prototype.isPopupPage = function()
	{
		return typeof(BX.MessengerWindow) != 'undefined' && this.BXIM.context == 'POPUP-FULLSCREEN' && this.BXIM.bitrixIntranet;
	}

	MessengerCommon.prototype.isDesktop = function()
	{
		return typeof(BX.desktop) != 'undefined' && BX.desktop.apiReady;
	}

	MessengerCommon.prototype.getDefaultZIndex = function()
	{
		var zIndex = 1000;
		if (typeof BX.SidePanel !== 'undefined' && BX.SidePanel.Instance.isOpen())
		{
			var topSlider = BX.SidePanel.Instance.getTopSlider();
			if (topSlider)
			{
				zIndex = topSlider.getZindex() - BX.PopupWindow.getOption("popupZindex");
			}
		}

		return zIndex;
	}

	MessengerCommon.prototype.isSliderEnable = function()
	{
		return typeof BX.SidePanel !== 'undefined';
	}

	MessengerCommon.prototype.isSliderSupport = function()
	{
		return (
			this.isSliderEnable()
			&& (
				!this.isDesktop()
				|| this.isDesktop() && BX.desktop.enableInVersion(44)
			)
		);
	}

	MessengerCommon.prototype.isSliderBindingsEnable = function()
	{
		return (
			this.isSliderSupport()
			&& typeof BX.SidePanel.Instance.isAnchorBinding !== 'undefined'
		);
	}

	MessengerCommon.prototype.isMobile = function()
	{
		return this.BXIM.mobileVersion;
	}

	MessengerCommon.prototype.hideLinesKeyboard = function()
	{
		if (this.textPanelShowed)
		{
			this.textPanelShowed = false;
			BXMobileApp.UI.Page.TextPanel.hide();
		}
	}

	MessengerCommon.prototype.isSessionBlocked = function(chatId)
	{
		var session = BX.MessengerCommon.linesGetSession(this.BXIM.messenger.chat[chatId]);

		if (session && session.blockDate !== 0 && new Date(session.blockDate * 1000) < new Date())
		{
			return true;
		}
		return false;
	}

	MessengerCommon.prototype.isMobileNative = function()
	{
		return false;
	}

	MessengerCommon.prototype.isLinesOperator = function()
	{
		return this.BXIM.isLinesOperator;
	}

	MessengerCommon.prototype.isBot = function(botId)
	{
		return typeof(this.BXIM.messenger.bot[botId]) != 'undefined';
	}

	MessengerCommon.prototype.isChatId = function(dialogId)
	{
		return /^(chat|sg|crm)[0-9]{1,}/i.test(dialogId);
	}

	MessengerCommon.prototype.isDialogId = function(dialogId)
	{
		return /^([0-9]{1,}|(chat|sg|crm)[0-9]{1,})/i.test(dialogId);
	}

	MessengerCommon.prototype.applyViewCommonUsers = function(active)
	{
		if (typeof active === 'boolean')
		{
			this.BXIM.settings.viewCommonUsers = active;
		}

		if (!this.BXIM.init)
		{
			return true;
		}

		if (!this.BXIM.settings.viewCommonUsers)
		{
			this.BXIM.messenger.recent = this.BXIM.messenger.recent.filter(function(element) {
				return !(element.invited || element.options.default_user_record);
			});
			this.recentListBirthdayApply();
			this.recentListRedraw();

			return true;
		}

		this.BXIM.messenger.recentLoadMore = true;
		this.recentListRedraw();

		BX.rest.callBatch({
			recent: ['im.recent.list', {
				'SKIP_NOTIFICATION': 'Y',
				'SKIP_OPENLINES': (BX.MessengerCommon.isLinesOperator()? 'Y': 'N'),
			}],
			counters: ['im.counters.get', {'JSON': 'Y'}],
		}, function (result){
			if (result.counters.error())
			{
				BX.UI.Notification.Center.notify({
					content: BX.message('IM_CONNECT_ERROR'),
					autoHideDelay: 4000
				});
				return false;
			}

			this.recentListApply(result.recent.data(), result.counters.data());
			this.recentListRedraw();

			if (this.BXIM.messenger.checkRecentNeedLoad())
			{
				this.BXIM.messenger.recentListLoadMore();
			}
		}.bind(this));

		return true;
	}

	MessengerCommon.prototype.applyBirthdaySettings = function(active)
	{
		if (typeof active === 'boolean')
		{
			this.BXIM.settings.viewBirthday = active;
		}

		if (!this.BXIM.init)
		{
			return true;
		}

		this.recentListBirthdayApply();
		this.recentListRedraw();

		return true;
	}

	MessengerCommon.prototype.isBirthdayEnable = function()
	{
		if (this.BXIM.messenger.birthdayEnable === 'none')
		{
			return false;
		}

		if (!this.BXIM.settings.viewBirthday)
		{
			return false;
		}

		return true;
	}

	MessengerCommon.prototype.isBirthday = function(birthday, userId) // after change this code, sync with IM and MOBILE
	{
		if (!this.isBirthdayEnable())
		{
			return false;
		}

		if (
			this.BXIM.messenger.birthdayEnable === 'department'
			&& userId
			&& !this.BXIM.messenger.birthdayUsers[userId]
		)
		{
			return false;
		}

		var date = new Date();
		var currentDate = ("0" + date.getDate().toString()).substr(-2)+'-'+("0" + (date.getMonth() + 1).toString()).substr(-2);
		return birthday == currentDate;
	};

	MessengerCommon.prototype.getDebugInfo = function()
	{
		return {
			context: this.BXIM.context,
			design: this.BXIM.design,
			isDesktop: this.isDesktop() ? 'Y' : 'N',
			isPage: this.isPage() ? 'Y' : 'N',
			isMobile: this.isMobile() ? 'Y' : 'N',
			vInitedCall: BX.localStorage.get('vInitedCall') ? 'Y' : 'N',
			desktopStatus: this.BXIM.desktopStatus ? 'Y' : 'N',
			hasActiveCall: BX.MessengerCalls && BX.MessengerCalls.hasActiveCall() ? 'Y' : 'N',
			hasActiveCallTab: this.BXIM.callController && this.BXIM.callController.hasActiveCall() ? 'Y' : 'N',
			appVersion: navigator.appVersion
		}
	}

	MessengerCommon.prototype.checkInternetConnection = function (successCallback, failureCallback, tryCount, tryName)
	{
		if (typeof(successCallback) != 'function')
		{
			successCallback = function ()
			{
				if (typeof(BXIM) != 'undefined')
				{
					BXIM.messenger.connectionStatus('online', false);
				}
			};
		}

		if (typeof(failureCallback) != 'function')
			failureCallback = function() {};

		if (typeof(tryCount) != "number")
			tryCount = 1;

		if (!tryName && tryCount > 1)
			tryName = +new Date();

		if (typeof(BXIM) != 'undefined')
		{
			BXIM.messenger.connectionStatus('connecting');
		}

		BX.ajax({
			url: '//www.bitrixsoft.com/200.ok.'+(+new Date),
			method: 'GET',
			dataType: 'html',
			skipAuthCheck: true,
			skipBxHeader: true,
			timeout: 1,
			onsuccess: function(data){
				if (data == 'OK')
				{
					console.log('Checking internet connection... success!');
					delete BX.MessengerCommon.tryCheckConnect[tryName];
					successCallback();
				}
				else
				{
					if (typeof(BXIM) != 'undefined')
					{
						BXIM.messenger.connectionStatus('offline');
					}

					console.log('Checking internet connection... failure!');
					if (tryCount == 1)
					{
						delete BX.MessengerCommon.tryCheckConnect[tryName];
						failureCallback();
					}
					else
					{
						if (typeof(BXIM) != 'undefined')
						{
							BXIM.messenger.connectionStatus('connecting');
						}
						clearTimeout(BX.MessengerCommon.tryCheckConnect[tryName]);
						BX.MessengerCommon.tryCheckConnect[tryName] = setTimeout(function(){
							BX.MessengerCommon.checkInternetConnection(successCallback, failureCallback, tryCount-1, tryName)
						}, 5000);
					}
				}
			},
			onfailure: function(){
				console.log('Checking internet connection... failure!');
				if (tryCount == 1)
				{
					delete BX.MessengerCommon.tryCheckConnect[tryName];
					failureCallback();
				}
				else
				{
					clearTimeout(BX.MessengerCommon.tryCheckConnect[tryName]);
					BX.MessengerCommon.tryCheckConnect[tryName] = setTimeout(function(){
						BX.MessengerCommon.checkInternetConnection(successCallback, failureCallback, tryCount-1, tryName)
					}, 5000);
				}
			}
		});

		return true;
	}

	MessengerCommon.prototype.pinDialog = function(dialogId, active)
	{
		this.recentListElementPin(dialogId, active);
		BX.rest.callMethod('im.recent.pin', {'DIALOG_ID': dialogId, 'ACTION': active? 'Y': 'N'});
	};

	MessengerCommon.prototype.muteMessageChat = function(dialogId, mute, sendAjax)
	{
		var chatId = 0;
		if (dialogId.toString().substr(0,4) == 'chat')
		{
			chatId = dialogId.toString().substr(4);
			if (!this.BXIM.messenger.chat[chatId])
				return false;
		}
		else
		{
			chatId = this.BXIM.messenger.userChat[dialogId];
			if (!chatId)
				return false;
		}

		sendAjax = sendAjax != false;

		if (!this.BXIM.messenger.userChatBlockStatus[chatId])
			this.BXIM.messenger.userChatBlockStatus[chatId] = {}

		if (typeof mute == 'undefined')
		{
			if (typeof this.BXIM.messenger.userChatBlockStatus[chatId][this.BXIM.userId] == 'undefined')
			{
				mute = true
			}
			else
			{
				mute = !this.BXIM.messenger.userChatBlockStatus[chatId][this.BXIM.userId];
			}
		}
		else
		{
			mute = Boolean(mute);
		}

		this.BXIM.messenger.userChatBlockStatus[chatId][this.BXIM.userId] = mute;
		if (
			this.BXIM.messenger.chat[chatId]
			&& this.BXIM.messenger.chat[chatId].mute_list
		)
		{
			this.BXIM.messenger.chat[chatId].mute_list[this.BXIM.userId] = mute;
		}

		this.userListRedraw();
		this.BXIM.messenger.dialogStatusRedraw();
		this.BXIM.messenger.updateMessageCount();

		var muteAction = this.BXIM.messenger.userChatBlockStatus[chatId][this.BXIM.userId]? 'Y':'N';

		if (sendAjax)
		{
			BX.ajax({
				url: this.BXIM.pathToAjax+'?CHAT_MUTE&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
					name: 'im.chat.mute',
					dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
					data: {
						timMuteAction: muteAction
					}
				}),
				method: 'POST',
				dataType: 'json',
				timeout: 60,
				data: {'IM_CHAT_MUTE' : 'Y', 'CHAT_ID': chatId, 'MUTE': muteAction, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()}
			});
		}
	};

	MessengerCommon.prototype.MobileActionEqual = function(action)
	{
		if (!this.isMobile())
			return true;

		for (var i = 0; i < arguments.length; i++)
		{
			if (arguments[i] == this.BXIM.mobileAction)
				return true;
		}

		return false;
	}

	MessengerCommon.prototype.MobileActionNotEqual = function(action)
	{
		if (!this.isMobile())
			return false;

		for (var i = 0; i < arguments.length; i++)
		{
			if (arguments[i] == this.BXIM.mobileAction)
				return false;
		}

		return true;
	}

	MessengerCommon.prototype.isScrollMax = function(element, infelicity)
	{
		if (!element) return true;
		infelicity = typeof(infelicity) == 'number'? infelicity: 0;

		if (this.isMobile())
		{
			var height = window.orientation == 0? screen.height-125: screen.width-113;
			return (document.body.scrollHeight - height - height/2 <= element.scrollTop);
		}
		else
		{
			return (element.scrollHeight - element.offsetHeight - infelicity <= element.scrollTop);
		}

	};

	MessengerCommon.prototype.isScrollMin = function(element)
	{
		if (!element) return false;
		return (0 == element.scrollTop);
	};

	MessengerCommon.prototype.enableScroll = function(element, max, scroll)
	{
		if (!element)
			return false;

		if (this.BXIM.messenger.isBodyScroll)
			return false;

		if (this.isMobile())
		{
			return true;
		}

		scroll = scroll !== false;
		max = 400;

		if (!(scroll && this.isScrollMax(element, max)))
		{
			return false;
		}

		var lastUnreadMessage = (
			this.BXIM.messenger.unreadMessage[this.BXIM.messenger.currentTab]
			&& this.BXIM.messenger.unreadMessage[this.BXIM.messenger.currentTab][0]
				? BX('im-message-'+this.BXIM.messenger.unreadMessage[this.BXIM.messenger.currentTab][0])
				: null
		)
		if (lastUnreadMessage)
		{
			var visibleNode = lastUnreadMessage.parentNode.parentNode.parentNode.parentNode.parentNode.previousElementSibling? lastUnreadMessage.parentNode.parentNode.parentNode.parentNode.parentNode.previousElementSibling: lastUnreadMessage.parentNode.parentNode.parentNode.parentNode.parentNode;
			var scrollResult = this.isElementVisibleOnScreen(visibleNode, element, true);
			if (
				!scrollResult.top
				|| (scrollResult.coords.top > 0 && scrollResult.coords.top < 150)
				|| (scrollResult.coords.top < 0)
			)
			{
				return false;
			}
		}

		return true;
	};

	MessengerCommon.prototype.preventDefault = function(event)
	{
		event = event||window.event;

		if (event.stopPropagation)
			event.stopPropagation();
		else
			event.cancelBubble = true;

		if (typeof(BXIM) != 'undefined' && BXIM.messenger && BXIM.messenger.closeMenuPopup)
			BXIM.messenger.closeMenuPopup();

		if (typeof(BX) != 'undefined' && BX.calendar && BX.calendar.get().popup)
			BX.calendar.get().popup.close();
	};

	MessengerCommon.prototype.countObject = function(obj)
	{
		var result = 0;

		for (var i in obj)
		{
			if (obj.hasOwnProperty(i))
			{
				result++;
			}
		}

		return result;
	};

	/* Section: Element Coords */
	MessengerCommon.prototype.isElementCoordsBelow = function (element, domBox, offset, returnArray)
	{
		if (this.isMobile())
		{
			return true;
		}

		if (!domBox || typeof(domBox.getElementsByClassName) == 'undefined')
		{
			return false;
		}

		offset = offset? offset: 0;

		var coords = this.getElementCoords(element, domBox);
		coords.bottom = coords.top+element.offsetHeight;

		var topVisible = (coords.top >= offset);
		var bottomVisible = (coords.bottom > offset);

		if (returnArray)
		{
			return {'top': topVisible, 'bottom': bottomVisible, 'coords': coords};
		}
		else
		{
			return (topVisible || bottomVisible);
		}
	}

	MessengerCommon.prototype.isElementVisibleOnScreen = function (element, domBox, returnObject)
	{
		if (this.isMobile())
		{
			return BitrixMobile.Utils.isElementVisibleOnScreen(element);
		}

		if (!domBox || typeof(domBox.getElementsByClassName) == 'undefined')
		{
			return false;
		}

		var coords = this.getElementCoords(element, domBox);
		coords.bottom = coords.top+element.offsetHeight;

		var windowTop = domBox.scrollTop;
		var windowBottom = windowTop + domBox.clientHeight;

		var topVisible = (coords.top >= 0 && coords.top < windowBottom);
		var bottomVisible = (coords.bottom > 0 && coords.bottom < domBox.clientHeight);

		if (returnObject)
		{
			return {'result':  (topVisible || bottomVisible), 'top': topVisible, 'bottom': bottomVisible, 'coords': coords};
		}
		else
		{
			return (topVisible || bottomVisible);
		}
	}

	MessengerCommon.prototype.getElementCoords = function (element, domBox)
	{
		if (this.isMobile())
		{
			return BitrixMobile.Utils.getElementCoords(element);
		}

		if (!domBox || typeof(domBox.getElementsByClassName) == 'undefined')
		{
			return false;
		}

		var box = element.getBoundingClientRect();
		var inBox = domBox.getBoundingClientRect();

		return {
			originTop: box.top,
			originLeft: box.left,
			top: box.top - inBox.top,
			left: box.left - inBox.left
		};
	}



	/* Section: Date */
	MessengerCommon.prototype.getDateFormatType = function(type)
	{
		type = type? type.toString().toUpperCase(): 'DEFAULT';

		var format = [];
		if (type == 'MESSAGE_TITLE')
		{
			format = [
				["tommorow", "tommorow"],
				["today", "today"],
				["yesterday", "yesterday"],
				["", BX.Main.Date.convertBitrixFormat(BX.message("IM_M_MESSAGE_TITLE_FORMAT_DATE"))]
			];
		}
		else if (type == 'MESSAGE')
		{
			format = [
				["", BX.message("IM_M_MESSAGE_FORMAT_TIME")]
			];
		}
		else if (type == 'RECENT_TITLE')
		{
			format = [
				["tommorow", "today"],
				["today", "today"],
				["yesterday", "yesterday"],
				["", BX.Main.Date.convertBitrixFormat(BX.message("IM_CL_RESENT_FORMAT_DATE"))]
			]
		}
		else if (type == 'RECENT_OL_TITLE')
		{
			format = [
				["tommorow", "tommorow"],
				["today", "today"],
				["yesterday", "yesterday"],
				["", BX.Main.Date.convertBitrixFormat(BX.message("IM_CL_RESENT_FORMAT_DATE"))]
			]
		}
		else
		{
			format = [
				["tommorow", "tommorow, "+BX.message("IM_M_MESSAGE_FORMAT_TIME")],
				["today", "today, "+BX.message("IM_M_MESSAGE_FORMAT_TIME")],
				["yesterday", "yesterday, "+BX.message("IM_M_MESSAGE_FORMAT_TIME")],
				["", BX.Main.Date.convertBitrixFormat(BX.message("FORMAT_DATETIME"))]
			];
		}
		return format;
	}

	MessengerCommon.prototype.formatDate = function(date, format)
	{
		if (typeof(format) == 'undefined')
		{
			format = this.getDateFormatType('DEFAULT')
		}
		if (!BX.type.isDate(date))
		{
			if (typeof date == 'string')
			{
				date = new Date(date);
			}
			console.log(date, format);
			console.trace();
			return '';
		}
		return BX.Main.Date.format(format, Math.round(date.getTime()/1000)+parseInt(BX.message("SERVER_TZ_OFFSET"))+parseInt(BX.message("USER_TZ_OFFSET")), Math.round((new Date).getTime()/1000)+parseInt(BX.message("SERVER_TZ_OFFSET"))+parseInt(BX.message("USER_TZ_OFFSET")), true);
	};

	MessengerCommon.prototype.getNowDate = function(today)
	{
		var currentDate = new Date();
		if (today === true)
		{
			currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate(), 0, 0, 0);
		}

		return currentDate;
	};

	MessengerCommon.prototype.replaceDateText = function(messageId, messageText, messageParams)
	{
		if (
			!messageParams.DATE_TEXT
			|| !messageParams.DATE_TS
		)
		{
			return messageText;
		}

		var textReplacement = [];
		messageText = messageText.replace(/<a.*?href="([^"]*)".*?>(.*?)<\/a>/gi, function(whole)
		{
			var id = textReplacement.length;
			textReplacement.push(whole);
			return '####REPLACEMENT_TEXT_'+id+'####';
		});

		messageText = messageText.replace(/\[PUT(?:=(.+?))?\](.+?)?\[\/PUT\]/gi, function(whole)
		{
			var id = textReplacement.length;
			textReplacement.push(whole);
			return '####REPLACEMENT_TEXT_'+id+'####';
		});

		messageText = messageText.replace(/\[SEND(?:=(.+?))?\](.+?)?\[\/SEND\]/gi, function(whole)
		{
			var id = textReplacement.length;
			textReplacement.push(whole);
			return '####REPLACEMENT_TEXT_'+id+'####';
		});

		messageParams.DATE_TEXT.forEach(function(date, index)
		{
			if (!date)
			{
				return true;
			}
			var ts = messageParams.DATE_TS[index] || +new Date;

			messageText = messageText.split(date).join('<span class="bx-messenger-ajax bx-messenger-ajax-black" data-entity="date" data-messageId="'+messageId+'" data-ts="'+ts+'">'+date+'</span>');
		}.bind(this));

		if (textReplacement.length > 0)
		{
			do
			{
				for (var index = 0; index < textReplacement.length; index++)
				{
					messageText = messageText.replace('####REPLACEMENT_TEXT_'+index+'####', textReplacement[index]);
				}
			}
			while (messageText.indexOf('####REPLACEMENT_TEXT_') > -1);
		}

		return messageText;
	}

	/* Section: Images */
	MessengerCommon.prototype.formatUrl = function(url)
	{
		if (this.isMobile() && this.BXIM.webComponent && currentDomain)
		{
			if (url && url.indexOf('/') === 0)
			{
				url = currentDomain + url;
			}
		}

		return encodeURI(url);
	};

	MessengerCommon.prototype.isBlankAvatar = function(url)
	{
		return !url || url.toString().indexOf(this.BXIM.pathToBlankImage) >= 0;
	};

	MessengerCommon.prototype.getDefaultAvatar = function(type)
	{
		return "/bitrix/js/im/images/default-avatar-"+type+".png";
	};

	MessengerCommon.prototype.getAvatarStyle = function(entity, onlyStyle)
	{
		onlyStyle = !!onlyStyle;

		if (BX.MessengerCommon.isBlankAvatar(entity.avatar))
		{
			avatarStyle = 'background-color: '+entity.color;
		}
		else
		{
			avatarStyle = 'background: url(\''+entity.avatar+'\'); background-size: cover;';
		}

		if (!onlyStyle)
		{
			avatarStyle = 'style="'+avatarStyle+'"';
		}

		return avatarStyle;
	};

	MessengerCommon.prototype.hideErrorImage = function(element, rich)
	{
		if (rich)
		{
			BX.remove(element.parentNode);
			return true;
		}

		var link = element.src;
		if (element.parentNode && element.parentNode.parentNode)
		{
			element.parentNode.parentNode.className = 'bx-messenger-message';
			element.parentNode.parentNode.innerHTML = BX.create('a', {attrs: {href: link, target: "_blank"}, text: decodeURI(link)}).outerHTML;

		}

		return true;
	};



	/* Section: Text */
	MessengerCommon.prototype.prepareText = function(text, prepare, quote, image, highlightText, objectReference)
	{
		if (!text)
		{
			return text;
		}

		var textElement = text;
		prepare = prepare == true;
		quote = quote == true;
		image = image == true;
		highlightText = false; // deprecated

		textElement = BX.util.trim(textElement);

		if (prepare)
		{
			textElement = BX.util.htmlspecialchars(textElement);
		}

		if (textElement.indexOf('/me') == 0)
		{
			textElement = textElement.substr(4);
			textElement = '<i>'+textElement+'</i>';
		}
		else if (textElement.indexOf('/loud') == 0)
		{
			textElement = textElement.substr(6);
			textElement = '<b>'+textElement+'</b>';
		}

		textElement = this.decodeBbCode(textElement);

		if (prepare)
		{
			textElement = textElement.replace(/\n/gi, '<br />');
		}

		if (quote)
		{
			textElement = textElement.replace(/------------------------------------------------------<br \/>(.*?)\[(.*?)\](?: #(?:(?:chat)?\d+|\d+:\d+)\/\d+)?<br \/>(.*?)------------------------------------------------------(<br \/>)?/g, function(whole, p1, p2, p3, p4, offset){
				return (offset > 0? '<br>':'')+"<div class=\"bx-messenger-content-quote\"><span class=\"bx-messenger-content-quote-icon\"></span><div class=\"bx-messenger-content-quote-wrap\"><div class=\"bx-messenger-content-quote-name\">"+p1+" <span class=\"bx-messenger-content-quote-time\">"+p2+"</span></div>"+p3+"</div></div><br />";
			});
			textElement = textElement.replace(/------------------------------------------------------<br \/>(.*?)------------------------------------------------------(<br \/>)?/g, function(whole, p1, p2, p3, offset){
				return (offset > 0? '<br>':'')+"<div class=\"bx-messenger-content-quote\"><span class=\"bx-messenger-content-quote-icon\"></span><div class=\"bx-messenger-content-quote-wrap\">"+p1+"</div></div><br />";
			});
		}

		var quoteSign = "&gt;&gt;";
		if(quote && textElement.indexOf(quoteSign) >= 0)
		{
			var textPrepareFlag = false;
			var textPrepare = textElement.split("<br />");
			for(var i = 0; i < textPrepare.length; i++)
			{
				if(textPrepare[i].substring(0,quoteSign.length) == quoteSign)
				{
					textPrepare[i] = textPrepare[i].replace(quoteSign, "<div class=\"bx-messenger-content-quote\"><span class=\"bx-messenger-content-quote-icon\"></span><div class=\"bx-messenger-content-quote-wrap\">");
					while(++i < textPrepare.length && textPrepare[i].substring(0,quoteSign.length) == quoteSign)
					{
						textPrepare[i] = textPrepare[i].replace(quoteSign, '');
					}
					textPrepare[i-1] += '</div></div>';
					textPrepareFlag = true;
				}
			}
			textElement = textPrepare.join("<br />");
		}

		textElement = textElement.replace(/( ){4}/gi, '\t');
		textElement = textElement.replace(/\t/gi, '&nbsp;&nbsp;&nbsp;&nbsp;');

		if (image)
		{
			var changed = false;
			textElement = textElement.replace(/(.)?((https|http):\/\/([\S]+)\.(jpg|jpeg|png|gif|webp)(\?[\S]+)?)/gi, function(whole, letter, url)
			{
				if(
					letter && !(['>', ']'].includes(letter))
					|| !url.match(/(\.(jpg|jpeg|png|gif|webp)\?|\.(jpg|jpeg|png|gif|webp)$)/i)
					|| url.toLowerCase().indexOf("/docs/pub/") > 0
					|| url.toLowerCase().indexOf("logout=yes") > 0
				)
				{
					return whole;
				}
				else if (BX.MessengerCommon.isMobile())
				{
					changed = true;
					return (letter? letter: '')+'<span class="bx-messenger-file-image"><span class="bx-messenger-file-image-src"><img src="'+url+'" class="bx-messenger-file-image-text" onclick="BXIM.messenger.openPhotoGallery(this.src);" onerror="BX.MessengerCommon.hideErrorImage(this)"></span></span>';
				}
				else
				{
					changed = true;

					var chatId = typeof(this.BXIM.messenger.getChatId) != 'undefined'? this.BXIM.messenger.getChatId(): this.BXIM.messenger.currentTab;
					return (letter? letter: '')+'<span class="bx-messenger-file-image"><span class="bx-messenger-file-image-src"><img src="'+url+'" data-viewer="null" data-viewer-group-by="'+chatId+'" data-title="'+BX.util.jsencode(url)+'" class="bx-messenger-file-image-text" onerror="BX.MessengerCommon.hideErrorImage(this)"></span></span>';
				}
			});
			if (changed)
			{
				textElement = textElement
					.replace(/<\/span>(\n?)<\/a>(\n?)<br(\s\/?)>/gi, '</span></a>')
					.replace(/<\/span>(\n?)(\n?)<br(\s\/?)>/gi, '</span>')
				;
			}
		}

		if (this.BXIM.settings.enableBigSmile)
		{
			var oneSmileInMessage = false;
			textElement = textElement.replace(
				/^(\s*<img\s+src=[^>]+?data-code=[^>]+?data-definition="UHD"[^>]+?style="width:)(\d+)(px[^>]+?height:)(\d+)(px[^>]+?class="bx-smile"\s*\/?>\s*)$/,
				function doubleSmileSize(match, start, width, middle, height, end) {
					oneSmileInMessage = true;
					return start + (parseInt(width, 10) * 1.6) + middle + (parseInt(height, 10) * 1.6) + end;
				}
			);
			if (objectReference && oneSmileInMessage)
			{
				objectReference.oneSmileInMessage = true;
			}
		}

		if (textElement.substr(-6) == '<br />')
		{
			textElement = textElement.substr(0, textElement.length-6);
		}
		textElement = textElement.replace(/<br><br \/>/gi, '<br />');
		textElement = textElement.replace(/<br \/><br>/gi, '<br />');

		return textElement;
	};

	MessengerCommon.prototype.trimText = function(text)
	{
		return BX.util.trim(text);
	};

	MessengerCommon.prototype.purifyText = function(text, params) // after change this code, sync with IM and MOBILE
	{
		text = text? text.toString(): '';

		if (text)
		{
			text = this.trimText(text);

			if (text.indexOf('/me') == 0)
			{
				text = text.substr(4);
			}
			else if (text.indexOf('/loud') == 0)
			{
				text = text.substr(6);
			}
			if (text.substr(-6) == '<br />')
			{
				text = text.substr(0, text.length-6);
			}

			text = text.replace(/<br><br \/>/gi, '<br />');
			text = text.replace(/<br \/><br>/gi, '<br />');

			text = text.replace(/\[CODE\]\n?([\0-\uFFFF]*?)\[\/CODE\]/gis, function(whole,text) {
				return '['+BX.message('IM_M_CODE_BLOCK')+'] ';
			});

			text = text.replace(/\[PUT(?:=(?:.+?))?\](?:.+?)?\[\/PUT]/gi, function(match)
			{
				return match.replace(/\[PUT(?:=(.+))?\](.+?)?\[\/PUT]/gi, function(whole, command, text) {
					return  text? text: command;
				});
			});

			text = text.replace(/\[SEND(?:=(?:.+?))?\](?:.+?)?\[\/SEND]/gi, function(match)
			{
				return match.replace(/\[SEND(?:=(.+))?\](.+?)?\[\/SEND]/gi, function(whole, command, text) {
					return  text? text: command;
				});
			});

			text = this.recursiveReplace(text, /\[b]([^[]*(?:\[(?!b]|\/b])[^[]*)*)\[\/b]/gi, (whole, text) => text);
			text = this.recursiveReplace(text, /\[u]([^[]*(?:\[(?!u]|\/u])[^[]*)*)\[\/u]/gi, (whole, text) => text);
			text = this.recursiveReplace(text, /\[i]([^[]*(?:\[(?!i]|\/i])[^[]*)*)\[\/i]/gi, (whole, text) => text);
			text = this.recursiveReplace(text, /\[s]([^[]*(?:\[(?!s]|\/s])[^[]*)*)\[\/s]/gi, (whole, text) => text);

			text = text.replace(/\[url(?:=([^\[\]]+))?](.*?)\[\/url]/gis, (whole, link, text) => {return text? text: link;});
			text = text.replace(/\[url(?:=(.+))?](.*?)\[\/url]/gis, (whole, link, text) => {return text? text: link;});
			text = text.replace(/\[RATING=([1-5]{1})\]/gi, function(whole, rating) {return '['+BX.message('IM_F_RATING')+'] ';});
			text = text.replace(/\[ATTACH=([0-9]{1,})\]/gi, function(whole, rating) {return '['+BX.message('IM_F_ATTACH')+'] ';});
			text = text.replace(/\[USER=([0-9]+)( REPLACE)?](.*?)\[\/USER\]/gi, '$3');
			text = text.replace(/\[CHAT=([0-9]{1,})\](.*?)\[\/CHAT\]/gi, '$2');
			text = text.replace(/\[context=(chat\d+|\d+:\d+)\/(\d+)](.*?)\[\/context]/gis, (whole, dialogId, messageId, message) => message);
			text = text.replace(/\[CALL=(.*?)](.*?)\[\/CALL\]/gi, '$2');
			text = text.replace(/\[PCH=([0-9]{1,})\](.*?)\[\/PCH\]/gi, '$2');
			text = text.replace(/\[size=(\d+)](.*?)\[\/size]/gis, '$2');
			text = text.replace(/\[color=#([0-9a-f]{3}|[0-9a-f]{6})](.*?)\[\/color]/gis, '$2');
			text = text.replace(/<img.*?data-code="([^"]*)".*?>/gi, '$1');
			text = text.replace(/<span.*?title="([^"]*)".*?>.*?<\/span>/gi, '($1)');
			text = text.replace(/<img.*?title="([^"]*)".*?>/gi, '($1)');
			text = text.replace(/\[ATTACH=([0-9]{1,})\]/gi, function(whole, command, text) {return command == 10000? '': '['+BX.message('IM_F_ATTACH')+'] ';});
			text = text.replace(/<s>([^"]*)<\/s>/gi, ' ');
			text = text.replace(/\[s\]([^"]*)\[\/s\]/gi, ' ');
			text = text.replace(/\[icon\=([^\]]*)\]/gi, function(whole)
			{
				var title = whole.match(/title\=(.*[^\s\]])/i);
				if (title && title[1])
				{
					title = title[1];
					if (title.indexOf('width=') > -1)
					{
						title = title.substr(0, title.indexOf('width='))
					}
					if (title.indexOf('height=') > -1)
					{
						title = title.substr(0, title.indexOf('height='))
					}
					if (title.indexOf('size=') > -1)
					{
						title = title.substr(0, title.indexOf('size='))
					}
					if (title)
					{
						title = '('+this.trimText(title)+')';
					}
				}
				else
				{
					title = '('+BX.message('IM_M_ICON')+')';
				}
				return title;
			}.bind(this));

			text = text.split('<br />')
				.map(function(element) { return element.replace(/(>>).+/gi, " ["+BX.message("IM_M_QUOTE_BLOCK")+"] ") })
				.join(' ')
				.replace(/<\/?[^>]+>/gi, '')
				.replace(/------------------------------------------------------(.*?)------------------------------------------------------/gmi, " ["+BX.message("IM_M_QUOTE_BLOCK")+"] ")
				.replace(/-{54}(.*?)-{54}/gs, "["+BX.message("IM_M_QUOTE_BLOCK")+"]")
			;

			text = this.trimText(text);
		}

		if (params && params.ATTACH && params.ATTACH.length > 0)
		{
			const attachText = [];

			let skipAttachBlock = false;
			params.ATTACH.forEach(element => {
				if (element.DESCRIPTION === 'SKIP_MESSAGE')
				{
					skipAttachBlock = true;
				}
				else if (element.DESCRIPTION)
				{
					attachText.push(this.purifyText(element.DESCRIPTION));
				}
			});

			if (!skipAttachBlock)
			{
				text = text
					+ (text? ' ': '')
					+ (attachText.length > 0? attachText.join(' '): '['+BX.message('IM_F_ATTACH')+']')
				;
			}
		}

		if (text.length <= 0)
		{
			if (params && (params.WITH_FILE || params.FILE_ID && params.FILE_ID.length > 0))
			{
				text = '['+BX.message('IM_F_FILE')+']';
			}
			else if (params && params.WITH_ATTACH)
			{
				text = '['+BX.message('IM_F_ATTACH')+']';
			}
			else
			{
				text = BX.message('IM_M_DELETED');
			}
		}

		return text;
	};

	MessengerCommon.prototype.decodeBbCode = function(textElement, textOnly, specialchars)
	{
		if (!textElement)
		{
			return textElement;
		}

		textElement = textElement.toString();

		textOnly = typeof(textOnly) === 'undefined'? false: textOnly;
		specialchars = typeof(specialchars) === 'undefined'? false: specialchars === true;

		if (specialchars)
		{
			textElement = BX.util.htmlspecialchars(textElement);
		}

		var putReplacement = [];
		textElement = textElement.replace(/\[PUT(?:=(.+?))?\](.+?)?\[\/PUT\]/gi, function(whole)
		{
			var id = putReplacement.length;
			putReplacement.push(whole);
			return '####REPLACEMENT_PUT_'+id+'####';
		});

		var sendReplacement = [];
		textElement = textElement.replace(/\[SEND(?:=(.+?))?\](.+?)?\[\/SEND\]/gi, function(whole)
		{
			var id = sendReplacement.length;
			sendReplacement.push(whole);
			return '####REPLACEMENT_SEND_'+id+'####';
		});

		var codeReplacement = [];
		textElement = textElement.replace(/\[CODE\]\n?([\0-\uFFFF]*?)\[\/CODE\]/gis, function(whole,text)
		{
			var id = codeReplacement.length;
			codeReplacement.push(text);
			return '####REPLACEMENT_CODE_'+id+'####';
		});

		// base pattern for urls
		textElement = textElement.replace(/\[url(?:=([^\[\]]+))?](.*?)\[\/url]/gis, function(whole, link, text)
		{
			link = BX.util.htmlspecialcharsback(link? link: text);

			try
			{
				var url = new URL(link, location.origin+location.pathname);
			}
			catch(e)
			{
				return whole;
			}

			var allowList = [
				"http:",
				"https:",
				"ftp:",
				"file:",
				"tel:",
				"callto:",
				"mailto:",
				"skype:",
				"viber:",
			];
			if (allowList.indexOf(url.protocol) <= -1)
			{
				return whole;
			}

			var tag = document.createElement('a');
			tag.href = url.href;
			tag.target = '_blank';
			tag.text = BX.util.htmlspecialcharsback(text);

			return tag.outerHTML;
		});

		// url like https://bitrix24.com/?params[1]="test"
		textElement = textElement.replace(/\[url(?:=(.+?[^[\]]))?](.*?)\[\/url]/gis, (whole, link, text) =>
		{
			link = BX.util.htmlspecialcharsback(link? link: text);

			try
			{
				var url = new URL(link, location.origin+location.pathname);
			}
			catch(e)
			{
				return whole;
			}

			var allowList = [
				"http:",
				"https:",
				"ftp:",
				"file:",
				"tel:",
				"callto:",
				"mailto:",
				"skype:",
				"viber:",
			];
			if (allowList.indexOf(url.protocol) <= -1)
			{
				return whole;
			}

			url = url.href;

			if (!url.slice(url.lastIndexOf('[')).includes(']'))
			{
				if (text.startsWith(']'))
				{
					url = `${url}]`;
					text = text.slice(1);
				}
				else if (text.startsWith('='))
				{
					const urlPart = BX.Text.decode(text.slice(1, text.lastIndexOf(']')));
					url = `${url}]=${urlPart}`;
					text = text.slice(text.lastIndexOf(']')+1);
				}
			}

			return BX.Dom.create({
				tag: 'a',
				attrs: {
					href: url,
					target: '_blank'
				},
				html: text
			}).outerHTML;
		});

		textElement = textElement.replace(/\[BR\]/gi, '<br/>');

		textElement = this.recursiveReplace(textElement, /\[b]([^[]*(?:\[(?!b]|\/b])[^[]*)*)\[\/b]/gi, (whole, text) => '<b>'+text+'</b>');
		textElement = this.recursiveReplace(textElement, /\[u]([^[]*(?:\[(?!u]|\/u])[^[]*)*)\[\/u]/gi, (whole, text) => '<u>'+text+'</u>');
		textElement = this.recursiveReplace(textElement, /\[i]([^[]*(?:\[(?!i]|\/i])[^[]*)*)\[\/i]/gi, (whole, text) => '<i>'+text+'</i>');
		textElement = this.recursiveReplace(textElement, /\[s]([^[]*(?:\[(?!s]|\/s])[^[]*)*)\[\/s]/gi, (whole, text) => '<s>'+text+'</s>');

		textElement = textElement.replace(/\[size=(\d+)(?:pt|px)?](.*?)\[\/size]/gis, (whole, number, text) => {
			number = Number.parseInt(number, 10);
			if (number <= 8)
			{
				number = 8;
			}
			else if (number >= 30)
			{
				number = 30;
			}

			return BX.Dom.create({
				tag: 'span',
				style: { fontSize: number + 'px' },
				html: text
			}).outerHTML;
		});

		textElement = textElement.replace(/\[color=#([0-9a-f]{3}|[0-9a-f]{6})](.*?)\[\/color]/gis, (whole, hex, text) => {
			return BX.Dom.create({
				tag: 'span',
				style: { color: '#'+ hex },
				html: text
			}).outerHTML;
		});

		textElement = textElement.replace(/\[LIKE\]/gi, '<span class="bx-smile bx-im-smile-like" title="'+BX.message('IM_MESSAGE_LIKE')+'"></span>');
		textElement = textElement.replace(/\[DISLIKE\]/gi, '<span class="bx-smile bx-im-smile-dislike" title="'+BX.message('IM_MESSAGE_DISLIKE')+'"></span>');

		textElement = textElement.replace(/\[USER=([0-9]+)( REPLACE)?](.*?)\[\/USER\]/gi, BX.delegate(function(whole, userId, replace, text)
		{
			var html = '';

			if (this.BXIM.messenger.openChatFlag && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)] && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type == "livechat")
				return text;

			userId = parseInt(userId);
			if (!textOnly && text && userId > 0)
				html = '<span class="bx-messenger-ajax '+(userId == this.BXIM.userId? 'bx-messenger-ajax-self': '')+'" data-entity="user" data-userId="'+userId+'">'+text+'</span>';
			else
				html = text;

			return html;
		}, this));

		textElement = textElement.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi, function(whole, openlines, chatId, text)
		{
			var html = '';

			chatId = parseInt(chatId);

			if (!textOnly && text && chatId > 0 && typeof(BXIM) != 'undefined')
			{
				if (openlines)
				{
					html = '<span class="bx-messenger-ajax" data-entity="openlines" data-sessionId="'+chatId+'">'+text+'</span>';
				}
				else
				{
					html = '<span class="bx-messenger-ajax" data-entity="chat" data-chatId="'+chatId+'">'+text+'</span>';
				}
			}
			else
			{
				html = text;
			}

			return html;
		});

		textElement = textElement.replace(/\[context=(chat\d+|\d+:\d+)\/(\d+)](.*?)\[\/context]/gis, (whole, dialogId, messageId, text) => {
			return text;
		});

		textElement = textElement.replace(/\[PCH=([0-9]{1,})\](.*?)\[\/PCH\]/gi, function(whole, historyId, text)
		{
			var html = '';

			historyId = parseInt(historyId);
			if (!textOnly && text && historyId > 0)
				html = '<span class="bx-messenger-ajax" data-entity="phoneCallHistory" data-historyId="'+historyId+'">'+text+'</span>';
			else
				html = text;

			return html;
		});


		textElement = textElement.replace(/\[CALL(?:=(.+?))?\](.+?)?\[\/CALL\]/gi, function(whole, command, text)
		{
			var html = '';

			text = text? text: command;
			command = command? command: text;
			if (!textOnly && text)
				html = '<span class="bx-messenger-command" data-entity="call" data-command="'+BX.util.htmlspecialchars(command)+'">'+text+'</span>';
			else
				html = text;

			return html;
		});

		var textElementSize = 0;
		if (this.BXIM.settings.enableBigSmile)
		{
			textElementSize = BX.util.trim(textElement.replace(/\[icon\=([^\]]*)\]/gi, '')).length;
		}

		textElement = textElement.replace(/\[icon\=([^\]]*)\]/gi, BX.delegate(function(whole)
		{
			var url = whole.match(/icon\=(\S+[^\s.,> )\];\'\"!?])/i);
			if (url && url[1])
			{
				url = url[1];
			}
			else
			{
				return '';
			}
			var attrs = {'src': url, 'border': 0};

			var size = whole.match(/size\=(\d+)/i);
			if (size && size[1])
			{
				attrs['width'] = size[1];
				attrs['height'] = size[1];
			}
			else
			{
				var width = whole.match(/width\=(\d+)/i);
				if (width && width[1])
				{
					attrs['width'] = width[1];
				}

				var height = whole.match(/height\=(\d+)/i);
				if (height && height[1])
				{
					attrs['height'] = height[1];
				}

				if (attrs['width'] && !attrs['height'])
				{
					attrs['height'] = attrs['width'];
				}
				else if (attrs['height'] && !attrs['width'])
				{
					attrs['width'] = attrs['height'];
				}
				else if (attrs['height'] && attrs['width'])
				{}
				else
				{
					attrs['width'] = 20;
					attrs['height'] = 20;
				}
			}

			attrs['width'] = attrs['width']>100? 100: attrs['width'];
			attrs['height'] = attrs['height']>100? 100: attrs['height'];

			if (this.BXIM.settings.enableBigSmile && textElementSize == 0 && attrs['width'] == attrs['height'] && attrs['width'] == 20)
			{
				attrs['width'] = 40;
				attrs['height'] = 40;
			}

			var title = whole.match(/title\=(.*[^\s\]])/i);
			if (title && title[1])
			{
				title = title[1];
				if (title.indexOf('width=') > -1)
				{
					title = title.substr(0, title.indexOf('width='))
				}
				if (title.indexOf('height=') > -1)
				{
					title = title.substr(0, title.indexOf('height='))
				}
				if (title.indexOf('size=') > -1)
				{
					title = title.substr(0, title.indexOf('size='))
				}
				if (title)
				{
					title = BX.util.trim(title);
					attrs['title'] = title;
					attrs['alt'] = title;
				}
			}
			else
			{
				attrs['title'] = BX.message('IM_M_ICON');
				attrs['alt'] = attrs['title'];
			}

			return BX.create("img", {
				attrs: attrs,
				props : { className: "bx-smile bx-icon"}
			}).outerHTML;
		}, this));



		textElement = textElement.replace(/\[RATING\=([1-5]{1})\]/gi, BX.delegate(function(whole, rating)
		{
			return this.linesVoteHeadNodes(0, rating, false).outerHTML;
		}, this));

		//textElement = textElement.replace(/\*(.*?)\*/m, function(whole, text)
		//{
		//	return "<b>"+text+"</b>";
		//});
		//textElement = textElement.replace(/\_(.*?)\_/m, function(whole, text)
		//{
		//	return "<i>"+text+"</i>";
		//});
		//textElement = textElement.replace(/\~(.*?)\~/m, function(whole, text)
		//{
		//	return "<strike>"+text+"</strike>";
		//});

		const Parser = BX.Reflection.getClass('BX.Messenger.v2.Lib.Parser');
		if (Parser)
		{
			textElement = Parser.decodeSmileForLegacyCore(textElement, {enableBigSmile: this.BXIM.settings.enableBigSmile})
		}

		if (sendReplacement.length > 0)
		{
			for (var index = 0; index < sendReplacement.length; index++)
			{
				textElement = textElement.replace('####REPLACEMENT_SEND_'+index+'####', sendReplacement[index]);
			}
		}

		textElement = textElement.replace(/\[SEND(?:=(?:.+?))?\](?:.+?)?\[\/SEND]/gi, function(match)
		{
			return match.replace(/\[SEND(?:=(.+))?\](.+?)?\[\/SEND]/gi, function(whole, command, text)
			{
				var html = '';

				text = text? text: command;
				command = (command? command: text).replace('<br />', '\n');

				if (!textOnly && text)
				{
					text = text.replace(/<([\w]+)[^>]*>(.*?)<\\1>/i, "$2", text);
					text = text.replace(/\[([\w]+)[^\]]*\](.*?)\[\/\1\]/i, "$2", text);

					command = command.split('####REPLACEMENT_PUT_').join('####REPLACEMENT_SP_');

					html = '<span class="bx-messenger-command" data-entity="send" title="'+BX.message('IM_BB_SEND')+'">'+text+'</span>';
					html += '<span class="bx-messenger-command-data">'+command+'</span>';
				}
				else
				{
					html = text;
				}
				return html;
			});
		});

		if (putReplacement.length > 0)
		{
			for (var index = 0; index < putReplacement.length; index++)
			{
				textElement = textElement.replace('####REPLACEMENT_PUT_'+index+'####', putReplacement[index]);
			}
		}

		textElement = textElement.replace(/\[PUT(?:=(?:.+?))?\](?:.+?)?\[\/PUT]/gi, function(match)
		{
			return match.replace(/\[PUT(?:=(.+))?\](.+?)?\[\/PUT]/gi, function(whole, command, text)
			{
				var html = '';

				text = text? text: command;
				command = (command? command: text).replace('<br />', '\n');

				if (!textOnly && text)
				{
					text = text.replace(/<([\w]+)[^>]*>(.*?)<\/\1>/i, "$2", text);
					text = text.replace(/\[([\w]+)[^\]]*\](.*?)\[\/\1\]/i, "$2", text);

					html = '<span class="bx-messenger-command" data-entity="put" title="'+BX.message('IM_BB_PUT')+'">'+text+'</span>';
					html += '<span class="bx-messenger-command-data">'+command+'</span>';
				}
				else
				{
					html = text;
				}

				return html;
			});
		});

		if (codeReplacement.length > 0)
		{
			for (var index = 0; index < codeReplacement.length; index++)
			{
				textElement = textElement.replace('####REPLACEMENT_CODE_'+index+'####',
					!textOnly? '<div class="bx-messenger-code">'+codeReplacement[index]+'</div>': codeReplacement[index]
				)
			}
		}

		if (sendReplacement.length > 0)
		{
			do
			{
				for (var index = 0; index < sendReplacement.length; index++)
				{
					textElement = textElement.replace('####REPLACEMENT_SEND_'+index+'####', sendReplacement[index]);
				}
			}
			while (textElement.indexOf('####REPLACEMENT_SEND_') > -1);
		}

		textElement = textElement.split('####REPLACEMENT_SP_').join('####REPLACEMENT_PUT_');

		if (putReplacement.length > 0)
		{
			do
			{
				for (var index = 0; index < putReplacement.length; index++)
				{
					textElement = textElement.replace('####REPLACEMENT_PUT_'+index+'####', putReplacement[index]);
				}
			}
			while (textElement.indexOf('####REPLACEMENT_PUT_') > -1);
		}

		return textElement;
	}

	MessengerCommon.prototype.recursiveReplace = function(text, pattern, replacement)
	{
		if (!BX.Type.isStringFilled(text))
		{
			return text;
		}

		let count = 0;
		let deep = true;
		do
		{
			deep = false;
			count++;
			text = text.replace(pattern, (...params) => {
				deep = true;
				return replacement(...params);
			});
		}
		while (deep && count <= 10);

		return text;
	}

	MessengerCommon.prototype.openLink = function(link, target)
	{
		target = target || '_blank';

		window.open(link, target, '', true);

		return true;

		// var dom = BX.create('a', {attrs: {href: link, style: 'display:none', target: target}});
		// document.body.appendChild(dom);
		// dom.click();
		// document.body.removeChild(dom);
		return true;
	}

	MessengerCommon.prototype.clipboardCopy = function(callback, cut)
	{
		document.execCommand(cut == true? "cut": "copy");

		var clipboardTextArea = BX.create('textarea', { style : {'position': 'absolute', 'opacity': 0, 'top': -1000, 'left': -1000}});
		document.body.insertBefore(clipboardTextArea, document.body.firstChild);
		clipboardTextArea.focus();
		document.execCommand("paste");
		var text = clipboardTextArea.value;

		var textNew = null;
		if (typeof (callback) == 'function')
		{
			textNew = callback(clipboardTextArea.value);
		}
		else if (typeof (callback) != 'undefined')
		{
			textNew = callback.toString();
		}

		if (textNew)
		{
			text = clipboardTextArea.value = textNew;
			clipboardTextArea.selectionStart = 0;
			document.execCommand("copy");
		}

		BX.remove(clipboardTextArea);

		return text;
	}

	MessengerCommon.prototype.clipboardCut = function ()
	{
		return this.clipboardCopy(null, true);
	}

	MessengerCommon.prototype.prepareTextBack = function(text, trueQuote)
	{
		var textElement = text;

		trueQuote = trueQuote === true;

		textElement = BX.util.htmlspecialcharsback(textElement);
		textElement = textElement.replace(/<(\/*)([buis]+)>/gi, '[$1$2]');
		textElement = textElement.replace(/<img.*?data-code="([^"]*)".*?>/gi, '$1');
		textElement = textElement.replace(/<a.*?href="([^"]*)".*?>.*?<\/a>/gi, '$1');
		if (!trueQuote)
		{
			textElement = textElement.replace(/\[CODE\]\n?([\0-\uFFFF]*?)(<br\/?>)?\[\/CODE\]/gis, "["+BX.message("IM_M_CODE_BLOCK")+"]");
			textElement = textElement.replace(/------------------------------------------------------(.*?)------------------------------------------------------/gmi, "["+BX.message("IM_M_QUOTE_BLOCK")+"]");
		}
		textElement = textElement.split('&nbsp;&nbsp;&nbsp;&nbsp;').join("\t");
		textElement = textElement.split('&nbsp;').join(" ");
		textElement = textElement.split('<br />').join("\n");//.replace(/<\/?[^>]+>/gi, '');

		return textElement;
	};

	MessengerCommon.prototype.addMentionList = function(tabId, dialogName, dialogId)
	{
		if (!tabId || !dialogName)
			return false;

		if (!this.BXIM.messenger.mentionList[tabId])
			this.BXIM.messenger.mentionList[tabId] = {};

		this.BXIM.messenger.mentionList[tabId][dialogName] = dialogId;
	}

	MessengerCommon.prototype.prepareMention = function(tabId, text)
	{
		if (!this.BXIM.messenger.mentionList[tabId])
			return text;

		for (var dialogName in this.BXIM.messenger.mentionList[tabId])
		{
			var dialogId = this.BXIM.messenger.mentionList[tabId][dialogName];
			if (!dialogId)
			{
				continue;
			}

			if (dialogId.toString().substr(0,4) == 'chat')
			{
				text = text.split(dialogName).join('[CHAT='+dialogId.toString().substr(4)+']'+dialogName+'[/CHAT]');
			}
			else
			{
				text = text.split(dialogName).join('[USER='+dialogId+']'+dialogName+'[/USER]');
			}
		}

		if (!BX.browser.IsIE11())
		{
			try
			{
				text = text.replace(RegExp('-{54}\n(.*?)\n-{54}', 'gs'), function(whole){
					return whole.replace(/\[USER=([0-9]+)( REPLACE)?](.*?)\[\/USER\]/gi, '$3');
				});
			}
			catch(e) {}
		}

		this.clearMentionList(tabId);

		return text;
	}

	MessengerCommon.prototype.clearMentionList = function(tabId)
	{
		delete this.BXIM.messenger.mentionList[tabId];
	}



	/* Section: User state */
	MessengerCommon.prototype.getRecipientByChatId = function(chatId)
	{
		var recipientId = 0;
		if (this.BXIM.messenger.chat[chatId])
		{
			recipientId = 'chat'+chatId;
		}
		else
		{
			for (var userId in this.BXIM.messenger.userChat)
			{
				if (this.BXIM.messenger.userChat[userId] == chatId)
				{
					recipientId = userId;
					break;
				}
			}
		}
		return recipientId;
	}

	MessengerCommon.prototype.getUserIdByChatId = function(chatId)
	{
		var result = 0;
		for (var userId in this.BXIM.messenger.userChat)
		{
			if (this.BXIM.messenger.userChat[userId] == chatId)
			{
				result = userId;
				break;
			}
		}
		return result;
	}

	MessengerCommon.prototype.getUserParam = function(userId, reset)
	{
		userId = typeof(userId) == 'undefined'? this.BXIM.userId: userId;
		reset = typeof(reset) == 'boolean'? reset: false;

		if (
			userId && (
				userId.toString().substr(0, 4) == 'chat'
				|| userId.toString().substr(0, 2) == 'sg'
				|| userId.toString().substr(0, 3) == 'crm'
			)
		)
		{
			var chatId = userId.toString().substr(0, 4) == 'chat'? userId.toString().substr(4): userId;
			if (reset || !(this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].id))
			{
				this.BXIM.messenger.chat[chatId] = {'id': chatId, 'name': BX.message('IM_M_LOAD_USER'), 'owner': 0, work_position: '', 'avatar': this.BXIM.pathToBlankImage, 'type': 'chat', color: '#556574', mute_list: {}, 'fake': true, date_create: false};
				if (reset)
				{
					this.BXIM.messenger.chat[chatId].fake = false;
				}
			}
			return this.BXIM.messenger.chat[chatId];
		}
		else
		{
			if (reset || !(this.BXIM.messenger.users[userId] && this.BXIM.messenger.users[userId].id))
			{
				var profilePath = parseInt(userId)? this.BXIM.path.profileTemplate.replace('#user_id#', userId): '';
				this.BXIM.messenger.users[userId] = {'id': userId, 'avatar': this.BXIM.pathToBlankImage, 'name': BX.message('IM_M_LOAD_USER'), 'profile': profilePath, 'status': 'guest', work_position: '', 'extranet': false, 'network': false, color: '#556574', 'fake': true, last_activity_date: false, mobile_last_date: false, absent: false, idle: false};
				this.BXIM.messenger.hrphoto[userId] = '/bitrix/js/im/images/hidef-avatar-v3.png';
				if (reset)
				{
					this.BXIM.messenger.users[userId].fake = false;
				}
			}
			return this.BXIM.messenger.users[userId];
		}
	}

	MessengerCommon.prototype.userInChat = function(chatId, userId)
	{
		if (!this.BXIM.messenger.userInChat[chatId])
			return false;

		if (typeof(userId) == 'undefined')
		{
			userId = this.BXIM.userId;
		}
		else
		{
			userId = parseInt(userId);
		}

		var userFound = false;
		if (
			this.BXIM.messenger.userInChat[chatId].indexOf(userId.toString()) > -1
			|| this.BXIM.messenger.userInChat[chatId].indexOf(parseInt(userId)) > -1
		)
		{
			userFound = true;
		}

		return userFound;
	}

	MessengerCommon.prototype.onOnlineStatusCallback = function(userId, lastseen, now, utc, mode)
	{
		console.log('Run callback for', mode, userId, lastseen, now, utc);
	}

	MessengerCommon.prototype.getUserStatus = function(userData, onlyStatus) // after change this code, sync with IM and MOBILE
	{
		onlyStatus = onlyStatus !== false;

		var online = this.getOnlineData(userData);

		var status = 'offline';
		var statusText = '';
		var originStatus = '';
		var originStatusText = '';
		if (!userData)
		{
			status = 'guest';
			statusText = BX.message('IM_STATUS_GUEST');
		}
		else if (userData.network)
		{
			status = 'network';
			statusText = BX.message('IM_STATUS_NETWORK');

			if (userData.bot && this.BXIM.messenger.bot[userData.id] && this.BXIM.messenger.bot[userData.id].type == 'support24')
			{
				status = 'support24';
			}
		}
		else if (userData.bot)
		{
			status = 'bot';
			statusText = BX.message('IM_STATUS_BOT');
		}
		else if (userData.connector)
		{
			status = userData.status == 'offline'? 'lines': 'lines-online';
			statusText = BX.message('IM_CL_USER_LINES');
		}
		else if (userData.status == 'guest')
		{
			status = 'guest';
			statusText = BX.message('IM_STATUS_GUEST');
		}
		else if (this.getCurrentUser() == userData.id)
		{
			status = userData.status? userData.status.toString(): 'online';
			statusText = status? BX.message('IM_STATUS_'+status.toUpperCase()): '';
		}
		else if (!online.isOnline)
		{
			status = 'offline';
			statusText = BX.message('IM_STATUS_OFFLINE');
		}
		else if (this.getUserMobileStatus(userData))
		{
			status = 'mobile';
			statusText = BX.message('IM_STATUS_MOBILE');
		}
		else if (this.getUserIdleStatus(userData, online))
		{
			status = userData.status === 'break'? 'break-idle': 'idle';

			statusText = BX.message('IM_STATUS_AWAY_TITLE').replace('#TIME#', this.getUserIdle(userData));
		}
		else
		{
			status = userData.status? userData.status.toString(): 'offline';
			statusText = BX.message('IM_STATUS_'+status.toUpperCase());
		}

		if (userData && this.isBirthday(userData.birthday, userData.id) && (userData.status == 'online' || !online.isOnline))
		{
			originStatus = status;
			originStatusText = statusText;

			status = 'birthday';
			if (online.isOnline)
			{
				statusText = BX.message('IM_M_BIRTHDAY_MESSAGE_SHORT');
			}
			else
			{
				statusText = BX.message('IM_STATUS_OFFLINE');
			}
		}
		else if (userData && userData.absent)
		{
			originStatus = status;
			originStatusText = statusText;

			status = 'vacation';
			if (online.isOnline)
			{
				statusText = BX.message('IM_STATUS_ONLINE');
			}
			else
			{
				statusText = BX.message('IM_STATUS_VACATION');
			}
		}

		return onlyStatus? status: {
			status: status,
			statusText: statusText,
			originStatus: originStatus? originStatus: status,
			originStatusText: originStatusText? originStatusText: statusText,
		};
	};

	MessengerCommon.prototype.getOnlineData = function(userData) // after change this code, sync with IM and MOBILE
	{
		var online = {};
		if (userData)
		{
			if (userData.id == this.getCurrentUser())
			{
				userData.last_activity_date = new Date();
				userData.mobile_last_date = false;
				userData.idle = false;
			}

			online = BX.user.getOnlineStatus(userData.last_activity_date);
		}

		return online;
	};

	MessengerCommon.prototype.getUserIdle = function(userData)
	{
		if (!userData)
		{
			return '';
		}

		var message = "";
		if (userData.idle)
		{
			var format = (new Date().getTime()-userData.idle.getTime())/1000 >= 3600? 'Hdiff': 'idiff';
			message = this.formatDate(userData.idle,[
			   ["s60", "sdiff"],
			   ["i60", "idiff"],
			   ["H24", "Hdiff"],
			   ["", "ddiff"]
			]);
		}

		return message;
	}

	MessengerCommon.prototype.getUserMobileStatus = function(userData) // after change this code, sync with IM and MOBILE
	{
		if (!userData)
			return false;

		return (
			userData.mobile_last_date
			&& new Date() - userData.mobile_last_date < parseInt(BX.message('LIMIT_ONLINE'))*1000
			&& userData.last_activity_date-userData.mobile_last_date < 300*1000
		);
	};

	MessengerCommon.prototype.getUserIdleStatus = function(userData, online) // after change this code, sync with IM and MOBILE
	{
		if (!userData)
			return '';

		online = online? online: BX.user.getOnlineStatus(userData.last_activity_date);

		return userData.idle && online.isOnline;
	};

	MessengerCommon.prototype.getUserPosition = function(userData, showLastActivityDate) // after change this code, sync with IM and MOBILE
	{
		showLastActivityDate = showLastActivityDate === true;

		if (!userData)
			return '';

		var position = '';
		if (showLastActivityDate && userData.last_activity_date && !(userData.bot || userData.network))
		{
			position = this.getUserLastDate(userData);
			if (position)
			{
				return position;
			}
		}

		if(userData.work_position)
		{
			position = userData.work_position;
		}
		else if (userData.extranet || userData.network)
		{
			position = BX.message('IM_CL_USER_EXTRANET');
		}
		else if (userData.bot)
		{
			position = BX.message('IM_CL_BOT');
		}
		else
		{
			position = this.isIntranet()? BX.message('IM_CL_USER'): BX.message('IM_CL_USER_B24');
		}

		return position;
	};

	MessengerCommon.prototype.getUserLastDate = function(userData)
	{
		if (!userData)
		{
			return '';
		}

		var text = '';
		var online = {};
		if (userData.bot || userData.network)
		{
			text = '';
		}
		else if (userData.absent && !this.getUserMobileStatus(userData))
		{
			online = this.getOnlineData(userData);
			text = BX.message('IM_STATUS_VACATION_TITLE').replace('#DATE#',
				BX.Main.Date.format(BX.Main.Date.convertBitrixFormat(BX.message("FORMAT_DATE")), userData.absent.getTime()/1000)
			);

			if (online.isOnline && userData.idle)
			{
				 text = BX.message('IM_STATUS_AWAY_TITLE').replace('#TIME#', this.getUserIdle(userData));
			}
			else if (online.isOnline && !online.lastSeenText)
			{
				text = BX.message('IM_STATUS_ONLINE')+'. '+text;
			}
			else if (online.lastSeenText)
			{
				text = BX.message('IM_LS_'+(userData.gender == 'F'? 'F': 'M')).replace('#POSITION#', text).replace('#LAST_SEEN#', online.lastSeenText);
			}
		}
		else if (userData.last_activity_date)
		{
			online = this.getOnlineData(userData);
			if (online.isOnline && userData.idle && !this.getUserMobileStatus(userData))
			{
				 text = BX.message('IM_STATUS_AWAY_TITLE').replace('#TIME#', this.getUserIdle(userData));
			}
			else if (online.isOnline && !online.lastSeenText)
			{
				if (this.isMobile() && this.getUserMobileStatus(userData))
				{
					text = BX.message('IM_STATUS_MOBILE');
				}
				else
				{
					text = BX.message('IM_STATUS_ONLINE');
				}
			}
			else if (online.lastSeenText)
			{
				text = BX.message('IM_LS_SHORT_'+(userData.gender == 'F'? 'F': 'M')).replace('#LAST_SEEN#', online.lastSeenText);
			}
		}

		return text;
	};

	MessengerCommon.prototype.isIntranet = function() {return this.BXIM.bitrixIntranet;};

	MessengerCommon.prototype.getCurrentUser = function() {return this.BXIM.userId;};

	MessengerCommon.prototype.getDialogId = function()
	{
		if (this.BXIM.messenger.currentTab.toString().substr(0, 4) == 'chat')
		{
			return this.BXIM.messenger.currentTab;
		}

		return parseInt(this.BXIM.messenger.currentTab);
	};

	MessengerCommon.prototype.getLogTrackingParams = function(params)
	{
		if (typeof params !== 'object' || !params)
		{
			params = {};
		}

		var name = params.name || 'tracking';
		var data = params.data || [];
		var dialog = params.dialog || null;
		var message = params.message || null;
		var files = params.files || null;

		var result = [];

		name = encodeURIComponent(name);

		if (
			data
			&& !BX.type.isArray(data)
			&& typeof data === 'object'
		)
		{
			var dataArray = [];
			for (var id in data)
			{
				if (data.hasOwnProperty(id))
				{
					dataArray.push(encodeURIComponent(id)+"="+encodeURIComponent(data[id]));
				}
			}
			data = dataArray;
		}
		else if (!BX.type.isArray(data))
		{
			data = [];
		}

		if (dialog)
		{
			result.push('timType='+dialog.type);

			if (dialog.type === 'lines')
			{
				result.push('timLinesType='+dialog.entityId.split('|')[0]);
			}
		}

		if (files)
		{
			var type = 'file';
			if (BX.type.isArray(files) && files[0])
			{
				type = files[0].type;
			}
			else
			{
				type = files.type;
			}
			result.push('timMessageType='+type);
		}
		else if (message)
		{
			result.push('timMessageType=text');
		}

		if (navigator.userAgent && navigator.userAgent.toLowerCase().indexOf('bitrixmobile') > -1)
		{
			result.push('timDevice=bitrixMobile');
		}
		else if (navigator.userAgent && navigator.userAgent.toLowerCase().indexOf('bitrixdesktop') > -1)
		{
			result.push('timDevice=bitrixDesktop');
		}
		else if (
			navigator.userAgent.toLowerCase().indexOf('iphone') > -1
			|| navigator.userAgent.toLowerCase().indexOf('ipad') > -1
			|| navigator.userAgent.toLowerCase().indexOf('android') > -1
		)
		{
			result.push('timDevice=mobile');
		}
		else
		{
			result.push('timDevice=web');
		}

		return name + (data.length? '&'+data.join('&'): '') + (result.length? '&'+result.join('&'): '');
	}

	MessengerCommon.prototype.getDialogDataForTracking = function(dialogId)
	{
		var result = {type: 'private', entityId: '', entityTypeId: ''};

		if (dialogId.toString().indexOf('chat') === 0)
		{
			result.type = 'chat';

			var chatId = dialogId.toString().substr(4);
			if (this.BXIM.messenger.chat[chatId])
			{
				result.type = this.BXIM.messenger.chat[chatId].type;
				result.entityTypeId = this.BXIM.messenger.chat[chatId].entity_type_id;
				result.entityId = this.BXIM.messenger.chat[chatId].entity_id;
			}
		}

		return result;
	};

	MessengerCommon.prototype.getChatUsers = function()
	{
		if (this.BXIM.messenger.currentTab.toString().substr(0, 4) != 'chat')
		{
			return [].push(parseInt(this.BXIM.messenger.currentTab));
		}

		var chatId = this.BXIM.messenger.currentTab.toString().substr(4);
		var result = [];
		if (this.BXIM.messenger.userInChat[chatId])
		{
			result = this.BXIM.messenger.userInChat[chatId].map(function(item) {
				return parseInt(item);
			});
		}

		return result;
	};

	MessengerCommon.prototype.setColor = function(color, chatId)
	{
		if (!this.BXIM.init && this.isDesktop())
		{
			BX.desktop.onCustomEvent("bxSaveColor", [{color: color, chatId: chatId}]);
			return false;
		}

		if (typeof(color) != "string")
		{
			return false;
		}
		else
		{
			color = color.toUpperCase();
		}
		if (typeof(chatId) != 'undefined')
		{
			if (typeof(this.BXIM.messenger.chat[chatId]) == 'undefined')
			{
				return false;
			}
		}
		else
		{
			chatId = 0;
			if (this.BXIM.userColor == color)
			{
				return false;
			}
		}

		BX.ajax({
			url: this.BXIM.pathToAjax+'?SET_COLOR&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			data: {'IM_SET_COLOR' : 'Y', 'COLOR' : color, 'CHAT_ID': chatId, 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data) {
				if (data.ERROR == "")
				{
					if (parseInt(data.CHAT_ID) == 0)
					{
						this.BXIM.userColor = data.COLOR;
						if (this.isPage())
						{
							setTimeout(function(){
								BX.MessengerWindow.setUserInfo(BX.MessengerCommon.getUserParam());
							}, 500);
						}
					}
				}
			}, this)
		});
	};

	MessengerCommon.prototype.checkRestriction = function(chatId, action)
	{
		if (!this.BXIM.messenger.chat[chatId])
			return null;

		if (!this.BXIM.messenger.chat[chatId].entity_type)
			return false;

		var entityType = this.BXIM.messenger.chat[chatId].entity_type;

		if (typeof(this.BXIM.messenger.userChatOptions[entityType]) == 'undefined' || typeof(this.BXIM.messenger.userChatOptions[entityType][action]) == 'undefined')
			return false;

		if (!this.BXIM.messenger.userChatOptions[entityType][action])
			return true;

		return false;
	}

	MessengerCommon.prototype.getEntityTypePath = function(chatId)
	{
		if (!this.BXIM.messenger.chat[chatId])
			return null;

		if (!this.BXIM.messenger.chat[chatId].entity_type)
			return null;

		var entityType = this.BXIM.messenger.chat[chatId].entity_type;

		if (entityType == 'CRM' && this.BXIM.bitrixCrm)
		{
			var entityParams = this.BXIM.messenger.chat[chatId].entity_id.toString().split('|');
			if (!this.BXIM.path.crm[entityParams[0]])
			{
				return null;
			}
			return {'PATH': this.BXIM.path.crm[entityParams[0]].replace('#ID#', entityParams[1]), 'TITLE': BX.message('IM_M_OL_GOTO_CRM')};
		}
		else
		{
			if (typeof(this.BXIM.messenger.userChatOptions[entityType]) == 'undefined')
				return null;

			if (!this.BXIM.messenger.userChatOptions[entityType]['PATH'])
				return null;

			return {'PATH': this.BXIM.messenger.userChatOptions[entityType]['PATH'].replace('#ID#', this.BXIM.messenger.chat[chatId].entity_id), 'TITLE': this.BXIM.messenger.userChatOptions[entityType]['PATH_TITLE']};
		}
	}

	MessengerCommon.prototype.renameChat = function(chatId, title)
	{
		chatId = parseInt(chatId);
		if (this.BXIM.messenger.popupMessengerConnectionStatusState != 'online' || !title || chatId <= 0)
			return false;

		title = BX.util.trim(title);
		if (title.length <= 0 || this.BXIM.messenger.chat[chatId].name == BX.util.htmlspecialchars(title))
			return false;

		var previousName = this.BXIM.messenger.chat[chatId].name;
		this.BXIM.messenger.chat[chatId].name = BX.util.htmlspecialchars(title);

		BX.ajax({
			url: this.BXIM.pathToAjax+'?CHAT_RENAME&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'IM_CHAT_RENAME' : 'Y', 'CHAT_ID' : chatId, 'CHAT_TITLE': title, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				if (data.ERROR)
				{
					if (this.BXIM.messenger.popupMessengerPanelChatTitle)
					{
						this.BXIM.messenger.popupMessengerPanelChatTitle.innerHTML = previousName;
					}
					this.BXIM.messenger.chat[chatId].name = previousName;
				}
			}, this)
		});

		return true;
	};



	/* Section: CL & RL */
	MessengerCommon.prototype.userListRedraw = function(params)
	{
		if (this.isMobile())
		{
			if (!this.MobileActionEqual('RECENT'))
			{
				return false;
			}
		}

		if (
			this.BXIM.messenger.recentList
			&& this.BXIM.messenger.contactListSearchText != null
			&& this.BXIM.messenger.contactListSearchText.length == 0
		)
		{
			this.recentListRedraw(params);

			if (this.BXIM.messenger.checkRecentNeedLoad && this.BXIM.messenger.checkRecentNeedLoad())
			{
				this.BXIM.messenger.recentListLoadMore();
			}
		}
		else if (this.BXIM.messenger.chatList)
		{
			this.chatListRedraw(params);
		}
		else
		{
			this.contactListRedraw(params);
		}
	};



	/* Section: Concact List */
	MessengerCommon.prototype.contactListRedraw = function(params)
	{
		if (this.BXIM.messenger.popupMessenger == null)
			return false;

		params = params || {};

		if (!this.isMobile())
		{
			this.BXIM.messenger.chatList = false;
			this.BXIM.messenger.contactList = true;
			this.BXIM.messenger.recentList = false;
			this.BXIM.messenger.linesList = false;

			if (this.BXIM.messenger.popupPopupMenu != null && this.BXIM.messenger.popupPopupMenu.uniquePopupId.replace('bx-messenger-popup-','') == 'contactList')
			{
				this.BXIM.messenger.popupPopupMenu.close();
			}
		}

		if (this.BXIM.messenger.contactListSearchText.length > 0)
		{
			if (BX.MessengerProxy)
			{
				BX.MessengerProxy.sendOpenSearchEvent(this.BXIM.messenger.contactListSearchText);
			}
		}
		else
		{
			if (this.BXIM.messenger.redrawContactListTimeout['contactList'])
				clearTimeout(this.BXIM.messenger.redrawContactListTimeout['contactList']);

			if (this.isMobile())
			{
				BitrixMobile.LazyLoad.showImages();
			}
		}

		// params.SEND = params.SEND == true;
		// if (!this.isMobile() && params.SEND)
		// {
		// 	BX.localStorage.set('mrd', {viewGroup: this.BXIM.settings.viewGroup, viewOffline: this.BXIM.settings.viewOffline}, 5);
		// }
	};

	MessengerCommon.prototype.contactListPrepareSearch = function(name, bind, search, params)
	{
		if (!bind)
			return false;

		if (
			this.BXIM.messenger.openLinesFlag &&
			(
				name == 'popupChatDialogContactListElements' && this.BXIM.messenger.popupChatDialogDestType == "CHAT_EXTEND" ||
				name == 'popupTransferDialogContactListElements'
			)
		)
		{
			params.viewOffline = true;
			params.viewOnlyIntranet = true;
			params.viewChat = false;
			params.viewOfflineWithPhones = false;
		}

		var searchParams = {
			'listName': name,
			'groupOpen': true,
			'viewSelf': name == 'contactList',
			'viewOffline': true,
			'viewGroup': true,
			'viewChat': true,
			'viewBot': true,
			'viewTransferViQueue': false,
			'viewTransferOlQueue': false,
			'viewOpenChat': true,
			'viewOfflineWithPhones': false,
			'showUserLastActivityDate': undefined,
			'extra': false,
			'searchText': search,
			'callback': {
				'empty': function(){}
			}
		};
		if (params != false)
		{
			for (var i in params)
			{
				if (i == 'timeout' || i == 'params')
					continue;

				searchParams[i] = params[i];
			}
		}

		var timeout = params.timeout? params.timeout: 0;

		if (timeout > 0)
		{
			clearTimeout(this.BXIM.messenger.redrawContactListTimeout[name]);
			this.BXIM.messenger.redrawContactListTimeout[name] = setTimeout(BX.delegate(function(){
				bind.innerHTML = '';
				bind.appendChild(this.contactListPrepare(searchParams));
				if (this.isMobile())
				{
					BitrixMobile.LazyLoad.showImages();
				}
			}, this), timeout);
		}
		else
		{
			bind.innerHTML = '';
			bind.appendChild(this.contactListPrepare(searchParams));
			if (this.isMobile())
			{
				BitrixMobile.LazyLoad.showImages();
			}
		}
	}

	MessengerCommon.prototype.contactListPrepare = function(params)
	{
		params = typeof(params) == 'object'? params: {};
		return this.chatListPrepare(params);
	};

	MessengerCommon.prototype.contactListClickItem = function(e)
	{
		this.BXIM.messenger.closeMenuPopup();
		var itemId = BX.proxy_context.getAttribute('data-userId');
		if (itemId.toString().substr(0,9) == 'structure')
		{
			var structureId = itemId.toString().substr(9);
			var structureName = this.BXIM.messenger.groups[structureId].name.split(' / ')[0];

			this.BXIM.messenger.popupContactListSearchInput.value = structureName;
			this.BXIM.messenger.contactListSearchText = itemId;

			this.contactListPrepareSearch('contactList', this.BXIM.messenger.popupContactListElementsWrap, this.BXIM.messenger.contactListSearchText, {})
			return BX.PreventDefault(e);
		}

		if (this.BXIM.messenger.contactList)
		{
			BX.MessengerCommon.recentListElementToTop(BX.proxy_context.getAttribute('data-userId'));
		}
		if (this.isMobile() || !this.BXIM.messenger.chatList)
		{
			this.BXIM.messenger.popupContactListSearchInput.value = '';
			this.BXIM.messenger.contactListSearchText = '';
			BX.localStorage.set('mns', this.BXIM.messenger.contactListSearchText, 5);

			this.BXIM.messenger.chatList = false;
			this.BXIM.messenger.recentList = true;
			this.BXIM.messenger.linesList = false;
			this.BXIM.messenger.contactList = false;
			this.BXIM.messenger.contactListShowed = {};
			this.BXIM.messenger.realSearch = !this.BXIM.options.contactListLoad;

			this.userListRedraw();
		}
		if (this.isMobile())
		{
			this.BXIM.messenger.openMessenger(BX.proxy_context.getAttribute('data-userId'), BX.proxy_context);
		}
		else
		{
			this.BXIM.messenger.openMessenger(BX.proxy_context.getAttribute('data-userId'));
			if (this.BXIM.callController && this.BXIM.callController.hasActiveCall())
			{
				this.BXIM.callController.fold();
			}
		}
	}

	MessengerCommon.prototype.contactListGetFromServer = function(onSuccess)
	{
		if (this.BXIM.messenger.contactListLoad)
			return false;

		if(!BX.type.isFunction(onSuccess))
			onSuccess = BX.DoNothing;

		this.BXIM.messenger.contactListLoad = true;
		BX.ajax({
			url: this.BXIM.pathToAjax+'?CONTACT_LIST&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 30,
			data: {'IM_CONTACT_LIST' : 'Y', 'IM_AJAX_CALL' : 'Y', 'DESKTOP' : (this.isDesktop()? 'Y': 'N'), 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (data && data.BITRIX_SESSID)
				{
					BX.message({'bitrix_sessid': data.BITRIX_SESSID});
				}
				if (data.ERROR == '')
				{
					for (var i in data.USERS)
					{
						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
					}

					for (var i in data.GROUPS)
						this.BXIM.messenger.groups[i] = data.GROUPS[i];

					for (var i in data.CHATS)
					{
						if (this.BXIM.messenger.chat[i] && this.BXIM.messenger.chat[i].fake)
							data.CHATS[i].fake = true;
						else if (!this.BXIM.messenger.chat[i])
							data.CHATS[i].fake = true;

						data.CHATS[i].date_create = new Date(data.CHATS[i].date_create);
						this.BXIM.messenger.chat[i] = data.CHATS[i];
					}
					for (var i in data.PHONES)
					{
						this.BXIM.messenger.phones[i] = {};
						for (var j in data.PHONES[i])
						{
							this.BXIM.messenger.phones[i][j] = BX.util.htmlspecialcharsback(data.PHONES[i][j]);
						}
					}

					for (var i in data.USER_IN_GROUP)
					{
						if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
						{
							this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
						}
						else
						{
							for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
								this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

							this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
						}
					}

					this.userListRedraw();

					if (!this.isMobile())
					{
						this.BXIM.messenger.dialogStatusRedraw();

						if (this.BXIM.messenger.popupChatDialogContactListElements != null)
						{
							this.contactListPrepareSearch('popupChatDialogContactListElements', this.BXIM.messenger.popupChatDialogContactListElements, this.BXIM.messenger.popupChatDialogContactListSearch.value, {'viewOffline': true, 'viewChat': false, 'viewOpenChat': this.BXIM.messenger.popupChatDialogContactListElementsType == 'MENTION'});
						}
						if (this.BXIM.webrtc.popupTransferDialogContactListElements != null)
						{
							this.contactListPrepareSearch('popupTransferDialogContactListElements', this.BXIM.webrtc.popupTransferDialogContactListElements, this.BXIM.webrtc.popupTransferDialogContactListSearch.value, {'viewChat': false, 'viewOpenChat': false, 'viewOffline': false, 'viewBot': false, 'viewOnlyIntranet': true, 'viewOfflineWithPhones': true});
						}
						if (this.BXIM.messenger.popupTransferDialogContactListElements != null)
						{
							this.contactListPrepareSearch('popupTransferDialogContactListElements', this.BXIM.messenger.popupTransferDialogContactListElements, this.BXIM.messenger.popupTransferDialogContactListSearch.value, {'viewChat': false, 'viewOpenChat': false, 'viewOffline': false, 'viewBot': false, 'viewTransferOlQueue': true, 'viewOnlyIntranet': true, 'viewOfflineWithPhones': false});
						}
					}

					onSuccess();
				}
				else
				{
					this.BXIM.messenger.contactListLoad = false;
					if (data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
					{
						this.BXIM.messenger.sendAjaxTry++;
						setTimeout(BX.delegate(this.contactListGetFromServer, this), 2000);
						BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
					}
					else if (data.ERROR == 'AUTHORIZE_ERROR')
					{
						this.BXIM.messenger.sendAjaxTry++;
						if (this.isDesktop() || this.isMobile())
						{
							setTimeout(BX.delegate(this.contactListGetFromServer, this), 10000);
						}
						BX.onCustomEvent(window, 'onImError', [data.ERROR]);
					}
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.sendAjaxTry = 0;
				this.BXIM.messenger.contactListLoad = false;
			}, this)
		});
	};

	MessengerCommon.prototype.contactListRealSearch = function(text, callback)
	{
		if (!this.BXIM.messenger.realSearch)
			return false;

		this.contactListRealSearchText = text;
		clearTimeout(this.BXIM.messenger.contactListSearchTimeout);
		this.BXIM.messenger.contactListSearchTimeout = setTimeout(BX.delegate(function(){
			if (this.contactListRealSearchText.length < 3)
			{
				this.BXIM.messenger.realSearchFound = true;
				return false;
			}

			BX.ajax({
				url: this.BXIM.pathToAjax+'?CONTACT_LIST_SEARCH&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 30,
				data: {'IM_CONTACT_LIST_SEARCH' : 'Y', 'SEARCH' : this.contactListRealSearchText, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
				onsuccess: BX.delegate(function(data){

					this.BXIM.messenger.realSearchFound = true;

					this.BXIM.messenger.userInGroup['search'] = {'id':'search', 'users': []};

					for (var i in data.USERS)
					{
						if (this.BXIM.messenger.users[i])
						{
							continue;
						}

						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
						this.BXIM.messenger.userInGroup['search']['users'].push(i);

						if (data.USERS[i].bot && data.USERS[i].network)
						{
							this.BXIM.messenger.bot[i] = {'type': 'network'};
							this.BXIM.messenger.users[i].extranet = false;
						}
					}

					if (typeof(callback) != 'undefined')
					{
						callback()
					}
					else if (this.BXIM.messenger.contactList)
					{
						this.contactListRedraw({FORCE: true});
					}
				}, this),
				onfailure: BX.delegate(function()	{
					this.BXIM.messenger.realSearchFound = true;
				}, this)
			});
		}, this), 1500);

	}

	MessengerCommon.prototype.contactListSearchClear = function(e)
	{
		if (!this.BXIM.messenger.popupContactListSearchInput)
			return;

		clearTimeout(this.BXIM.messenger.contactListSearchTimeout);
		clearTimeout(this.BXIM.messenger.redrawChatListTimeout);
		clearTimeout(this.BXIM.messenger.redrawRecentListTimeout);
		if (this.BXIM.messenger.redrawContactListTimeout['contactList'])
			clearTimeout(this.BXIM.messenger.redrawContactListTimeout['contactList']);

		this.BXIM.messenger.realSearch = !this.BXIM.options.contactListLoad;
		this.BXIM.messenger.realSearchFound = true;

		if (BX.MessengerProxy && this.BXIM.newSearchEnabled)
		{
			BX.MessengerProxy.sendCloseSearchEvent();
			if (BX.MessengerWindow && BX.MessengerWindow.currentTab === 'im-ol')
			{
				this.BXIM.messenger.hideNewRecent();
			}
		}
		this.BXIM.messenger.popupContactListSearchInput.value = '';
		this.BXIM.messenger.contactListSearchText = BX.util.trim(this.BXIM.messenger.popupContactListSearchInput.value);
		BX.localStorage.set('mns', this.BXIM.messenger.contactListSearchText, 5);

		BX.addClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-normal');
		BX.removeClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-active bx-messenger-box-contact-hover');
		this.BXIM.messenger.popupContactListActive = false;
		this.BXIM.messenger.popupContactListHovered = false;
		clearTimeout(this.BXIM.messenger.popupContactListWrapAnimation);

		this.BXIM.messenger.chatList = false;
		this.BXIM.messenger.recentList = true;
		this.BXIM.messenger.linesList = false;
		this.BXIM.messenger.contactList = false;
		this.BXIM.messenger.contactListShowed = {};

		this.BXIM.messenger.userInGroup['search'] = {'id':'search', 'users': []};

		this.userListRedraw();
	}

	MessengerCommon.prototype.contactListSearch = function(event)
	{
		if (event.keyCode == 16 || event.keyCode == 18 || event.keyCode == 20 || event.keyCode == 244 || event.keyCode == 91) // 224, 17
			return false;

		if (event.keyCode == 37 || event.keyCode == 39)
			return true;

		if (this.BXIM.messenger.popupContactListSearchInput.value != this.BXIM.messenger.contactListSearchLastText || this.BXIM.messenger.popupContactListSearchInput.value  == '')
		{
		}
		else if (event.keyCode == 224 || event.keyCode == 18 || event.keyCode == 17)
		{
			return true;
		}

		if (event.keyCode == 38 || event.keyCode == 40)
		{
			// todo up/down select
			return true;
		}

		if (this.isMobile())
		{
			this.BXIM.messenger.chatList = false;
			this.BXIM.messenger.recentList = false;
			this.BXIM.messenger.linesList = false;
			this.BXIM.messenger.contactList = true;

			if (!app.enableInVersion(10))
			{
				setTimeout(function(){
					document.body.scrollTop = 0;
				}, 100);
			}
		}
		else
		{
			if (event.keyCode == 27) //Esc
			{
				if (BX.MessengerProxy && this.BXIM.newSearchEnabled)
				{
					BX.MessengerProxy.sendCloseSearchEvent();
				}

				if (this.BXIM.messenger.realSearch)
				{
					this.BXIM.messenger.realSearchFound = true;
				}

				if (this.BXIM.messenger.contactListSearchText <= 0 && !this.BXIM.messenger.chatList)
				{
					this.BXIM.messenger.popupContactListSearchInput.value = "";
					if (!this.isMobile() && this.BXIM.messenger.popupMessenger && !this.BXIM.messenger.desktop.ready() && this.BXIM.callController && !this.BXIM.callController.hasActiveCall())
					{
						this.BXIM.messenger.popupMessenger.destroy();
						return true;
					}
				}
				else
				{
					this.contactListSearchClear();
					this.BXIM.messenger.popupMessengerTextarea.focus();
					return true;
				}
			}

			this.BXIM.messenger.chatList = false;
			this.BXIM.messenger.recentList = false;
			this.BXIM.messenger.linesList = false;
			this.BXIM.messenger.contactList = true;
		}

		if (
			BX.MessengerProxy
			&& this.BXIM.newSearchEnabled
			&& event.keyCode === 13 //enter
		)
		{
			BX.MessengerProxy.sendUpdateSearchEvent(this.BXIM.messenger.popupContactListSearchInput.value, event.keyCode);
			this.BXIM.messenger.showNewRecent();
		}

		if (this.BXIM.messenger.popupContactListSearchInput.value == this.BXIM.messenger.contactListSearchLastText)
		{
			return true;
		}
		this.BXIM.messenger.contactListSearchText = BX.util.trim(this.BXIM.messenger.popupContactListSearchInput.value);
		this.BXIM.messenger.contactListSearchLastText = this.BXIM.messenger.contactListSearchText;

		if (this.BXIM.messenger.realSearch)
		{
			this.BXIM.messenger.realSearchFound = this.BXIM.messenger.contactListSearchText.length < 3;
		}

		if (!this.isMobile())
		{
			BX.localStorage.set('mns', this.BXIM.messenger.contactListSearchText, 5);
		}

		if (this.BXIM.messenger.contactListSearchText == '')
		{
			if (this.BXIM.messenger.realSearch)
			{
				this.BXIM.messenger.realSearchFound = true;
				this.BXIM.messenger.realSearch = !this.BXIM.options.contactListLoad;
			}

			this.BXIM.messenger.chatList = false;
			this.BXIM.messenger.recentList = true;
			this.BXIM.messenger.linesList = false;
			this.BXIM.messenger.contactList = false;

			BX.addClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-normal');
			this.BXIM.messenger.popupContactListActive = false;
			this.BXIM.messenger.popupContactListHovered = false;
			clearTimeout(this.BXIM.messenger.popupContactListWrapAnimation);
		}
		else
		{
			BX.addClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-active');
			this.BXIM.messenger.popupContactListActive = true;
			this.BXIM.messenger.popupContactListHovered = true;
			clearTimeout(this.BXIM.messenger.popupContactListWrapAnimation);
		}
		if (!BX.MessengerWindow || !BX.MessengerProxy || !this.BXIM.newSearchEnabled || BX.MessengerWindow.currentTab == 'im-ol')
		{
			this.userListRedraw();
		}
	};

	MessengerCommon.prototype.handleInputEvent = function(event)
	{
		if (BX.MessengerProxy && this.BXIM.newSearchEnabled)
		{
			BX.MessengerProxy.sendUpdateSearchEvent(this.BXIM.messenger.popupContactListSearchInput.value, event.keyCode);
			this.BXIM.messenger.showNewRecent();
		}
	};


	/* Section: Recent list */
	MessengerCommon.prototype.recentListRedraw = function(params)
	{
		if (this.debug())
		{
			console.warn('---------------')
			console.time('recentList draw');
		}
		clearTimeout(this.BXIM.messenger.redrawRecentListTimeout);
		if (this.MobileActionNotEqual('RECENT'))
		{
			return false;
		}

		if (this.BXIM.messenger.recentList && this.BXIM.messenger.popupMessenger)
		{
			if (!this.isMobile())
			{
				if (this.BXIM.messenger.popupMessenger == null)
					return false;

				this.BXIM.messenger.chatList = false;
				this.BXIM.messenger.contactList = false;
				this.BXIM.messenger.recentList = true;
				this.BXIM.messenger.linesList = this.isPage() && BX.MessengerWindow.currentTab == 'im-ol';
			}

			if (this.BXIM.messenger.popupContactListActive)
			{
				BX.addClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-normal');
				BX.removeClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-active bx-messenger-box-contact-hover');
				this.BXIM.messenger.popupContactListActive = false;
				this.BXIM.messenger.popupContactListHovered = false;
				clearTimeout(this.BXIM.messenger.popupContactListWrapAnimation);
			}

			if (this.BXIM.messenger.contactListSearchText == null || this.BXIM.messenger.contactListSearchText.length > 0)
			{
				this.BXIM.messenger.contactListSearchText = '';
				this.BXIM.messenger.popupContactListSearchInput.value = '';
			}

			if (this.BXIM.messenger.redrawContactListTimeout['contactList'])
				clearTimeout(this.BXIM.messenger.redrawContactListTimeout['contactList']);

			if (!this.isMobile() && this.BXIM.messenger.popupPopupMenu != null && this.BXIM.messenger.popupPopupMenu.uniquePopupId.replace('bx-messenger-popup-','') == 'contactList')
			{
				this.BXIM.messenger.popupPopupMenu.close();
			}

			if (this.debug())
			{
				console.time('recentList checkSum');
			}

			var newRecentList = null;
			if (this.isPage() && BX.MessengerWindow.currentTab == 'im-ol')
			{
				BX.addClass(this.BXIM.messenger.popupContactListElementsWrap, 'bx-messenger-recent-lines-wrap');
				BX.addClass(this.BXIM.messenger.popupContactListElements, 'bx-messenger-recent-lines-container');
				BX.removeClass(this.BXIM.messenger.popupContactListElements, 'bx-messenger-recent-container');
				newRecentList = this.linesListPrepare(params);
			}
			else if (this.isPage() && BX.MessengerWindow.currentTab == 'im')
			{
				BX.addClass(this.BXIM.messenger.popupContactListElements, 'bx-messenger-recent-container');
				BX.removeClass(this.BXIM.messenger.popupContactListElements, 'bx-messenger-recent-lines-container');
				newRecentList = this.recentListPrepare(params);
			}

			if (this.debug())
			{
				console.timeEnd('recentList checkSum');
			}

			if (this.isPage() && BX.MessengerWindow.currentTab == 'im-ol')
			{
				var checkSumCurrent = this.getRecentListCheckSum(this.BXIM.messenger.popupContactListElementsWrap);
				var checkSumNew = this.getRecentListCheckSum(newRecentList);

				if (BX.browser.IsIE11() || checkSumNew != checkSumCurrent)
				{
					this.BXIM.messenger.popupContactListElementsWrap.innerHTML = '';
					this.BXIM.messenger.popupContactListElementsWrap.appendChild(newRecentList);
				}

				this.BXIM.messenger.hideNewRecent();
				return;
			}
			else
			{
				this.BXIM.messenger.showNewRecent();
			}

			if (this.debug())
			{
				console.log('recentList update', 'done');
			}
		}

		if (this.debug())
		{
			console.timeEnd('recentList draw');
		}
	};

	MessengerCommon.prototype.debug = function(active)
	{
		if (typeof active === 'undefined')
		{
			return BX.localStorage.get('im-debug') == 1;
		}

		BX.localStorage.set('im-debug', active? 1: 0, 86400);
	}

	MessengerCommon.prototype.getRecentListCheckSum = function(node, deep)
	{
		deep = (deep || 0) + 1;

		var result = '';
		var element = null;

		for (var index in node.children)
		{
			if (!node.children.hasOwnProperty(index))
			{
				continue;
			}

			element = node.children[index];

			if (deep == 1)
			{
				result += element.textContent;
			}

			if (element.classList.contains('bx-messenger-cl-avatar-img'))
			{
				result += element.style.background;
			}

			result += element.className;
			result += this.getRecentListCheckSum(element, deep);
		}

		if (deep == 1)
		{
			result = BX.md5(result);
		}

		return result;
	}

	MessengerCommon.prototype.recentListPrepare = function(params)
	{
		params = typeof(params) == 'object'? params: {};

		var recentList = document.createDocumentFragment();

		var list = {
			'pinned': {name: BX.message('IM_RECENT_PINNED'), elements: []},
			'general': {name: '', elements: []},
		};

		this.BXIM.messenger.recent.forEach(function(element)
		{
			if (element.type === 'chat')
			{
				if (element.lines && this.isLinesOperator())
				{
					return true;
				}
			}
			else if (params.showOnlyChat)
			{
				return true;
			}

			if (element.pinned)
			{
				list.pinned.elements.push(element);
			}
			else
			{
				list.general.elements.push(element);
			}

			return true;
		}.bind(this));

		list.pinned.elements.sort(function(a, b)
		{
			return b.message.date.getTime() - a.message.date.getTime();
		});
		list.general.elements.sort(function(a, b)
		{
			return b.message.date.getTime() - a.message.date.getTime();
		});

		var groupCall = false
		if (BX.MessengerCalls)
		{
			BX.MessengerCalls.get().forEach(function(call)
			{
				if (!groupCall)
				{
					groupCall = true;
					recentList.appendChild(BX.create("div", {props : { className: "bx-messenger-recent-group bx-messenger-recent-group-calls"}, children : [
						BX.create("span", {props : { className: "bx-messenger-recent-group-title"}, html : BX.message('IM_RECENT_CALLS')})
					]}));
				}

				var node = BX.MessengerCalls.drawElement(call);
				if (node)
				{
					recentList.appendChild(node);
				}
			});
		}

		['pinned', 'general'].forEach(function(type)
		{
			if (list[type].elements.length <= 0)
			{
				return true;
			}

			if (list[type].name)
			{
				recentList.appendChild(BX.create("div", {props : { className: "bx-messenger-recent-group bx-messenger-recent-group-"+type}, children : [
					BX.create("span", {props : { className: "bx-messenger-recent-group-title"}, text: list[type].name})
				]}));
			}

			var groups = {};
			list[type].elements.forEach(function(item)
			{
				var entity = {};
				if (item.type === 'user')
				{
					entity = this.BXIM.messenger.users[item.id];
					if (!entity || !entity.active && item.counter == 0)
					{
						return true;
					}
				}
				else if (item.type === 'chat')
				{
					entity = this.BXIM.messenger.chat[item.id.substr(4)];
				}

				if (!entity || typeof entity.name == 'undefined')
				{
					return true;
				}

				if (type !== 'pinned')
				{
					item.dateFormatted = this.formatDate(item.message.date, this.getDateFormatType('RECENT_TITLE'));
					if (!groups[item.dateFormatted])
					{
						groups[item.dateFormatted] = true;
						recentList.appendChild(BX.create("div", {props : { className: "bx-messenger-recent-group"}, children : [
							BX.create("span", {props : { className: "bx-messenger-recent-group-title"}, text : item.dateFormatted})
						]}));
					}
				}

				var node = this.drawContactListElement({
					'id': item.id,
					'data' : entity,
					'lines': item.lines,
					'counter' : item.counter,
					'invited' : item.invited,
					'message' : item.message,
					'pinned' : item.pinned,
					'unread' : item.unread
				});
				if (node)
				{
					recentList.appendChild(node);
				}
			}.bind(this));
		}.bind(this));

		if (recentList.childNodes.length <= 0)
		{
			recentList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-empty"},
				html :  BX.message('IM_M_CL_EMPTY')
			}));
		}
		else if (this.BXIM.messenger.recentLoadMore)
		{
			recentList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-load"},
				children : [
					BX.create('div', {props : { className: "bx-messenger-content-item-progress"}}),
					BX.create('span', {props : { className: "bx-messenger-cl-item-load-text"}, text: BX.message('IM_CL_LOAD')}),
				]
			}));
		}

		return recentList;
	}

	MessengerCommon.prototype.linesListPrepare = function()
	{
		var recentList = document.createDocumentFragment();

		var list = {
			'new': {name: BX.message('IM_OL_SECTION_NEW'), elements: []},
			'work': {name: BX.message('IM_OL_SECTION_WORK'), elements: []},
			'answered': {name: BX.message('IM_OL_SECTION_ANSWERED'), elements: []},
		};

		this.BXIM.messenger.recent.filter(function(element) {
			return element.lines;
		}).forEach(function (element) {
			if (element.lines.status < 10)
			{
				list.new.elements.push(element);
			}
			else if (element.lines.status < 40)
			{
				list.work.elements.push(element);
			}
			else
			{
				list.answered.elements.push(element);
			}
		});

		// TODO: session priority
		//this.BXIM.messenger.openlines.queue[i].priority

		list.new.elements.sort(function(a, b) {
			return a.lines.id - b.lines.id;
		});
		list.work.elements.sort(function(a, b) {
			return a.lines.id - b.lines.id;
		});
		list.answered.elements.sort(function(a, b) {
			return b.message.date - a.message.date;
		});

		['new', 'work', 'answered'].forEach(function(type)
		{
			if (list[type].elements.length <= 0)
			{
				return true;
			}

			recentList.appendChild(BX.create("div", {props : { className: "bx-messenger-recent-group"}, children : [
				BX.create("span", {props : { className: "bx-messenger-recent-group-title bx-messenger-recent-category-title bx-messenger-recent-category-title-"+type}, text: list[type].name})
			]}));

			var groups = {};
			list[type].elements.forEach(function(item)
			{
				var entity = this.BXIM.messenger.chat[item.id.substr(4)];
				if (!entity || typeof entity.name == 'undefined')
				{
					return true;
				}

				var groupTitleDate = type === 'answered'? item.message.date: item.lines.date_create;
				if (!groupTitleDate)
				{
					console.error('Date create is not found', item);
				}

				item.dateFormatted = this.formatDate(groupTitleDate, this.getDateFormatType('RECENT_TITLE'));
				if (!groups[item.dateFormatted])
				{
					groups[item.dateFormatted] = true;
					recentList.appendChild(BX.create("div", {props : { className: "bx-messenger-recent-group"}, children : [
						BX.create("span", {props : { className: "bx-messenger-recent-group-title"}, text : item.dateFormatted})
					]}));
				}

				var node = this.drawContactListElement({
					'id': item.id,
					'data' : entity,
					'lines' : item.lines,
					'counter' : item.counter,
					'invited' : item.invited,
					'message' : item.message,
					'pinned' : item.pinned
				});
				if (node)
				{
					recentList.appendChild(node);
				}
			}.bind(this));
		}.bind(this));

		if (this.BXIM.messenger.linesListLoad && recentList.childNodes.length <= 0)
		{
			recentList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-empty"},
				html :  BX.message('IM_EMPTY_OL_TEXT_2')
			}));
		}
		else if (!this.BXIM.messenger.linesListLoad)
		{
			recentList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-load"},
				children : [
					BX.create('div', {props : { className: "bx-messenger-content-item-progress"}}),
					BX.create('span', {props : { className: "bx-messenger-cl-item-load-text"}, text: BX.message('IM_CL_LOAD')}),
				]
			}));
		}

		return recentList;
	};

	MessengerCommon.prototype.recentListGetItem = function(dialogId)
	{
		return this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});
	}

	MessengerCommon.prototype.recentListAddItem = function(params)
	{
		if (this.isMobile() || !params.id)
		{
			return false;
		}

		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == params.id;
		});

		if (element)
		{
			if (!params.date_update)
			{
				params.date_update = new Date();
			}
			BX.util.objectMerge(element, params);
		}
		else
		{
			if (!params.title)
			{
				var entity = this.getUserParam(params.id);
				if (entity)
				{
					params.title = entity.name;
				}
			}

			var defaultValue = {
				id: 0,
				chat_id: 0,
				counter: 0,
				date_update: new Date(),
				message: {id: 0, text: undefined, date: new Date(), author_id: 0, status: 'delivered', attach: false, file: false},
				options: [],
				pinned: false,
				invited: false,
				title: '',
				type: params.id.toString().substr(0, 4) === 'chat'? 'chat': 'user',
				unread: false
			};

			if (
				typeof params.chat_id === 'undefined'
				&& params.id.toString().startsWith('chat')
			)
			{
				params.chat_id = parseInt(params.id.toString().substr(4));
			}

			this.BXIM.messenger.recent.unshift(
				BX.util.objectMerge(defaultValue, params)
			);
		}

		return true;
	}

	MessengerCommon.prototype.recentListUpdateItem = function(params)
	{
		if (this.isMobile() || !params.id)
		{
			return false;
		}

		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == params.id;
		});

		if (element)
		{
			if (!params.date_update)
			{
				params.date_update = new Date();
			}
			BX.util.objectMerge(element, params);
		}
	}

	MessengerCommon.prototype.inRecentList = function(dialogId)
	{
		if (!dialogId)
		{
			return false;
		}

		return !!this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});
	};

	MessengerCommon.prototype.recentListHide = function(dialogId, sendAjax)
	{
		if (!dialogId)
			return false;

		this.BXIM.messenger.recent = this.BXIM.messenger.recent.filter(function(element){
			return element.id != dialogId;
		});

		if (this.BXIM.messenger.recentList)
		{
			this.recentListRedraw();
		}

		if (!this.isMobile())
		{
			BX.localStorage.set('mrlr', dialogId, 5);
		}

		if (this.BXIM.messenger.birthdayRecent[dialogId])
		{
			BX.localStorage.set('mbdh-'+dialogId, true, 86400);
			delete this.BXIM.messenger.birthdayRecent[dialogId];
		}

		sendAjax = sendAjax != false;

		if (sendAjax)
		{
			if (BX.MessengerProxy)
			{
				BX.MessengerProxy.sendHideChatEvent(dialogId);
			}
			BX.ajax({
				url: this.BXIM.pathToAjax+'?RECENT_HIDE&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 60,
				data: {'IM_RECENT_HIDE' : 'Y', 'DIALOG_ID' : dialogId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()}
			});
		}

		this.readMessage(dialogId, sendAjax, false);

		if (dialogId.toString().substr(0, 4) == 'chat')
		{
			if (this.isMobile())
			{
				app.onCustomEvent('onPullClearWatch', {'id': 'IM_PUBLIC_'+dialogId.substr(4)});
			}
			else
			{
				BX.PULL.clearWatch('IM_PUBLIC_'+dialogId.substr(4));
			}
		}

		delete this.BXIM.messenger.showMessage[dialogId];
		delete this.BXIM.messenger.history[dialogId];

		if (this.BXIM.messenger.currentTab == dialogId)
		{
			this.BXIM.messenger.currentTab = 0;
			this.BXIM.messenger.extraOpen(
				BX.create("div", { attrs : { style : "padding-top: 300px"}, props : { className : "bx-messenger-box-empty" }, html: BX.message('IM_M_EMPTY')})
			);
		}
	};

	MessengerCommon.prototype.recentListElementUpdate = function(dialogId, messageId, messageText)
	{
		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});

		if (!element)
		{
			return false;
		}

		if (element.message.id != messageId)
		{
			return false;
		}

		element.message.text = messageText;

		return true;
	}

	MessengerCommon.prototype.recentListElementToTop = function(dialogId)
	{
		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});

		if (element)
		{
			element.message.date = new Date();
		}
		else
		{
			var entity = this.getUserParam(dialogId);
			if (!entity)
			{
				return false;
			}

			this.recentListAddItem({
				id: dialogId,
				title: entity.name,
			});
		}

		if (this.BXIM.messenger.recentList || BX.MessengerExternalList && BX.MessengerExternalList.isAvailable())
		{
			this.recentListRedraw();
		}

		if (!this.isMobile())
		{
			BX.localStorage.set('mrlr', dialogId, 5);
		}
	};

	MessengerCommon.prototype.recentListElementPin = function(dialogId, active)
	{
		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});
		if (!element)
		{
			return true;
		}

		if (element.pinned == active)
		{
			return true;
		}

		element.pinned = !!active;

		this.recentListRedraw();

		return true;
	};

	MessengerCommon.prototype.recentListElementStatusChange = function(dialogId, status)
	{
		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});

		if (!element || !element.message)
		{
			return true;
		}

		if (element.message.status == status)
		{
			return true;
		}

		element.message.status = status;

		this.recentListRedraw();

		return true;
	};

	MessengerCommon.prototype.recentListElementStatusError = function(dialogId, messageId)
	{
		var element = this.BXIM.messenger.recent.find(function(element) {
			return element.id == dialogId;
		});

		if (!element || !element.message)
		{
			return true;
		}

		if (element.message.status == 'error')
		{
			return true;
		}

		if (element.message.id != messageId)
		{
			return true;
		}

		element.message.status = 'error';

		this.recentListRedraw();

		return true;
	};

	MessengerCommon.prototype.recentListElementFormat = function(element)
	{
		element.date_update = new Date(element.date_update);

		if(typeof element.lines !== 'undefined')
		{
			element.lines.date_create = new Date(element.lines.date_create);
		}

		if(typeof element.message !== 'undefined')
		{
			element.message.text = BX.util.htmlspecialchars(element.message.text);
			element.message.date = new Date(element.message.date);
		}

		if(typeof element.user !== 'undefined')
		{
			if (element.user.id > 0)
			{
				element.user.name = BX.util.htmlspecialchars(element.user.name);
				element.user.first_name = BX.util.htmlspecialchars(element.user.first_name);
				element.user.last_name = BX.util.htmlspecialchars(element.user.last_name);
				element.user.work_position = BX.util.htmlspecialchars(element.user.work_position);
				element.user.external_auth_id = BX.util.htmlspecialchars(element.user.external_auth_id);
				element.user.status = BX.util.htmlspecialchars(element.user.status);
				element.user.absent = element.user.absent? new Date(element.user.absent): false;
				element.user.idle = element.user.idle? new Date(element.user.idle): false;
				element.user.last_activity_date = element.user.last_activity_date? new Date(element.user.last_activity_date): false;
				element.user.mobile_last_date = element.user.mobile_last_date? new Date(element.user.mobile_last_date): false;
				element.user.profile = this.BXIM.path.profileTemplate.replace('#user_id#', element.user.id);

				this.BXIM.messenger.users[element.user.id] = element.user;
			}
			delete element.user;
		}

		if(typeof element.chat !== 'undefined')
		{
			if (element.chat.id > 0)
			{
				element.chat.name = BX.util.htmlspecialchars(element.chat.name);
				element.chat.entity_data_1 = BX.util.htmlspecialchars(element.chat.entity_data_1);
				element.chat.entity_data_2 = BX.util.htmlspecialchars(element.chat.entity_data_2);
				element.chat.entity_data_3 = BX.util.htmlspecialchars(element.chat.entity_data_3);
				element.chat.entity_id = BX.util.htmlspecialchars(element.chat.entity_id);
				element.chat.entity_type = BX.util.htmlspecialchars(element.chat.entity_type);
				element.chat.date_create = new Date(element.chat.date_create);

				this.BXIM.messenger.chat[element.chat.id] = element.chat;
			}
			delete element.chat;
		}

		delete element.avatar;

		return element;
	};

	MessengerCommon.prototype.recentListApply = function(list, counters)
	{
		this.BXIM.messenger.recentLoadMore = !!list.hasMore;
		this.BXIM.messenger.recentLastMessageUpdateDate = list.items.length > 0? list.items.slice(-1)[0].message.date: '';

		this.BXIM.messenger.recent = list.items.filter(function(element)
		{
			if (element.id === 'notify')
			{
				return false;
			}

			element = this.recentListElementFormat(element);

			return true;
		}.bind(this));

		if (counters)
		{
			this.recentListCounterApply(counters);
		}

		this.recentListBirthdayApply();

		this.BXIM.messenger.updateMessageCount();
	};

	MessengerCommon.prototype.recentListUpdate = function(list, counters, redrawType)
	{
		redrawType = redrawType || 'update';

		var redrawTab = false;
		if (list.length > 0)
		{
			var updateElement = {};
			list.forEach(function(element) {
				this.BXIM.messenger.redrawTab[element.id] = true;
				if (
					this.BXIM.messenger.showMessage[element.id]
					&& this.BXIM.messenger.showMessage[element.id].length > 30
				)
				{
					this.BXIM.messenger.showMessage[element.id] = this.BXIM.messenger.showMessage[element.id].slice(-30);
				}
				element = this.recentListElementFormat(element);
				updateElement[element.id] = element.date_update;
			}.bind(this));

			this.BXIM.messenger.recent = this.BXIM.messenger.recent.filter(function(element)
			{
				if (
					typeof updateElement[element.id] !== 'undefined'
					&& updateElement[element.id] > element.date_update
					&& this.BXIM.messenger.currentTab == element.id
				)
				{
					redrawTab = true;
				}

				return typeof updateElement[element.id] === 'undefined';
			}.bind(this)).concat(list);
		}

		if (counters)
		{
			this.recentListCounterApply(counters);
		}

		this.recentListBirthdayApply();

		if (this.BXIM.dialogOpen && redrawTab)
		{
			if (redrawType === 'close')
			{
				this.BXIM.messenger.currentTab = 0;
				this.BXIM.messenger.openChatFlag = false;
				this.BXIM.messenger.openCallFlag = false;
				this.BXIM.messenger.openLinesFlag = false;
				this.BXIM.messenger.extraClose();
			}
			else if (
				!this.BXIM.callController
				|| !this.BXIM.callController.hasActiveCall()
			)
			{
				this.BXIM.messenger.openMessenger();
			}
		}

		this.BXIM.messenger.updateMessageCount();
	};

	MessengerCommon.prototype.recentListCounterApply = function(counters)
	{
		this.BXIM.dialogDetailCounter = counters.dialog;

		if (counters.dialogUnread)
		{
			counters.dialogUnread.forEach(function(dialogId)
			{
				this.BXIM.dialogDetailCounter[dialogId] = 1;
			}.bind(this));
		}

		if (counters.chatUnread)
		{
			counters.chatUnread.forEach(function(chatId)
			{
				this.BXIM.dialogDetailCounter['chat'+chatId] = 1;
			}.bind(this));
		}

		for (var chatId in counters.chat)
		{
			if (counters.chat.hasOwnProperty(chatId))
			{
				this.BXIM.dialogDetailCounter['chat'+chatId] = counters.chat[chatId];
			}
		}

		for (var chatId in counters.lines)
		{
			if (counters.lines.hasOwnProperty(chatId))
			{
				this.BXIM.linesDetailCounter['chat'+chatId] = counters.lines[chatId];
			}
		}

		this.BXIM.messenger.recent.forEach(function(element)
		{
			if (element.lines)
			{
				if (typeof this.BXIM.linesDetailCounter[element.id] !== 'undefined')
				{
					if (element.counter != this.BXIM.linesDetailCounter[element.id])
					{
						element.counter = this.BXIM.linesDetailCounter[element.id];
					}

					delete this.BXIM.linesDetailCounter[element.id];
				}
			}
			else
			{
				if (typeof this.BXIM.dialogDetailCounter[element.id] !== 'undefined')
				{
					if (element.counter != this.BXIM.dialogDetailCounter[element.id])
					{
						element.counter = this.BXIM.dialogDetailCounter[element.id];
					}

					delete this.BXIM.dialogDetailCounter[element.id];
				}
			}
		}.bind(this));

		this.BXIM.mailCount = counters.type.mail;
		this.BXIM.notifyCount = counters.type.notify;
		this.BXIM.messageCount = counters.type.dialog + counters.type.chat;
		this.BXIM.linesCount = counters.type.lines;
	}

	MessengerCommon.prototype.recentListBirthdayApply = function()
	{
		if (this.BXIM.messenger.birthdayEnable === 'none')
		{
			return false;
		}

		if (!this.BXIM.settings.viewBirthday)
		{
			for (var userId in this.BXIM.messenger.birthdayRecent)
			{
				if (!this.BXIM.messenger.birthdayRecent.hasOwnProperty(userId))
				{
					continue;
				}

				var result = this.BXIM.messenger.birthdayRecent[userId];
				if (result === 'new')
				{
					this.BXIM.messenger.recent = this.BXIM.messenger.recent.filter(function(element){
						return element.id != userId;
					});
				}
				else if (result != 'skip')
				{
					var element = this.BXIM.messenger.recent.find(function(item) {
						return item.id == userId && item.message.id === 'birthday'+userId;
					});
					if (element)
					{
						element.message = this.BXIM.messenger.birthdayRecent[userId];
					}
				}

				if (typeof this.BXIM.messenger.showMessage[userId] !== 'undefined')
				{
					this.BXIM.messenger.showMessage[userId] = this.BXIM.messenger.showMessage[userId].filter(function(element) {
						return !element.toString().startsWith('birthday');
					});
				}

				delete this.BXIM.messenger.birthdayRecent[userId];
			}

			return true;
		}

		if (typeof this.BXIM.messenger.showMessage[userId] !== 'undefined')
		{
			this.BXIM.messenger.showMessage[userId] = this.BXIM.messenger.showMessage[userId].filter(function(element) {
				return !element.toString().startsWith('birthday');
			});
		}

		var today = BX.Main.Date.format('d-m');
		var birthdayList = [];
		var birthdayObject = {};
		for (var userId in this.BXIM.messenger.users)
		{
			if (!this.BXIM.messenger.users.hasOwnProperty(userId))
			{
				continue;
			}

			if (userId == this.BXIM.userId)
			{
				continue;
			}

			if (this.BXIM.messenger.birthdayEnable === 'all')
			{
				if (this.BXIM.messenger.users[userId].birthday === today)
				{
					birthdayList.push(userId);
					birthdayObject[userId] = true;
				}
				else if (this.BXIM.messenger.birthdayUsers[userId])
				{
					birthdayList.push(userId);
					birthdayObject[userId] = true;
				}
			}
			else if (this.BXIM.messenger.birthdayUsers[userId])
			{
				birthdayList.push(userId);
				birthdayObject[userId] = true;
			}
		}
		birthdayList.forEach(function(userId)
		{
			var birthdayDate = BX.MessengerCommon.getNowDate(true);
			var birthdayMessageId = 'birthday'+userId;

			this.BXIM.messenger.message[birthdayMessageId] = {
				'id': birthdayMessageId,
				'senderId': 0,
				'recipientId': userId,
				'date': birthdayDate,
				'text': BX.message('IM_M_BIRTHDAY_MESSAGE').replace('#USER_NAME#', '<span class="bx-messenger-birthday-icon"></span><strong>'+this.BXIM.messenger.users[userId].name+'</strong>'),
				'textOriginal': BX.message('IM_M_BIRTHDAY_MESSAGE').replace('#USER_NAME#', this.BXIM.messenger.users[userId].name)
			};

			if (!this.BXIM.messenger.showMessage[userId])
			{
				this.BXIM.messenger.showMessage[userId] = [birthdayMessageId];
			}
			else
			{
				var element = this.BXIM.messenger.showMessage[userId].find(function(id) {
					return id == birthdayMessageId;
				});
				if (!element)
				{
					this.BXIM.messenger.showMessage[userId].push(birthdayMessageId);
					this.BXIM.messenger.showMessage[userId].sort(function(a, b) {
						return this.BXIM.messenger.message[b].date.getTime() - this.BXIM.messenger.message[a].date.getTime();
					}.bind(this));
				}
			}

			var element = this.BXIM.messenger.recent.find(function(item) {
				return item.id == userId;
			});
			if (element)
			{
				if (element.message.date.getTime() < birthdayDate.getTime())
				{
					this.BXIM.messenger.birthdayRecent[userId] = element.message;

					element.message = {
						id: birthdayMessageId,
						date: birthdayDate,
						author_id: element.id,
						status: 'delivered',
						text: BX.message('IM_M_BIRTHDAY_MESSAGE_SHORT'),
						attach: false,
						file: false,
					};
				}
				else if (element.message.date.getTime() != birthdayDate.getTime())
				{
					this.BXIM.messenger.birthdayRecent[userId] = 'skip';
				}
			}
			else if (!BX.localStorage.get('mbdh-'+userId, true, 86400))
			{
				this.BXIM.messenger.birthdayRecent[userId] = 'new';
				BX.MessengerCommon.recentListAddItem({
					id: userId,
					message: {
						id: birthdayMessageId,
						date: birthdayDate,
						text: BX.message('IM_M_BIRTHDAY_MESSAGE_SHORT'),
					},
				});
			}

		}.bind(this));

		return true;
	}

	MessengerCommon.prototype.recentListGetSortIndex = function()
	{
		var sortIndex = {};
		var tmpIndex = 0;

		this.BXIM.messenger.recent.sort(function(a, b) {
			return b.message.date.getTime() - a.message.date.getTime();
		});

		for (var item = 0; item < this.BXIM.messenger.recent.length; item++)
		{
			tmpIndex =  this.BXIM.messenger.recent.length-item;
			sortIndex[this.BXIM.messenger.recent[item].id] = tmpIndex;
		}

		return sortIndex;
	}

	MessengerCommon.prototype.getCounter = function(dialogId)
	{
		var element = this.recentListGetItem(dialogId);
		return element? element.counter: 0;
	};

	MessengerCommon.prototype.getVideoconfLink = function(dialogId)
	{
		if (
			!dialogId
			|| !this.BXIM.messenger.chat[dialogId.substr(4)]
			|| !this.BXIM.messenger.chat[dialogId.substr(4)].public
		)
		{
			return null;
		}

		return this.BXIM.messenger.chat[dialogId.substr(4)].public.link;
	}

	MessengerCommon.prototype.getVideoconfLinkByCode = function(code)
	{
		if (!code)
		{
			return null;
		}

		return location.origin.replace('http://', 'https://')+'/video/'+code;
	};

	MessengerCommon.prototype.drawContactListElement = function(params)
	{
		if (!params || !params.id)
			return null;

		params.userIsChat = params.id.toString().substr(0, 4) == 'chat';
		params.userIsQueue = params.id.toString().substr(0, 5) == 'queue';
		params.userIsStructure = params.id.toString().substr(0, 9) == 'structure';
		params.extraClass = params.extraClass || '';
		params.showUserLastActivityDate = typeof params.showUserLastActivityDate === 'boolean'? params.showUserLastActivityDate: !this.BXIM.messenger.recentList;
		params.showLastMessage = params.showLastMessage === false? false: true;
		params.showCounter = params.showCounter === false? false: true;
		params.data = params.data? params.data: {};
		params.counter = params.counter? params.counter: 0;
		params.unread = params.unread || false;
		params.message = params.message || null;

		if (!params.userIsChat && this.BXIM.userId == params.data.id && params.data.extranet)
		{
			return null;
		}

		var chatStatus = '';
		var newMessage = '';
		var newMessageCount = '';
		var writingMessage = '';

		if (params.showCounter)
		{
			if (params.counter)
			{
				newMessage = 'bx-messenger-cl-status-new-message';
				newMessageCount = '<span class="bx-messenger-cl-count-digit">' + (params.counter < 100? params.counter: '99+') + '</span>';
			}
			else if (params.unread)
			{
				newMessage = 'bx-messenger-cl-status-new-message';
				newMessageCount = '<span class="bx-messenger-cl-count-digit"></span>';
			}
			if (this.countWriting(params.id))
			{
				writingMessage = 'bx-messenger-cl-status-writing';
			}
			if (
				params.userIsChat
				&& this.BXIM.messenger.chat[params.id.substr(4)]
				&& this.BXIM.messenger.chat[params.id.substr(4)].mute_list
				&& this.BXIM.messenger.chat[params.id.substr(4)].mute_list[this.BXIM.userId]
			)
			{
				newMessage += ' bx-messenger-cl-status-muted';
			}
		}

		var avatar = '';
		var color = this.BXIM.messenger.users[this.BXIM.userId].color;

		if (!(params.userIsQueue || params.userIsStructure))
		{
			avatar = params.data.avatar;
			color = params.data.color;
		}

		if (!avatar)
		{
			avatar = this.BXIM.pathToBlankImage;
		}

		var description = '';
		var showCrm = false;
		var descriptionInvited = false;

		var userInvited = (
			!params.userIsChat
			&& params.invited
			&& !params.data.last_activity_date
		);

		if (
			this.BXIM.settings.viewLastMessage
			&& params.showLastMessage
			&& params.id
		)
		{
			if (params.message)
			{
				if (userInvited && !params.message.id)
				{
					description = '<span class="bx-messenger-cl-user-invited">'+BX.message('IM_USER_INVITED')+'</span>';
					descriptionInvited = true;
				}
				else if (params.message.id != 0)
				{
					description = this.purifyText(params.message.text, {WITH_ATTACH: params.message.attach, WITH_FILE: params.message.file});
				}
			}

			if (
				description
				&& params.message
				&& params.message.author_id
				&& params.id != this.BXIM.userId
			)
			{
				if (params.message.author_id == this.BXIM.userId)
				{
					description = '<span class="bx-messenger-cl-user-reply"></span>' + description;
				}
				else if (
					params.userIsChat
					&& this.BXIM.messenger.users[params.message.author_id]
					&& !this.BXIM.messenger.users[params.message.author_id].connector
				)
				{
					var messageUser = this.BXIM.messenger.users[params.message.author_id];
					var avatarClass = '';
					var avatarStyle = '';
					if (this.isBlankAvatar(messageUser.avatar))
					{
						avatarClass = "bx-messenger-cl-user-reply-avatar-default";
					}
					else
					{
						avatarStyle = 'background-image: url(\''+messageUser.avatar+'\')';
					}
					description = '<span class="bx-messenger-cl-user-reply-avatar '+avatarClass+'" title="'+messageUser.name+'" style="'+avatarStyle+'"></span>' + description;
				}
			}

		}
		if (!description)
		{
			if (params.userIsChat)
			{
				if (params.data.type == 'call')
				{
					description = BX.message('IM_CL_PHONE');
				}
				else if (params.data.type == 'lines')
				{
					description = BX.message('IM_CL_LINES');
				}
				else if (params.data.type == 'open')
				{
					description = BX.message('IM_CL_OPEN_CHAT_NEW');
				}
				else
				{
					description = BX.message('IM_CL_CHAT_NEW');
				}
			}
			else if (params.userIsQueue)
			{
				if (params.data.type == 'olQueue')
				{
					description = BX.message('IM_CL_OL_QUEUE');
				}
				else if (params.data.type == 'viQueue')
				{
					description = BX.message('IM_CL_VI_QUEUE');
				}
			}
			else if (params.userIsStructure)
			{
				description = BX.message('IM_CL_STRUCTURE');
			}
			else
			{
				description = this.getUserPosition(this.BXIM.messenger.users[params.id], params.showUserLastActivityDate);
			}
		}

		if (params.userIsChat)
		{
			if (params.data.type == 'lines')
			{
				var session = this.linesGetSession(this.BXIM.messenger.chat[params.id.substr(4)]);
				showCrm = session.crm == 'Y';
				chatStatus += " bx-messenger-cl-avatar-" + this.linesGetSource(this.BXIM.messenger.chat[params.id.substr(4)]);
			}
			else if (params.data.entity_type == 'CRM')
			{
				showCrm = true;
				chatStatus += " bx-messenger-cl-avatar-type-crm";
			}
			else
			{
				chatStatus = " bx-messenger-cl-item-chat-" + params.data.type;
			}
		}
		else if (params.userIsQueue)
		{
			if (params.data.type == 'olQueue')
			{
				chatStatus = " bx-messenger-cl-avatar-lines";
			}
			else if (params.data.type == 'viQueue')
			{
				chatStatus = " bx-messenger-cl-avatar-call";
			}
		}
		else if (params.userIsStructure)
		{
			chatStatus = " bx-messenger-cl-avatar-structure";
		}

		var avatarColor = !userInvited && this.isBlankAvatar(avatar)? color: '';
		var chatHideAvatar = params.userIsChat && avatarColor? 'bx-messenger-cl-avatar-status-hide': '';
		var userName = params.data.name;
		if (!params.userIsChat && !params.userIsQueue && !params.userIsStructure && this.BXIM.userId == params.data.id)
		{
			userName = userName + ' (<b><i>' + BX.message('IM_YOU') + '</i></b>)';
		}

		var classAvatar = '';
		var className = "bx-messenger-cl-item  bx-messenger-cl-id-" + (params.userIsChat? 'chat': '') + (params.userIsQueue? 'queue': '') + params.data.id;
		if (params.userIsChat)
		{
			classAvatar = 'bx-messenger-cl-avatar-' + params.data.type + ' ' + (this.BXIM.messenger.generalChatId == params.data.id? " bx-messenger-cl-item-chat-general": "");
			className += " bx-messenger-cl-item-chat " + newMessage + " " + writingMessage + " " + chatStatus + " " + (this.BXIM.messenger.generalChatId == params.data.id? "bx-messenger-cl-item-chat-general": "");
		}
		else if (params.userIsQueue)
		{
			className += chatStatus;
		}
		else if (params.userIsStructure)
		{
			className += chatStatus;
		}
		else if (userInvited)
		{
			className += " bx-messenger-cl-item-user-invited";
			if (descriptionInvited)
			{
				className += " bx-messenger-cl-item-user-invited-text";
			}
		}
		else
		{
			className += " bx-messenger-cl-avatar-user bx-messenger-cl-status-" + this.getUserStatus(this.BXIM.messenger.users[params.data.id]) + " " + newMessage + " " + writingMessage;
		}
		className += " " + params.extraClass;

		if (
			!newMessageCount
			&& params.message
			&& params.message.status
			&& params.message.author_id == this.BXIM.userId
			&& params.id != this.BXIM.userId
		)
		{
			className += " bx-messenger-cl-item-message-status-"+params.message.status;
		}
		if (!newMessageCount && params.pinned)
		{
			className += " bx-messenger-cl-item-pinned";
		}

		var dataStatus = '';
		if (params.userIsChat)
		{
			if (params.data.type == 'lines' && params.lines)
			{
				dataStatus = params.lines.status;
			}
			else
			{
				dataStatus = params.data.type;
			}
		}
		else
		{
			dataStatus = this.getUserStatus(this.BXIM.messenger.users[params.data.id]);
		}

		var avatarStyle = ''
		if (BX.MessengerCommon.isBlankAvatar(avatar))
		{
			avatarStyle = 'style="background-color: '+avatarColor+'"';
		}
		else
		{
			avatarStyle = 'style="background: url(\''+avatar+'\'); background-size: cover;"';
		}

		return BX.create("span", {
			props : { className: className },
			attrs : { 'data-userId' : params.id, 'data-name' : BX.util.htmlspecialcharsback(params.data.name), 'data-status' : dataStatus, 'data-avatar' : avatar, 'data-userIsChat' : params.userIsChat, 'data-isPinned' : params.pinned, 'data-userIsQueue' : params.userIsQueue },
			html :  '<span class="bx-messenger-cl-count">'+newMessageCount+'</span>'+
					'<span title="'+params.data.name+'" class="bx-messenger-cl-avatar '+classAvatar+' '+chatHideAvatar+'">' +
						'<span class="bx-messenger-cl-avatar-img'+(this.isBlankAvatar(avatar)? " bx-messenger-cl-avatar-img-default": "")+'" '+avatarStyle+'></span>' +
						(showCrm? '<span class="bx-messenger-cl-crm"></span>':'') +
						(!params.userIsQueue && !params.userIsStructure? '<span class="bx-messenger-cl-status"></span>':'') +
					'</span>'+
					'<span class="bx-messenger-cl-user">'+
						'<div class="bx-messenger-cl-user-title'+(params.data.extranet && params.data.type != 'lines'? " bx-messenger-user-extranet": "")+'" title="'+params.data.name+'">'+userName+'</div>'+
						'<div class="bx-messenger-cl-user-desc">'+description+'</div>'+
					'</span>'
		});
	}

	/* Section: Chat list */
	MessengerCommon.prototype.chatListRedraw = function(params)
	{
		if (this.MobileActionNotEqual('RECENT') || this.BXIM.messenger.popupMessenger == null)
			return false;

		BX.addClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-active');
		BX.removeClass(this.BXIM.messenger.popupContactListWrap, 'bx-messenger-box-contact-hover bx-messenger-box-contact-normal');
		this.BXIM.messenger.popupContactListActive = true;
		this.BXIM.messenger.popupContactListHovered = true;
		clearTimeout(this.BXIM.messenger.popupContactListWrapAnimation);

		if (!this.isMobile())
		{
			if (this.BXIM.messenger.popupMessenger == null)
				return false;
		}

		this.BXIM.messenger.chatList = true;
		this.BXIM.messenger.recentList = false;
		this.BXIM.messenger.linesList = false;
		this.BXIM.messenger.contactList = false;

		clearTimeout(this.BXIM.messenger.redrawChatListTimeout);
		clearTimeout(this.BXIM.messenger.redrawRecentListTimeout);
		if (this.BXIM.messenger.redrawContactListTimeout['contactList'])
			clearTimeout(this.BXIM.messenger.redrawContactListTimeout['contactList']);

		if (!this.isMobile() && this.BXIM.messenger.popupPopupMenu != null && this.BXIM.messenger.popupPopupMenu.uniquePopupId.replace('bx-messenger-popup-','') == 'contactList')
		{
			this.BXIM.messenger.popupPopupMenu.close();
		}

		this.BXIM.messenger.showNewRecent();
		if (BX.MessengerProxy)
		{
			BX.MessengerProxy.sendOpenSearchEvent(this.BXIM.messenger.contactListSearchText);
		}

		if (this.isMobile())
		{
			BitrixMobile.LazyLoad.showImages();
		}
	};

	MessengerCommon.prototype.chatListPrepare = function(params)
	{
		var chatList = document.createDocumentFragment();

		var groups = {};
		params = typeof(params) == 'object'? params: {};

		var listName = typeof(params.listName) != 'undefined'? params.listName: 'contactList';
		var searchText = typeof(params.searchText) != 'undefined'? params.searchText: this.BXIM.messenger.contactListSearchText;
		var activeSearch = !(searchText != null && searchText.length == 0);
		var searchStructureId = activeSearch && searchText.substr(0,9) == 'structure'? searchText.substr(9): 0;
		var searchWaitBackend = this.BXIM.messenger.realSearch && !this.BXIM.messenger.realSearchFound;
		var viewOnlyIntranet =  typeof(params.viewOnlyIntranet) != 'undefined'? params.viewOnlyIntranet: false;
		var extraEnable =  typeof(params.extra) != 'undefined'? params.extra: true;
		var viewOffline =  typeof(params.viewOffline) != 'undefined'? params.viewOffline: activeSearch /* || !this.BXIM.settings? true: this.BXIM.settings.viewOffline*/;
		var viewOfflineWithPhones =  typeof(params.viewOfflineWithPhones) != 'undefined'? params.viewOfflineWithPhones: false;
		var viewChat =  typeof(params.viewChat) != 'undefined'? params.viewChat: true;
		var viewOpenChat =  typeof(params.viewOpenChat) != 'undefined'? params.viewOpenChat: true;
		var viewSelf =  typeof(params.viewSelf) != 'undefined'? params.viewSelf: true;
		var viewTransferViQueue =  typeof(params.viewTransferViQueue) != 'undefined'? params.viewTransferViQueue: false;
		var viewTransferOlQueue =  typeof(params.viewTransferOlQueue) != 'undefined'? params.viewTransferOlQueue: false;
		var viewBot =  typeof(params.viewBot) != 'undefined'? params.viewBot: true;
		var callback =  typeof(params.callback) != 'undefined'? params.callback: {};
		var showBitrix24Search = activeSearch && searchText.length >= 3 && this.BXIM.messenger.realSearchAvailable && !this.BXIM.messenger.realSearch && !viewOnlyIntranet;
		var showStructureBlock = listName == 'contactList' || listName == 'popupChatDialogContactListElements' && (this.BXIM.messenger.popupChatDialogContactListElementsType == 'CHAT_ADD' || this.BXIM.messenger.popupChatDialogContactListElementsType == 'CHAT_EXTEND' || this.BXIM.messenger.popupChatDialogContactListElementsType == 'CHAT_CREATE' && this.BXIM.messenger.chatCreateType != 'private');
		var showStructureSonetBlock = listName == 'contactList';
		var showUserLastActivityDate = typeof params.showUserLastActivityDate === 'boolean'? params.showUserLastActivityDate: !this.BXIM.messenger.recentList;

		if (typeof(callback.empty) != 'function')
		{
			callback.empty = function(){}
		}

		if (!this.BXIM.messenger.contactListLoad)
		{
			chatList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-load"},
				children : [
					BX.create('div', {props : { className: "bx-messenger-content-item-progress"}}),
					BX.create('span', {props : { className: "bx-messenger-cl-item-load-text"}, text: BX.message('IM_CL_LOAD')}),
				]
			}));

			this.contactListGetFromServer();
			return chatList;
		}

		if (this.isMobile())
		{
			BitrixMobile.LazyLoad.clearImages();
		}

		var contactListSize = this.BXIM.messenger.popupContactListElementsSize;
		var elementSize = 46;
		var categorySize = 29;
		var moreSize = 26;
		var categoryCount = 0;
		var minElementPerCategory = activeSearch? 5: 3;

		var category = [];
		if (viewTransferOlQueue)
		{
			category.push({'id': 'olQueue', 'name': BX.message('IM_CTL_CHAT_OL_QUEUE'), 'title': '', 'more': BX.message('IM_CL_MORE_QUEUE')});
		}
		else if (viewTransferViQueue)
		{
			category.push({'id': 'viQueue', 'name': BX.message('IM_CTL_CHAT_VI_QUEUE'), 'title': '', 'more': BX.message('IM_CL_MORE_QUEUE')});
		}

		var userListObject = this.BXIM.messenger.users;
		if (activeSearch && searchStructureId)
		{
			category.push({'id': 'private', 'name': BX.message('IM_CTL_CHAT_PRIVATE_NEW'), 'title': BX.message('IM_CL_CREATE_PRIVATE_NEW'), 'more': BX.message('IM_CL_MORE_PRIVATE_NEW')});

			userListObject = {};
			if (this.BXIM.messenger.userInGroup[searchStructureId])
			{
				for (var i = 0; i < this.BXIM.messenger.userInGroup[searchStructureId].users.length; i++)
				{
					userListObject[this.BXIM.messenger.userInGroup[searchStructureId].users[i]] = this.BXIM.messenger.users[this.BXIM.messenger.userInGroup[searchStructureId].users[i]];
				}
			}
		}
		else if (activeSearch)
		{
			category.push({'id': 'private', 'name': BX.message('IM_CTL_CHAT_PRIVATE_NEW'), 'title': BX.message('IM_CL_CREATE_PRIVATE_NEW'), 'more': BX.message('IM_CL_MORE_PRIVATE_NEW')});
			category.push({'id': 'bot', 'name': BX.message('IM_CTL_CHAT_BOT'), 'title': '', 'more': BX.message('IM_CL_MORE_BOT')});
			category.push({'id': 'open', 'name': BX.message('IM_CTL_CHAT_OPEN_NEW'), 'title': BX.message('IM_CL_CREATE_OPEN_NEW'), 'more': BX.message('IM_CL_MORE_OPEN_NEW'), skip: !this.BXIM.messenger.openChatEnable || this.BXIM.userExtranet});
			category.push({'id': 'chat', 'name': BX.message('IM_CTL_CHAT_CHAT_NEW'), 'title': BX.message('IM_CL_CREATE_CHAT_NEW'), 'more': BX.message('IM_CL_MORE_CHAT_NEW')});
			category.push({'id': 'lines', 'name': BX.message('IM_CTL_CHAT_LINES'), 'title': '', 'more': BX.message('IM_CL_MORE_LINES')});
			category.push({'id': 'call', 'name': BX.message('IM_CTL_CHAT_CALL'), 'title': '', 'more': BX.message('IM_CL_MORE_CALL'),  skip: !this.BXIM.webrtc.phoneEnabled});
			category.push({'id': 'ol', 'name': BX.message('IM_CTL_CHAT_OL'), 'title': '', 'more': BX.message('IM_CTL_CHAT_OL'), skip: this.BXIM.userExtranet});
			category.push({'id': 'extranet', 'name': BX.message('IM_CTL_CHAT_EXTRANET'), 'title': BX.message('IM_CL_CREATE_PRIVATE_NEW'), 'more': BX.message('IM_CL_MORE_EXTRANET_NEW')});
			category.push({'id': 'structure', 'name': this.BXIM.bitrixIntranet? BX.message('IM_CTL_CHAT_STRUCTURE'): BX.message('IM_CL_GROUP'), 'title': '', 'more': this.BXIM.bitrixIntranet? BX.message('IM_CL_MORE_STRUCTURE'): BX.message('IM_CL_MORE_GROUP'), skip: !showStructureBlock});
			category.push({'id': 'blocked', 'name': BX.message('IM_CTL_CHAT_BLOCKED'), 'title': '', 'more': BX.message('IM_CL_MORE_EXTRANET_NEW')});
		}
		else
		{
			category.push({'id': 'open', 'name': BX.message('IM_CTL_CHAT_OPEN_NEW'), 'title': BX.message('IM_CL_CREATE_OPEN_NEW'), 'more': BX.message('IM_CL_MORE_OPEN_NEW'), skip: !this.BXIM.messenger.openChatEnable || this.BXIM.userExtranet});
			category.push({'id': 'chat', 'name': BX.message('IM_CTL_CHAT_CHAT_NEW'), 'title': BX.message('IM_CL_CREATE_CHAT_NEW'), 'more': BX.message('IM_CL_MORE_CHAT_NEW')});
			category.push({'id': 'lines', 'name': BX.message('IM_CTL_CHAT_LINES'), 'title': '', 'more': BX.message('IM_CL_MORE_LINES')});
			category.push({'id': 'call', 'name': BX.message('IM_CTL_CHAT_CALL'), 'title': '', 'more': BX.message('IM_CL_MORE_CALL'),  skip: !this.BXIM.webrtc.phoneEnabled});
			category.push({'id': 'private', 'name': BX.message('IM_CTL_CHAT_PRIVATE_NEW'), 'title': BX.message('IM_CL_CREATE_PRIVATE_NEW'), 'more': BX.message('IM_CL_MORE_PRIVATE_NEW')});
			category.push({'id': 'bot', 'name': BX.message('IM_CTL_CHAT_BOT'), 'title': '', 'more': BX.message('IM_CL_MORE_BOT')});
			category.push({'id': 'ol', 'name': BX.message('IM_CTL_CHAT_OL'), 'title': '', 'more': BX.message('IM_CTL_CHAT_OL'), skip: this.BXIM.userExtranet});
			category.push({'id': 'extranet', 'name': BX.message('IM_CTL_CHAT_EXTRANET'), 'title': BX.message('IM_CL_CREATE_PRIVATE_NEW'), 'more': BX.message('IM_CL_MORE_EXTRANET_NEW')});
			category.push({'id': 'structure', 'name': this.BXIM.bitrixIntranet? BX.message('IM_CTL_CHAT_STRUCTURE'): BX.message('IM_CTL_CHAT_GROUP'), 'title': '', 'more': this.BXIM.bitrixIntranet? BX.message('IM_CL_MORE_STRUCTURE'): BX.message('IM_CL_MORE_GROUP'), skip: !showStructureBlock});
			category.push({'id': 'blocked', 'name': BX.message('IM_CTL_CHAT_BLOCKED'), 'title': '', 'more': BX.message('IM_CL_MORE_EXTRANET_NEW')});
		}

		for (var i = 0; i < category.length; i++)
		{
			if (category[i].skip)
				continue;

			categoryCount++;
		}

		var availContactListSize = contactListSize-(categorySize*categoryCount);
		var maxElementElements = parseInt(availContactListSize/elementSize);
		var maxElementPerCategory = Math.max(parseInt(availContactListSize/categoryCount/elementSize), minElementPerCategory);

		var showedElements = 0;
		var extraElements = 0;

		for (var i = 0; i < category.length; i++)
		{
			category[i].countElement = 0;

			if (category[i].skip)
				continue;

			category[i].countElement = maxElementPerCategory;
		}

		var arSearch = [];
		if (activeSearch)
		{
			searchText = searchText+'';
			if (!this.isMobile() && this.BXIM.language=='ru' && BX.correctText)
			{
				var correctText = BX.correctText(searchText);
				if (correctText != searchText)
				{
					searchText = searchText+" "+correctText;
				}
			}
			arSearch = searchText.split(" ");
		}

		var sortIndex = this.recentListGetSortIndex();
		var groupElements = {};
		var extraElementsGroup = [];
		for (var i = 0; i < category.length; i++)
		{
			groupElements[i] = [];
			if (category[i].id == 'private' || category[i].id == 'extranet' || category[i].id == 'blocked' || category[i].id == 'bot' || category[i].id == 'ol')
			{
				if (!viewBot && category[i].id == 'bot')
					category[i].skip = true;

				if (viewOnlyIntranet && category[i].id == 'extranet')
					category[i].skip = true;

				if (!viewChat && category[i].id == 'ol')
					category[i].skip = true;

				if (category[i].skip)
					continue;

				for (var userId in userListObject)
				{
					if (!userListObject.hasOwnProperty(userId))
						continue;

					if (!viewSelf && userId == this.BXIM.userId)
						continue;

					if (
						this.BXIM.messenger.users[userId].external_auth_id === 'imconnector'
						|| this.BXIM.messenger.users[userId].external_auth_id === 'call'
					)
					{
						continue;
					}

					if (typeof(this.BXIM.messenger.users[userId].active) != 'undefined' && !this.BXIM.messenger.users[userId].active)
						continue;

					if (!viewOffline)
					{
						var userOnlineStatus = this.getUserStatus(this.BXIM.messenger.users[userId]);
						if (viewOfflineWithPhones && this.userHasPhone(userId))
						{
						}
						else if (userOnlineStatus == "offline")
						{
							continue;
						}
					}

					var chatId = this.BXIM.messenger.userChat[userId];
					if (category[i].id == 'blocked')
					{
						if (
							!this.BXIM.messenger.userChatBlockStatus[chatId]
							|| !this.BXIM.messenger.userChatBlockStatus[chatId][this.BXIM.userId]
						)
						{
							continue;
						}
					}
					else
					{
						if (
							this.BXIM.messenger.userChatBlockStatus[chatId]
							&& this.BXIM.messenger.userChatBlockStatus[chatId][this.BXIM.userId]
						)
						{
							continue;
						}
					}

					if (category[i].id == 'extranet')
					{
						if (!this.BXIM.messenger.users[userId].extranet)
							continue;
					}
					else
					{
						if (this.BXIM.messenger.users[userId].extranet)
							continue;
					}

					if (category[i].id == 'ol')
					{
						if (!this.BXIM.messenger.users[userId].bot)
						{
							continue;
						}

						if (this.BXIM.bitrix24 && this.BXIM.messenger.bot[userId] && this.BXIM.messenger.bot[userId].code == 'network_cloud')
						{
							continue;
						}

						if (
							!this.BXIM.messenger.bot[userId]
							|| this.BXIM.messenger.bot[userId].type != 'network' && this.BXIM.messenger.bot[userId].type != 'support24'
						)
						{
							continue;
						}
					}
					else if (category[i].id == 'bot')
					{
						if (!this.BXIM.messenger.users[userId].bot || !this.BXIM.messenger.bot[userId])
							continue;

						if (this.BXIM.messenger.bot[userId] && this.BXIM.messenger.bot[userId].type == 'network')
							continue;

						if (this.BXIM.messenger.popupChatDialogDestType == 'CALL_INVITE_USER')
						{
							continue;
						}

						if (this.BXIM.messenger.openChatFlag)
						{
							var currentChat = this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)];
							if (currentChat && currentChat.entity_type != "LINES" && this.BXIM.messenger.bot[userId].type == 'openline')
							{
								continue;
							}
							else if (currentChat && currentChat.entity_type == "LINES" && !this.BXIM.messenger.bot[userId].openline)
							{
								continue;
							}
							else if (this.BXIM.messenger.bot[userId].type == 'network' || this.BXIM.messenger.bot[userId].type == 'support24')
							{
								continue;
							}
						}
						else
						{
							if (
								this.BXIM.messenger.bot[userId].type == 'network'
								|| this.BXIM.messenger.bot[userId].type == 'support24'
								|| this.BXIM.messenger.bot[userId].type == 'openline'
							)
							{
								continue;
							}
						}
					}
					else
					{
						if (this.BXIM.messenger.users[userId].bot)
							continue;
					}

					if (activeSearch && searchStructureId)
					{
					}
					else if (activeSearch)
					{
						var user = this.BXIM.messenger.users[userId];
						if (!user)
						{
							continue;
						}
						var userSearchByName = user.name.toString().toLowerCase() + (user.search_mark? " " + user.search_mark: "");
						var userSearchByPosition = user.work_position? (" " + user.work_position).toLowerCase(): "";
						var skipUser = true;

						if (!sortIndex[userId])
						{
							sortIndex[userId] = 0;
						}
						for (var s = 0; s < arSearch.length; s++)
						{
							if (userSearchByName.indexOf(arSearch[s].toString().toLowerCase()) >= 0)
							{
								sortIndex[userId] += 100+arSearch[s].length;
								skipUser = false;
							}
							if (userSearchByPosition.indexOf(arSearch[s].toString().toLowerCase()) >= 0)
							{
								sortIndex[userId] += 50+arSearch[s].length;
								skipUser = false;
							}
						}
						if (skipUser)
						{
							continue;
						}
					}
					if (category[i].id == 'bot')
					{
						groupElements[i].push(this.BXIM.messenger.users[userId]);
					}
					else if (category[i].id == 'ol')
					{
						groupElements[i].push(this.BXIM.messenger.users[userId]);
					}
					else
					{
						groupElements[i].push(this.BXIM.messenger.users[userId]);
					}
				}
				if (category[i].id == 'bot')
				{
					groupElements[i].sort(BX.delegate(function(u1, u2) {
						var i1 = sortIndex[u1.id]? sortIndex[u1.id]: 0;
						var i2 = sortIndex[u2.id]? sortIndex[u2.id]: 0;

						if (this.BXIM.messenger.bot[u1.id] && this.BXIM.messenger.bot[u1.id]['code'] == "marta")
						{
							i1 = 10000000;
						}
						if (this.BXIM.messenger.bot[u2.id] && this.BXIM.messenger.bot[u2.id]['code'] == "marta")
						{
							i2 = 10000000;
						}

						if (i1 > i2) { return -1; }
						else if (i1 < i2) { return 1;}
						else{ return 0;}
					}, this));
				}
				else if (activeSearch)
				{
					groupElements[i].sort(function(u1, u2) {
						var i1 = sortIndex[u1.id]? sortIndex[u1.id]: 0;
						var i2 = sortIndex[u2.id]? sortIndex[u2.id]: 0;

						if (i1 > i2) { return -1; }
						else if (i1 < i2) { return 1;}
						else{ return 0;}
					});
				}
				else
				{
					groupElements[i].sort(function(u1, u2) {
						var i1 = sortIndex[u1.id]? sortIndex[u1.id]: 0;
						var i2 = sortIndex[u2.id]? sortIndex[u2.id]: 0;

						if (BXIM && u1.id == BXIM.userId)
						{
							i1 = 10000000;
						}
						if (BXIM && u2.id == BXIM.userId)
						{
							i2 = 10000000;
						}

						if (i1 > i2) { return -1; }
						else if (i1 < i2) { return 1;}
						else{ return 0;}
					});
				}
			}
			else if (category[i].id == 'chat' || category[i].id == 'open' || category[i].id == 'call' || category[i].id == 'lines')
			{
				if (!viewChat && category[i].id != 'open')
					category[i].skip = true;

				if (!viewOpenChat && category[i].id == 'open')
					category[i].skip = true;

				if (category[i].skip)
					continue;

				for (var chatId in this.BXIM.messenger.chat)
				{
					if (!this.BXIM.messenger.chat.hasOwnProperty(chatId))
					{
						continue;
					}

					if (
						this.BXIM.messenger.chat[chatId].type == 'chat'
						|| this.BXIM.messenger.chat[chatId].type == 'open'
						|| this.BXIM.messenger.chat[chatId].type == 'call'
						|| this.BXIM.messenger.chat[chatId].type == 'lines'
					)
					{
						if (this.BXIM.messenger.chat[chatId].type != category[i].id)
						{
							continue;
						}
					}
					else if (category[i].id != 'chat')
					{
						continue;
					}

					if (this.BXIM.messenger.generalChatId == chatId && (!this.BXIM.messenger.openChatEnable || this.BXIM.userExtranet))
					{
						continue;
					}

					if (activeSearch)
					{
						var skipChat = true;
						for (var s = 0; s < arSearch.length; s++)
						{
							if (this.BXIM.messenger.chat[chatId].name.toString().toLowerCase().indexOf(arSearch[s].toString().toLowerCase()) >= 0)
							{
								skipChat = false;
								break;
							}
						}
						if (skipChat)
						{
							continue;
						}
					}

					groupElements[i].push(this.BXIM.messenger.chat[chatId]);
				}
				groupElements[i].sort(BX.delegate(function(u1, u2) {
					var i1 = sortIndex['chat'+u1.id]? sortIndex['chat'+u1.id]: 0;
					var i2 = sortIndex['chat'+u2.id]? sortIndex['chat'+u2.id]: 0;

					if (this.BXIM.messenger.generalChatId == u1.id)
					{
						i1 = 10000000;
					}
					else if (this.BXIM.messenger.userChatBlockStatus[u1.id] && this.BXIM.messenger.userChatBlockStatus[u1.id][this.BXIM.userId])
					{
						i1 = -1;
					}

					if (this.BXIM.messenger.generalChatId == u2.id)
					{
						i2 = 10000000;
					}
					else if (this.BXIM.messenger.userChatBlockStatus[i2.id] && this.BXIM.messenger.userChatBlockStatus[i2.id][this.BXIM.userId])
					{
						i2 = -1;
					}

					if (i1 > i2) { return -1; }
					else if (i1 > i2) { return -1; }
					else if (i1 < i2) { return 1;}
					else{ return 0;}
				}, this));
			}
			else if (category[i].id == 'olQueue')
			{
				if (!this.BXIM.messenger.openlines)
					continue;

				if (!this.BXIM.messenger.openlines.queue)
					continue;

				this.BXIM.messenger.openlines.queue.sort(function(i1, i2) {
					if (i1.transfer_count > i2.transfer_count) {
						return -1;
					}
					else if (i1.transfer_count < i2.transfer_count)
					{
						return 1;
					}
					else
					{
						if (i1.id > i2.id)
						{
							return 1;
						}
						else if (i1.id < i2.id)
						{
							return -1;
						}
						else
						{
							return 0;
						}
					}
				});
				for (var queueId = 0; queueId < this.BXIM.messenger.openlines.queue.length; queueId++)
				{
					if (activeSearch)
					{
						var skipItem = true;
						for (var s = 0; s < arSearch.length; s++)
						{
							if (this.BXIM.messenger.openlines.queue[queueId].name.toString().toLowerCase().indexOf(arSearch[s].toString().toLowerCase()) >= 0)
							{
								skipItem = false;
								break;
							}
						}
						if (skipItem)
						{
							continue;
						}
					}

					groupElements[i].push(BX.clone(this.BXIM.messenger.openlines.queue[queueId]));
				}
			}
			else if (category[i].id == 'structure')
			{
				if (category[i].skip)
				{
					continue;
				}
				for (var groupId in this.BXIM.messenger.groups)
				{
					if (!this.BXIM.messenger.userInGroup[groupId] || this.BXIM.messenger.userInGroup[groupId].length <= 0)
						continue;

					if (listName == 'popupChatDialogContactListElements' && this.BXIM.messenger.userInGroup[groupId].length > 200)
						continue;

					if (!showStructureSonetBlock && groupId.toString().substr(0,2) == 'SG')
						continue;

					if (activeSearch)
					{
						var skipItem = true;
						for (var s = 0; s < arSearch.length; s++)
						{
							if (this.BXIM.messenger.groups[groupId].name.toString().toLowerCase().indexOf(arSearch[s].toString().toLowerCase()) >= 0)
							{
								skipItem = false;
								break;
							}
						}
						if (skipItem)
						{
							continue;
						}
					}

					groupElements[i].push(this.BXIM.messenger.groups[groupId]);
				}

				groupElements[i].sort(BX.delegate(function(u1, u2) {
					var i1 = u1.id;
					var i2 = u2.id;

					if (this.BXIM.messenger.userInGroup[i1] && this.BXIM.messenger.userInGroup[i1].users.indexOf(this.BXIM.userId.toString()) > -1)
					{
						i1 = -1;
					}
					if (this.BXIM.messenger.userInGroup[i2] && this.BXIM.messenger.userInGroup[i2].users.indexOf(this.BXIM.userId.toString()) > -1)
					{
						i2 = -1;
					}

					if (i1 > i2) { return 1; }
					else if (i1 < i2) { return -1;}
					else{ return 0;}
				}, this));
			}

			if (category[i].countElement > groupElements[i].length)
			{
				showedElements += groupElements[i].length;
				extraElements += category[i].countElement-groupElements[i].length;
			}
			else
			{
				extraElementsGroup.push(i);
				showedElements += category[i].countElement;
			}
		}

		if (showedElements < maxElementElements)
		{
			var categoryId = 0;
			var maxCategoryId = extraElementsGroup.length;

			for (var i = 0; i < extraElements; i++)
			{
				if (extraElementsGroup[categoryId] && category[extraElementsGroup[categoryId]])
				{
					category[extraElementsGroup[categoryId]].countElement = category[extraElementsGroup[categoryId]].countElement+1;
				}
				categoryId = categoryId == maxCategoryId-1? 0: categoryId+1;
			}
		}

		for (var i = 0; i < category.length; i++)
		{
			if (category[i].skip)
				continue;

			if (activeSearch && groupElements[i].length <= 0)
			{
				if (!showBitrix24Search || category[i].id != 'extranet')
				{
					continue;
				}
			}

			if (groupElements[i].length <= 0 && !(category[i].id == 'private' || category[i].id == 'open' || category[i].id == 'chat' || showBitrix24Search && category[i].id == 'extranet'))
				continue;

			chatList.appendChild(BX.create("div", {props : { className: "bx-messenger-chatlist-group"}, children : [
				(!extraEnable || category[i].id == 'lines' || category[i].id == 'call' || category[i].id == 'blocked' || category[i].id == 'bot' || category[i].id == 'ol')? null: BX.create("span", {attrs: {'data-type': category[i].id}, props : { title: category[i].title, className: "bx-messenger-chatlist-group-add"}}),
				BX.create("span", {props : { className: "bx-messenger-chatlist-group-title"}, html : category[i].name})
			]}));

			if (groupElements[i].length <= 0)
			{
				if (showBitrix24Search && category[i].id == 'extranet')
				{
					chatList.appendChild(BX.create("div", {props : { className: "bx-messenger-chatlist-search-button-wrap"}, children : [
						BX.create("span", {props : { className: "bx-messenger-chatlist-search-button"}, html: this.BXIM.bitrixIntranet? BX.message('IM_SEARCH_B24'): BX.message('IM_SEARCH_SITE')})
					]}));
				}

				continue;
			}

			var categoryItems = [];
			var countElements = 1;
			for (var j = 0; j < groupElements[i].length; j++)
			{
				var isShown = countElements <= category[i].countElement;

				countElements++;

				if (category[i].id == 'private' || category[i].id == 'extranet' || category[i].id == 'bot' || category[i].id == 'ol')
				{
					var user = groupElements[i][j];

					var node = this.drawContactListElement({
						'id': user.id,
						'data': user,
						'showUserLastActivityDate': category[i].id == 'bot'? false: showUserLastActivityDate,
						'showLastMessage': false,
						'showCounter': extraEnable,
						'extraClass': isShown? '': 'bx-messenger-hide'
					});
					if (node)
					{
						categoryItems.push(node);
					}
				}
				else if (category[i].id == 'chat' || category[i].id == 'open' || category[i].id == 'call' || category[i].id == 'lines')
				{
					var chat = groupElements[i][j];
					var node = this.drawContactListElement({
						'id': 'chat'+chat.id,
						'data': chat,
						'showLastMessage': false,
						'showCounter': extraEnable,
						'extraClass': isShown? 'bx-messenger-chatlist-chat': 'bx-messenger-chatlist-chat bx-messenger-hide'
					});
					if (node)
					{
						categoryItems.push(node);
					}
				}
				else if (category[i].id == 'olQueue' || category[i].id == 'viQueue')
				{
					var queue = groupElements[i][j];
					queue.type = category[i].id;
					var node = this.drawContactListElement({
						'id': 'queue'+queue.id,
						'data': queue,
						'showLastMessage': false,
						'showCounter': false,
						'extraClass': isShown? 'bx-messenger-chatlist-chat': 'bx-messenger-chatlist-chat bx-messenger-hide'
					});
					if (node)
					{
						categoryItems.push(node);
					}
				}
				else if (category[i].id == 'structure')
				{
					var structure = groupElements[i][j];
					var node = this.drawContactListElement({
						'id': 'structure'+structure.id,
						'data': structure,
						'showLastMessage': false,
						'showCounter': false,
						'extraClass': isShown? 'bx-messenger-chatlist-chat': 'bx-messenger-chatlist-chat bx-messenger-hide'
					});
					if (node)
					{
						categoryItems.push(node);
					}
				}
			}

			if (category[i].countElement < groupElements[i].length)
			{
				categoryItems.push(BX.create("div", {props : { className: "bx-messenger-chatlist-more-wrap"}, children : [
					BX.create("span", {attrs: {
						'data-id': category[i].id,
						'data-text': BX.message('IM_CL_MORE').replace("#COUNT#", groupElements[i].length-category[i].countElement),
						'data-title': category[i].more
					}, props : {
						title: category[i].more,
						className: "bx-messenger-chatlist-more"
					},
					html : this.BXIM.messenger.contactListShowed[category[i].id]? BX.message('IM_CL_HIDE'): BX.message('IM_CL_MORE').replace("#COUNT#", groupElements[i].length-category[i].countElement)})
				]}));
			}
			if (categoryItems.length > 0)
			{
				chatList.appendChild(BX.create("div", {props : { className: "bx-messenger-chatlist-category"+(this.BXIM.messenger.contactListShowed[category[i].id]? ' bx-messenger-chatlist-show-all': '')}, children : categoryItems}));

				if (showBitrix24Search && category[i].id == 'extranet')
				{
					chatList.appendChild(BX.create("div", {props : { className: "bx-messenger-chatlist-search-button-wrap"}, children : [
						BX.create("span", {props : { className: "bx-messenger-chatlist-search-button"}, html: BX.message('IM_SEARCH_B24')})
					]}));
				}
			}
		}

		if (searchWaitBackend)
		{
			chatList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-search"},
				html : BX.message('IM_M_CL_SEARCH')
			}));
		}
		else if (chatList.childNodes.length <= 0)
		{
			chatList.appendChild(BX.create("div", {
				props : { className: "bx-messenger-cl-item-empty"},
				html :  BX.message('IM_M_CL_EMPTY')
			}));
			callback.empty();
		}

		return chatList;
	};

	MessengerCommon.prototype.userInviteResend = function(userId)
	{
		if (!this.BXIM.canInvite)
		{
			var recentElement = this.recentListGetItem(userId);
			if (recentElement && recentElement.invited && recentElement.invited.originator_id != this.BXIM.userId)
			{
				return false;
			}
		}

		BX.ajax.runAction('intranet.controller.invite.reinvite', {data: {
			params: {
				userId: userId
			}
		}}).then(function(response) {
			BX.UI.Notification.Center.notify({
				content: BX.message('IM_USER_INVITE_RESEND_DONE'),
				autoHideDelay: 2000
			});
		}, function(response) {
			if (response.status == 'error' && response.errors.length > 0)
			{
				var errorContent = response.errors.map(function(element) {
					return element.message;
				}).join('. ');

				BX.UI.Notification.Center.notify({
					content : errorContent,
					autoHideDelay : 4000
				});

				return true;
			}

			BX.UI.Notification.Center.notify({
				content: BX.message('IM_CONNECT_ERROR'),
				autoHideDelay: 4000
			});
		});
	}

	MessengerCommon.prototype.userInviteCancel = function(userId)
	{
		if (!this.BXIM.canInvite)
		{
			var recentElement = this.recentListGetItem(userId);
			if (recentElement && recentElement.invited && recentElement.invited.originator_id != this.BXIM.userId)
			{
				return false;
			}
		}

		var element = this.recentListGetItem(userId);
		var user = this.BXIM.messenger.users[userId];
		if (element)
		{
			this.recentListHide(userId, false);
		}
		if (user)
		{
			delete this.BXIM.messenger.users[userId];
			if (!this.BXIM.messenger.recentList)
			{
				this.userListRedraw();
			}
		}

		BX.ajax.runAction('intranet.controller.invite.deleteinvitation', {data: {
			params: {
				userId: userId
			}
		}}).then(function (response) {
			BX.UI.Notification.Center.notify({
				content: BX.message('IM_USER_INVITE_CANCEL_DONE'),
				autoHideDelay: 2000
			});
		}.bind(this), function (response) {
			if (user)
			{
				this.BXIM.messenger.users[user.id] = user;
			}
			if (element)
			{
				this.recentListAddItem(element);
			}
			this.userListRedraw();

			if (response.status == 'error' && response.errors.length > 0)
			{
				var errorContent = response.errors.map(function(element) {
					return element.message;
				}).join('. ');

				BX.UI.Notification.Center.notify({
					content : errorContent,
					autoHideDelay : 4000
				});

				return true;
			}

			BX.UI.Notification.Center.notify({
				content: BX.message('IM_CONNECT_ERROR'),
				autoHideDelay: 4000
			});
		}.bind(this));

		return true;
	}

	MessengerCommon.prototype.userHasPhone = function(userId)
	{
		return (
			this.BXIM.messenger.users.hasOwnProperty(userId) && this.BXIM.messenger.users[userId].phone_device
			|| (this.BXIM.messenger.phones.hasOwnProperty(userId) && (
				this.BXIM.messenger.phones[userId].hasOwnProperty('PERSONAL_MOBILE')
				|| this.BXIM.messenger.phones[userId].hasOwnProperty('PERSONAL_PHONE')
				|| this.BXIM.messenger.phones[userId].hasOwnProperty('WORK_PHONE')
			)
		));
	};

	MessengerCommon.prototype.userChangeStatus = function(params)
	{
		var users;
		if (BX.type.isArray(params))
		{
			users = params;
		}
		else
		{
			users = [params];
		}

		var contactListRedraw = false;
		var dialogStatusRedraw = false;

		users.forEach(function(user)
		{
			if (typeof(this.BXIM.messenger.users[user.id]) == 'undefined')
			{
				return;
			}

			var storedUser = this.BXIM.messenger.users[user.id];

			if (
				!contactListRedraw
				&& this.BXIM.messenger.recent.findIndex(function(element) { return element.id == user.id }) > -1
			)
			{
				if (storedUser.status !== user.status)
				{
					contactListRedraw = true;
				}

				if (
					!contactListRedraw
					&& typeof user.idle !== 'undefined'
				)
				{
					var storedIdle = storedUser.idle ? storedUser.idle.getTime() : 0;
					var newIdle = user.idle ? new Date(user.idle).getTime() : 0;

					if (storedIdle !== newIdle)
					{
						contactListRedraw = true;
					}
				}

				if (
					!contactListRedraw
					&& typeof user.mobile_last_date !== 'undefined'
				)
				{
					var storedMobileLastDate = storedUser.mobile_last_date ? storedUser.mobile_last_date.getTime() : 0;
					var newMobileLastDate = user.mobile_last_date ? new Date(user.mobile_last_date).getTime() : 0;

					if (storedMobileLastDate !== newMobileLastDate)
					{
						contactListRedraw = true;
					}
				}
			}

			if (
				contactListRedraw
				&& this.BXIM.messenger.currentTab.toString() == user.id.toString()
			)
			{
				dialogStatusRedraw = true;
			}

			if (typeof user.status !== 'undefined')
			{
				storedUser.status = user.status;
			}
			if (typeof user.color !== 'undefined')
			{
				storedUser.color = user.color;
			}
			if (typeof user.idle !== 'undefined')
			{
				storedUser.idle = user.idle? new Date(user.idle): false;
			}
			if (typeof user.mobile_last_date !== 'undefined')
			{
				storedUser.mobile_last_date = user.mobile_last_date? new Date(user.mobile_last_date): false;
			}
			if (typeof user.last_activity_date !== 'undefined')
			{
				storedUser.last_activity_date = user.last_activity_date? new Date(user.last_activity_date): false;
			}
		}.bind(this));

		if (dialogStatusRedraw)
		{
			this.BXIM.messenger.dialogStatusRedraw();
		}

		return true;
	};


	/* Section: Message */

	MessengerCommon.prototype.prepareCommandList = function(search)
	{
		search = typeof (search) == 'string'? search: '';

		var commandListOriginal = BX.clone(this.BXIM.messenger.command);

		var commandList = [];
		var commandListOther = [];
		for (var i = 0; i < commandListOriginal.length; i++)
		{
			if (this.BXIM.messenger.openChatFlag)
			{
				if (BX.MessengerCommon.userInChat(this.BXIM.messenger.currentTab.toString().substr(4), commandListOriginal[i].bot_id))
				{
					commandList.push(commandListOriginal[i]);
				}
				else
				{
					commandListOther.push(commandListOriginal[i]);
				}
			}
			else
			{
				if (this.BXIM.messenger.currentTab == parseInt(commandListOriginal[i].bot_id))
				{
					commandList.push(commandListOriginal[i]);
				}
				else
				{
					commandListOther.push(commandListOriginal[i]);
				}
			}
		}
		for (var i = 0; i < commandListOther.length; i++)
		{
			commandList.push(commandListOther[i]);
		}

		var list = [];
		var categoryName = '';
		for (var i = 0; i < commandList.length; i++)
		{
			if (search == '' || commandList[i].command.indexOf(search) === 1)
			{
				if (commandList[i].command == '/>>')
				{
					commandList[i].command = '>>';
				}
				if (
					this.BXIM.messenger.openLinesFlag
					&& (
						commandList[i].command == '/me'
						|| commandList[i].command == '/loud'
					)
				)
				{
					continue;
				}

				if (this.BXIM.userExtranet && !commandList[i].extranet)
				{
					continue;
				}

				if (!commandList[i].common)
				{
					if (this.BXIM.messenger.openChatFlag)
					{
						if (!BX.MessengerCommon.userInChat(this.BXIM.messenger.currentTab.toString().substr(4), commandList[i].bot_id))
						{
							continue;
						}
					}
					else if (this.BXIM.messenger.currentTab != parseInt(commandList[i].bot_id))
					{
						continue;
					}
				}

				if (commandList[i].context != '')
				{
					if (commandList[i].context == 'chat')
					{
						if (!this.BXIM.messenger.openChatFlag)
						{
							continue;
						}
					}
					else if (commandList[i].context == 'user')
					{
						if (this.BXIM.messenger.openChatFlag)
						{
							continue;
						}
					}
					else if (search == '')
					{
						continue;
					}
				}

				if (categoryName != commandList[i].category)
				{
					categoryName = commandList[i].category;
					list.push({
						'type': 'category',
						'title': categoryName
					});
				}

				commandList[i].type = 'item';
				list.push(commandList[i]);
			}
		}
		return list;
	}

	MessengerCommon.prototype.convertMessage = function(message)
	{
		if (typeof message.textOriginal !== 'undefined')
		{
			return message;
		}

		message.textOriginal = message.text;
		message.text = BX.MessengerCommon.prepareText(message.text, true, true, true);

		return message;
	}

	MessengerCommon.prototype.drawMessage = function(dialogId, message, scroll, appendTop)
	{
		if (typeof(message) != 'object' || this.BXIM.messenger.popupMessenger == null)
			return false;

		message = this.convertMessage(message);

		var placeholder = this.BXIM.messenger.popupMessengerBodyWrap;
		var placeholderName = 'default';
		var customPlace = false;
		var showKeyboard = true;
		var showReply = true;

		if (typeof(dialogId) == "object")
		{
			customPlace = true;

			placeholderName = dialogId.placeholderName || 'custom';
			placeholder = dialogId.placeholder;
			showKeyboard = dialogId.showKeyboard == false? false: true;
			showReply = dialogId.showReply == false? false: true;
		}
		else if (dialogId != this.BXIM.messenger.currentTab || dialogId == 0 || !this.MobileActionEqual('DIALOG'))
		{
			return false;
		}

		if (message.dropDuplicate)
		{
			var duplicateMessage = BX.findChildByClassName(placeholder, "bx-messenger-content-item-id-"+message.id);
			if (duplicateMessage)
			{
				BX.remove(duplicateMessage);
			}
			message.dropDuplicate = false;
		}

		appendTop = appendTop == true;
		scroll = appendTop? false: scroll;

		if (typeof(message.params) != 'object')
		{
			message.params = {};
		}

		var isChat = false;
		var isGeneralChat = false;
		var edited = message.params && message.params.IS_EDITED == 'Y';
		var deleted = message.params && message.params.IS_DELETED == 'Y';

		var messageText = deleted? BX.message('IM_M_DELETED'): message.text;
		var temp = message.id.toString().indexOf('temp') == 0;
		var retry = temp && message.retry;
		var system = message.senderId == 0;
		var likeEnable = this.BXIM.ppServerStatus;
		var withAppsMenu = message.params && message.params.MENU && message.params.MENU != 'N';

		messageText = this.replaceDateText(message.id, messageText, message.params);

		if (customPlace)
		{
			isChat = message.chatId && this.BXIM.messenger.chat[message.chatId]? true: false;
			isGeneralChat = isChat && message.chatId == this.BXIM.messenger.generalChatId;

			if (isChat && this.BXIM.messenger.chat[message.chatId].type == "call")
			{
				likeEnable = false;
			}
			else if (isChat && this.BXIM.messenger.chat[message.chatId].type == "lines")
			{
				var sourceId = this.linesGetSource(this.BXIM.messenger.chat[message.chatId]);
				if (!(sourceId == 'livechat'))
				{
					likeEnable = false;
				}
			}
			else if (!isChat && this.BXIM.messenger.bot[message.recipientId] && (this.BXIM.messenger.bot[message.recipientId].type == 'network' || this.BXIM.messenger.bot[message.recipientId].type == 'support24'))
			{
				likeEnable = false;
			}
		}
		else
		{
			if (message.senderId == this.BXIM.userId)
			{
				if (this.BXIM.messenger.message[message.id] && this.BXIM.messenger.message[message.id].recipientId == this.BXIM.messenger.currentTab)
				{
					this.BXIM.messenger.popupMessengerLastMessage = message.id;
				}
			}
			this.BXIM.messenger.openChatFlag = this.BXIM.messenger.currentTab.toString().substr(0, 4) == 'chat';
			isChat = this.BXIM.messenger.openChatFlag && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)] && (this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type == "chat" || this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type == "open");
			isGeneralChat = isChat && message.chatId == this.BXIM.messenger.generalChatId;

			if (this.BXIM.messenger.openChatFlag && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)] && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type == "call")
			{
				likeEnable = false;
			}
			else if (this.BXIM.messenger.openChatFlag && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)] && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type == "lines")
			{
				var sourceId = this.linesGetSource(this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)]);
				if (!(sourceId == 'livechat'))
				{
					likeEnable = false;
				}
			}
			else if (!this.BXIM.messenger.openChatFlag && this.BXIM.messenger.bot[this.BXIM.messenger.currentTab] && (this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type == 'network' || this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type == 'support24'))
			{
				likeEnable = false;
			}
		}

		var likeCount = likeEnable && typeof(message.params.LIKE) == "object" && message.params.LIKE.length > 0? message.params.LIKE.length: '';
		var iLikeThis = likeEnable && typeof(message.params.LIKE) == "object" && BX.util.in_array(this.BXIM.userId, message.params.LIKE);

		var filesNode = this.diskDrawFiles(message.chatId, message.params.FILE_ID);
		if (filesNode.length > 0)
		{
			var filesNodeWithText = messageText != '' || message.params.ATTACH;
			filesNode = BX.create("div", { props : { className : "bx-messenger-file-box"+(filesNodeWithText? ' bx-messenger-file-box-with-message':'') }, children: filesNode});
		}
		else
		{
			filesNode = null;
		}

		var messageReplyNode = showReply? this.drawMessageReply(message.id): null;

		var attachNode = null;

		var attaches = [];
		if (message.params.ATTACH)
		{
			for (var i = 0; i < message.params.ATTACH.length; i++)
			{
				attaches[i] = message.params.ATTACH[i];
			}

			var attachPattern = /\[ATTACH=([0-9]{1,})\]/gm;  var match = [];
			while ((match = attachPattern.exec(messageText)) !== null)
			{
				for (var i = 0; i < attaches.length; i++)
				{
					if (message.params.ATTACH[i].ID == match[1])
					{
						attachNode = BX.create("div", { props : { className : "bx-messenger-attach-box" }, children: BX.MessengerCommon.drawAttach(message.id, message.chatId, [attaches[i]])});
						messageText = messageText.replace('[ATTACH='+match[1]+']', attachNode.innerHTML);
						delete attaches[i];
					}
				}
			}
		}


		if (
			message.params.LINK_ACTIVE
			&& message.params.LINK_ACTIVE.length > 0
			&& !message.params.LINK_ACTIVE.map(function(userId) { return parseInt(userId) }).includes(this.BXIM.userId)
		)
		{
			messageText = messageText.replace(/<a.*?href="([^"]*)".*?>(.*?)<\/a>/gi, '$2');
		}

		var extraClass = "";
		if (message.params.CLASS)
		{
			extraClass = message.params.CLASS;
		}

		var extraNode = null;
		if (message.params.IMOL_SID && parseInt(message.params.IMOL_SID) > 0)
		{
			extraNode = BX.create("div", {
				props : { className : "bx-messenger-message-extra"},
				html: BX.message('IM_OL_DIALOG_NUMBER').replace("#NUMBER#", message.params.IMOL_SID)}
			);
		}

		if (message.params.IMOL_FORM && this.BXIM.messenger.chat[message.chatId] && this.BXIM.messenger.chat[message.chatId].type == 'livechat')
		{
			var delay = message.params.IMOL_FORM.toString().substr(-6) == '-delay';
			var formType = delay? message.params.IMOL_FORM.substr(0, message.params.IMOL_FORM.lastIndexOf('-delay')): message.params.IMOL_FORM;

			if (this.BXIM.messenger.popupMessengerLiveChatDelayedFormMid < message.id && this.BXIM.messenger.popupMessengerLiveChatFormType != formType)
			{
				this.BXIM.messenger.popupMessengerLiveChatDelayedFormMid = message.id;
				this.BXIM.messenger.popupMessengerLiveChatDelayedForm = delay? formType: null;
				this.BXIM.messenger.linesLivechatFormHide();

				clearTimeout(this.BXIM.messenger.popupMessengerLiveChatActionTimeout);
				this.BXIM.messenger.popupMessengerLiveChatActionTimeout = setTimeout(BX.delegate(function() {
					this.BXIM.messenger.linesLivechatFormShow(formType);
				}, this), delay? 30000: 5000);
			}
		}

		attachNode = BX.MessengerCommon.drawAttach(message.id, message.chatId, attaches);
		if (attachNode.length > 0)
		{
			attachNode = BX.create("div", { props : { className : "bx-messenger-attach-box" }, children: attachNode});
		}
		else
		{
			attachNode = null;
		}

		var keyboardNode = this.drawKeyboard(message.recipientId, message.id, (showKeyboard && message.params.KEYBOARD? message.params.KEYBOARD: null));

		var skipAddMessage = false;
		if (!filesNode && !attachNode && messageText.length <= 0)
		{
			skipAddMessage = true;
		}

		if (message.system && message.system == 'Y')
		{
			system = true;
			message.senderId = 0;
		}

		var addBlankNode = false;
		var messageUser = this.BXIM.messenger.users[message.senderId];

		if (!system && (typeof(messageUser) == 'undefined' || messageUser.id <= 0))
		{
			addBlankNode = true;
			skipAddMessage = true;
		}

		if (message.params && messageUser && messageUser.id > 0 && (message.params.AVATAR || message.params.NAME || message.params.USER_ID))
		{
			messageUser = BX.clone(messageUser);
			if (message.params.AVATAR)
			{
				messageUser.avatar = message.params.AVATAR;
			}
			if (message.params.NAME)
			{
				messageUser.name = message.params.NAME;
				messageUser.first_name = message.params.NAME.split(" ")[0];
			}
			message = BX.clone(message);
			if (parseInt(message.params.USER_ID))
			{
				message.senderId = 'network'+message.params.USER_ID;
			}
		}
		var voteBlock = this.linesVoteDraw(message.id);
		if (voteBlock)
		{
			messageText = voteBlock;
			message.system = 'Y';
		}
		else
		{
			extraClass = extraClass.replace('bx-messenger-content-item-vote', '');

			var voteResultBlock = this.linesVoteResultDraw(message.id, messageText);
			if (voteResultBlock)
			{
				messageText = voteResultBlock;
			}
		}


		if (!customPlace)
		{
			if (!this.BXIM.messenger.history[dialogId])
				this.BXIM.messenger.history[dialogId] = [];

			if (parseInt(message.id) > 0 && this.BXIM.messenger.history[dialogId].indexOf(message.id.toString()) == -1)
				this.BXIM.messenger.history[dialogId].push(message.id);

			var messageId = 0;
			if (!addBlankNode)
			{
				var markNewMessage = false;
				if (this.BXIM.messenger.unreadMessage[dialogId] && BX.util.in_array(message.id, this.BXIM.messenger.unreadMessage[dialogId]))
					markNewMessage = true;
			}
		}

		var insertBefore = false;
		var lastMessage = null;

		if (appendTop)
		{
			lastMessage = placeholder.firstChild;
			if (lastMessage)
			{
				if (BX.hasClass(lastMessage, "bx-messenger-content-empty") || BX.hasClass(lastMessage, "bx-messenger-content-load"))
				{
					BX.remove(lastMessage);
				}
				else if (BX.hasClass(lastMessage, "bx-messenger-content-group"))
				{
					lastMessage = lastMessage.nextSibling;
				}
			}
		}
		else
		{
			lastMessage = placeholder.lastChild;

			if (lastMessage && (BX.hasClass(lastMessage, "bx-messenger-content-empty") || BX.hasClass(lastMessage, "bx-messenger-content-load")))
			{
				BX.remove(lastMessage);
			}
			else if (lastMessage && BX.hasClass(lastMessage, "bx-messenger-content-item-notify"))
			{
				if (message.senderId == this.BXIM.messenger.currentTab || !this.countWriting(this.BXIM.messenger.currentTab))
				{
					BX.remove(lastMessage);
					insertBefore = false;
					lastMessage = placeholder.lastChild;
				}
				else
				{
					insertBefore = true;
					lastMessage = placeholder.lastChild.previousSibling;
				}
			}
		}

		if (!addBlankNode)
		{
			var dateGroupTitle = this.formatDate(message.date, this.getDateFormatType('MESSAGE_TITLE'));
			var dataGroupCode = (typeof(BX.translit) != 'undefined'? BX.translit(dateGroupTitle): dateGroupTitle);

			if (typeof(this.messageGroup) != 'object')
			{
				this.messageGroup = {};
			}
			if (typeof(this.messageGroup[placeholderName]) != 'object')
			{
				this.messageGroup[placeholderName] = {};
			}

			if (!this.messageGroup[placeholderName][dataGroupCode])
			{
				this.messageGroup[placeholderName][dataGroupCode] = true;
				var dateGroupChildren = [];
				if (this.BXIM.desktop && this.isPage())
				{
					dateGroupChildren = [
						BX.create("a", {
							attrs : {name : 'bx-im-go-' + message.date},
							props : {className : "bx-messenger-content-group-link"}
						}),
						BX.create("a", {
							attrs : {id : 'bx-im-go-' + dataGroupCode, href : "#bx-im-go-" + message.date},
							props : {className : "bx-messenger-content-group-title" + (this.BXIM.language == 'ru'? ' bx-messenger-lowercase': '')},
							html : dateGroupTitle
						})
					];
				}
				else
				{
					dateGroupChildren = [
						BX.create("a", {
							attrs : {name : 'bx-im-go-' + message.date},
							props : {className : "bx-messenger-content-group-link"}
						}),
						BX.create("div", {
							attrs : {id : 'bx-im-go-' + dataGroupCode},
							props : {className : "bx-messenger-content-group-title" + (this.BXIM.language == 'ru'? ' bx-messenger-lowercase': '')},
							html : dateGroupTitle
						})
					]
				}

				var dateGroupNode = BX.create("div", {
					props : {className : "bx-messenger-content-group" + (dateGroupTitle == BX.message('FD_TODAY')? " bx-messenger-content-group-today": "")},
					children : dateGroupChildren
				});

				if (appendTop)
				{
					placeholder.insertBefore(dateGroupNode, placeholder.firstChild);
					lastMessage = dateGroupNode.nextSibling;
				}
				else
				{
					if (insertBefore && lastMessage.nextElementSibling)
					{
						placeholder.insertBefore(dateGroupNode, lastMessage.nextElementSibling);
						lastMessage = dateGroupNode;
					}
					else
					{
						placeholder.appendChild(dateGroupNode);
					}
				}
			}
		}

		var messageWithoutPadding = false;
		var messageOnlyRichLink = false;


		var textNode = null;
		if (typeof(messageText) == 'string')
		{
			if (messageText.length > 0)
			{
				var checkImages = messageText.replace(/<img.*?data-code="([^"]*)".*?>/gi, '$1').replace(/<\/?[^>]+>/gi, ' ').replace(/(https|http):\/\/([\S]+)\.(jpg|jpeg|png|gif|webp)(\?[\S]+)?/ig, function(whole) {return '';}).trim();
				if (!checkImages)
				{
					messageWithoutPadding = true;
				}
			}

			if (
				this.BXIM.settings.enableRichLink
				&& message.params.URL_ONLY == 'Y'
				&& message.params.URL_ID && message.params.URL_ID.length > 0
				&& message.params.ATTACH && message.params.ATTACH.length > 0
			)
			{
				messageOnlyRichLink = true;
			}

			parsedText = !temp? messageText: this.prepareText(
				messageText,
				false,
				true,
				true,
				(!this.BXIM.messenger.openChatFlag || message.senderId == this.BXIM.userId? false: (this.BXIM.messenger.users[this.BXIM.userId].name)),
				objectReference
			);

			var objectReference = {oneSmileInMessage: false}
			textNode = BX.create("span", {
				props : { className : "bx-messenger-message"},
				attrs: {'id' : 'im-message-'+message.id},
				html: parsedText
			});
			var oneSmileInMessage = objectReference.oneSmileInMessage;
		}
		else
		{
			textNode = BX.create("span", {
				props : { className : "bx-messenger-message"},
				attrs: {'id' : 'im-message-'+message.id},
				children: [messageText]}
			);
			var oneSmileInMessage = false;
		}

		var isContentWithLargeFont = message.params.LARGE_FONT == 'Y' && this.BXIM.settings.enableBigSmile;

		if (!skipAddMessage)
		{
			if (lastMessage)
				messageId = lastMessage.getAttribute('data-messageId');

			if (system)
			{
				var arMessage = BX.create("div", { attrs : { 'data-type': 'system', 'data-senderId' : "0", 'data-messageId' : message.id, 'data-blockmessageid' : message.id }, props: { className : "bx-messenger-content-item bx-messenger-content-item-id-"+message.id+" bx-messenger-content-item-notice "+extraClass}, children: [
					extraNode,
					BX.create("span", { props : { className : "bx-messenger-content-item-content"+(oneSmileInMessage? " bx-messenger-content-item-content-transparent": "")+(messageWithoutPadding? " bx-messenger-content-item-content-without-padding": "")+(messageOnlyRichLink && !deleted? " bx-messenger-content-item-content-rich-link": "")+(deleted || edited?" bx-messenger-message-edited": "")+(isContentWithLargeFont?" bx-messenger-content-item-content-large-font": "")}, children : [
						!isGeneralChat? []: BX.create("span", { attrs: {title : (withAppsMenu? BX.message('IM_M_MENU_APP_EXISTS')+' ': '')+BX.message('IM_M_OPEN_EXTRA_TITLE').replace('#SHORTCUT#', BX.browser.IsMac()?'CMD':'CTRL')}, props : { className : "bx-messenger-content-item-menu"}}),
						!this.isMobile() || !likeEnable? null: BX.create("span", { props : { className : "bx-messenger-content-item-like"+(iLikeThis? ' bx-messenger-content-item-liked':'')+(likeCount<=0?' bx-messenger-content-like-digit-off':'')}, children: [
							BX.create("span", { attrs : {'data-messageId': message.id}, props : { className : "bx-messenger-content-like-button"}, html: ''}),
							BX.create("span", { attrs : {title: likeCount>0? BX.message('IM_MESSAGE_LIKE_LIST'):''}, props : { className : "bx-messenger-content-like-digit"}, html: likeCount})
						], events: this.isMobile()? {click: BX.delegate(function (e){
							this.BXIM.messageLike(message.id);
							return BX.PreventDefault(e);
						}, this)}: {}}),
						typeof(messageUser) == 'undefined' || messageUser.id <= 0? []:
						BX.create("span", { props : { className : "bx-messenger-content-item-avatar"}, children : [
							BX.create("span", { props : { className : "bx-messenger-content-item-arrow"}}),
							BX.create("span", { props : { className : "bx-messenger-content-item-avatar-block"}, children: [
								BX.create('span', { props : { className : "bx-messenger-content-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(messageUser.avatar)? " bx-messenger-content-item-avatar-img-default": "") }, attrs : {style: (this.isBlankAvatar(messageUser.avatar)? 'background-color: '+messageUser.color: 'background: url(\''+this.formatUrl(messageUser.avatar)+'\'); background-size: cover;')}}),
								this.BXIM.messenger.openChatFlag? BX.create("span", { props : { className : "bx-messenger-content-item-avatar-name"}, attrs : { title: BX.util.htmlspecialcharsback(messageUser.name)}, html: messageUser.first_name? messageUser.first_name: messageUser.name.split(" ")[0]}): null
							]})
						]}),
						BX.create("span", { props : { className : "bx-messenger-content-item-status"}, children: []}),
						BX.create("span", { props : { className : "bx-messenger-content-item-text-center"}, children: [
							BX.create("span", {  props : { className : "bx-messenger-content-item-text-message"}, children: [
								BX.create("span", {  props : { className : "bx-messenger-content-item-text-wrap"+(appendTop? " bx-messenger-content-item-text-wrap-append": "")+(deleted?" bx-messenger-message-deleted": " ")}, children: [
									filesNode, textNode, attachNode
								]})
							]}),
							BX.create("span", {  props : { className : "bx-messenger-content-item-params"}, children: [
								BX.create("span", { props : { className : "bx-messenger-content-item-date"}, html: this.formatDate(message.date, this.getDateFormatType('MESSAGE'))}),
								message.params.BETA != 'Y'? null: BX.create("span", { props : { className : "bx-messenger-content-item-beta"}, attrs: {title: BX.message('IM_BETA')}, html: '<beta>&beta;</beta>'}),
							]}),
							BX.create("span", { props : { className : "bx-messenger-clear"}})
						]})
					]}),
					keyboardNode,
					messageReplyNode
				]});

				if (message.system && message.system == 'Y' && markNewMessage)
					BX.addClass(arMessage, 'bx-messenger-content-item-new');

			}
			else if (message.senderId == this.BXIM.userId)
			{
				var arMessage = BX.create("div", { attrs : { 'data-type': 'self', 'data-senderId' : message.senderId, 'data-messageDate' : message.date, 'data-messageId' : message.id, 'data-blockmessageid' : message.id }, props: { className : "bx-messenger-content-item bx-messenger-content-item-id-"+message.id+" bx-messenger-content-item-1 "+extraClass}, children: [
					extraNode,
					BX.create("span", { props : { className : "bx-messenger-content-item-content"+(oneSmileInMessage? " bx-messenger-content-item-content-transparent": "")+(messageWithoutPadding? " bx-messenger-content-item-content-without-padding": "")+(messageOnlyRichLink && !deleted? " bx-messenger-content-item-content-rich-link": "")+(deleted || edited?" bx-messenger-message-edited": "")+(isContentWithLargeFont?" bx-messenger-content-item-content-large-font": "")}, children : [
						BX.create("span", { attrs: {title : (withAppsMenu? BX.message('IM_M_MENU_APP_EXISTS')+' ': '')+BX.message('IM_M_OPEN_EXTRA_TITLE').replace('#SHORTCUT#', BX.browser.IsMac()?'CMD':'CTRL')}, props : { className : "bx-messenger-content-item-menu"}}),
						!this.isMobile() || !likeEnable? null: BX.create("span", { props : { className : "bx-messenger-content-item-like"+(iLikeThis? ' bx-messenger-content-item-liked':'')+(likeCount<=0?' bx-messenger-content-like-digit-off':'')}, children: [
							BX.create("span", { attrs : {'data-messageId': message.id}, props : { className : "bx-messenger-content-like-button"}, html: ''}),
							BX.create("span", { attrs : {title: likeCount>0? BX.message('IM_MESSAGE_LIKE_LIST'):''}, props : { className : "bx-messenger-content-like-digit"}, html: likeCount})
						], events: this.isMobile()? {click: BX.delegate(function (e){
							this.BXIM.messageLike(message.id);
							return BX.PreventDefault(e);
						}, this)}: {}}),
						BX.create("span", { props : { className : "bx-messenger-content-item-avatar"}, children : [
							BX.create("span", { props : { className : "bx-messenger-content-item-arrow"}}),
							BX.create("span", { props : { className : "bx-messenger-content-item-avatar-block"}, children: [
								BX.create('span', { props : { className : "bx-messenger-content-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(messageUser.avatar)? " bx-messenger-content-item-avatar-img-default": "") }, attrs : {style: (this.isBlankAvatar(messageUser.avatar)? 'background-color: '+messageUser.color: 'background: url(\''+this.formatUrl(messageUser.avatar)+'\'); background-size: cover;')}}),
								this.BXIM.messenger.openChatFlag? BX.create("span", { props : { className : "bx-messenger-content-item-avatar-name"}, attrs : { title: BX.util.htmlspecialcharsback(messageUser.name)}, html: messageUser.first_name? messageUser.first_name: messageUser.name.split(" ")[0]}): null
							]})
						]}),
						retry? (
							BX.create("span", { props : { className : "bx-messenger-content-item-status"}, children:[
								BX.create("span", { attrs: { title: BX.message('IM_M_RETRY'), 'data-messageid': message.id, 'data-chat': parseInt(message.recipientId) > 0? 'Y':'N' }, props : { className : "bx-messenger-content-item-error"}, children:[
									BX.create("span", { props : { className : "bx-messenger-content-item-error-icon"}})
								]})
							]})
						):(
							BX.create("span", { props : { className : "bx-messenger-content-item-status"}, children: temp?[
								BX.create("span", { props : { className : "bx-messenger-content-item-progress"}})
							]: []})
						),
						BX.create("span", { props : { className : "bx-messenger-content-item-text-center"}, children: [
							BX.create("span", {  props : { className : "bx-messenger-content-item-text-message"}, children: [
								BX.create("span", {  props : { className : "bx-messenger-content-item-text-wrap"+(appendTop? " bx-messenger-content-item-text-wrap-append": "")+(deleted?" bx-messenger-message-deleted": " ")}, children: [
									filesNode, textNode, attachNode
								]})
							]}),
							BX.create("span", {  props : { className : "bx-messenger-content-item-params"}, children: [
								!likeEnable || this.isMobile()? null: BX.create("span", { props : { className : "bx-messenger-content-item-like"+(iLikeThis? ' bx-messenger-content-item-liked':'')+(likeCount<=0?' bx-messenger-content-like-digit-off':'')}, children: [
									BX.create("span", { html: '&nbsp;'}),
									BX.create("span", { attrs : {title: likeCount>0? BX.message('IM_MESSAGE_LIKE_LIST'):''}, props : { className : "bx-messenger-content-like-digit"}, html: likeCount}),
									BX.create("span", { attrs : {'data-messageId': message.id}, props : { className : "bx-messenger-content-like-button"}, html: BX.message('IM_MESSAGE_LIKE')})
								]}),
								BX.create("span", { props : { className : "bx-messenger-content-item-date"}, html: (retry? BX.message('IM_M_NOT_DELIVERED') : this.formatDate(message.date, this.getDateFormatType('MESSAGE')))}),
								message.params.BETA != 'Y'? null: BX.create("span", { props : { className : "bx-messenger-content-item-beta"}, attrs: {title: BX.message('IM_BETA')}, html: '<beta>&beta;</beta>'}),
							]}),
							BX.create("span", { props : { className : "bx-messenger-clear"}})
						]})
					]}),
					keyboardNode,
					messageReplyNode
				]});
			}
			else
			{
				var arMessage = BX.create("div", { attrs : { 'data-type': 'other', 'data-senderId' : message.senderId, 'data-messageDate' : message.date, 'data-messageId' : message.id, 'data-blockmessageid' : message.id }, props: { className : "bx-messenger-content-item bx-messenger-content-item-id-"+message.id+" bx-messenger-content-item-2"+(markNewMessage? ' bx-messenger-content-item-new': '')+" "+extraClass}, children: [
					extraNode,
					BX.create("span", { props : { className : "bx-messenger-content-item-content"+(oneSmileInMessage? " bx-messenger-content-item-content-transparent": "")+(messageWithoutPadding? " bx-messenger-content-item-content-without-padding": "")+(messageOnlyRichLink && !deleted? " bx-messenger-content-item-content-rich-link": "")+(deleted || edited?" bx-messenger-message-edited": "")+(isContentWithLargeFont?" bx-messenger-content-item-content-large-font": "")}, children : [
						BX.create("span", { attrs: {title : (withAppsMenu? BX.message('IM_M_MENU_APP_EXISTS')+' ': '')+BX.message('IM_M_OPEN_EXTRA_TITLE').replace('#SHORTCUT#', BX.browser.IsMac()?'CMD':'CTRL')}, props : { className : "bx-messenger-content-item-menu"}}),
						!this.isMobile() || !likeEnable? null: BX.create("span", { props : { className : "bx-messenger-content-item-like"+(iLikeThis? ' bx-messenger-content-item-liked':'')+(likeCount<=0?' bx-messenger-content-like-digit-off':'')}, children: [
							BX.create("span", { attrs : {'data-messageId': message.id}, props : { className : "bx-messenger-content-like-button"}, html: ''}),
							BX.create("span", { attrs : {title: likeCount>0? BX.message('IM_MESSAGE_LIKE_LIST'):''}, props : { className : "bx-messenger-content-like-digit"}, html: likeCount})
						], events: this.isMobile()? {click: BX.delegate(function (e){
							this.BXIM.messageLike(message.id);
							return BX.PreventDefault(e);
						}, this)}: {}}),
						BX.create("span", { attrs: {title: BX.util.htmlspecialcharsback(messageUser.name)}, props : { className : "bx-messenger-content-item-avatar bx-messenger-content-item-avatar-button"}, children : [
							BX.create("span", { props : { className : "bx-messenger-content-item-arrow"}}),
							BX.create("span", { props : { className : "bx-messenger-content-item-avatar-block"}, children: [
								BX.create('span', { props : { className : "bx-messenger-content-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(messageUser.avatar)? " bx-messenger-content-item-avatar-img-default": "") }, attrs : {style: (this.isBlankAvatar(messageUser.avatar)? 'background-color: '+messageUser.color: 'background: url(\''+this.formatUrl(messageUser.avatar)+'\'); background-size: cover;')}}),
								this.BXIM.messenger.openChatFlag || messageUser.bot? BX.create("span", { props : { className : "bx-messenger-content-item-avatar-name"}, attrs : { title: BX.util.htmlspecialcharsback(messageUser.name)}, html: messageUser.first_name? messageUser.first_name: messageUser.name.split(" ")[0]}): null
							]})
						]}),
						BX.create("span", { props : { className : "bx-messenger-content-item-status"}, children:[]}),
						BX.create("span", { props : { className : "bx-messenger-content-item-text-center"}, children: [
							BX.create("span", {  props : { className : "bx-messenger-content-item-text-message"}, children: [
								BX.create("span", {  props : { className : "bx-messenger-content-item-text-wrap"+(appendTop? " bx-messenger-content-item-text-wrap-append": "")+(deleted?" bx-messenger-message-deleted": " ")}, children: [
									filesNode, textNode, attachNode
								]})
							]}),
							BX.create("span", {  props : { className : "bx-messenger-content-item-params"}, children: [
								!likeEnable || this.isMobile()? null: BX.create("span", { props : { className : "bx-messenger-content-item-like"+(iLikeThis? ' bx-messenger-content-item-liked':'')+(likeCount<=0?' bx-messenger-content-like-digit-off':'')}, children: [
									BX.create("span", { html: '&nbsp;'}),
									BX.create("span", { attrs : {title: likeCount>0? BX.message('IM_MESSAGE_LIKE_LIST'):''}, props : { className : "bx-messenger-content-like-digit"}, html: likeCount}),
									BX.create("span", { attrs : {'data-messageId': message.id}, props : { className : "bx-messenger-content-like-button"}, html: BX.message('IM_MESSAGE_LIKE')})
								]}),
								BX.create("span", { props : { className : "bx-messenger-content-item-date"}, html: this.formatDate(message.date, this.getDateFormatType('MESSAGE'))}),
								message.params.BETA != 'Y'? null: BX.create("span", { props : { className : "bx-messenger-content-item-beta"}, attrs: {title: BX.message('IM_BETA')}, html: '<beta>&beta;</beta>'}),
							]}),
							BX.create("span", { props : { className : "bx-messenger-clear"}})
						]})
					]}),
					keyboardNode,
					messageReplyNode
				]});
			}
		}
		else if (addBlankNode)
		{
			arMessage = BX.create("div", {attrs : {'id' : 'im-message-'+message.id, 'data-messageDate' : message.date, 'data-messageId' : message.id, 'data-blockmessageid' : message.id }, props : { className : "bx-messenger-content-item-text-wrap bx-messenger-item-skipped"}});
		}

		if (arMessage && (!skipAddMessage || addBlankNode))
		{
			var delimiter = null;
			if (lastMessage && lastMessage.getAttribute('data-senderId') != message.senderId)
			{
				delimiter = BX.create("div", {props : { className : "bx-messenger-item-delimiter"}});
			}

			if (appendTop)
			{
				placeholder.insertBefore(arMessage, lastMessage);
				if (delimiter)
				{
					placeholder.insertBefore(delimiter, lastMessage);
				}
			}
			else if (insertBefore && lastMessage && lastMessage.nextElementSibling)
			{
				placeholder.insertBefore(arMessage, lastMessage.nextElementSibling);
				if (delimiter)
				{
					placeholder.insertBefore(delimiter, lastMessage.nextElementSibling);
				}
			}
			else
			{
				if (delimiter)
				{
					placeholder.appendChild(delimiter);
				}
				placeholder.appendChild(arMessage);
			}
		}

		if (
			!customPlace && !addBlankNode && scroll !== false && this.enableScroll(this.BXIM.messenger.popupMessengerBody, this.BXIM.messenger.popupMessengerBody.offsetHeight)
		)
		{
			if (this.isMobile() && document.body.offsetHeight <= window.innerHeight)
			{
				this.BXIM.messenger.popupMessengerBody.scrollTop = 0;
			}
			else if (this.BXIM.animationSupport)
			{
				if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
					this.BXIM.messenger.popupMessengerBodyAnimation.stop();

				(this.BXIM.messenger.popupMessengerBodyAnimation = new BX.easing({
					duration : 800,
					start : { scroll : this.BXIM.messenger.popupMessengerBody.scrollTop },
					finish : { scroll : this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1)},
					transition : BX.easing.makeEaseInOut(BX.easing.transitions.quart),
					step : BX.delegate(function(state){
						this.BXIM.messenger.popupMessengerBody.scrollTop = state.scroll;
					}, this)
				})).animate();
			}
			else
			{
				this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
			}
		}

		if (message.params.SENDING == 'Y' || message.params.IS_DELIVERED == 'N')
		{
			this.drawProgessMessage(message.id);
		}

		return messageId;
	};

	MessengerCommon.prototype.drawMessageReply = function(messageId)
	{
		var node = null;
		if (!(this.BXIM.messenger.message[messageId] && this.BXIM.messenger.message[messageId].params && this.BXIM.messenger.message[messageId].params.CHAT_ID > 0))
		{
			return node;
		}

		var chatId = this.BXIM.messenger.message[messageId].params.CHAT_ID;
		var currentChatId = this.BXIM.messenger.message[messageId].chatId;

		var lastMessageDate = this.BXIM.messenger.message[messageId].params.CHAT_LAST_DATE? new Date(this.BXIM.messenger.message[messageId].params.CHAT_LAST_DATE): '';
		var messagesCount = this.BXIM.messenger.message[messageId].params.CHAT_MESSAGE || 0;

		node = BX.create("div", { props : { className : "bx-messenger-content-reply" }, attrs: {id: 'im-message-content-reply-'+messageId, 'data-messageId': messageId, 'data-chatid': chatId}, children: [
			BX.create("span", { props : { className : "bx-messenger-content-reply-block" }, children: [
				BX.create("span", { props : { className : "bx-messenger-content-reply-comment" }, children: [
					BX.create("span", { props : { className : "bx-messenger-content-reply-answer" }, events: {click: BX.delegate(function(){
						this.joinParentChat(BX.proxy_context.getAttribute('data-messageId'), BX.proxy_context.getAttribute('data-chatId'));
					}, this)}, attrs: {'data-messageId': messageId, 'data-chatId': chatId}, html: messagesCount+' ' + BX.Loc.getMessagePlural('IM_R_COMMENT', parseInt(messagesCount))}),
					BX.create("span", { props : { className : "bx-messenger-content-reply-date" }, html: lastMessageDate? ', '+this.formatDate(lastMessageDate): ''}),
				]}),
				BX.create("div", { props : { className : "bx-messenger-content-reply-clear" }})
			]}),
			BX.create("span", { props : { className : "bx-messenger-content-reply-join" }, children: [
				BX.create("span", { props : { className : "bx-messenger-content-reply-join-button" }, html: BX.message('IM_M_OPEN'), events: {click: BX.delegate(function(){
					this.joinParentChat(BX.proxy_context.getAttribute('data-messageId'), BX.proxy_context.getAttribute('data-chatId'));
				}, this)}, attrs: {'data-messageId': messageId, 'data-chatId': chatId}, }),
			]}),
			BX.create("div", { props : { className : "bx-messenger-content-reply-clear" }}),
		]});

		return node;
	}

	MessengerCommon.prototype.joinParentChat = function(messageId, chatId)
	{
		if (!messageId || !chatId)
			return false;

		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId])
		{
			this.BXIM.messenger.blockJoinChat[chatId] = false;
			this.BXIM.messenger.openMessenger('chat'+chatId);
		}
		else
		{
			this.BXIM.messenger.blockJoinChat[chatId] = true;

			BX.ajax({
				url: this.BXIM.pathToAjax+'?PARENT_CHAT_JOIN&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				skipAuthCheck: true,
				timeout: 60,
				data: {'IM_PARENT_CHAT_JOIN' : 'Y', 'CHAT_ID' : chatId, 'MESSAGE_ID' : messageId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
				onsuccess: BX.delegate(function(){
					this.BXIM.messenger.blockJoinChat[chatId] = false;
					this.BXIM.messenger.openMessenger('chat'+chatId);
				}, this),
				onfailure: BX.delegate(function(){
					this.BXIM.messenger.blockJoinChat[chatId] = false;
				}, this)
			});
		}
	};

	MessengerCommon.prototype.openReplyDialog = function(messageId)
	{
		if (this.isMobile())
		{
			alert(BX.message('IM_AV_NEXT_VERSION'));
			return false;
		}

		this.BXIM.messenger.openMessengerPanel();
		this.BXIM.messenger.popupMessengerBodyPanelTitleName.innerHTML = BX.message('IM_R_DIALOG_TITLE');

		var desc = this.drawMessageReply(messageId);
		if (desc)
		{
			this.BXIM.messenger.popupMessengerBodyPanelTitleDesc.innerHTML = '';
			this.BXIM.messenger.popupMessengerBodyPanelTitleDesc.appendChild(desc);
		}
		else
		{
			this.BXIM.messenger.popupMessengerBodyPanelTitleDesc.innerHTML = BX.message('IM_R_COMMENT_ZERO');
		}

		this.BXIM.messenger.popupMessengerBodyPanelWrap.innerHTML = '';
		BX.adjust(this.BXIM.messenger.popupMessengerBodyPanelWrap, {children: [
			this.BXIM.messenger.popupMessengerBodyPanelWrapMessage = BX.create("div", { props : { className : "bx-messenger-body-panel-wrap-message"}}),
			this.BXIM.messenger.popupMessengerBodyPanelWrapMessages = BX.create("div", { props : { className : "bx-messenger-body-panel-wrap-message-list"}}),
			BX.create("div", { props : { className : "bx-messenger-body-panel-wrap-message-textarea"}, children: [
				this.popupMessengerTextareaPlace = BX.create("div", { props : { className : "bx-messenger-textarea-place"}, children : [
					BX.create("div", { props : { className : "bx-messenger-textarea-send" }, children : [
						BX.create("a", {attrs: {href: "#send"}, props : { className : "bx-messenger-textarea-send-button" }, events : { click : BX.delegate(this.sendMessage, this)}}),
					]}),
					this.popupMessengerBodyPanelSmileButton = BX.create("div", {attrs : { title: BX.message('IM_SMILE_MENU')},  props : { className : "bx-messenger-textarea-smile" }, events : { click : BX.delegate(function(e){this.openSmileMenu(); return BX.PreventDefault(e);}, this)}}),
					BX.create("div", { props : { className : "bx-messenger-textarea" }, children : [
						this.popupMessengerPanelTextarea = BX.create("textarea", { props : { value: '', className : "bx-messenger-textarea-input"}}),
						this.popupMessengerPanelTextareaPlaceholder = BX.create("div", { props : {className : "bx-messenger-textarea-placeholder"}, html : BX.message('IM_M_TA_TEXT')})
					]}),
					BX.create("div", { props : { className : "bx-messenger-textarea-clear" }}),
				]})
			]})
		]});

		if (typeof(this.messageGroup) != 'object')
		{
			this.messageGroup = {};
		}
		this.messageGroup['reply'] = {};

		this.drawMessage({
			placeholder: this.BXIM.messenger.popupMessengerBodyPanelWrapMessage,
			placeholderName: 'reply',
			showKeyboard: false,
			showReply: false
		}, this.BXIM.messenger.message[messageId]);

		if (desc)
		{
			this.BXIM.messenger.popupMessengerBodyPanelWrapMessages.innerHTML = '<div class="bx-messenger-content-empty"><span class="bx-messenger-content-load-text">'+BX.message('IM_R_LOAD_COMMENT')+'</span></div>';
		}
		else
		{
			this.BXIM.messenger.popupMessengerBodyPanelWrapMessages.innerHTML = '<div class="bx-messenger-content-empty"><span class="bx-messenger-content-load-text">'+BX.message('IM_R_NO_COMMENT')+'</span></div>';
		}

		this.messageGroup['replyMessages'] = {};
		if (desc)
		{
			setTimeout(BX.delegate(function(){
				//var shuffle = [];
				//for (var i in this.BXIM.messenger.showMessage['776'])
				//	shuffle.push(i);
				if (
					!this.BXIM.messenger.message[messageId]
					|| this.BXIM.messenger.message[messageId].params
					|| this.BXIM.messenger.message[messageId].params.CHAT_ID <= 0
				)
				{
					return false;
				}

				var dialogId = 'chat'+this.BXIM.messenger.message[messageId].params.CHAT_ID;
				this.loadLastMessage(dialogId, BX.delegate(function(dit, result, data){
					if (!result)
					{
						this.BXIM.messenger.popupMessengerBodyPanelWrapMessages.innerHTML = '<div class="bx-messenger-content-empty"><span class="bx-messenger-content-load-text">'+BX.message('IM_F_ERROR')+'</span></div>';
						return false;
					}
					this.BXIM.messenger.popupMessengerBodyPanelWrapMessages.innerHTML = '';
					var shuffle = BX.util.shuffle(this.BXIM.messenger.showMessage[dit]);
					for (var i = 0; i < shuffle.length; i++)
					{
						this.drawMessage({
							placeholder: this.BXIM.messenger.popupMessengerBodyPanelWrapMessages,
							placeholderName: 'replyMessages',
							showKeyboard: false,
							showReply: false,
						}, this.BXIM.messenger.message[shuffle[i]]);
					}
				}, this));

			}, this), 1000)
		}

		return true;
	}

	MessengerCommon.prototype.checkProgessMessage = function()
	{
		for (messageId in this.BXIM.messenger.popupMessengerSendingTimeout)
		{
			if (
				!this.BXIM.messenger.message[messageId] ||
				!this.BXIM.messenger.message[messageId].params ||
				!this.BXIM.messenger.message[messageId].params.SENDING_TS
			)
			{
				delete this.BXIM.messenger.popupMessengerSendingTimeout[messageId];
			}
			else if (
				typeof this.BXIM.messenger.message[messageId].params.FILE_ID !== 'undefined'
				&& this.BXIM.messenger.message[messageId].params.FILE_ID.length > 0
				&& parseInt(this.BXIM.messenger.message[messageId].params.SENDING_TS)+3600 < ((new Date).getTime()/1000)
			)
			{
				this.drawProgessMessage(messageId);
			}
			else if (parseInt(this.BXIM.messenger.message[messageId].params.SENDING_TS)+300 < ((new Date).getTime()/1000))
			{
				this.drawProgessMessage(messageId);
			}
		}
	}

	MessengerCommon.prototype.drawProgessMessage = function(messageId, button)
	{
		var element = BX('im-message-'+messageId);
		if (!element)
			return false;

		BX.addClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress');
		BX.MessengerTimer.start('progressMessage', messageId, 1000, function(id) {
			var element = BX('im-message-'+id);
			if (!element)
				return false;

			BX.addClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-start');
		});

		element.parentNode.parentNode.parentNode.previousSibling.innerHTML = '';

		var isDelivered = true;

		var hasParams = this.BXIM.messenger.message[messageId] && this.BXIM.messenger.message[messageId].params;
		var isNotDelivered = this.BXIM.messenger.message[messageId].params.IS_DELIVERED == 'N';
		var isSending = this.BXIM.messenger.message[messageId].params.SENDING == 'Y' && typeof this.BXIM.messenger.message[messageId].params.SENDING_TS !== 'undefined';
		var hasFiles = typeof this.BXIM.messenger.message[messageId].params.FILE_ID === 'object' && this.BXIM.messenger.message[messageId].params.FILE_ID.length > 0;

		if (
			hasParams
			&& (
				isNotDelivered
				|| (
					isSending
					&& (
						hasFiles && parseInt(this.BXIM.messenger.message[messageId].params.SENDING_TS)+3600 < ((new Date).getTime()/1000)
						|| !hasFiles && parseInt(this.BXIM.messenger.message[messageId].params.SENDING_TS)+300 < (new Date()).getTime()/1000
					)
				)
			)
		)
		{
			delete this.BXIM.messenger.popupMessengerSendingTimeout[messageId];
			this.BXIM.messenger.message[messageId].params.IS_DELIVERED = 'N';
			this.BXIM.messenger.message[messageId].params.SENDING = 'N';
			this.BXIM.messenger.message[messageId].params.SENDING_TS = 0;
			isDelivered = false;

			var lastMessageElementDate = BX.findChildByClassName(element.parentNode.parentNode.parentNode, "bx-messenger-content-item-date");
			if (lastMessageElementDate)
				lastMessageElementDate.innerHTML = BX.message('IM_M_NOT_DELIVERED');
		}

		if (
			this.BXIM.messenger.message[messageId]
			&& this.BXIM.messenger.message[messageId].params
			&& this.BXIM.messenger.message[messageId].params.SENDING == 'Y'
		)
		{
			this.BXIM.messenger.popupMessengerSendingTimeout[messageId] = this.BXIM.messenger.message[messageId].params.SENDING_TS;
		}

		if (!isDelivered)
		{
			if (this.BXIM.messenger.message[messageId])
			{
				BX.addClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-error');
				BX.MessengerCommon.recentListElementStatusError(this.BXIM.messenger.message[messageId].recipientId, messageId);
				BX.MessengerTimer.stop('progressMessage', messageId, true);
			}
		}
		else if (typeof (button) == 'object' || button === true)
		{
			if (this.BXIM.messenger.message[messageId])
			{
				this.BXIM.messenger.errorMessage[this.BXIM.messenger.currentTab] = true;
				BX.addClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-error');
				BX.MessengerCommon.recentListElementStatusError(this.BXIM.messenger.message[messageId].recipientId, messageId);
				BX.MessengerTimer.stop('progressMessage', messageId, true);
				button.chat = button.chat? button.chat: (parseInt(this.BXIM.messenger.message[messageId].recipientId) > 0? 'Y':'N');
				BX.adjust(element.parentNode.parentNode.parentNode.previousSibling, {children: [
					BX.create("span", { attrs: { title: button.title? button.title: '', 'data-messageid': messageId, 'data-chat': button.chat }, props : { className : "bx-messenger-content-item-error"}, children:[
						BX.create("span", { props : { className : "bx-messenger-content-item-error-icon"}})
					]})
				]});
			}
			else
			{
				BX.MessengerTimer.stop('progressMessage', messageId, true);
				BX.removeClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress');
				BX.removeClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-start');
				BX.removeClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-error');
			}
		}
		else
		{
			BX.adjust(element.parentNode.parentNode.parentNode.previousSibling, {children: [
				BX.create("span", { props : { className : "bx-messenger-content-item-progress"}})
			]});
		}

		return true;
	}

	MessengerCommon.prototype.clearProgessMessage = function(messageId)
	{
		delete this.BXIM.messenger.popupMessengerSendingTimeout[messageId];

		var element = BX('im-message-'+messageId);
		if (!element)
			return false;

		if (
			this.BXIM.messenger.message[messageId]
			&& this.BXIM.messenger.message[messageId].params
			&& (
				this.BXIM.messenger.message[messageId].params.SENDING == 'Y'
				|| this.BXIM.messenger.message[messageId].params.IS_DELIVERED == 'N'
			)
		)
		{
			return false;
		}

		BX.MessengerTimer.stop('progressMessage', messageId, true);
		BX.removeClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress');
		BX.removeClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-start');
		BX.removeClass(element.parentNode.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-progress-error');
		element.parentNode.parentNode.parentNode.previousSibling.innerHTML = '';

		return true;
	}



	/* Section: Writing status */
	MessengerCommon.prototype.startWriting = function(userId, dialogId, userName)
	{
		if (dialogId == this.BXIM.userId)
		{
			this.BXIM.messenger.writingList[userId] = true;
			this.drawWriting(userId);

			clearTimeout(this.BXIM.messenger.writingListTimeout[userId]);
			this.BXIM.messenger.writingListTimeout[userId] = setTimeout(BX.delegate(function(){
				this.endWriting(userId);
			}, this), 29500);
		}
		else
		{
			if (!this.BXIM.messenger.writingList[dialogId])
				this.BXIM.messenger.writingList[dialogId] = {};

			if (!this.BXIM.messenger.writingListTimeout[dialogId])
				this.BXIM.messenger.writingListTimeout[dialogId] = {};

			this.BXIM.messenger.writingList[dialogId][userId] = true;
			this.drawWriting(userId, dialogId);

			clearTimeout(this.BXIM.messenger.writingListTimeout[dialogId][userId]);
			this.BXIM.messenger.writingListTimeout[dialogId][userId] = setTimeout(BX.delegate(function(){
				this.endWriting(userId, dialogId);
			}, this), 29500);
		}
	};

	MessengerCommon.prototype.drawWriting = function(userId, dialogId, animation)
	{
		animation = typeof(animation) == 'undefined'? true: animation;
		if (dialogId == this.BXIM.userId)
			return false;

		if (!dialogId || dialogId.toString().substr(0,4) !== 'chat')
		{
			dialogId = '';
		}

		if (this.BXIM.messenger.popupMessenger != null && this.MobileActionEqual('RECENT', 'DIALOG'))
		{
			if (this.BXIM.messenger.writingList[userId] || dialogId && this.countWriting(dialogId) > 0)
			{
				if (BX.MessengerExternalList)
				{
					var elements = BX.MessengerExternalList.getElement((dialogId? dialogId: userId), true);
					if (elements)
					{
						for (var i = 0; i < elements.length; i++)
							BX.addClass(elements[i], 'bx-messenger-cl-status-writing');
					}
				}
				var elements = BX.findChildrenByClassName(this.BXIM.messenger.popupContactListElementsWrap, "bx-messenger-cl-id-"+(dialogId? dialogId: userId));
				if (elements)
				{
					for (var i = 0; i < elements.length; i++)
						BX.addClass(elements[i], 'bx-messenger-cl-status-writing');
				}

				if (this.MobileActionEqual('DIALOG') && (this.BXIM.messenger.currentTab == userId || dialogId && this.BXIM.messenger.currentTab == dialogId))
				{
					if (dialogId)
					{
						var userList = [];
						for (var i in this.BXIM.messenger.writingList[dialogId])
						{
							if (this.BXIM.messenger.writingList[dialogId].hasOwnProperty(i) && this.BXIM.messenger.users[i])
							{
								userList.push(this.BXIM.messenger.users[i].name);
							}
						}
						this.drawNotifyMessage(dialogId, 'writing', BX.message('IM_M_WRITING').replace('#USER_NAME#', userList.join(', ')));
					}
					else
					{
						if (!this.isMobile())
						{
							this.BXIM.messenger.popupMessengerPanelAvatar.parentNode.className = 'bx-messenger-panel-avatar bx-messenger-panel-avatar-status-writing';
						}
						this.drawNotifyMessage(userId, 'writing', BX.message('IM_M_WRITING').replace('#USER_NAME#', this.BXIM.messenger.users[userId].name));
					}
				}

			}
			else if (!this.BXIM.messenger.writingList[userId] || dialogId && this.countWriting(dialogId) == 0)
			{
				var elements = BX.findChildrenByClassName(this.BXIM.messenger.recentListExternal, "bx-messenger-cl-id-"+(dialogId? dialogId: userId));
				if (elements)
				{
					for (var i = 0; i < elements.length; i++)
						BX.removeClass(elements[i], 'bx-messenger-cl-status-writing');
				}
				var elements = BX.findChildrenByClassName(this.BXIM.messenger.popupContactListElementsWrap, "bx-messenger-cl-id-"+(dialogId? dialogId: userId));
				if (elements)
				{
					for (var i = 0; i < elements.length; i++)
						BX.removeClass(elements[i], 'bx-messenger-cl-status-writing');
				}

				if (this.MobileActionEqual('DIALOG') && (this.BXIM.messenger.currentTab == userId || this.BXIM.messenger.currentTab == dialogId))
				{
					if (!dialogId)
					{
						if (!this.isMobile())
							this.BXIM.messenger.popupMessengerPanelAvatar.parentNode.className = 'bx-messenger-panel-avatar bx-messenger-panel-avatar-status-' + this.getUserStatus(this.BXIM.messenger.users[userId]);
					}

					var lastMessage = this.BXIM.messenger.popupMessengerBodyWrap? this.BXIM.messenger.popupMessengerBodyWrap.lastChild: null;
					if (lastMessage && BX.hasClass(lastMessage, "bx-messenger-content-item-notify") && this.BXIM.messenger.popupMessengerBody)
					{
						if (!dialogId && this.BXIM.messenger.readedList[userId])
						{
							this.drawReadMessage(userId, this.BXIM.messenger.readedList[userId].messageId, this.BXIM.messenger.readedList[userId].date, false);
						}
						else if (dialogId && this.BXIM.messenger.readedList[dialogId])
						{
							this.drawReadMessageChat(dialogId, false);
						}
						else if (BX.MessengerCommon.enableScroll(this.BXIM.messenger.popupMessengerBody, this.BXIM.messenger.popupMessengerBody.offsetHeight)) // TODO mobile
						{
							if (this.isMobile() && document.body.offsetHeight <= window.innerHeight)
							{
								this.BXIM.messenger.popupMessengerBody.scrollTop = 0;
							}
							else if (this.BXIM.animationSupport)
							{
								if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
									this.BXIM.messenger.popupMessengerBodyAnimation.stop();
								(this.BXIM.messenger.popupMessengerBodyAnimation = new BX.easing({
									duration : 800,
									start : {scroll : this.BXIM.messenger.popupMessengerBody.scrollTop},
									finish : {scroll : this.BXIM.messenger.popupMessengerBody.scrollTop - lastMessage.offsetHeight},
									transition : BX.easing.makeEaseInOut(BX.easing.transitions.quart),
									step : BX.delegate(function (state)
									{
										this.BXIM.messenger.popupMessengerBody.scrollTop = state.scroll;
									}, this),
									complete : BX.delegate(function ()
									{
										BX.remove(lastMessage);
									}, this)
								})).animate();
							}
							else if (animation)
							{
								this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollTop - lastMessage.offsetHeight;
								BX.remove(lastMessage);
							}
						}
						else
						{
							this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollTop - lastMessage.offsetHeight;
							BX.remove(lastMessage);
						}
					}
				}
			}
		}
	};

	MessengerCommon.prototype.endWriting = function(userId, dialogId, animation)
	{
		animation = typeof(animation) == 'undefined'? true: animation;
		if (dialogId.toString().substr(0, 4) == 'chat')
		{
			if (this.BXIM.messenger.writingListTimeout[dialogId] && this.BXIM.messenger.writingListTimeout[dialogId][userId])
				clearTimeout(this.BXIM.messenger.writingListTimeout[dialogId][userId]);

			if (this.BXIM.messenger.writingList[dialogId] && this.BXIM.messenger.writingList[dialogId][userId])
				delete this.BXIM.messenger.writingList[dialogId][userId];
		}
		else
		{
			clearTimeout(this.BXIM.messenger.writingListTimeout[userId]);
			delete this.BXIM.messenger.writingList[userId];
		}
		this.drawWriting(userId, dialogId, animation);
	};

	MessengerCommon.prototype.sendWriting = function(dialogId)
	{
		if (!this.BXIM.ppServerStatus || dialogId == 'create' || dialogId == this.BXIM.userId)
			return false;

		if (!this.BXIM.messenger.writingSendList[dialogId])
		{
			clearTimeout(this.BXIM.messenger.writingSendListTimeout[dialogId]);
			this.BXIM.messenger.writingSendList[dialogId] = true;

			var olSilentMode = 'N';
			if (dialogId.toString().substr(0,4) == 'chat' && this.BXIM.messenger.linesSilentMode && this.BXIM.messenger.linesSilentMode[dialogId.toString().substr(4)])
			{
				olSilentMode = 'Y';
			}

			BX.ajax({
				url: this.BXIM.pathToAjax+'?START_WRITING&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 30,
				data: {'IM_START_WRITING' : 'Y', 'DIALOG_ID' : dialogId, 'OL_SILENT' : olSilentMode, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
				onsuccess: BX.delegate(function(data)
				{
					if (data && data.BITRIX_SESSID)
					{
						BX.message({'bitrix_sessid': data.BITRIX_SESSID});
					}
					if (data.ERROR == 'AUTHORIZE_ERROR' && this.isDesktop() && this.BXIM.messenger.sendAjaxTry < 3)
					{
						this.BXIM.messenger.sendAjaxTry++;
						BX.onCustomEvent(window, 'onImError', [data.ERROR]);
					}
					else if (data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
					{
						this.BXIM.messenger.sendAjaxTry++;
						BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
					}
					else
					{
						if (data.ERROR == 'AUTHORIZE_ERROR' || data.ERROR == 'SESSION_ERROR')
						{
							BX.onCustomEvent(window, 'onImError', [data.ERROR]);
						}
					}
				}, this)
			});
			this.BXIM.messenger.writingSendListTimeout[dialogId] = setTimeout(BX.delegate(function(){
				this.endSendWriting(dialogId);
			}, this), 30000);
		}
	};

	MessengerCommon.prototype.endSendWriting = function(dialogId)
	{
		clearTimeout(this.BXIM.messenger.writingSendListTimeout[dialogId]);
		this.BXIM.messenger.writingSendList[dialogId] = false;
	};

	MessengerCommon.prototype.countWriting = function(dialogId)
	{
		var count = 0;
		if (this.BXIM.messenger.writingList[dialogId])
		{
			if (typeof(this.BXIM.messenger.writingList[dialogId]) == 'object')
			{
				for(var i in this.BXIM.messenger.writingList[dialogId])
				{
					if(this.BXIM.messenger.writingList[dialogId].hasOwnProperty(i))
					{
						count++;
					}
				}
			}
			else
			{
				count = 1;
			}
		}

		return count;
	}



	/* Section: Chats */
	MessengerCommon.prototype.leaveFromChat = function(chatId, sendAjax)
	{
		if (!this.BXIM.messenger.chat[chatId])
			return false;

		sendAjax = sendAjax != false;

		if (!sendAjax)
		{
			if (this.BXIM.messenger.chat[chatId].type != 'open' || this.BXIM.messenger.users[this.BXIM.userId].extranet)
			{
				delete this.BXIM.messenger.chat[chatId];
				delete this.BXIM.messenger.userInChat[chatId];
				delete this.BXIM.messenger.unreadMessage['chat'+chatId];
				delete this.BXIM.messenger.showMessage['chat'+chatId];

				if (this.BXIM.messenger.popupMessenger != null)
				{
					if (this.BXIM.messenger.currentTab == 'chat'+chatId)
					{
						this.BXIM.messenger.currentTab = 0;
						this.BXIM.messenger.openChatFlag = false;
						this.BXIM.messenger.openCallFlag = false;
						this.BXIM.messenger.openLinesFlag = false;
						this.BXIM.messenger.extraClose();
					}
				}
			}
			else
			{
				for(var i = 0; i < this.BXIM.messenger.userInChat[chatId].length; i++)
				{
					if (this.BXIM.userId == parseInt(this.BXIM.messenger.userInChat[chatId][i]))
					{
						delete this.BXIM.messenger.userInChat[chatId][i];
						break;
					}
				}
				this.BXIM.messenger.dialogStatusRedraw();
				delete this.BXIM.messenger.unreadMessage['chat'+chatId];
				delete this.BXIM.messenger.showMessage['chat'+chatId];
			}

			this.recentListHide('chat'+chatId, false);
			this.userListRedraw();

			this.BXIM.messenger.updateMessageCount();
			this.BXIM.updateCounter();
		}
		else
		{
			if (BX.MessengerProxy)
			{
				BX.MessengerProxy.sendLeaveChatEvent('chat'+chatId);
			}
			BX.ajax({
				url: this.BXIM.pathToAjax+'?CHAT_LEAVE&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 60,
				data: {'IM_CHAT_LEAVE' : 'Y', 'CHAT_ID' : chatId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
				onsuccess: BX.delegate(function(data){
					if (data.ERROR == '')
					{
						this.readMessage('chat'+data.CHAT_ID, true, false);

						if (
							!this.BXIM.messenger.chat[data.CHAT_ID]
							|| this.BXIM.messenger.chat[data.CHAT_ID].type != 'open'
							|| this.BXIM.messenger.users[this.BXIM.userId].extranet
						)
						{
							delete this.BXIM.messenger.showMessage[data.CHAT_ID];
							delete this.BXIM.messenger.userInChat[data.CHAT_ID];
							delete this.BXIM.messenger.unreadMessage[data.CHAT_ID];
							delete this.BXIM.messenger.chat[data.CHAT_ID];

							if (this.BXIM.messenger.popupMessenger != null)
							{
								if (this.BXIM.messenger.currentTab == 'chat' + data.CHAT_ID)
								{
									this.BXIM.messenger.currentTab = 0;
									this.BXIM.messenger.openChatFlag = false;
									this.BXIM.messenger.openCallFlag = false;
									this.BXIM.messenger.openLinesFlag = false;
									BX.localStorage.set('mct', this.BXIM.messenger.currentTab, 15);
									this.BXIM.messenger.extraClose();
								}
							}
						}
						else
						{
							for(var i = 0; i < this.BXIM.messenger.userInChat[data.CHAT_ID].length; i++)
							{
								if (this.BXIM.userId == parseInt(this.BXIM.messenger.userInChat[data.CHAT_ID][i]))
								{
									delete this.BXIM.messenger.userInChat[data.CHAT_ID][i];
									break;
								}
							}
							delete this.BXIM.messenger.unreadMessage[data.CHAT_ID];
							this.BXIM.messenger.dialogStatusRedraw();
						}

						this.recentListHide('chat'+data.CHAT_ID, false);
						this.userListRedraw();
						BX.localStorage.set('mcl', data.CHAT_ID, 5);

						this.BXIM.messenger.updateMessageCount();
						this.BXIM.updateCounter();
					}
				}, this)
			});
		}
	};

	MessengerCommon.prototype.isSlider = function()
	{
		return location.href.toString().indexOf('SIDE_SLIDER') > 0;
	}

	MessengerCommon.prototype.closeSlider = function()
	{
		if (!this.isSlider())
		{
			return false;
		}

		BX.SidePanel.Instance.close();

		return true;
	}

	MessengerCommon.prototype.reloadDialogOL = function()
	{
		for (var chatId in this.BXIM.messenger.chat)
		{
			if(this.BXIM.messenger.chat.hasOwnProperty(chatId))
			{
				if(
					typeof(chatId) != "undefined" &&
					this.BXIM.messenger.chat[chatId].type === "lines"
				)
				{
					delete this.BXIM.messenger.userInChat[chatId];
					delete this.BXIM.messenger.unreadMessage['chat'+chatId];
					delete this.BXIM.messenger.showMessage['chat'+chatId];
				}
			}
		}
	}

	MessengerCommon.prototype.dialogCloseCurrent = function(close)
	{
		if (this.closeSlider())
		{
			return true;
		}

		this.BXIM.messenger.currentTab = 0;
		this.BXIM.messenger.openChatFlag = false;
		this.BXIM.messenger.openCallFlag = false;
		this.BXIM.messenger.openLinesFlag = false;
		this.BXIM.messenger.extraClose();
	}

	/* Section: Pull Events */
	MessengerCommon.prototype.pullEvent = function()
	{
		//return false; // TODO disable pull;

		if (typeof BX.PULL === 'undefined' || !this.BXIM.ppServerStatus)
		{
			return false;
		}

		var pullHandler = BX.delegate(function(command,params,extra)
		{
			if (this.isMobile())
			{
				this.BXIM.checkRevision(extra.revision_im_mobile);
			}
			else
			{
				this.BXIM.checkRevision(extra.revision_im_web);
			}

			if (command == 'generalChatId')
			{
				this.BXIM.messenger.generalChatId = params.id;
			}
			else if (command == 'generalChatAccess')
			{
				if (this.BXIM.messenger.canSendMessageGeneralChat && params.status == 'blocked')
				{
					if (this.MobileActionEqual('DIALOG'))
					{
						this.BXIM.messenger.canSendMessageGeneralChat = false;
						if (this.isMobile())
						{
							this.BXIM.messenger.dialogStatusRedrawDelay();
						}
						else
						{
							this.BXIM.messenger.redrawChatHeader({userRedraw: false});
						}
					}
				}
				else if (this.isMobile() && this.MobileActionEqual('DIALOG'))
				{
					console.log('NOTICE: Window reload, because CHANGE ALLOW OPTIONS for general chat');
					location.reload();
				}
				else if (this.isDesktop())
				{
					console.log('NOTICE: Window reload, because CHANGE ALLOW OPTIONS for general chat');
					location.reload();
				}
			}
			else if (command == 'settingsUpdate')
			{
				for (var i in params)
				{
					this.BXIM.settings[i] = params[i];
				}
			}
			else if (command == 'desktopOffline')
			{
				this.BXIM.desktopStatus = false;
			}
			else if (command == 'desktopOnline')
			{
				this.BXIM.desktopStatus = true;
				this.BXIM.desktopVersion = params.version;

				var result = document.title.match(/^(\((\d+)\)\s)(.*)+/);
				if (result && result[1])
				{
					document.title = document.title.substr(result[1].length);
				}
			}
			else if (command == 'readMessage')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				this.skipReadMessage = false;

				this.readMessage(params.dialogId, false, false, true);

				this.BXIM.dialogDetailCounter[params.dialogId] = params.counter;

				this.recentListUpdateItem({
					id: params.dialogId,
					counter: params.counter,
				});

				this.recentListRedraw();
				this.BXIM.messenger.updateMessageCount();
			}
			else if (command == 'readMessageChat')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				this.readMessage(params.dialogId, false, false, true);

				if (params.lines)
				{
					this.BXIM.linesDetailCounter[params.dialogId] = params.muted? 0: params.counter;
				}
				else
				{
					this.BXIM.dialogDetailCounter[params.dialogId] = params.muted? 0: params.counter;
				}

				this.recentListUpdateItem({
					id: params.dialogId,
					counter: params.counter,
				});
				this.recentListRedraw();
				this.BXIM.messenger.updateMessageCount();
			}
			else if (command == 'unreadMessage' || command == 'unreadMessageChat' )
			{
				if (params.lines)
				{
					this.BXIM.linesDetailCounter[params.dialogId] = params.muted? 0: params.counter;
				}
				else
				{
					this.BXIM.dialogDetailCounter[params.dialogId] = params.muted? 0: params.counter;
				}

				this.recentListUpdateItem({
					id: params.dialogId,
					counter: params.counter,
				});
				this.recentListRedraw();
				this.BXIM.messenger.updateMessageCount();
			}
			else if (command == 'readAllChats')
			{
				this.BXIM.messenger.recent.forEach(function(element) {
					element.counter = 0;
				});
				this.recentListRedraw();
				this.BXIM.messenger.updateMessageCount();
			}
			else if (command == 'readMessageChatOpponent')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				if (!this.BXIM.messenger.readedList['chat'+params.chatId])
				{
					this.BXIM.messenger.readedList['chat'+params.chatId] = {};
				}

				this.BXIM.messenger.readedList['chat'+params.chatId][params.userId] = {
					'messageId' : params.lastId,
					'date' : new Date(params.date)
				};

				this.recentListElementStatusChange(params.dialogId, params.chatMessageStatus);
				this.drawReadMessageChat('chat'+params.chatId);
			}
			else if (command == 'readMessageOpponent')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				this.drawReadMessage(params.userId, params.lastId, new Date(params.date));

				if (typeof(this.BXIM.messenger.users[params.userId]) != 'undefined')
				{
					this.BXIM.messenger.users[params.userId].idle = false;
					this.BXIM.messenger.users[params.userId].last_activity_date = new Date();

					if (this.BXIM.messenger.currentTab.toString() == params.userId.toString())
					{
						var getLastDate = BX.MessengerCommon.getUserLastDate(this.BXIM.messenger.users[params.userId]);
						if (this.isMobile())
						{
							BXMobileApp.UI.Page.TopBar.title.setDetailText(getLastDate);
						}
						else if (this.BXIM.messenger.popupMessengerPanelLastDate)
						{
							this.BXIM.messenger.popupMessengerPanelLastDate.innerHTML = getLastDate? '. '+getLastDate: '';
						}
					}
				}
				if (typeof(this.BXIM.messenger.users[params.userId]) != 'undefined')
				{
					this.BXIM.messenger.users[params.userId].idle = false;
					this.BXIM.messenger.users[params.userId].last_activity_date = new Date();

					if (this.BXIM.messenger.currentTab.toString() == params.userId.toString())
					{
						var getLastDate = BX.MessengerCommon.getUserLastDate(this.BXIM.messenger.users[params.userId]);
						if (this.isMobile())
						{
							BXMobileApp.UI.Page.TopBar.title.setDetailText(getLastDate);
						}
						else if (this.BXIM.messenger.popupMessengerPanelLastDate)
						{
							this.BXIM.messenger.popupMessengerPanelLastDate.innerHTML = getLastDate? '. '+getLastDate: '';
						}
					}
				}

				this.recentListElementStatusChange(params.dialogId, params.chatMessageStatus);
			}
			else if (command == 'unreadMessageOpponent')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				var lastMessage = this.BXIM.messenger.popupMessengerBodyWrap? this.BXIM.messenger.popupMessengerBodyWrap.lastChild: null;
				if (lastMessage && BX.hasClass(lastMessage, "bx-messenger-content-item-notify"))
				{
					if (params.userId == this.BXIM.messenger.currentTab || !this.countWriting(this.BXIM.messenger.currentTab))
					{
						BX.remove(lastMessage);
					}
				}
				if (typeof(this.BXIM.messenger.users[params.userId]) != 'undefined')
				{
					this.BXIM.messenger.users[params.userId].idle = false;
					this.BXIM.messenger.users[params.userId].last_activity_date = new Date();

					if (this.BXIM.messenger.currentTab.toString() == params.userId.toString())
					{
						var getLastDate = BX.MessengerCommon.getUserLastDate(this.BXIM.messenger.users[params.userId]);
						if (this.isMobile())
						{
							BXMobileApp.UI.Page.TopBar.title.setDetailText(getLastDate);
						}
						else if (this.BXIM.messenger.popupMessengerPanelLastDate)
						{
							this.BXIM.messenger.popupMessengerPanelLastDate.innerHTML = getLastDate? '. '+getLastDate: '';
						}
					}
				}

				this.recentListElementStatusChange(params.dialogId, params.chatMessageStatus);
			}
			else if (command == 'unreadMessageChatOpponent')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				if (!this.BXIM.messenger.readedList['chat'+params.chatId])
				{
					this.BXIM.messenger.readedList['chat'+params.chatId] = {};
				}
				delete this.BXIM.messenger.readedList['chat'+params.chatId][params.userId];
				this.drawReadMessageChat('chat'+params.chatId);

				if (typeof(this.BXIM.messenger.users[params.userId]) != 'undefined')
				{
					this.BXIM.messenger.users[params.userId].idle = false;
					this.BXIM.messenger.users[params.userId].last_activity_date = new Date();

					if (this.BXIM.messenger.currentTab.toString() == params.userId.toString())
					{
						var getLastDate = BX.MessengerCommon.getUserLastDate(this.BXIM.messenger.users[params.userId]);
						if (this.isMobile())
						{
							BXMobileApp.UI.Page.TopBar.title.setDetailText(getLastDate);
						}
						else if (this.BXIM.messenger.popupMessengerPanelLastDate)
						{
							this.BXIM.messenger.popupMessengerPanelLastDate.innerHTML = getLastDate? '. '+getLastDate: '';
						}
					}
				}
				this.recentListElementStatusChange(params.dialogId, params.chatMessageStatus);
			}
			else if (command == 'startWriting')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				if (this.isBot(params.userId) && !params.DEFERRED && this.BXIM.messenger.showMessage[params.dialogId] && this.BXIM.messenger.showMessage[params.dialogId].length)
				{
					var bot = this.BXIM.messenger.bot[params.userId];
					if (bot.type == 'human')
					{
						var deferredPull = BX.clone({'command': command,'params': params,'extra': extra});
						setTimeout(BX.delegate(function(){
							deferredPull.params.DEFERRED = true;
							if (this.isMobile())
							{
								BX.onCustomEvent(window, "onPull-im", [deferredPull]);
							}
							else
							{
								BX.onCustomEvent(window, "onPullEvent-im", [deferredPull.command, deferredPull.params, deferredPull.extra]);
							}
						}, this), 1000);

						return false;
					}
				}

				if (typeof(this.BXIM.messenger.users[params.userId]) != 'undefined')
				{
					this.BXIM.messenger.users[params.userId].idle = false;
					this.BXIM.messenger.users[params.userId].last_activity_date = new Date();

					if (this.BXIM.messenger.currentTab.toString() == params.userId.toString())
					{
						var getLastDate = BX.MessengerCommon.getUserLastDate(this.BXIM.messenger.users[params.userId]);
						if (this.isMobile())
						{
							BXMobileApp.UI.Page.TopBar.title.setDetailText(getLastDate);
						}
						else if (this.BXIM.messenger.popupMessengerPanelLastDate)
						{
							this.BXIM.messenger.popupMessengerPanelLastDate.innerHTML = getLastDate? '. '+getLastDate: '';
						}
					}
				}

				this.startWriting(params.userId, params.dialogId, params.userName);
			}
			else if (command == 'message' || command == 'messageChat')
			{
				if (this.MobileActionNotEqual('RECENT', 'DIALOG'))
					return false;

				if (
					!params.deferred
					&& this.BXIM.ppStatus
					&& !this.BXIM.ppServerStatus
					&& this.BXIM.lastRecordId >= params.message.id
				)
				{
					return false;
				}

				if (params.message.senderId != this.BXIM.userId)
				{
					BX.onCustomEvent('onImMessageReceive', [{command: command, params: params}]);
				}

				if (this.sendBotCommandBlock[params.message.senderId])
				{
					for (var messageId in this.sendBotCommandBlock[params.message.senderId])
					{
						delete this.sendBotCommandBlock[params.message.senderId][messageId];
						var messageKeyboardBox = BX('im-message-keyboard-'+messageId);
						if (messageKeyboardBox)
						{
							var nodesButton = BX.findChildrenByClassName(messageKeyboardBox, "bx-messenger-keyboard-button-block", false);
							for (var i = 0; i < nodesButton.length; i++)
							{
								BX.removeClass(nodesButton[i], "bx-messenger-keyboard-button-progress");
								BX.removeClass(nodesButton[i], "bx-messenger-keyboard-button-block");
							}
						}
					}
				}

				if (this.isBot(params.message.senderId) && !params.deferred && this.BXIM.messenger.showMessage[params.dialogId] && this.BXIM.messenger.showMessage[params.dialogId].length)
				{
					var bot = this.BXIM.messenger.bot[params.message.senderId];
					if (bot.type == 'human')
					{
						if (params.chat[params.dialogId] && params.chat[params.dialogId].entity_type == 'LINES')
						{
							waitTime = 1000;
						}
						else
						{
							var waitTime = (params.message.text.split(" ").length*300)+1000;
							if (waitTime > 5000)
							{
								waitTime = 5000;
							}
						}

						var deferredPull = BX.clone({'command': command,'params': params,'extra': extra, 'waitTime': waitTime});
						setTimeout(BX.delegate(function(){
							deferredPull.params.deferred = true;
							if (this.isMobile())
							{
								BX.onCustomEvent(window, "onPull-im", [deferredPull]);
							}
							else
							{
								BX.onCustomEvent(window, "onPullEvent-im", [deferredPull.command, deferredPull.params, deferredPull.extra]);
							}
						}, this), waitTime);

						return false;
					}
				}

				//Delete 'writing' message from OL
				if (params.chatId && this.BXIM.messenger.linesWritingList[params.chatId])
				{
					var prevMessageId = this.BXIM.messenger.linesWritingList[params.chatId].id;
					var prevMessage = BX.findChildByClassName(
						this.BXIM.messenger.popupMessengerBodyWrap,
						"bx-messenger-content-item-id-"+prevMessageId
					);
					if (prevMessage)
					{
						BX.remove(prevMessage);
						delete this.BXIM.messenger.linesWritingList[params.chatId];
					}
				}

				var data = {};
				data.SHOW_NEW_MESSAGE = !(params.message.params && params.message.params.NOTIFY === 'N');
				data.MESSAGE = {};
				data.USERS_MESSAGE = {};

				params.message.date = new Date(params.message.date);

				for (var i in params.chat)
				{
					params.chat[i].date_create = new Date(params.chat[i].date_create);
					this.BXIM.messenger.chat[i] = params.chat[i];
				}
				for (var i in params.userInChat)
				{
					this.BXIM.messenger.userInChat[i] = params.userInChat[i];
				}
				for (var i in params.userBlockChat)
				{
					this.BXIM.messenger.userChatBlockStatus[i] = params.userBlockChat[i];
				}
				var userChangeStatus = {};
				for (var i in params.users)
				{
					if (
						this.BXIM.messenger.users[i]
						&& this.BXIM.messenger.users[i].status != params.users[i].status
						&& Math.round(params.message.date.getTime()/1000)+180 > Math.round(new Date()/1000)
					)
					{
						userChangeStatus[i] = this.BXIM.messenger.users[i].status;
						this.BXIM.messenger.users[i].status = params.users[i].status;
					}
				}
				if (this.MobileActionEqual('RECENT'))
				{
					for (var i in userChangeStatus)
					{
						if (!this.BXIM.messenger.users[i])
							continue;

						var elements = BX.findChildrenByClassName(this.BXIM.messenger.recentListExternal, "bx-messenger-cl-id-"+i);
						if (elements != null)
						{
							for (var j = 0; j < elements.length; j++)
							{
								var userStatus = BX.MessengerCommon.getUserStatus(this.BXIM.messenger.users[i]);
								BX.removeClass(elements[j], 'bx-messenger-cl-status-' + userChangeStatus[i]);
								BX.addClass(elements[j], 'bx-messenger-cl-status-' + userStatus);
								elements[j].setAttribute('data-status', userStatus);
							}
						}
						var elements = BX.findChildrenByClassName(this.BXIM.messenger.popupContactListElementsWrap, "bx-messenger-cl-id-"+i);
						if (elements != null)
						{
							for (var j = 0; j < elements.length; j++)
							{
								var userStatus = BX.MessengerCommon.getUserStatus(this.BXIM.messenger.users[i]);
								BX.removeClass(elements[j], 'bx-messenger-cl-status-' + userChangeStatus[i]);
								BX.addClass(elements[j], 'bx-messenger-cl-status-' + userStatus);
								elements[j].setAttribute('data-status', userStatus);
							}
						}
					}
				}
				elements = null;
				data.USERS = params.users;

				if (this.MobileActionEqual('DIALOG'))
				{
					for (var i in params.files)
					{
						if (!this.BXIM.disk.files[params.chatId])
							this.BXIM.disk.files[params.chatId] = {};
						if (this.BXIM.disk.files[params.chatId][i])
							continue;
						params.files[i].date = new Date(params.files[i].date);
						this.BXIM.disk.files[params.chatId][i] = params.files[i];
					}
				}

				if (
					(params.message.templateFileId || params.message.templateId)
					&& params.chatId &&
					this.BXIM.messenger.message[params.message.templateId]
				)
				{
					this.clearProgessMessage(params.message.templateId);

					if (BX('im-message-' + params.message.templateId))
					{
						BX('im-message-' + params.message.templateId).id = 'im-message-' + params.message.id;
						var element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, { attribute: { 'data-messageid': '' + params.message.templateId } }, true);
						if (element)
						{
							element.setAttribute('data-messageid', '' + params.message.id + '');
							if (element.getAttribute('data-blockmessageid') == '' + params.message.templateId)
							{
								element.setAttribute('data-blockmessageid', '' + params.message.id + '');
							}
							BX.removeClass(element, 'bx-messenger-content-item-id-' + params.message.templateId);
							BX.addClass(element, 'bx-messenger-content-item-id-' + params.message.id);
							BX.removeClass(element, 'bx-messenger-content-item-content-progress');
						}
						else
						{
							var element2 = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, { attribute: { 'data-blockmessageid': '' + params.message.templateId } }, true);
							if (element2)
							{
								element2.setAttribute('data-blockmessageid', '' + params.message.id + '');
							}
						}
					}

					var messageKeyboardBox = BX('im-message-keyboard-'+params.message.templateId);
					if (messageKeyboardBox)
					{
						messageKeyboardBox.id = 'im-message-keyboard-'+params.message.id;
					}
					else
					{
						messageKeyboardBox = BX('im-message-keyboard-empty-'+params.message.templateId);
						if (messageKeyboardBox)
						{
							messageKeyboardBox.id = 'im-message-keyboard-empty-'+params.message.id;
						}
					}

					this.BXIM.messenger.message[params.message.id] = params.message;
					delete this.BXIM.messenger.message[params.message.templateId];

					if (!this.BXIM.messenger.showMessage[params.dialogId])
					{
						this.BXIM.messenger.showMessage[params.dialogId] = [];
					}

					this.BXIM.messenger.showMessage[params.dialogId] = this.BXIM.messenger.showMessage[params.dialogId].filter(function(element) {
						return element != params.message.templateId && element != params.message.id;
					});
					this.BXIM.messenger.showMessage[params.dialogId].push(params.message.id.toString());

					if (params.message.templateFileId)
					{
						this.BXIM.disk.files[params.chatId][params.message.templateFileId] = params.files[params.message.params.FILE_ID[0]];
						this.diskRedrawFile(params.chatId, params.message.templateFileId);
					}

					var messageBox = BX('im-message-'+params.message.id);
					messageBox.innerHTML = this.prepareText(params.message.text, true, true, true);

					if (params.message.params)
					{
						if (params.message.params.URL_ONLY == 'Y' && this.BXIM.settings.enableRichLink)
						{
							BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
						}

						if (params.message.params.LARGE_FONT == 'Y' && this.BXIM.settings.enableBigSmile)
						{
							BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-large-font');
						}
						else
						{
							BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-large-font');
						}
						if (params.message.params.ATTACH)
						{
							var attachNode = BX.MessengerCommon.drawAttach(params.message.id, this.BXIM.messenger.message[params.message.id].chatId, params.message.params.ATTACH);
							if (messageBox.nextElementSibling && BX.hasClass(messageBox.nextElementSibling, 'bx-messenger-attach-box'))
							{
								messageBox.nextElementSibling.innerHTML = '';
								if (attachNode.length > 0)
								{
									BX.adjust(messageBox.nextElementSibling, {children: attachNode});
								}
							}
							else if (attachNode.length > 0)
							{
								attachNode = BX.create("div", {props : {className : "bx-messenger-attach-box"}, children : attachNode});
								if (messageBox.nextElementSibling)
								{
									messageBox.parentNode.insertBefore(attachNode, messageBox.nextElementSibling);
								}
								else
								{
									messageBox.parentNode.appendChild(attachNode);
								}
							}
						}
					}
				}
				else
				{
					data.MESSAGE[params.message.id] = params.message;
				}

				this.BXIM.lastRecordId = parseInt(params.message.id) > this.BXIM.lastRecordId? parseInt(params.message.id): this.BXIM.lastRecordId;

				var messageText = params.message.text;
				if (!messageText || messageText.length <= 0)
				{
					if (params.message.params && params.message.params.FILE_ID && params.message.params.FILE_ID.length > 0)
					{
						messageText = '['+BX.message('IM_F_FILE')+']';
					}
					else if (params.message.params && params.message.params.ATTACH && params.message.params.ATTACH.length > 0)
					{
						messageText = '['+BX.message('IM_F_ATTACH')+']';
					}
					else
					{
						messageText = BX.message('IM_M_DELETED');
					}
				}

				if (params.message.senderId == this.BXIM.userId)
				{
					if (this.isMobile())
					{
						if (params.message.params['FILE_ID'] && params.message.params['FILE_ID'].length > 0)
						{
							var skipMessageDraw = false;
							params.message.params['FILE_ID'].forEach(function(fileId){
								if (this.BXIM.disk.messageBlock[fileId])
								{
									delete this.BXIM.disk.messageBlock[fileId];
									skipMessageDraw = true;
								}
							}.bind(this));
							if (skipMessageDraw)
							{
								return ;
							}
						}
					}

					this.readMessage(params.message.recipientId, false, false);

					data.USERS_MESSAGE[params.message.recipientId] = [params.message.id];

					this.updateStateVar(data);

					var lines = params.lines || null;
					if (lines)
					{
						params.lines.date_create = new Date(params.lines.date_create);
					}

					this.recentListAddItem({
						id: params.dialogId,
						chat_id: params.chatId,
						counter: params.counter,
						lines: params.lines,
						message: {
							id: params.message.id,
							date: params.message.date,
							author_id: params.message.senderId,
							status: 'received',
							text: BX.util.htmlspecialchars(params.message.textOriginal),
							attach: params.message.params && params.message.params.ATTACH? params.message.params.ATTACH.length > 0: false,
							file: params.message.params && params.message.params.FILE_ID? params.message.params.FILE_ID.length > 0: false,
						},
					});
					this.recentListRedraw();
					this.BXIM.messenger.updateMessageCount();
				}
				else
				{
					data.UNREAD_MESSAGE = {};
					data.UNREAD_MESSAGE[params.dialogId] = [params.message.id];
					data.USERS_MESSAGE[params.dialogId] = [params.message.id];

					if (command == 'message')
						this.endWriting(params.message.senderId, 0, false);
					else
						this.endWriting(params.message.senderId, params.message.recipientId, false);

					var externalListMessage = null;
					if (typeof params.message.params.CODE !== 'undefined')
					{
						if (
							params.message.params.CODE === 'USER_JOIN'
							&& BX.MessengerExternalList
							&& BX.MessengerExternalList.canShowMessage(params.dialogId)
						)
						{
							data.SHOW_NEW_MESSAGE = false;
							externalListMessage = {
								dialogId: params.dialogId,
								title: BX.util.htmlspecialcharsback(params.users[params.dialogId].name),
								text: params.message.text
							};
						}
						else if (
							params.message.params.CODE === 'USER_JOIN_GENERAL'
							&& BX.MessengerExternalList
							&& BX.MessengerExternalList.canShowMessage(params.message.senderId)
						)
						{
							data.SHOW_NEW_MESSAGE = false;
							externalListMessage = {
								dialogId: params.dialogId,
								title: BX.util.htmlspecialcharsback(params.users[params.message.senderId].name),
								text: params.message.text
							};
						}
					}

					this.updateStateVar(data);

					if (command == 'messageChat' && !BX.MessengerCommon.userInChat(params.message.chatId))
					{
						if (this.isMobile())
						{
							var isLines = this.BXIM.currentTab.toString().substr(0,4) === 'chat'
								&& this.BXIM.messenger.chat[this.BXIM.currentTab.substr(4)]
								&& this.BXIM.messenger.chat[this.BXIM.currentTab.substr(4)].type === 'lines';
							if (isLines)
							{
								BX.MessengerCommon.hideLinesKeyboard();
							}
						}

						return ;
					}

					var lines = params.lines || null;
					if (lines)
					{
						params.lines.date_create = new Date(params.lines.date_create);
					}

					this.recentListAddItem({
						id: params.dialogId,
						chat_id: params.chatId,
						counter: params.counter,
						lines: lines,
						message: {
							id: params.message.id,
							date: params.message.date,
							author_id: params.message.senderId,
							status: 'delivered',
							text: BX.util.htmlspecialchars(params.message.textOriginal),
							attach: params.message.params && params.message.params.ATTACH? params.message.params.ATTACH.length > 0: false,
							file: params.message.params && params.message.params.FILE_ID? params.message.params.FILE_ID.length > 0: false,
						},
					});
					this.recentListRedraw();
					this.BXIM.messenger.updateMessageCount();

					if (externalListMessage && BX.MessengerExternalList)
					{
						BX.MessengerExternalList.showMessage(externalListMessage);
					}

					if (
						this.BXIM.messenger.currentTab == params.dialogId
						&& this.BXIM.isFocus()
					)
					{
						this.readMessage(params.dialogId, true, true);
					}
				}
			}
			else if (command == 'messageDeleteComplete')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (!this.BXIM.messenger.message[params.id])
					return false;

				var dialogId = 0;
				if (params.type == 'private')
				{
					dialogId = params.fromUserId == this.BXIM.userId && params.toUserId? params.toUserId: params.fromUserId;
					this.endWriting(dialogId, 0, false);
				}
				else
				{
					dialogId = 'chat' + params.chatId;
					this.endWriting(params.senderId, dialogId, false);
				}

				if (this.BXIM.messenger.currentTab == dialogId && BX('im-message-'+params.id))
				{
					var messageWrap = BX('im-message-'+params.id).parentNode.parentNode.parentNode.parentNode.parentNode;
					if (messageWrap.getAttribute('data-messageId') == messageWrap.getAttribute('data-blockMessageId'))
					{
						BX.remove(messageWrap);
					}
					else
					{
						messageWrap = BX('im-message-'+params.id).parentNode;
						if (messageWrap.nextSibling && BX.hasClass(messageWrap.nextSibling, 'bx-messenger-hr'))
						{
							BX.remove(messageWrap.nextSibling);
						}
						else if (!messageWrap.nextSibling && BX.hasClass(messageWrap.previousSibling, 'bx-messenger-hr'))
						{
							BX.remove(messageWrap.previousSibling);
						}
						BX.remove(messageWrap);
					}
				}
				this.recentListElementUpdate(dialogId, params.id, params.text);
				if (this.BXIM.messenger.recentList || this.BXIM.messenger.recentListExternal)
					this.recentListRedraw();

				delete this.BXIM.messenger.message[params.id];
				this.BXIM.messenger.showMessage[dialogId].sort(BX.delegate(function(i, ii) {if (!this.BXIM.messenger.message[i] || !this.BXIM.messenger.message[ii]){return 0;} var i1 = this.BXIM.messenger.message[i].date.getTime(); var i2 = this.BXIM.messenger.message[ii].date.getTime(); if (i1 < i2) { return -1; } else if (i1 > i2) { return 1;} else{ if (i < ii) { return -1; } else if (i > ii) { return 1;}else{ return 0;}}}, this));
			}
			else if (command == 'messageUpdate' || command == 'messageDelete')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				for (var botId in this.sendBotCommandBlock)
				{
					if (this.sendBotCommandBlock[botId][params.id])
					{
						delete this.sendBotCommandBlock[botId][params.id];
						var messageKeyboardBox = BX('im-message-keyboard-'+params.id);
						if (messageKeyboardBox)
						{
							var nodesButton = BX.findChildrenByClassName(messageKeyboardBox, "bx-messenger-keyboard-button-block", false);
							for (var i = 0; i < nodesButton.length; i++)
							{
								BX.removeClass(nodesButton[i], "bx-messenger-keyboard-button-progress");
								BX.removeClass(nodesButton[i], "bx-messenger-keyboard-button-block");
							}
						}
					}
				}

				if (this.BXIM.messenger.message[params.id])
				{
					if (!this.BXIM.messenger.message[params.id].params)
						this.BXIM.messenger.message[params.id].params = {};

					var dialogId = 0;
					if (command == 'messageDelete')
					{
						params.text = BX.message('IM_M_DELETED');
						if (!this.BXIM.messenger.message[params.id].params)
						{
							this.BXIM.messenger.message[params.id].params = {};
						}
						this.BXIM.messenger.message[params.id].params.IS_DELETED = 'Y';
					}
					else if (command == 'messageUpdate')
					{
						this.BXIM.messenger.message[params.id].params = params.params;
					}

					this.BXIM.messenger.message[params.id].text = BX.MessengerCommon.prepareText(params.text, true, true, true);
					this.BXIM.messenger.message[params.id].textOriginal = params.text;

					if (params.type == 'private')
					{
						dialogId = params.fromUserId == this.BXIM.userId && params.toUserId? params.toUserId: params.fromUserId;
						this.endWriting(dialogId, 0, false);
					}
					else
					{
						dialogId = 'chat' + params.chatId;
						this.endWriting(params.senderId, dialogId, false);
					}

					this.recentListElementUpdate(dialogId, params.id, params.text);

					if (this.BXIM.messenger.currentTab == dialogId && BX('im-message-'+params.id))
					{
						var messageBox = BX('im-message-'+params.id);

						if (params.params && params.params.IS_EDITED == 'Y')
						{
							BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-message-edited');
						}

						var textAlreadyUpdated = false;

						if (command == 'messageDelete')
						{
							BX.addClass(messageBox.parentNode, 'bx-messenger-message-deleted');
							var keyboadBox = BX('im-message-keyboard-'+params.id);
							BX.remove(keyboadBox);
							BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
						}
						else if (command == 'messageUpdate')
						{
							if (params.params)
							{
								if (params.params.DATE_TEXT)
								{
									var newText = this.replaceDateText(params.id, this.BXIM.messenger.message[params.id].text, params.params);
									messageBox.innerHTML = this.prepareText(newText, false, true, true);
									textAlreadyUpdated = true;
								}
								if (params.params.IS_EDITED == 'Y')
								{
									BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-without-padding');
								}
								if (params.params.URL_ONLY == 'Y' && this.BXIM.settings.enableRichLink)
								{
									BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
								}
								else
								{
									BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
								}
								if (params.params.LARGE_FONT == 'Y' && this.BXIM.settings.enableBigSmile)
								{
									BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-large-font');
								}
								else
								{
									BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-large-font');
								}
								if (params.params.ATTACH)
								{
									var attachNode = BX.MessengerCommon.drawAttach(params.id, this.BXIM.messenger.message[params.id].chatId, params.params.ATTACH);
									if (messageBox.nextElementSibling && BX.hasClass(messageBox.nextElementSibling, 'bx-messenger-attach-box'))
									{
										messageBox.nextElementSibling.innerHTML = '';
										if (attachNode.length > 0)
										{
											BX.adjust(messageBox.nextElementSibling, {children: attachNode});
										}
									}
									else if (attachNode.length > 0)
									{
										attachNode = BX.create("div", {props : {className : "bx-messenger-attach-box"}, children : attachNode});
										if (messageBox.nextElementSibling)
										{
											messageBox.parentNode.insertBefore(attachNode, messageBox.nextElementSibling);
										}
										else
										{
											messageBox.parentNode.appendChild(attachNode);
										}
									}
								}
								if (params.params.KEYBOARD)
								{
									var keyboardNode = BX.MessengerCommon.drawKeyboard(this.BXIM.messenger.currentTab, params.id, params.params.KEYBOARD);

									var messageKeyboardBox = BX('im-message-keyboard-'+params.id);
									if (!messageKeyboardBox)
									{
										messageKeyboardBox = BX('im-message-keyboard-empty-'+params.id);
										messageKeyboardBox.id = 'im-message-keyboard-'+params.id;
										messageKeyboardBox.className = 'bx-messenger-keyboard';
									}
									if (messageKeyboardBox)
									{
										messageKeyboardBox.innerHTML = keyboardNode? keyboardNode.innerHTML: "";
									}
								}
							}
							else if (typeof(params.params) != 'undefined' && params.params == '')
							{
								if (messageBox.nextElementSibling && BX.hasClass(messageBox.nextElementSibling, 'bx-messenger-attach-box'))
								{
									BX.remove(messageBox.nextElementSibling);
								}
							}
						}

						if (!textAlreadyUpdated)
						{
							messageBox.innerHTML = BX.MessengerCommon.prepareText(this.BXIM.messenger.message[params.id].text, true, true, true);
						}

						BX.addClass(messageBox, 'bx-messenger-message-edited-anim');
						if (
							messageBox.previousSibling
							&& (
								BX.hasClass(messageBox.previousSibling, 'bx-messenger-file-box')
								|| params.params && params.params.ATTACH
							)
						)
						{
							BX.addClass(messageBox.previousSibling, 'bx-messenger-file-box-with-message');
						}
						setTimeout(BX.delegate(function(){
							BX.removeClass(messageBox, 'bx-messenger-message-edited-anim');
						}, this), 1000);
					}

					if (this.BXIM.messenger.recentList || this.BXIM.messenger.recentListExternal)
						this.recentListRedraw();
				}
			}
			else if (command == 'messageParamsUpdate')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				if (!this.BXIM.messenger.message[params.id])
					return false;

				if (this.BXIM.messenger.message[params.id].params && this.BXIM.messenger.message[params.id].params.IS_DELETED == 'Y')
					return false;

				var animation = typeof(params.animation) == 'undefined'? null: params.animation;

				for (var botId in this.sendBotCommandBlock)
				{
					if (this.sendBotCommandBlock[botId][params.id])
					{
						delete this.sendBotCommandBlock[botId][params.id];
						var messageKeyboardBox = BX('im-message-keyboard-'+params.id);
						if (messageKeyboardBox)
						{
							var nodesButton = BX.findChildrenByClassName(messageKeyboardBox, "bx-messenger-keyboard-button-block", false);
							for (var i = 0; i < nodesButton.length; i++)
							{
								BX.removeClass(nodesButton[i], "bx-messenger-keyboard-button-progress");
								BX.removeClass(nodesButton[i], "bx-messenger-keyboard-button-block");
							}
						}
					}
				}

				this.BXIM.messenger.message[params.id].params = params.params;

				if (params.type == 'private')
				{
					dialogId = params.fromUserId == this.BXIM.userId? params.toUserId: params.fromUserId;
				}
				else
				{
					dialogId = 'chat' + params.chatId;
				}

				var messageBox = BX('im-message-'+params.id);
				if (this.BXIM.messenger.currentTab == dialogId && messageBox)
				{
					var messageFullBox = messageBox.parentNode.parentNode.parentNode.parentNode.parentNode;
					if (params.params)
					{
						if (params.params.DATE_TEXT)
						{
							var newText = this.replaceDateText(params.id, this.BXIM.messenger.message[params.id].text, params.params);
							messageBox.innerHTML = this.prepareText(newText, false, true, true);
						}

						if (params.params.FILE_ID)
						{
							var filesNode = BX.MessengerCommon.diskDrawFiles(this.BXIM.messenger.message[params.id].chatId, params.params.FILE_ID);
							if (messageBox.previousElementSibling && BX.hasClass(messageBox.previousElementSibling, 'bx-messenger-file-box'))
							{
								messageBox.previousElementSibling.innerHTML = '';
								if (filesNode.length > 0)
								{
									BX.adjust(messageBox.previousElementSibling, {children: filesNode});
								}
							}
							else if (filesNode.length > 0)
							{
								var filesNodeWithText = params.text != '' || params.params && params.params.ATTACH;
								filesNode = BX.create("div", { props : { className : "bx-messenger-file-box"+(filesNodeWithText? ' bx-messenger-file-box-with-message':'') }, children: filesNode});
								if (messageBox.previousElementSibling)
								{
									messageBox.parentNode.insertBefore(filesNode, messageBox.previousElementSibling);
								}
								else
								{
									messageBox.parentNode.insertBefore(filesNode, messageBox);
								}
							}

							if ((messageBox.innerHTML != '' || params.params && params.params.ATTACH) && messageBox.previousElementSibling && BX.hasClass(messageBox.previousElementSibling, 'bx-messenger-file-box'))
							{
								BX.addClass(messageBox.previousElementSibling, 'bx-messenger-file-box-with-message');
							}
						}
						if (params.params.ATTACH)
						{
							var attachNode = BX.MessengerCommon.drawAttach(params.id, this.BXIM.messenger.message[params.id].chatId, params.params.ATTACH);
							if (messageBox.nextElementSibling && BX.hasClass(messageBox.nextElementSibling, 'bx-messenger-attach-box'))
							{
								messageBox.nextElementSibling.innerHTML = '';
								if (attachNode.length > 0)
								{
									BX.adjust(messageBox.nextElementSibling, {children: attachNode});
								}
							}
							else if (attachNode.length > 0)
							{
								attachNode = BX.create("div", {props : {className : "bx-messenger-attach-box"}, children : attachNode});
								if (messageBox.nextElementSibling)
								{
									messageBox.parentNode.insertBefore(attachNode, messageBox.nextElementSibling);
								}
								else
								{
									messageBox.parentNode.appendChild(attachNode);
								}
							}
							if (animation != 'N')
							{
								animation = 'Y';
							}
						}
						if (params.params.KEYBOARD)
						{
							var keyboardNode = BX.MessengerCommon.drawKeyboard(this.BXIM.messenger.currentTab, params.id, params.params.KEYBOARD);

							var messageKeyboardBox = BX('im-message-keyboard-'+params.id);
							if (!messageKeyboardBox)
							{
								messageKeyboardBox = BX('im-message-keyboard-empty-'+params.id);
								messageKeyboardBox.id = 'im-message-keyboard-'+params.id;
								messageKeyboardBox.className = 'bx-messenger-keyboard';
							}
							if (messageKeyboardBox)
							{
								messageKeyboardBox.innerHTML = keyboardNode? keyboardNode.innerHTML: "";
							}
							if (animation != 'N')
							{
								animation = 'Y';
							}
						}
						if (params.params.CHAT_USER || params.params.CHAT_ID || params.params.CHAT_MESSAGE || params.params.CHAT_LAST_DATE)
						{
							var messageContentReplyBox = BX('im-message-content-reply-'+params.id);
							var contentReplyNode = BX.MessengerCommon.drawMessageReply(params.id);
							if (messageContentReplyBox)
							{
								messageContentReplyBox.innerHTML = contentReplyNode? contentReplyNode.innerHTML: "";
							}
						}

						if (params.params && params.params.URL_ONLY == 'Y' && this.BXIM.settings.enableRichLink)
						{
							BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
						}
						else if (params.params && params.params.URL_ONLY == 'N')
						{
							BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
						}

						if (params.params && params.params.LARGE_FONT == 'Y' && this.BXIM.settings.enableBigSmile)
						{
							BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-large-font');
						}
						else if (params.params && params.params.LARGE_FONT == 'N')
						{
							BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-large-font');
						}

						if (params.params && params.params.IS_EDITED == 'Y')
						{
							BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-without-padding');
							BX.addClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-message-edited');
							if (animation != 'N')
							{
								animation = 'Y';
							}
						}
					}
					else if (typeof(params.params) != 'undefined' && params.params == '')
					{
						if (messageBox.nextElementSibling && BX.hasClass(messageBox.nextElementSibling, 'bx-messenger-attach-box'))
						{
							BX.remove(messageBox.nextElementSibling);
							if (animation != 'N')
							{
								animation = 'Y';
							}
						}
					}
					if (params.params && typeof(params.params.CLASS) != 'undefined')
					{
						var messageParentBox = BX.findParent(messageBox, {className: 'bx-messenger-content-item'});
						BX.addClass(messageParentBox, params.params.CLASS);
					}
					if (params.params && params.params.IS_DELIVERED)
					{
						if (params.params.IS_DELIVERED == 'N')
						{
							this.drawProgessMessage(params.id);
						}
						else
						{
							this.clearProgessMessage(params.id);
						}
					}
					if (params.params && params.params.SENDING)
					{
						if (params.params.SENDING == 'Y')
						{
							this.drawProgessMessage(params.id);
						}
						else
						{
							this.clearProgessMessage(params.id);
						}
					}
					if (params.params.IMOL_SID && parseInt(params.params.IMOL_SID) > 0)
					{
						var extraBox = BX.findChildByClassName(messageFullBox, "bx-messenger-message-extra");
						if (!extraBox)
						{
							messageFullBox.insertBefore(BX.create("div", {
								props : { className : "bx-messenger-message-extra"},
								html: BX.message('IM_OL_DIALOG_NUMBER').replace("#NUMBER#", params.params.IMOL_SID)}
							), messageFullBox.firstChild);

							if (this.isElementVisibleOnScreen(messageFullBox, BXIM.messenger.popupMessengerBody))
							{
								this.linesBodyScroll()
							}
						}
					}
					if (params.params.IMOL_FORM && this.BXIM.messenger.chat[params.chatId] && this.BXIM.messenger.chat[params.chatId].type == 'livechat')
					{
						var delay = params.params.IMOL_FORM.toString().substr(-6) == '-delay';
						var formType = delay? params.params.IMOL_FORM.substr(0, params.params.IMOL_FORM.lastIndexOf('-delay')): params.params.IMOL_FORM;

						if (this.BXIM.messenger.popupMessengerLiveChatDelayedFormMid < params.id && this.BXIM.messenger.popupMessengerLiveChatFormType != formType)
						{
							this.BXIM.messenger.popupMessengerLiveChatDelayedFormMid = params.id;
							this.BXIM.messenger.linesLivechatFormHide();

							clearTimeout(this.BXIM.messenger.popupMessengerLiveChatActionTimeout);
							this.BXIM.messenger.popupMessengerLiveChatActionTimeout = setTimeout(BX.delegate(function() {
								this.BXIM.messenger.linesLivechatFormShow(formType);
							}, this), delay? 30000: 5000);
						}
					}
					if (params.params.IMOL_VOTE && messageBox)
					{
						var voteNode = this.linesVoteDraw(params.id);
						if (voteNode)
						{
							BX.cleanNode(messageBox);
							messageBox.appendChild(voteNode);
						}
						if (animation != 'N')
						{
							animation = 'Y';
						}
					}
					else if (typeof(params.params.IMOL_VOTE_SID) != 'undefined' && messageBox)
					{
						var messageText = BX.findChildByClassName(messageBox, "bx-messenger-content-item-vote-message-text");
						if (messageText)
						{
							var voteNode = this.linesVoteResultDraw(params.id, messageText.innerHTML);
							if (voteNode)
							{
								BX.cleanNode(messageBox);
								messageBox.appendChild(voteNode);
							}
						}
					}

					if (animation == 'Y')
					{
						BX.addClass(messageBox, 'bx-messenger-message-edited-anim');
						setTimeout(BX.delegate(function(){
							BX.removeClass(messageBox, 'bx-messenger-message-edited-anim');
						}, this), 1000);
					}
				}
			}
			else if (command == 'messageLike')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				var iLikeThis = BX.util.in_array(this.BXIM.userId, params.users);
				var likeCount = params.users.length > 0? params.users.length: '';

				if  (!this.BXIM.messenger.message[params.id])
				{
					return false;
				}

				if (typeof(this.BXIM.messenger.message[params.id].params) != 'object')
				{
					this.BXIM.messenger.message[params.id].params = {};
				}

				this.BXIM.messenger.message[params.id].params.LIKE = params.users;

				if (BX('im-message-'+params.id))
				{
					var element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-blockmessageid': ''+params.id+''}}, false);
					if (element)
					{
						var elementLike = BX.findChildByClassName(element, "bx-messenger-content-item-like");
						if (elementLike)
						{
							var elementLikeDigit = BX.findChildByClassName(elementLike, "bx-messenger-content-like-digit", false);
							var elementLikeButton = BX.findChildByClassName(elementLike, "bx-messenger-content-like-button", false);

							if (iLikeThis)
							{
								BX.addClass(elementLike, 'bx-messenger-content-item-liked');
							}
							else
							{
								BX.removeClass(elementLike, 'bx-messenger-content-item-liked');
							}

							if (likeCount>0)
							{
								elementLikeDigit.setAttribute('title', BX.message('IM_MESSAGE_LIKE_LIST'));
								BX.removeClass(elementLikeDigit.parentNode, 'bx-messenger-content-like-digit-off');
							}
							else
							{
								elementLikeDigit.setAttribute('title', '');
								BX.addClass(elementLikeDigit.parentNode, 'bx-messenger-content-like-digit-off');
							}

							if (elementLikeDigit.innerHTML < likeCount)
							{
								var elementContent = BX.findChildByClassName(element, "bx-messenger-content-item-content", false);
								BX.addClass(elementContent, 'bx-messenger-content-item-plus-like');
								setTimeout(function(){
									BX.removeClass(elementContent, 'bx-messenger-content-item-plus-like');
								}, 500);
							}
							elementLikeDigit.innerHTML = likeCount;
						}
					}
				}
			}
			else if (command == 'promotionRead')
			{
				if (BX.MessengerPromo)
				{
					BX.MessengerPromo.read(params.id);
				}
			}
			else if (command == 'fileUpload')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				if (this.BXIM.disk.filesProgress[params.fileTmpId])
					return false;

				params.fileParams.date = new Date(params.fileParams.date);
				if (this.BXIM.disk.files[params.fileChatId] && this.BXIM.disk.files[params.fileChatId][params.fileId])
				{
					params.fileParams['preview'] = this.BXIM.disk.files[params.fileChatId][params.fileId]['preview'];
				}
				if (!this.BXIM.disk.files[params.fileChatId])
					this.BXIM.disk.files[params.fileChatId] = {};

				this.BXIM.disk.files[params.fileChatId][params.fileId] = params.fileParams;
				this.diskRedrawFile(params.fileChatId, params.fileId);

				if (this.BXIM.messenger.popupMessengerBody && BX.MessengerCommon.enableScroll(this.BXIM.messenger.popupMessengerBody, this.BXIM.messenger.popupMessengerBody.offsetHeight))
				{
					if (this.isMobile() && document.body.offsetHeight <= window.innerHeight)
					{
						this.BXIM.messenger.popupMessengerBody.scrollTop = 0;
					}
					else if (this.BXIM.animationSupport)
					{
						if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
							this.BXIM.messenger.popupMessengerBodyAnimation.stop();
						(this.BXIM.messenger.popupMessengerBodyAnimation = new BX.easing({
							duration : 800,
							start : { scroll : this.BXIM.messenger.popupMessengerBody.scrollTop },
							finish : { scroll : this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1)},
							transition : BX.easing.makeEaseInOut(BX.easing.transitions.quart),
							step : BX.delegate(function(state){
								this.BXIM.messenger.popupMessengerBody.scrollTop = state.scroll;
							}, this)
						})).animate();
					}
					else if (this.BXIM.messenger.popupMessengerBody)
					{
						this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
					}
				}
			}
			else if (command == 'fileUnRegister')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				for (var id in params.files)
				{
					if (this.BXIM.disk.filesRegister[params.chatId])
					{
						delete this.BXIM.disk.filesRegister[params.chatId][params.files[id]];
					}
					if (this.BXIM.disk.files[params.chatId] && this.BXIM.disk.files[params.chatId][params.files[id]])
					{
						this.BXIM.disk.files[params.chatId][params.files[id]].status = 'error';
						BX.MessengerCommon.diskRedrawFile(params.chatId, params.files[id]);
					}
					delete this.BXIM.disk.filesProgress[id];
				}
				this.drawTab(this.getRecipientByChatId(params.chatId));
			}
			else if (command == 'fileDelete')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				delete this.BXIM.disk.files[params.chatId][params.fileId];

				this.drawTab(this.getRecipientByChatId(params.chatId));
			}
			else if (command == 'dialogChange')
			{
				if (!this.BXIM.isOpen() || !this.BXIM.isFocus())
				{
					return false;
				}

				this.BXIM.openMessenger(params.dialogId);
			}
			else if (command == 'chatRename')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (this.BXIM.messenger.chat[params.chatId])
				{
					this.BXIM.messenger.chat[params.chatId].name = BX.util.htmlspecialchars(params.name);
					this.BXIM.messenger.redrawChatHeader();
				}
			}
			else if (command == 'chatAvatar')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;
				this.BXIM.messenger.updateChatAvatar(params.chatId, params.avatar);
			}
			else if (command == 'chatChangeColor')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (this.BXIM.messenger.chat[params.chatId])
				{
					this.BXIM.messenger.chat[params.chatId].color = params.color;
					this.BXIM.messenger.redrawChatHeader();
				}
			}
			else if (command == 'chatHide')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				this.recentListHide(params.dialogId, false);

				if (!this.isMobile() && params.dialogId == this.BXIM.messenger.currentTab)
				{
					BX.MessengerCommon.dialogCloseCurrent();
				}

				this.BXIM.messenger.updateMessageCount();
			}
			else if (command == 'chatShow')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
				{
					return false;
				}

				var recent = this.recentListElementFormat(params);

				delete this.BXIM.messenger.showMessage[recent.id];
				delete this.BXIM.messenger.history[recent.id];

				if (!this.isMobile() && params.id == this.BXIM.messenger.currentTab)
				{
					this.BXIM.messenger.openMessenger(params.id);
				}

				this.recentListAddItem(recent);
				this.recentListRedraw();
				this.BXIM.messenger.updateMessageCount();

				var hasActiveSharing = BX.MessengerCalls && BX.MessengerCalls.hasActiveSharing();

				if (
					this.BXIM.settings.status != 'dnd'
					&& this.BXIM.notify.muteModeCode <= 0
					&& !hasActiveSharing
					&& recent.message.id > 0
					&& !this.BXIM.messenger.message[recent.message.id]
					&& recent.counter > 0
				)
				{
					this.BXIM.messenger.message[recent.message.id] = {
						id: recent.message.id,
						chatId: recent.chat_id,
						date: recent.message.date,
						messageType: (recent.type === 'user'? 'P': (recent.lines? 'L': 'C')),
						params: {},
						recipientId: recent.id,
						senderId: recent.message.author_id,
						text: recent.message.text,
						textOriginal: recent.message.text,
						fake: true,
					};
					if (!this.BXIM.messenger.flashMessage[recent.id])
					{
						this.BXIM.messenger.flashMessage[recent.id] = {};
					}
					this.BXIM.messenger.flashMessage[recent.id][recent.message.id] = true;
					this.BXIM.messenger.newMessage();
				}
			}
			else if (command == 'chatMuteNotify')
			{
				if (params.lines)
				{
					this.BXIM.linesDetailCounter[params.dialogId] = params.muted? 0: params.counter;
				}
				else
				{
					this.BXIM.dialogDetailCounter[params.dialogId] = params.muted? 0: params.counter;
				}

				this.BXIM.messenger.updateMessageCount();
				this.muteMessageChat(params.dialogId, params.mute, false);
			}
			else if (command == 'chatPin')
			{
				if (this.MobileActionNotEqual('RECENT'))
					return false;

				this.recentListElementPin(params.dialogId, params.active);
			}
			else if (command == 'chatUnread')
			{
				if (params.lines)
				{
					this.BXIM.linesDetailCounter[params.dialogId] = params.muted? 0: (params.counter? params.counter: 1);
				}
				else
				{
					this.BXIM.dialogDetailCounter[params.dialogId] = params.muted? 0: (params.counter? params.counter: 1);
				}

				this.recentListUpdateItem({
					id: params.dialogId,
					unread: params.active,
				});
				this.recentListRedraw();
				this.BXIM.messenger.updateMessageCount();
			}
			else if (command == 'chatUserAdd')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				for (var i in params.users)
				{
					params.users[i].last_activity_date = params.users[i].last_activity_date? new Date(params.users[i].last_activity_date): false;
					params.users[i].mobile_last_date = params.users[i].mobile_last_date? new Date(params.users[i].mobile_last_date): false;
					params.users[i].idle = params.users[i].idle? new Date(params.users[i].idle): false;
					params.users[i].absent = params.users[i].absent? new Date(params.users[i].absent): false;

					this.BXIM.messenger.users[i] = params.users[i];
				}

				if (!this.BXIM.messenger.chat[params.chatId])
				{
					this.BXIM.messenger.chat[params.chatId] = {'id': params.chatId, 'name': params.chatId, 'owner': params.chatOwner, 'extranet': params.chatExtranet, 'fake': true, date_create: ''};
				}
				else
				{
					this.BXIM.messenger.chat[params.chatId].extranet = params.chatExtranet;
					if (this.BXIM.messenger.userInChat[params.chatId])
					{
						for (i = 0; i < params.newUsers.length; i++)
							this.BXIM.messenger.userInChat[params.chatId].push(params.newUsers[i]);
					}
					else
						this.BXIM.messenger.userInChat[params.chatId] = params.newUsers;

					this.BXIM.messenger.redrawChatHeader();
				}
			}
			else if (command == 'chatOwner')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (!this.BXIM.messenger.chat[params.chatId])
					return false;

				this.BXIM.messenger.chat[params.chatId].owner = params.userId;

				if (
					!this.isMobile()
					&& this.BXIM.messenger.currentTab == 'chat'+params.chatId
				)
				{
					this.BXIM.messenger.redrawChatHeader();
				}
			}
			else if (command == 'chatManagers')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (!this.BXIM.messenger.chat[params.chatId])
					return false;

				this.BXIM.messenger.chat[params.chatId].manager_list = params.list;

				if (this.BXIM.messenger.currentTab == params.dialogId)
				{
					this.BXIM.messenger.redrawChatHeader();
				}
			}
			else if (command == 'chatUserLeave')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (params.userId == this.BXIM.userId)
				{
					this.readMessage('chat'+params.chatId, true, false, true);
					this.leaveFromChat(params.chatId, false);

					if (
						this.BXIM.callController
						&& this.BXIM.callController.hasActiveCall()
						&& this.BXIM.callController.currentCall.associatedEntity.id == 'chat'+params.chatId
					)
					{
						this.BXIM.callController.currentCall.hangup();
					}
				}
				else if (this.MobileActionEqual('DIALOG'))
				{
					if (!this.BXIM.messenger.chat[params.chatId] || !this.BXIM.messenger.userInChat[params.chatId])
						return false;

					var newStack = [];
					for (var i = 0; i < this.BXIM.messenger.userInChat[params.chatId].length; i++)
						if (this.BXIM.messenger.userInChat[params.chatId][i] != params.userId)
							newStack.push(this.BXIM.messenger.userInChat[params.chatId][i]);

					this.BXIM.messenger.userInChat[params.chatId] = newStack;
					this.BXIM.messenger.redrawChatHeader();
				}
			}
			else if (command == 'chatUpdateParams')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (!this.BXIM.messenger.chat[params.chatId])
					return false;

				for (var name in params.params)
				{
					if (!params.params.hasOwnProperty(name))
					{
						continue;
					}

					this.BXIM.messenger.chat[params.chatId][name] = params.params[name];

					if (
						name == 'entity_data_1'
						&& this.BXIM.messenger.chat[params.chatId].type == 'livechat'
					)
					{
						var session = this.livechatGetSession(params.chatId);
						session.readedTime = session.readedTime? new Date(session.readedTime): false;
						this.drawReadMessage('chat'+params.chatId, session.readedId, session.readedTime);

						if (session.showForm == 'N')
						{
							if (!this.BXIM.messenger.popupMessengerLiveChatLastSend || this.BXIM.messenger.popupMessengerLiveChatLastSend+1000 < +(new Date()))
							{
								this.BXIM.messenger.linesLivechatFormHide();
							}
						}
					}
				}

				if (this.BXIM.messenger.currentTab == params.dialogId)
				{
					this.BXIM.messenger.redrawChatHeader();
				}

				if (this.MobileActionEqual('RECENT') && (this.BXIM.messenger.recentList || this.BXIM.messenger.recentListExternal))
				{
					this.recentListRedraw();
				}
			}
			else if (command == 'botAdd' || command == 'botUpdate')
			{
				if (this.BXIM.userExtranet)
					return false;

				this.BXIM.messenger.bot[params.bot.id] = params.bot;

				params.user.last_activity_date = params.user.last_activity_date? new Date(params.user.last_activity_date): false;
				params.user.mobile_last_date = params.user.mobile_last_date? new Date(params.user.mobile_last_date): false;
				params.user.idle = params.user.idle? new Date(params.user.idle): false;
				params.user.absent = params.user.absent? new Date(params.user.absent): false;

				this.BXIM.messenger.users[params.user.id] = params.user;


				if (typeof(params.userInGroup) != "undefined")
				{
					for (var i in params.userInGroup)
					{
						if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
						{
							this.BXIM.messenger.userInGroup[i] = params.userInGroup[i];
						}
						else
						{
							for (var j = 0; j < params.userInGroup[i].users.length; j++)
								this.BXIM.messenger.userInGroup[i].users.push(params.userInGroup[i].users[j]);

							this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
						}
					}
				}
			}
			else if (command == 'botDelete')
			{
				if (this.BXIM.messenger.bot[params.botId])
				{
					delete this.BXIM.messenger.bot[params.botId];
				}
				if (this.BXIM.messenger.users[params.botId])
				{
					delete this.BXIM.messenger.users[params.botId];
				}
				this.recentListHide(params.botId, false);

				if (this.BXIM.messenger.currentTab == params.botId)
				{
					this.BXIM.messenger.openMessenger('general');
				}
			}
			else if (command == 'userInvite')
			{
				if (!this.BXIM.settings.viewCommonUsers)
				{
					return false;
				}
				this.BXIM.messenger.users[params.user.id] = params.user;

				this.recentListAddItem({
					id: params.user.id,
					invited: params.invited,
					message: {text: ''}
				});

				this.recentListRedraw();
			}
			else if (command == 'userUpdate' || command == 'updateUser')
			{
				params.user.last_activity_date = params.user.last_activity_date? new Date(params.user.last_activity_date): false;
				params.user.mobile_last_date = params.user.mobile_last_date? new Date(params.user.mobile_last_date): false;
				params.user.idle = params.user.idle? new Date(params.user.idle): false;
				params.user.absent = params.user.absent? new Date(params.user.absent): false;

				this.BXIM.messenger.users[params.user.id] = params.user;
				this.BXIM.messenger.redrawChatHeader();
			}
			else if (command == 'notifyAdd')
			{
				if (this.MobileActionNotEqual('NOTIFY'))
					return false;

				params.date = new Date(params.date);
				params.text = BX.MessengerCommon.prepareText(params.text, true, true, false);

				var data = {};
				data.UNREAD_NOTIFY = {};
				data.UNREAD_NOTIFY[params.id] = [params.id];
				this.BXIM.messenger.notify.notify[params.id] = params;

				if (
					this.BXIM.ppStatus && !this.BXIM.ppServerStatus
					&& this.BXIM.lastRecordId >= params.message.id
				)
				{
					this.BXIM.messenger.notify.flashNotify[params.id] = false;
				}
				else
				{
					this.BXIM.messenger.notify.flashNotify[params.id] = params.silent != 'Y';
				}

				if (params.settingName == "im|like" && params.originalTag.substr(0,10) == "RATING|IM|")
				{
					var messageParams = params.originalTag.split("|");
					if (this.BXIM.messenger.message[messageParams[4]] && this.BXIM.messenger.message[messageParams[4]].recipientId == this.BXIM.messenger.currentTab && this.BXIM.windowFocus)
					{
						delete data.UNREAD_NOTIFY[params.id];
						this.BXIM.notify.flashNotify[params.id] = false;
					}
				}
				this.BXIM.notify.changeUnreadNotify(data.UNREAD_NOTIFY, true, params.silent == 'N');

				this.BXIM.lastRecordId = parseInt(params.id) > this.BXIM.lastRecordId? parseInt(params.id): this.BXIM.lastRecordId;
			}
			else if (command == 'notifyRead')  // TODO mobile
			{
				if (this.MobileActionNotEqual('NOTIFY'))
					return false;

				this.BXIM.notify.initNotifyCount = params.counter;
				this.BXIM.notify.notifyCount = params.counter;

				params.list.forEach(function(id){
					delete this.BXIM.notify.unreadNotify[id];
				}.bind(this));

				this.BXIM.notify.viewNotifyMarkupUpdate();
				this.BXIM.notify.updateNotifyCount(false);
			}
			else if (command == 'notifyConfirm')  // TODO mobile
			{
				if (this.MobileActionNotEqual('NOTIFY'))
					return false;

				var notifyId = parseInt(params.id);
				if (this.BXIM.notify.notify[notifyId])
				{
					if (this.isMobile())
					{
						delete this.BXIM.notify.notify[notifyId];
					}
					else
					{
						this.BXIM.notify.notify[notifyId].confirmMessages = params.confirmMessages;
					}
				}
				delete this.BXIM.notify.unreadNotify[notifyId];
				delete this.BXIM.notify.flashNotify[notifyId];
				this.BXIM.notify.updateNotifyCount(false);
				if (this.BXIM.messenger.popupMessenger != null && this.BXIM.notifyOpen)
					this.BXIM.notify.openNotify(true);
			}
			else if (command == 'notifyUnread')
			{
				if (this.MobileActionNotEqual('NOTIFY'))
					return false;

				params.list.forEach(function(id){
					this.BXIM.notify.viewNotify(id, false, false);
				}.bind(this));
			}
			else if (command == 'commandDelete')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				for (var i = 0; i < this.BXIM.messenger.command.length; i++)
				{
					if (!this.BXIM.messenger.command[i] || this.BXIM.messenger.command[i].id != params.commandId)
					{
						continue;
					}

					delete this.BXIM.messenger.command[i];

					if (this.commandPopup != null)
					{
						this.commandPopup.destroy();
					}

					break;
				}
			}
			else if (command == 'appDeleteIcon')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				for (var i = 0; i < this.BXIM.messenger.textareaIcon.length; i++)
				{
					if (!this.BXIM.messenger.textareaIcon[i] || this.BXIM.messenger.textareaIcon[i].id != params.iconId)
					{
						continue;
					}

					delete this.BXIM.messenger.textareaIcon[i];

					if (this.popupSmileMenu != null)
					{
						this.popupSmileMenu.destroy();
					}

					BX.MessengerSupport24.closePopup();

					var element = BX.findChildByClassName(this.BXIM.messenger.popupMessengerTextareaIconBox, 'bx-messenger-textarea-icon-marketplace-'+params.iconId, true);
					if (element)
					{
						BX.remove(element);
					}

					break;
				}
			}
			else if (command == 'appUpdateIcon')
			{
				if (this.MobileActionNotEqual('DIALOG'))
					return false;

				for (var i = 0; i < this.BXIM.messenger.textareaIcon.length; i++)
				{
					if (!this.BXIM.messenger.textareaIcon[i] || this.BXIM.messenger.textareaIcon[i].id != params.iconId)
					{
						continue;
					}

					if (params.context)
					{
						this.BXIM.messenger.textareaIcon[i].context = params.context;
					}
					if (params.js)
					{
						this.BXIM.messenger.textareaIcon[i].js = params.js;
					}
					if (params.iframe)
					{
						this.BXIM.messenger.textareaIcon[i].iframe = params.iframe;
					}
					if (params.iframeWidth)
					{
						this.BXIM.messenger.textareaIcon[i].iframeWidth = params.iframeWidth;
					}
					if (params.iframeHeight)
					{
						this.BXIM.messenger.textareaIcon[i].iframeHeight = params.iframeHeight;
					}

					if (params.userId != this.BXIM.userId && this.popupSmileMenu != null)
					{
						this.popupIframeMenu.destroy();
					}

					break;
				}
			}
		}, this);

		var pullOnlineHandler = BX.delegate(function(command, params)
		{
			if (this.isMobile())
			{
				params = command.params;
				command = command.command;
			}
			if (command == 'list' || command == 'userStatus')
			{
				var userList = [];
				for (var i in params.users)
				{
					userList.push(params.users[i]);
				}
				this.userChangeStatus(userList);
			}

		}, this);

		var pullOpenLinesHandler = BX.delegate(function(command, params)
		{
			if (this.isMobile())
			{
				params = command.params;
				command = command.command;
			}

			if (command == 'linesAnswer')
			{
				if (this.MobileActionNotEqual('DIALOG', 'RECENT'))
					return false;

				if (!this.BXIM.messenger.chat[params.chatId])
					return false;

				this.BXIM.messenger.chat[params.chatId].owner = this.BXIM.userId;
				this.BXIM.messenger.redrawChatHeader();

				if (this.BXIM.messenger.popupMessengerTextarea)
				{
					this.BXIM.messenger.popupMessengerTextarea.focus();
				}
			}
			else if (command == 'queueItemUpdate')
			{
				if (typeof(this.BXIM.messenger.openlines) == 'undefined')
				{
					this.BXIM.messenger.openlines.queue = [params];
				}
				else
				{
					var push = true;
					for (var i=0,len=this.BXIM.messenger.openlines.queue.length; i<len; i++)
					{
						if (this.BXIM.messenger.openlines.queue[i].id == params.id)
						{
							this.BXIM.messenger.openlines.queue[i].name = params.name;
							this.BXIM.messenger.openlines.queue[i].priority = params.priority;
							this.BXIM.messenger.openlines.queue[i].queue_type = params.queue_type;
							push = false;
							break;
						}
					}
					if (push)
					{
						this.BXIM.messenger.openlines.queue.push(params);
					}
				}
			}
			else if (command == 'queueItemDelete')
			{
				if (typeof(this.BXIM.messenger.openlines) == 'undefined' || this.BXIM.messenger.openlines.queue.length <= 0)
					return true;

				var newQueue = [];
				for (var i=0,len=this.BXIM.messenger.openlines.queue.length; i<len; i++)
				{
					if (this.BXIM.messenger.openlines.queue[i].id != params.id)
					{
						newQueue.push(this.BXIM.messenger.openlines.queue[i]);
					}
				}
				this.BXIM.messenger.openlines.queue = newQueue;
			}
			else if (command == 'updateSessionStatus')
			{
				this.recentListUpdateItem({
					id: 'chat'+params.chatId,
					lines: { status: params.status }
				});
				this.recentListRedraw();
			}
		}, this);

		if(this.isMobile())
		{
			console.warn("MOBILE!")
			BXMobileApp.addCustomEvent("onPull-im",
				BX.delegate(function(dataObject)
				{
					console.log(dataObject);
					var commandList = dataObject.data;

					if( typeof (commandList) == "undefined" )
					{
						//backward compatibility
						pullHandler(dataObject["command"],dataObject["params"],dataObject["extra"]);
					}
					else
					{
						for (var i = 0; i < commandList.length; i++)
						{
							pullHandler(commandList[i]["command"],commandList[i]["params"],commandList[i]["extra"]);
						}
					}
				},this)
			)

			BXMobileApp.addCustomEvent("onPullOnline", pullOnlineHandler);
			BXMobileApp.addCustomEvent("onPull-imopenlines", pullOpenLinesHandler);
		}
		else
		{
			BX.addCustomEvent("onPullOnlineEvent", pullOnlineHandler);
			BX.addCustomEvent("onPullEvent-im", pullHandler);
			BX.addCustomEvent("onPullEvent-imopenlines", pullOpenLinesHandler);
		}

		BX.PULL.subscribe({
			type: 'client',
			moduleId: 'imopenlines',
			command: 'linesMessageWrite', callback: function(params, sender) {
				//Check md5 of incoming message (sessionId, chatId, userId)
				if (
					!this.BXIM.messenger.chat[params.operatorChatId]
					|| !this.BXIM.messenger.chat[params.operatorChatId].entity_id
				)
				{
					return;
				}

				var operatorChatId = this.BXIM.messenger.chat[params.operatorChatId].id;
				var chatName = 'chat' + operatorChatId;

				var sessionId = 0;
				var session = BX.MessengerCommon.linesGetSession(this.BXIM.messenger.chat[params.operatorChatId]);
				if (session)
				{
					sessionId = session.id;
				}

				var source = this.BXIM.messenger.chat[params.operatorChatId].entity_id.toString().split('|');

				var clientChatId = 0;
				var clientId = 0;
				if (source[2] && source[3])
				{
					clientChatId = source[2];
					clientId = source[3];
				}

				var infoString = BX.md5(
					sessionId
					+ '/' + clientChatId
					+ '/' + clientId
				);
				if (params.infoString === infoString)
				{
					if (this.BXIM.messenger.linesWritingList[operatorChatId])
					{
						this.BXIM.messenger.linesWritingList[operatorChatId].text = params.text;
						var prevMessageId = this.BXIM.messenger.linesWritingList[operatorChatId].id;
						var prevMessage = BX.findChildByClassName(
							this.BXIM.messenger.popupMessengerBodyWrap,
							"bx-messenger-content-item-id-"+prevMessageId
						);
						if (prevMessage)
						{
							if (params.text === '')
							{
								clearTimeout(this.BXIM.messenger.linesWritingListTimeout[operatorChatId]);
								BX.remove(prevMessage);
								delete this.BXIM.messenger.linesWritingList[operatorChatId];
								BX.MessengerCommon.endWriting(clientId, chatName);
							}
							else
							{
								var prevMessageContent = BX('im-message-'+prevMessageId);
								prevMessageContent.innerText = params.text;

								clearTimeout(this.BXIM.messenger.linesWritingListTimeout[operatorChatId]);
								this.BXIM.messenger.linesWritingListTimeout[operatorChatId] = setTimeout(BX.delegate(function(){
									BX.remove(prevMessage);
									delete this.BXIM.messenger.linesWritingList[operatorChatId];
									BX.MessengerCommon.endWriting(clientId, chatName);
								}, this), 29500);
							}
						}
					}
					else
					{
						if (params.text === '')
						{
							return;
						}

						var message = {
							id: 'ol-writing-' + Date.now(),
							senderId: clientId,
							text: BX.util.htmlspecialchars(params.text),
							date: new Date(),
							params: {
								CLASS: "bx-messenger-content-item-lines-writing"
							}
						};

						this.BXIM.messenger.linesWritingList[operatorChatId] = message;

						if (chatName !== BXIM.messenger.currentTab)
						{
							return;
						}
						BX.MessengerCommon.drawMessage(BXIM.messenger.currentTab, message);
						BX.MessengerCommon.startWriting(clientId, chatName);


						var createdMessage = BX.findChildByClassName(
							this.BXIM.messenger.popupMessengerBodyWrap,
							"bx-messenger-content-item-id-"+message.id
						);

						clearTimeout(this.BXIM.messenger.linesWritingListTimeout[operatorChatId]);
						this.BXIM.messenger.linesWritingListTimeout[operatorChatId] = setTimeout(BX.delegate(function(){
							BX.remove(createdMessage);
							delete this.BXIM.messenger.linesWritingList[operatorChatId];
							BX.MessengerCommon.endWriting(clientId, chatName);
						}, this), 29500);
					}
				}
			}
		});
	}


	/* Section: Fetch messages */
	MessengerCommon.prototype.updateStateVar = function(data, send, writeMessage)
	{
		writeMessage = writeMessage !== false;
		if (typeof(data.CHAT) != "undefined")
		{
			for (var i in data.CHAT)
			{
				data.CHAT[i].date_create = new Date(data.CHAT[i].date_create);
				this.BXIM.messenger.chat[i] = data.CHAT[i];
			}
		}
		if (typeof(data.USER_IN_CHAT) != "undefined")
		{
			for (var i in data.USER_IN_CHAT)
			{
				this.BXIM.messenger.userInChat[i] = data.USER_IN_CHAT[i];
			}
		}
		if (typeof(data.USER_BLOCK_CHAT) != "undefined")
		{
			for (var i in data.USER_BLOCK_CHAT)
			{
				this.BXIM.messenger.userChatBlockStatus[i] = data.USER_BLOCK_CHAT[i];
			}
		}
		if (typeof(data.USERS) != "undefined")
		{
			for (var i in data.USERS)
			{
				data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
				data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
				data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
				data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

				this.BXIM.messenger.users[i] = data.USERS[i];
			}
		}
		if (typeof(data.USER_IN_GROUP) != "undefined")
		{
			for (var i in data.USER_IN_GROUP)
			{
				if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
				{
					this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
				}
				else
				{
					for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
						this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

					this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
				}
			}
		}

		if (typeof data.UNREAD_MESSAGE === 'undefined')
		{
			data.UNREAD_MESSAGE = {};
		}

		if (typeof(data.MESSAGE) != "undefined")
		{
			for (var i in data.MESSAGE)
			{
				if (this.BXIM.messenger.message[i] && this.BXIM.messenger.message[i].dropDuplicate)
				{
					data.MESSAGE[i].dropDuplicate = true;
				}

				data.MESSAGE[i].date = new Date(data.MESSAGE[i].date);
				data.MESSAGE[i].textOriginal = data.MESSAGE[i].text;
				data.MESSAGE[i].text = BX.MessengerCommon.prepareText(data.MESSAGE[i].text, true, true, true);

				this.BXIM.messenger.message[i] = data.MESSAGE[i];
				this.BXIM.lastRecordId = parseInt(i) > this.BXIM.lastRecordId? parseInt(i): this.BXIM.lastRecordId;
			}
		}

		this.changeUnreadMessage(data.UNREAD_MESSAGE, !!data.SHOW_NEW_MESSAGE);

		if (typeof(data.USERS_MESSAGE) != "undefined")
		{
			for (var i in data.USERS_MESSAGE)
			{
				data.USERS_MESSAGE[i].sort(BX.delegate(function(i, ii) {i = parseInt(i); ii = parseInt(ii); if (!this.BXIM.messenger.message[i] || !this.BXIM.messenger.message[ii]){return 0;} var i1 = this.BXIM.messenger.message[i].date.getTime(); var i2 = this.BXIM.messenger.message[ii].date.getTime(); if (i1 < i2) { return -1; } else if (i1 > i2) { return 1;} else{ if (i < ii) { return -1; } else if (i > ii) { return 1;}else{ return 0;}}}, this));
				for (var j = 0; j < data.USERS_MESSAGE[i].length; j++)
				{
					if (!data.USERS_MESSAGE[i][j])
						continue;

					data.USERS_MESSAGE[i][j] = data.USERS_MESSAGE[i][j].toString();

					if (
						this.BXIM.messenger.message[data.USERS_MESSAGE[i][j]].dropDuplicate
						|| !this.BXIM.messenger.showMessage[i]
						|| !BX.util.in_array(data.USERS_MESSAGE[i][j], this.BXIM.messenger.showMessage[i])
					)
					{
						if (!this.BXIM.messenger.showMessage[i])
						{
							this.BXIM.messenger.showMessage[i] = [];
						}

						this.BXIM.messenger.showMessage[i] = this.BXIM.messenger.showMessage[i].filter(function(element) {
							return element != data.USERS_MESSAGE[i][j];
						});
						this.BXIM.messenger.showMessage[i].push(data.USERS_MESSAGE[i][j].toString());

						if (!this.BXIM.messenger.history[i])
						{
							this.BXIM.messenger.history[i] = [];
						}
						this.BXIM.messenger.history[i] = BX.util.array_merge(this.BXIM.messenger.history[i], data.USERS_MESSAGE[i]);

						if (
							writeMessage
							&& this.BXIM.messenger.currentTab == i
							&& this.MobileActionEqual('DIALOG')
							&& !BX('im-message-' + data.USERS_MESSAGE[i][j])
						)
						{
							this.drawMessage(i, this.BXIM.messenger.message[data.USERS_MESSAGE[i][j]]);
						}
					}
				}
			}
		}
	};

	MessengerCommon.prototype.changeUnreadMessage = function(unreadMessage, showNewMessage)
	{
		if (BX.type.isArray(unreadMessage))
		{
			return;
		}

		var userStatus = this.isMobile()? 'online': this.BXIM.settings.status;

		for (var i in unreadMessage)
		{
			if (this.BXIM.messenger.unreadMessage[i])
				this.BXIM.messenger.unreadMessage[i] = BX.util.array_unique(BX.util.array_merge(this.BXIM.messenger.unreadMessage[i], unreadMessage[i]));
			else
				this.BXIM.messenger.unreadMessage[i] = unreadMessage[i];

			this.BXIM.messenger.unreadMessage[i].sort(function(a, b) {return a-b;});

			// if (
			// 	this.BXIM.messenger.popupMessenger != null
			// 	&& this.BXIM.messenger.currentTab == i
			// 	&& this.BXIM.isFocus()
			// )
			// {
			// 	this.readMessage(i, true, true);
			// }
			// else
			if (this.isMobile() && this.BXIM.messenger.currentTab == i)
			{
				var dialogId = this.BXIM.messenger.currentTab;
				this.BXIM.isFocusMobile(BX.delegate(function(visible){
					if (visible)
					{
						setTimeout(BX.delegate(function(visible){
							BX.MessengerCommon.readMessage(dialogId, true, true);
						}, this), 300)
					}
				},this));
			}
			if (!showNewMessage)
			{
				continue;
			}

			var isLines = i.toString().substr(0,4) == 'chat' && this.BXIM.messenger.chat[i.toString().substr(4)] && this.BXIM.messenger.chat[i.toString().substr(4)].type == 'lines';

			if (typeof (this.BXIM.messenger.flashMessage[i]) == 'undefined')
			{
				this.BXIM.messenger.flashMessage[i] = {};
			}

			for (var k = 0; k < unreadMessage[i].length; k++)
			{
				if (isLines && BX.MessengerCommon.getCounter(i) > 0)
				{
					var senderId = this.BXIM.messenger.message[unreadMessage[i][k]].senderId;
					if (senderId == 0 || this.BXIM.messenger.users[senderId].extranet)
					{
						this.BXIM.messenger.flashMessage[i][unreadMessage[i][k]] = false;
						continue;
					}
				}

				var resultOfNameSearch = this.BXIM.messenger.message[unreadMessage[i][k]].text.match(new RegExp("("+this.BXIM.messenger.users[this.BXIM.userId].name.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")+")",'ig'));
				if (
					!resultOfNameSearch
					&& (
						userStatus == 'dnd'
						|| this.BXIM.notify.muteModeCode > 0
						|| BX.MessengerCalls && BX.MessengerCalls.hasActiveSharing()
					)
				)
				{

					this.BXIM.messenger.flashMessage[i][unreadMessage[i][k]] = false;
				}
				else
				{
					this.BXIM.messenger.flashMessage[i][unreadMessage[i][k]] = true;
				}
			}
		}

		this.BXIM.messenger.dialogStatusRedraw(this.isMobile()? {type: 1, slidingPanelRedrawDisable: true, 'userRedraw': false}: {'userRedraw': false});

		this.BXIM.messenger.newMessage(true);
		this.BXIM.messenger.updateMessageCount(true);
	}

	MessengerCommon.prototype.redrawDateMarks = function()
	{
		if (!this.BXIM.messenger.popupMessengerBodyWrap)
			return false;

		if (typeof(this.BXIM.messenger.popupMessengerBodyWrap.getElementsByClassName) == 'undefined')
			return false;

		var element = {};
		var contentGroup = this.BXIM.messenger.popupMessengerBodyWrap.getElementsByClassName("bx-messenger-content-group");
		var marginTop = this.BXIM.messenger.popupMessengerBody.getBoundingClientRect().top;
		for (var i = 0; i < contentGroup.length; i++)
		{
			element = BX.MessengerCommon.isElementCoordsBelow(contentGroup[i], this.BXIM.messenger.popupMessengerBody, 33, true);
			if (contentGroup[i].className != "bx-messenger-content-group bx-messenger-content-group-today")
			{
				contentGroup[i].className = "bx-messenger-content-group "+(element.top? "": "bx-messenger-content-group-float");
				contentGroup[i].firstChild.nextSibling.style.marginLeft = element.top? "": Math.round(contentGroup[i].offsetWidth/2 - contentGroup[i].firstChild.nextSibling.offsetWidth/2)+'px';
				contentGroup[i].firstChild.nextSibling.style.marginTop = element.top? "": ((-element.coords.top)+14)+'px';
			}
			if (!element.top && contentGroup[i-1])
			{
				contentGroup[i-1].className = "bx-messenger-content-group";
				contentGroup[i-1].firstChild.nextSibling.style.marginLeft = '';
				contentGroup[i-1].firstChild.nextSibling.style.marginTop = '';
			}
		}
	}

	MessengerCommon.prototype.unreadMessage = function(messageId) // TODO unreadMessage
	{
		if (!this.BXIM.messenger.message[messageId])
		{
			return false;
		}

		var message = this.BXIM.messenger.message[messageId];

		var dialogId = '';
		if (message.recipientId.toString().substr(0,4) == 'chat')
		{
			dialogId = message.recipientId;
		}
		else
		{
			dialogId = message.senderId;
		}

		BX.rest.callMethod('im.dialog.unread', {
			DIALOG_ID: dialogId,
			MESSAGE_ID: messageId
		});

		showMessage = this.BXIM.messenger.showMessage[dialogId];
		showMessage.sort(function(i, ii) {if (i < ii) { return -1; } else if (i > ii) { return 1;}else{ return 0;}});

		this.BXIM.messenger.unreadMessage[dialogId] = [];

		var counter = 0;
		for (var i = 0; i < showMessage.length; i++)
		{
			if (parseInt(showMessage[i]) >= parseInt(messageId))
			{
				if (!this.BXIM.messenger.unreadMessage[dialogId])
					this.BXIM.messenger.unreadMessage[dialogId] = [];

				this.BXIM.messenger.unreadMessage[dialogId].push(showMessage[i]);
				counter++;
			}
		}

		this.recentListUpdateItem({
			id: dialogId,
			counter: counter,
		});

		this.skipReadMessage = true;

		this.drawTab();
		this.recentListRedraw();

		setTimeout(BX.delegate(function(){
			this.skipReadMessage = false;
		},this), 1000);
	}

	MessengerCommon.prototype.readMessage = function(dialogId, send, sendAjax, skipCheck)
	{
		if (!dialogId || this.skipReadMessage)
		{
			return false;
		}

		send = send != false;
		sendAjax = sendAjax !== false;

		if (sendAjax)
		{
			skipCheck = skipCheck == true || this.isMobile();
			if (!skipCheck && !BX.MessengerCommon.getCounter(dialogId))
			{
				return false;
			}

			if (
				this.BXIM.callController
				&& this.BXIM.callController.hasActiveCall()
				&& this.BXIM.callController.hasVisibleCall()
			)
			{
				return false;
			}

			if (dialogId.toString().substring(0, 4) == 'chat')
			{
				var chatId = dialogId.toString().substring(4);
				if (
					this.BXIM.messenger.chat[chatId]
					&& this.BXIM.messenger.chat[chatId].type == 'lines'
					&& this.BXIM.messenger.chat[chatId].owner == 0
				)
				{
					return false;
				}
			}

			if (
				BX.SidePanel
				&& BX.SidePanel.Instance.isOpen()
				&& BX.SidePanel.Instance.isOnTop()
				&& this.BXIM.messenger.popupMessenger
			)
			{
				var topSlider = BX.SidePanel.Instance.getTopSlider();
				if (!(topSlider.url === '/desktop_app/' || topSlider.url.startsWith('im:slider')))
				{
					return false;
				}
			}

		}

		var oldCounter = BX.MessengerCommon.getCounter(dialogId);
		this.recentListUpdateItem({
			id: dialogId,
			counter: 0,
			unread: false
		});
		this.recentListRedraw();

		var lastId = 0;
		if (Math && this.BXIM.messenger.unreadMessage[dialogId])
			lastId = Math.max.apply(Math, this.BXIM.messenger.unreadMessage[dialogId]);

		if (this.BXIM.messenger.unreadMessage[dialogId])
		{
			var unreadedMessageUserBackup = BX.clone(this.BXIM.messenger.unreadMessage[dialogId]);
			delete this.BXIM.messenger.unreadMessage[dialogId];
		}

		if (this.BXIM.messenger.flashMessage[dialogId])
			delete this.BXIM.messenger.flashMessage[dialogId];

		if (!this.isMobile())
		{
			this.BXIM.messenger.updateMessageCount(send);
			this.BXIM.updateCounter();
		}

		if (
			this.BXIM.messenger.popupMessenger != null
			&& dialogId == this.BXIM.messenger.currentTab
		)
		{
			elements = BX.findChildrenByClassName(this.BXIM.messenger.popupMessengerBodyWrap, "bx-messenger-content-item-new", false);
			if (elements != null)
			{
				for (var i = 0; i < elements.length; i++)
				{
					if (elements[i].getAttribute('data-notifyType') != 1)
					{
						BX.removeClass(elements[i], 'bx-messenger-content-item-new');
					}
				}
			}
		}

		if (sendAjax)
		{
			if (BX.MessengerProxy)
			{
				BX.MessengerProxy.sendCounterChangeEvent(dialogId, 0);
			}
			var sendData = {'IM_READ_MESSAGE' : 'Y', 'USER_ID' : dialogId, 'TAB' : this.BXIM.messenger.currentTab, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()};
			if (parseInt(lastId) > 0)
				sendData['LAST_ID'] = lastId;
			var _ajax = BX.ajax({
				url: this.BXIM.pathToAjax+'?READ_MESSAGE&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 60,
				skipAuthCheck: true,
				data: sendData,
				onsuccess: BX.delegate(function(data)
				{
					if (data)
					{
						if(data.BITRIX_SESSID)
							BX.message({'bitrix_sessid': data.BITRIX_SESSID});

						if (data.ERROR == '')
						{
							BX.onCustomEvent(window, 'onImMessageRead', [dialogId]);
							this.BXIM.messenger.setUpdateStateStep();
						}
						else
						{
							this.BXIM.messenger.unreadMessage[dialogId] = unreadedMessageUserBackup;
							if (BX.MessengerProxy)
							{
								BX.MessengerProxy.sendCounterChangeEvent(dialogId, oldCounter);
							}
							if (data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
							{
								this.BXIM.messenger.sendAjaxTry++;
								setTimeout(BX.delegate(function(){
									this.readMessage(dialogId, false, true);
								}, this), 2000);
								BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
							}
							else if (data.ERROR == 'AUTHORIZE_ERROR')
							{
								this.BXIM.messenger.sendAjaxTry++;
								if (this.isDesktop() || this.isMobile())
								{
									setTimeout(BX.delegate(function(){
										this.readMessage(dialogId, false, true);
									}, this), 10000);
								}
								BX.onCustomEvent(window, 'onImError', [data.ERROR]);
							}
						}
					}
					else
					{
						if (BX.MessengerProxy)
						{
							BX.MessengerProxy.sendCounterChangeEvent(dialogId, oldCounter);
						}
						this.BXIM.messenger.unreadMessage[dialogId] = unreadedMessageUserBackup;
					}
				}, this),
				onfailure: BX.delegate(function()
				{
					if (BX.MessengerProxy)
					{
						BX.MessengerProxy.sendCounterChangeEvent(dialogId, oldCounter);
					}
					this.BXIM.messenger.unreadMessage[dialogId] = unreadedMessageUserBackup;

					this.BXIM.messenger.sendAjaxTry = 0;
					try {
						if (typeof(_ajax) == 'object' && _ajax.status == 0)
							BX.onCustomEvent(window, 'onImError', ['CONNECT_ERROR']);
					}
					catch(e) {}
				}, this)
			});
		}
		if (send)
		{
			BX.localStorage.set('mrm', dialogId, 5);
			BX.localStorage.set('mnnb', true, 1);
		}
	};

	MessengerCommon.prototype.drawReadMessageChat = function(chatId, animation)
	{
		if (!this.BXIM.messenger.readedList[chatId])
		{
			return false;
		}

		var lastId = Math.max.apply(Math, this.BXIM.messenger.showMessage[chatId]);

		var readedCount = 0;
		var newReadedList = {};
		var firstUserId = 0;
		var firstUserDate = false;
		for (var userId in this.BXIM.messenger.readedList[chatId])
		{
			if (userId == this.BXIM.userId)
				continue;

			if (this.BXIM.messenger.message[lastId] && this.BXIM.messenger.message[lastId].senderId == userId)
				continue;

			if (this.BXIM.messenger.readedList[chatId][userId].messageId >= lastId)
			{
				if (!newReadedList[userId])
				{
					newReadedList[userId] = {};
				}
				if (!firstUserDate || firstUserDate.getTime() > this.BXIM.messenger.readedList[chatId][userId].date.getTime())
				{
					firstUserId = userId;
					firstUserDate = this.BXIM.messenger.readedList[chatId][userId].date;
				}
				newReadedList[userId] = this.BXIM.messenger.readedList[chatId][userId];
				readedCount++;
			}
		}
		if (readedCount > 0)
		{
			this.BXIM.messenger.readedList[chatId] = newReadedList;
		}
		else
		{
			this.BXIM.messenger.readedList[chatId] = false;
			var lastMessage = this.BXIM.messenger.popupMessengerBodyWrap? this.BXIM.messenger.popupMessengerBodyWrap.lastChild: null;
			if (lastMessage && BX.hasClass(lastMessage, "bx-messenger-content-item-notify"))
			{
				if (!this.countWriting(chatId))
				{
					BX.remove(lastMessage);
				}
			}

			return false;
		}

		if (!this.countWriting(chatId))
		{
			var userData = this.getUserParam(firstUserId);
			var usersText = '<span title="'+this.formatDate(firstUserDate)+'">'+userData.name+'</span>';
			if (readedCount > 1)
			{
				if (this.isMobile())
				{
					usersText = BX.message('IM_M_READED_CHAT_MORE')
						.replace('#USER#', usersText)
						.replace('#LINK_START#', '<b>')
						.replace('#LINK_END#', '</b>')
						.replace('#COUNT#', (readedCount-1));
				}
				else
				{
					usersText = BX.message('IM_M_READED_CHAT_MORE')
						.replace('#USER#', usersText)
						.replace('#LINK_START#', '<span class="bx-messenger-ajax" data-entity="readedList">')
						.replace('#LINK_END#', '</span>')
						.replace('#COUNT#', (readedCount-1));
				}
			}

			animation = animation != false;
			this.drawNotifyMessage(chatId, 'readed', BX.message('IM_M_READED_CHAT').replace('#USERS#', usersText), animation);
		}
	};

	MessengerCommon.prototype.drawReadMessage = function(userId, messageId, date, animation)
	{
		var lastId = Math.max.apply(Math, this.BXIM.messenger.showMessage[userId]);
		if (lastId != messageId || this.BXIM.messenger.message[lastId].senderId == userId || !date)
		{
			this.BXIM.messenger.readedList[userId] = false;
			return false;
		}

		this.BXIM.messenger.readedList[userId] = {
			'messageId' : messageId,
			'date' : date
		};
		if (!this.countWriting(userId))
		{
			animation = animation != false;

			this.drawNotifyMessage(userId, 'readed', BX.message('IM_M_READED').replace('#DATE#', this.formatDate(date)), animation);
		}
	};

	MessengerCommon.prototype.drawNotifyMessage = function(userId, icon, message, animation)
	{
		if (this.BXIM.messenger.popupMessenger == null || userId != this.BXIM.messenger.currentTab || typeof(message) == 'undefined' || typeof(icon) == 'undefined' || userId == 0)
			return false;

		if (!this.BXIM.messenger.popupMessengerBodyWrap)
			return false;

		var lastChild = this.BXIM.messenger.popupMessengerBodyWrap.lastChild;
		if (!lastChild || BX.hasClass(lastChild, "bx-messenger-content-empty"))
			return false;

		var arMessage = BX.create("div", { attrs : { 'data-type': 'notify'}, props: { className : "bx-messenger-content-item bx-messenger-content-item-notify"}, children: [
			BX.create("span", { props : { className : "bx-messenger-content-item-content"}, children : [
				BX.create("span", { props : { className : "bx-messenger-content-item-text-center"}, children: [
					BX.create("span", {  props : { className : "bx-messenger-content-item-text-message"}, html: '<span class="bx-messenger-content-item-notify-icon-'+icon+'"></span>'+this.prepareText(message, false, true, true)})
				]})
			]})
		]});

		var enableScroll = true;
		if (BX.hasClass(lastChild, "bx-messenger-content-item-notify"))
		{
			enableScroll = false;
			BX.remove(lastChild);
		}
		this.BXIM.messenger.popupMessengerBodyWrap.appendChild(arMessage);

		animation = animation != false;
		if (enableScroll && this.BXIM.messenger.popupMessengerBody && BX.MessengerCommon.enableScroll(this.BXIM.messenger.popupMessengerBody, this.BXIM.messenger.popupMessengerBody.offsetHeight))
		{
			if (this.isMobile() && document.body.offsetHeight <= window.innerHeight)
			{
				this.BXIM.messenger.popupMessengerBody.scrollTop = 0;
			}
			else if (this.BXIM.animationSupport && animation)
			{
				if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
					this.BXIM.messenger.popupMessengerBodyAnimation.stop();
				(this.BXIM.messenger.popupMessengerBodyAnimation = new BX.easing({
					duration : 1200,
					start : { scroll : this.BXIM.messenger.popupMessengerBody.scrollTop},
					finish : { scroll : this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1)},
					transition : BX.easing.makeEaseInOut(BX.easing.transitions.quart),
					step : BX.delegate(function(state){
						this.BXIM.messenger.popupMessengerBody.scrollTop = state.scroll;
					}, this)
				})).animate();
			}
			else
			{
				this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
			}
		}
	};

	MessengerCommon.prototype.loadHistory = function(userId, isHistoryDialog, loadFromButton)
	{
		isHistoryDialog = typeof(isHistoryDialog) == 'undefined'? true: isHistoryDialog;
		loadFromButton = typeof(loadFromButton) == 'undefined'? false: loadFromButton;

		if (!this.BXIM.messenger.historyEndOfList[userId])
			this.BXIM.messenger.historyEndOfList[userId] = {};

		if (!this.BXIM.messenger.historyLoadFlag[userId])
			this.BXIM.messenger.historyLoadFlag[userId] = {};

		if (this.BXIM.messenger.historyLoadFlag[userId] && this.BXIM.messenger.historyLoadFlag[userId][isHistoryDialog])
		{
			if (this.isMobile())
				app.pullDownLoadingStop();
			return;
		}

		if (this.isMobile())
		{
			isHistoryDialog = false;
		}
		else
		{
			if (isHistoryDialog)
			{
				if (this.BXIM.messenger.historySearch != "" || this.BXIM.messenger.historyDateSearch != "")
					return;

				if (!(this.BXIM.messenger.popupHistoryItems.scrollTop > this.BXIM.messenger.popupHistoryItems.scrollHeight - this.BXIM.messenger.popupHistoryItems.offsetHeight - 100))
					return;
			}
			else
			{
				if (this.BXIM.messenger.showMessage[userId] && this.BXIM.messenger.showMessage[userId].length > 0 && this.BXIM.messenger.popupMessengerBody.scrollTop >= 5)
					return;
			}
		}

		if (!this.BXIM.messenger.historyEndOfList[userId] || !this.BXIM.messenger.historyEndOfList[userId][isHistoryDialog])
		{
			var elements = [];
			if (isHistoryDialog)
			{
				elements = BX.findChildrenByClassName(this.BXIM.messenger.popupHistoryBodyWrap, "bx-messenger-history-item");
			}
			else
			{
				elements = BX.findChildrenByClassName(this.BXIM.messenger.popupMessengerBodyWrap, "bx-messenger-content-item-text-wrap");
			}

			if (!this.isMobile() && elements.length < 30 && !loadFromButton)
			{
				return false;
			}

			if (elements.length > 0)
				this.BXIM.messenger.historyOpenPage[userId] = Math.floor(elements.length/30)+1;
			else
				this.BXIM.messenger.historyOpenPage[userId] = 1;

			var tmpLoadMoreWait = null;
			if (!this.isMobile() && !loadFromButton)
			{
				tmpLoadMoreWait = BX.create("div", { props : { className : "bx-messenger-content-load-more-history" }, children : [
					BX.create('span', { props : { className : "bx-messenger-content-load-img" }}),
					BX.create("span", { props : { className : "bx-messenger-content-load-text" }, html : BX.message('IM_M_LOAD_MESSAGE')})
				]});
				if (isHistoryDialog)
				{
					this.BXIM.messenger.popupHistoryBodyWrap.appendChild(tmpLoadMoreWait);
				}
				else
				{
					this.BXIM.messenger.popupMessengerBodyWrap.insertBefore(tmpLoadMoreWait, this.BXIM.messenger.popupMessengerBodyWrap.firstChild);
				}
			}
			else if (loadFromButton)
			{
				tmpLoadMoreWait = BX.create("div", { props : { className : "bx-messenger-content-load-more-history" }, children : [
					BX.create('span', { props : { className : "bx-messenger-content-load-img" }}),
					BX.create("span", { props : { className : "bx-messenger-content-load-text" }, html : BX.message('IM_M_LOAD_MESSAGE')})
				]});
				var buttonElement = BX.findChildByClassName(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-content-empty');
				if (buttonElement)
				{
					buttonElement.innerHTML = '';
					buttonElement.appendChild(tmpLoadMoreWait);
				}
				else
				{
					buttonElement = BX.findChildByClassName(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-notifier-content-link-history-empty');
					this.BXIM.messenger.popupMessengerBodyWrap.insertBefore(tmpLoadMoreWait, buttonElement);
					BX.remove(buttonElement);
				}
			}

			if (!this.BXIM.messenger.historyLoadFlag[userId])
				this.BXIM.messenger.historyLoadFlag[userId] = {};

			this.BXIM.messenger.historyLoadFlag[userId][isHistoryDialog] = true;

			BX.ajax({
				url: this.BXIM.pathToAjax+'?HISTORY_LOAD_MORE&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				skipAuthCheck: true,
				timeout: 30,
				data: {'IM_HISTORY_LOAD_MORE' : 'Y', 'USER_ID' : userId, 'PAGE_ID' : this.BXIM.messenger.historyOpenPage[userId], 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
				onsuccess: BX.delegate(function(data){
					if (tmpLoadMoreWait)
						BX.remove(tmpLoadMoreWait);

					if (this.isMobile())
						app.pullDownLoadingStop();

					this.BXIM.messenger.historyLoadFlag[userId][isHistoryDialog] = false;

					if (data.MESSAGE && data.MESSAGE.length == 0)
					{
						this.BXIM.messenger.historyEndOfList[userId][isHistoryDialog] = true;
						var lastMessageElementDate = BX.findChildByClassName(this.BXIM.messenger.popupMessengerBodyWrap, "bx-messenger-content-empty");
						if (lastMessageElementDate)
						{
							lastMessageElementDate.appendChild(
								BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: BX.message('IM_M_NO_MESSAGE')})
							);
						}
						return;
					}

					for (var i in data.FILES)
					{
						if (!this.BXIM.disk.files[data.CHAT_ID])
							this.BXIM.disk.files[data.CHAT_ID] = {};
						if (this.BXIM.disk.files[data.CHAT_ID][i])
							continue;
						data.FILES[i].date = new Date(data.FILES[i].date);
						this.BXIM.disk.files[data.CHAT_ID][i] = data.FILES[i];
					}

					var countMessages = 0;
					for (var i in data.MESSAGE)
					{
						data.MESSAGE[i].date = new Date(data.MESSAGE[i].date);
						data.MESSAGE[i].textOriginal = data.MESSAGE[i].text;
						data.MESSAGE[i].text = BX.MessengerCommon.prepareText(data.MESSAGE[i].text, true, true, true);

						this.BXIM.messenger.message[i] = data.MESSAGE[i];

						countMessages++;
					}
					if (countMessages < 30)
					{
						this.BXIM.messenger.historyEndOfList[userId][isHistoryDialog] = true;
					}

					for (var i in data.USERS_MESSAGE)
					{
						if (isHistoryDialog)
						{
							if (this.BXIM.messenger.history[i])
								this.BXIM.messenger.history[i] = BX.util.array_merge(this.BXIM.messenger.history[i], data.USERS_MESSAGE[i]);
							else
								this.BXIM.messenger.history[i] = data.USERS_MESSAGE[i];
						}
						else
						{
							if (this.BXIM.messenger.showMessage[i])
								this.BXIM.messenger.showMessage[i] = BX.util.array_unique(BX.util.array_merge(data.USERS_MESSAGE[i], this.BXIM.messenger.showMessage[i]));
							else
								this.BXIM.messenger.showMessage[i] = data.USERS_MESSAGE[i];
						}
					}

					for (var i in data.USERS)
					{
						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
					}

					for (var i in data.PHONES)
					{
						this.BXIM.messenger.phones[i] = {};
						for (var j in data.PHONES[i])
						{
							this.BXIM.messenger.phones[i][j] = BX.util.htmlspecialcharsback(data.PHONES[i][j]);
						}
					}
					for (var i in data.USER_IN_GROUP)
					{
						if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
						{
							this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
						}
						else
						{
							for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
								this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

							this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
						}
					}

					if (isHistoryDialog)
					{
						for (var i = 0; i < data.USERS_MESSAGE[userId].length; i++)
						{
							var history = this.BXIM.messenger.message[data.USERS_MESSAGE[userId][i]];
							if (history)
							{
								if (BX('im-message-history-'+history.id))
									continue;

								var dateGroupTitle = BX.MessengerCommon.formatDate(history.date, BX.MessengerCommon.getDateFormatType('MESSAGE_TITLE'));
								var dataGroupCode = typeof(BX.translit) != 'undefined'? BX.translit(dateGroupTitle): dateGroupTitle;
								if (!BX('bx-im-history-'+dataGroupCode))
								{
									var dateGroupTitleNode = BX.create("div", {props : { className: "bx-messenger-content-group bx-messenger-content-group-history"}, children : [
										BX.create("div", {attrs: {id: 'bx-im-history-'+dataGroupCode}, props : { className: "bx-messenger-content-group-title"+(this.BXIM.language == 'ru'? ' bx-messenger-lowercase': '')}, html : dateGroupTitle})
									]});
									this.BXIM.messenger.popupHistoryBodyWrap.appendChild(dateGroupTitleNode);
								}

								var history = this.BXIM.messenger.drawMessageHistory(history);
								if (history)
									this.BXIM.messenger.popupHistoryBodyWrap.appendChild(history);
							}
						}
					}
					else
					{
						var lastChildBeforeChangeDom = this.BXIM.messenger.popupMessengerBodyWrap.firstChild? this.BXIM.messenger.popupMessengerBodyWrap.firstChild.nextSibling: null;
						if (lastChildBeforeChangeDom)
						{
							lastChildBeforeChangeDom = BX('im-message-'+lastChildBeforeChangeDom.getAttribute('data-blockmessageid'));
						}

						if (data.USERS_MESSAGE[userId])
						{
							for (var i = 0; i < data.USERS_MESSAGE[userId].length; i++)
							{
								var history = this.BXIM.messenger.message[data.USERS_MESSAGE[userId][i]];
								if (history)
								{
									if (BX('im-message-'+history.id))
										continue;

									BX.MessengerCommon.drawMessage(userId, history, false, true);
								}
							}
						}
						if (lastChildBeforeChangeDom)
						{
							this.scrollToNode(lastChildBeforeChangeDom.parentNode.parentNode.parentNode.parentNode.parentNode);
						}
						else
						{
							this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
						}
					}
				}, this),
				onfailure: BX.delegate(function(){
					if (tmpLoadMoreWait)
						BX.remove(tmpLoadMoreWait);
					if (this.isMobile())
						app.pullDownLoadingStop();
				},this)
			});
		}
	};

	MessengerCommon.prototype.loadMessageByDate = function(chatId, lastLoadDate, firstMessageId)
	{
		BX.ajax({
			url: this.BXIM.pathToAjax+'?LOAD_MESSAGE_BY_DATE&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 30,
			data: {'IM_LOAD_MESSAGE_BY_DATE' : 'Y', 'CHAT_ID' : chatId, 'LAST_LOAD' : lastLoadDate, 'FIRST_MESSAGE_ID' : firstMessageId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (data && data.BITRIX_SESSID)
				{
					BX.message({'bitrix_sessid': data.BITRIX_SESSID});
				}
				if (data.ERROR == '')
				{
					var dialogId = data.DIALOG_ID;

					this.BXIM.messenger.sendAjaxTry = 0;

					for (var i in data.USERS)
					{
						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
					}

					for (var i in data.PHONES)
					{
						this.BXIM.messenger.phones[i] = {};
						for (var j in data.PHONES[i])
						{
							this.BXIM.messenger.phones[i][j] = BX.util.htmlspecialcharsback(data.PHONES[i][j]);
						}
					}
					for (var i in data.USER_IN_GROUP)
					{
						if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
						{
							this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
						}
						else
						{
							for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
								this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

							this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
						}
					}


					for (var i in data.FILES)
					{
						if (!this.BXIM.messenger.disk.files[data.CHAT_ID])
							this.BXIM.messenger.disk.files[data.CHAT_ID] = {};

						data.FILES[i].date = new Date(data.FILES[i].date);
						this.BXIM.messenger.disk.files[data.CHAT_ID][i] = data.FILES[i];
					}

					this.BXIM.messenger.sendAjaxTry = 0;
					var messageCnt = 0;
					for (var i in data.MESSAGE)
					{
						messageCnt++;

						data.MESSAGE[i].date = new Date(data.MESSAGE[i].date);
						data.MESSAGE[i].textOriginal = data.MESSAGE[i].text;
						data.MESSAGE[i].text = BX.MessengerCommon.prepareText(data.MESSAGE[i].text, true, true, true);

						this.BXIM.messenger.message[i] = data.MESSAGE[i];
						this.BXIM.lastRecordId = parseInt(i) > this.BXIM.lastRecordId? parseInt(i): this.BXIM.lastRecordId;
					}

					for (var i in data.USERS_MESSAGE)
					{
						if (this.BXIM.messenger.showMessage[i])
							this.BXIM.messenger.showMessage[i] = BX.util.array_unique(BX.util.array_merge(data.USERS_MESSAGE[i], this.BXIM.messenger.showMessage[i]));
						else
							this.BXIM.messenger.showMessage[i] = data.USERS_MESSAGE[i];
					}

					for (var i in data.DELETE_MESSAGE)
					{
						delete this.BXIM.messenger.message[i];
						if (this.BXIM.messenger.currentTab == data.DIALOG_ID && BX('im-message-'+i))
						{
							var messageWrap = BX('im-message-'+i).parentNode.parentNode.parentNode.parentNode.parentNode;
							if (messageWrap.getAttribute('data-messageId') == messageWrap.getAttribute('data-blockMessageId'))
							{
								BX.remove(messageWrap);
							}
							else
							{
								messageWrap = BX('im-message-'+i).parentNode;
								if (messageWrap.nextSibling && BX.hasClass(messageWrap.nextSibling, 'bx-messenger-hr'))
								{
									BX.remove(messageWrap.nextSibling);
								}
								else if (!messageWrap.nextSibling && BX.hasClass(messageWrap.previousSibling, 'bx-messenger-hr'))
								{
									BX.remove(messageWrap.previousSibling);
								}
								BX.remove(messageWrap);
							}
						}
					}

					for (var i in data.CHAT)
					{
						data.CHAT[i].date_create = new Date(data.CHAT[i].date_create);
						this.BXIM.messenger.chat[i] = data.CHAT[i];
					}
					for (var i in data.USER_IN_CHAT)
					{
						this.BXIM.messenger.userInChat[i] = data.USER_IN_CHAT[i];
					}
					for (var i in data.USER_BLOCK_CHAT)
					{
						this.BXIM.messenger.userChatBlockStatus[i] = data.USER_BLOCK_CHAT[i];
					}

					this.changeUnreadMessage(data.UNREAD_MESSAGE);
				}
				else
				{
					if (data.ERROR == 'SESSION_ERROR' && this.sendAjaxTry < 2)
					{
						this.sendAjaxTry++;
						setTimeout(BX.delegate(function(){this.loadMessageByDate(chatId, lastLoadDate, firstMessageId)}, this), 1000);
						BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
					}
					else if (data.ERROR == 'AUTHORIZE_ERROR')
					{
						this.sendAjaxTry++;
						if (BX.MessengerCommon.isDesktop() || this.isMobile())
						{
							setTimeout(BX.delegate(function (){
								this.loadMessageByDate(chatId, lastLoadDate, firstMessageId)
							}, this), 10000);
						}
						BX.onCustomEvent(window, 'onImError', [data.ERROR]);
					}
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.sendAjaxTry = 0;
			}, this)
		});
	}

	MessengerCommon.prototype.loadUserData = function(userId)
	{
		BX.ajax({
			url: this.BXIM.pathToAjax+'?USER_DATA_LOAD&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 30,
			data: {'IM_USER_DATA_LOAD' : 'Y', 'USER_ID' : userId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (data.ERROR == '')
				{
					this.BXIM.messenger.userChat[userId] = data.CHAT_ID;

					BX.MessengerCommon.getUserParam(userId, true);
					this.BXIM.messenger.users[userId].name = BX.message('IM_M_USER_NO_ACCESS');

					for (var i in data.USERS)
					{
						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
					}
					for (var i in data.PHONES)
					{
						this.BXIM.messenger.phones[i] = {};
						for (var j in data.PHONES[i])
						{
							this.BXIM.messenger.phones[i][j] = BX.util.htmlspecialcharsback(data.PHONES[i][j]);
						}
					}
					for (var i in data.USER_IN_GROUP)
					{
						if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
						{
							this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
						}
						else
						{
							for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
								this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

							this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
						}
					}

					if (this.isMobile())
					{
						this.BXIM.messenger.dialogStatusRedrawDelay();
					}
					else
					{
						this.BXIM.messenger.dialogStatusRedraw();
					}
				}
				else
				{
					this.BXIM.messenger.redrawTab[userId] = true;
					if (data.ERROR == 'ACCESS_DENIED' && this.BXIM.messenger.currentTab == userId)
					{
						this.BXIM.messenger.currentTab = 0;
						this.BXIM.messenger.openChatFlag = false;
						this.BXIM.messenger.openCallFlag = false;
						this.BXIM.messenger.openLinesFlag = false;
						this.BXIM.messenger.extraClose();
					}
				}
			}, this)
		});
	};

	MessengerCommon.prototype.loadChatData = function(chatId)
	{
		BX.ajax({
			url: this.BXIM.pathToAjax+'?CHAT_DATA_LOAD&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 30,
			data: {'IM_CHAT_DATA_LOAD' : 'Y', 'CHAT_ID' : chatId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (data.ERROR == '')
				{
					if (this.BXIM.messenger.chat[data.CHAT_ID].fake)
					{
						this.BXIM.messenger.chat[data.CHAT_ID].name = BX.message('IM_M_USER_NO_ACCESS');
					}

					for (var i in data.CHAT)
					{
						data.CHAT[i].date_create = new Date(data.CHAT[i].date_create);
						this.BXIM.messenger.chat[i] = data.CHAT[i];
					}
					for (var i in data.USER_IN_CHAT)
					{
						this.BXIM.messenger.userInChat[i] = data.USER_IN_CHAT[i];
					}
					for (var i in data.USER_BLOCK_CHAT)
					{
						this.BXIM.messenger.userChatBlockStatus[i] = data.USER_BLOCK_CHAT[i];
					}
					for (var i in data.USERS)
					{
						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
					}
					for (var i in data.USER_IN_GROUP)
					{
						if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
						{
							this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
						}
						else
						{
							for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
								this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

							this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
						}
					}

					if (this.BXIM.messenger.currentTab == 'chat'+data.CHAT_ID)
					{
						if (this.BXIM.messenger.chat[data.CHAT_ID] && this.BXIM.messenger.chat[data.CHAT_ID].type == 'call')
						{
							this.BXIM.messenger.openCallFlag = true;
						}
						else if (this.BXIM.messenger.chat[data.CHAT_ID] && this.BXIM.messenger.chat[data.CHAT_ID].type == 'lines')
						{
							this.BXIM.messenger.openLinesFlag = true;
						}
						this.drawTab(this.BXIM.messenger.currentTab);
					}
				}
			}, this)
		});
	};

	MessengerCommon.prototype.loadLastMessage = function(userId, callback)
	{
		if (this.BXIM.messenger.loadLastMessageTimeout[userId])
			return false;

		callback = typeof(callback) == 'function'? callback: function(userId, result, data){};

		var chatId = 0;
		var userIsChat = false;
		if (userId.toString().substr(0,4) == 'chat')
		{
			chatId = userId.toString().substr(4);
			userIsChat = true;
		}
		else if (userId.toString().substr(0,2) == 'sg')
		{
			chatId = userId.toString().substr(2);
			userIsChat = true;
		}
		else if (userId.toString().substr(0,3) == 'crm')
		{
			chatId = userId.toString().substr(4);
			userIsChat = true;
		}

		this.BXIM.messenger.historyWindowBlock = true;
		this.BXIM.messenger.loadLastMessageTimeout[userId] = true;

		if (this.BXIM.messenger.popupMessengerDialog && this.BXIM.messenger.currentTab == userId)
		{
			if (
				(userIsChat && (!this.BXIM.messenger.chat[chatId] || this.BXIM.messenger.chat[chatId].fake))
				|| (!userIsChat && (!this.BXIM.messenger.users[userId] || this.BXIM.messenger.users[userId].fake))
			)
			{
				BX.addClass(this.BXIM.messenger.popupMessengerDialog, "bx-messenger-chat-load-last-message");
			}
		}

		var onfailure = BX.delegate(function(){
			this.BXIM.messenger.loadLastMessageTimeout[userId] = false;

			callback(userId, false, {});

			if (this.BXIM.messenger.popupMessengerDialog && this.BXIM.messenger.currentTab == userId)
			{
				BX.removeClass(this.BXIM.messenger.popupMessengerDialog, "bx-messenger-chat-load-last-message");
			}
			if (this.BXIM.messenger.sendAjaxTry < 2)
			{
				this.BXIM.messenger.sendAjaxTry++;
				clearTimeout(this.BXIM.messenger.loadLastMessageTimeout);
				this.BXIM.messenger.loadLastMessageTimeout = setTimeout(BX.delegate(function(){
					BX.MessengerCommon.loadLastMessage(userId);
				}, this), 2000);

				return true;
			}

			this.BXIM.messenger.historyWindowBlock = false;
			this.BXIM.messenger.redrawTab[userId] = true;

			if (!this.BXIM.messenger.showMessage[userId] || this.BXIM.messenger.showMessage[userId].length <= 0)
			{
				this.BXIM.messenger.popupMessengerBodyWrap.innerHTML = '';

				var arMessage = [BX.create("div", { props : { className : "bx-messenger-content-empty"}, children : [
					BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: BX.message("IM_M_LOAD_ERROR")})
				]})];

				BX.adjust(this.BXIM.messenger.popupMessengerBodyWrap, {children: arMessage});

				if (this.isMobile() && this.MobileActionEqual('DIALOG'))
				{
					BXMobileApp.UI.Page.TopBar.title.setText(BX.message('IM_F_ERROR'));
					BXMobileApp.UI.Page.TopBar.title.setDetailText('');
				}
			}
			else
			{
				this.BXIM.messenger.tooltip(this.BXIM.messenger.popupMessengerBody, BX.message("IM_M_LOAD_ERROR"), {offsetTop: -10, offsetLeft: 50, bindOptions: {position: "top"}});

				var loadHistoryBlock = BX.findChildByClassName(this.BXIM.messenger.popupMessengerBodyWrap, "bx-notifier-content-link-history");
				if (loadHistoryBlock)
				{
					BX.remove(loadHistoryBlock);
				}

			}

		}, this);

		var onsuccess = BX.delegate(function(data)
		{
			this.BXIM.messenger.loadLastMessageTimeout[userId] = false;

			if (!data)
			{
				onfailure();
				return false;
			}

			if (this.BXIM.messenger.popupMessengerDialog && this.BXIM.messenger.currentTab == data.USER_ID)
			{
				BX.removeClass(this.BXIM.messenger.popupMessengerDialog, "bx-messenger-chat-load-last-message");
			}

			this.BXIM.checkRevision(this.isMobile()? data.MOBILE_REVISION: data.REVISION);

			if (data && data.BITRIX_SESSID)
			{
				BX.message({'bitrix_sessid': data.BITRIX_SESSID});
			}

			if (data.ERROR == '')
			{
				if (this.isMobile())
				{
					this.BXIM.disk.setChatParams(parseInt(data.CHAT_ID), parseInt(data.DISK_FOLDER_ID));
				}

				if (userIsChat)
				{
					if (data.USER_ID.toString().substr(0,2) == 'sg')
					{
						if (this.BXIM.messenger.currentTab == data.USER_ID)
						{
							this.BXIM.messenger.currentTab = 'chat'+data.CHAT_ID;
						}
						delete this.BXIM.messenger.chat[data.USER_ID];

						data.USER_ID = 'chat'+data.CHAT_ID;
						BX.MessengerCommon.getUserParam(data.USER_ID);
					}
					else if (data.USER_ID.toString().substr(0,3) == 'crm')
					{
						if (this.BXIM.messenger.currentTab == data.USER_ID)
						{
							this.BXIM.messenger.currentTab = 'chat'+data.CHAT_ID;
						}
						delete this.BXIM.messenger.chat[data.USER_ID];

						data.USER_ID = 'chat'+data.CHAT_ID;
						BX.MessengerCommon.getUserParam(data.USER_ID);
					}
				}
				else
				{
					this.BXIM.messenger.userChat[userId] = data.CHAT_ID;

					BX.MessengerCommon.getUserParam(userId, true);
					this.BXIM.messenger.users[userId].name = BX.message('IM_M_USER_NO_ACCESS');
				}

				for (var i in data.USERS)
				{
					data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
					data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
					data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
					data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

					this.BXIM.messenger.users[i] = data.USERS[i];
				}

				for (var i in data.PHONES)
				{
					this.BXIM.messenger.phones[i] = {};
					for (var j in data.PHONES[i])
					{
						this.BXIM.messenger.phones[i][j] = BX.util.htmlspecialcharsback(data.PHONES[i][j]);
					}
				}
				for (var i in data.USER_IN_GROUP)
				{
					if (typeof(this.BXIM.messenger.userInGroup[i]) == 'undefined' || typeof(this.BXIM.messenger.userInGroup[i].users) == 'undefined' || !this.BXIM.messenger.userInGroup[i].users.length)
					{
						this.BXIM.messenger.userInGroup[i] = data.USER_IN_GROUP[i];
					}
					else
					{
						for (var j = 0; j < data.USER_IN_GROUP[i].users.length; j++)
							this.BXIM.messenger.userInGroup[i].users.push(data.USER_IN_GROUP[i].users[j]);

						this.BXIM.messenger.userInGroup[i].users = BX.util.array_unique(this.BXIM.messenger.userInGroup[i].users)
					}
				}

				if (!userIsChat && data.USER_LOAD == 'Y')
					BX.MessengerCommon.userListRedraw();

				for (var i in data.FILES)
				{
					if (!this.BXIM.messenger.disk.files[data.CHAT_ID])
						this.BXIM.messenger.disk.files[data.CHAT_ID] = {};

					data.FILES[i].date = new Date(data.FILES[i].date);
					this.BXIM.messenger.disk.files[data.CHAT_ID][i] = data.FILES[i];
				}

				this.BXIM.messenger.sendAjaxTry = 0;
				var messageCnt = 0;
				for (var i in data.MESSAGE)
				{
					messageCnt++;

					data.MESSAGE[i].date = new Date(data.MESSAGE[i].date);
					data.MESSAGE[i].textOriginal = data.MESSAGE[i].text;
					data.MESSAGE[i].text = BX.MessengerCommon.prepareText(data.MESSAGE[i].text, true, true, true);

					this.BXIM.messenger.message[i] = data.MESSAGE[i];
					this.BXIM.lastRecordId = parseInt(i) > this.BXIM.lastRecordId? parseInt(i): this.BXIM.lastRecordId;
				}

				if (messageCnt > 0)
				{
					delete this.BXIM.messenger.redrawTab[userId];
				}

				if (typeof this.BXIM.messenger.showMessage[userId] !== 'undefined')
				{
					this.BXIM.messenger.showMessage[userId] = this.BXIM.messenger.showMessage[userId].filter(function(element) {
						return element.toString().startsWith('birthday') || element.toString().startsWith('temp');
					});
				}

				for (var i in data.USERS_MESSAGE)
				{
					if (this.BXIM.messenger.showMessage[i])
						this.BXIM.messenger.showMessage[i] = BX.util.array_unique(BX.util.array_merge(data.USERS_MESSAGE[i], this.BXIM.messenger.showMessage[i]));
					else
						this.BXIM.messenger.showMessage[i] = data.USERS_MESSAGE[i];
				}
				if (userIsChat && this.BXIM.messenger.chat[data.USER_ID.toString().substr(4)] && this.BXIM.messenger.chat[data.USER_ID.toString().substr(4)].fake)
				{
					this.BXIM.messenger.chat[data.USER_ID.toString().substr(4)].name = BX.message('IM_M_USER_NO_ACCESS');
				}

				for (var i in data.CHAT)
				{
					data.CHAT[i].date_create = new Date(data.CHAT[i].date_create);
					this.BXIM.messenger.chat[i] = data.CHAT[i];
				}
				for (var i in data.USER_IN_CHAT)
				{
					this.BXIM.messenger.userInChat[i] = data.USER_IN_CHAT[i];
				}
				for (var i in data.USER_BLOCK_CHAT)
				{
					this.BXIM.messenger.userChatBlockStatus[i] = data.USER_BLOCK_CHAT[i];
				}

				if (this.isMobile() && typeof fabric != 'undefined')
				{
					fabric.Answers.sendCustomEvent("imOpenDialog", {});

					if (data.CHAT && data.CHAT[data.CHAT_ID])
					{
						if (data.CHAT[data.CHAT_ID].type == 'lines')
							fabric.Answers.sendCustomEvent("imOpenDialogLines", {});
						else
							fabric.Answers.sendCustomEvent("imOpenDialogChat", {});
					}
					else
					{
						fabric.Answers.sendCustomEvent("imOpenDialogPrivate", {});
					}
				}

				if (data.OPENLINES.canVoteAsHead)
				{
					if (!this.BXIM.messenger.openlines.canVoteAsHead)
					{
						this.BXIM.messenger.openlines.canVoteAsHead = {};
					}

					for (var i in data.OPENLINES.canVoteAsHead)
					{
						this.BXIM.messenger.openlines.canVoteAsHead[i] = data.OPENLINES.canVoteAsHead[i];
					}
				}

				if (this.BXIM.messenger.currentTab == data.USER_ID)
				{
					if (this.BXIM.messenger.currentTab.toString().substr(0, 4) == 'chat' && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)] && this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type == 'call')
					{
						this.BXIM.messenger.openCallFlag = true;
					}
				}
				if (data.NETWORK_ID != '')
				{
					this.BXIM.messenger.currentTab = data.USER_ID? data.USER_ID: 0;

					delete this.BXIM.messenger.users[data.NETWORK_ID];
					if (!this.BXIM.messenger.bot[data.USER_ID])
					{
						this.BXIM.messenger.bot[data.USER_ID] = this.BXIM.messenger.bot[data.NETWORK_ID];
					}
					delete this.BXIM.messenger.bot[data.NETWORK_ID];

					if (this.isMobile() && this.MobileActionEqual('DIALOG'))
					{
						app.onCustomEvent('onImDialogNetworkOpen', {NETWORK_ID: data.NETWORK_ID, USER_ID: data.USER_ID, USER: this.BXIM.messenger.users[data.USER_ID]});
					}
				}

				if (userIsChat)
				{
					for (var i in data.READED_LIST)
					{
						for (var ii in data.READED_LIST[i])
						{
							data.READED_LIST[i][ii].date = new Date(data.READED_LIST[i][ii].date);
						}
						this.BXIM.messenger.readedList[i] = data.READED_LIST[i];
					}
				}
				else
				{
					for (var i in data.READED_LIST)
					{
						data.READED_LIST[i].date = new Date(data.READED_LIST[i].date);
						this.BXIM.messenger.readedList[i] = data.READED_LIST[i];
					}
				}

				if (userIsChat && this.BXIM.messenger.chat[data.CHAT_ID] && this.BXIM.messenger.chat[data.CHAT_ID].type == 'livechat')
				{
					var session = this.livechatGetSession(data.CHAT_ID);
					if (session.readed == 'Y')
					{
						session.readedTime = session.readedTime? new Date(session.readedTime): new Date();
						this.BXIM.messenger.readedList['chat'+data.CHAT_ID] = {
							'messageId' : session.readedId,
							'date' : session.readedTime
						};
					}
				}

				this.changeUnreadMessage(data.UNREAD_MESSAGE);

				this.drawTab(data.USER_ID, this.BXIM.messenger.currentTab == data.USER_ID, messageCnt);

				if (this.BXIM.messenger.currentTab == data.USER_ID && this.BXIM.messenger.readedList[data.USER_ID])
				{
					if (this.BXIM.messenger.openChatFlag)
					{
						this.drawReadMessageChat(data.USER_ID, false);
					}
					else
					{
						this.drawReadMessage(data.USER_ID, this.BXIM.messenger.readedList[data.USER_ID].messageId, this.BXIM.messenger.readedList[data.USER_ID].date, false);
					}
				}

				this.BXIM.messenger.historyWindowBlock = false;

				if (this.BXIM.isFocus())
				{
					this.readMessage(data.USER_ID, true, BX.MessengerCommon.getCounter(data.USER_ID) > 0);
				}

				if (this.isMobile())
				{
					setTimeout(BX.delegate(function(){this.BXIM.messenger.autoScroll()}, this), 100);
				}

				BX.onCustomEvent(window, 'onImLoadLastMessage', [userId, true, data]);
				callback(userId, true, data);
			}
			else
			{
				this.BXIM.messenger.redrawTab[userId] = true;
				if (data.ERROR == 'ACCESS_DENIED' && this.BXIM.messenger.currentTab == userId)
				{
					if (BX.MessengerProxy)
					{
						BX.MessengerProxy.sendAccessDeniedErrorEvent(data.USER_ID);
					}
					this.BXIM.messenger.currentTab = 0;
					this.BXIM.messenger.openChatFlag = false;
					this.BXIM.messenger.openCallFlag = false;
					this.BXIM.messenger.openLinesFlag = false;
					this.BXIM.messenger.extraClose();
				}
				else if (data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
				{
					this.BXIM.messenger.sendAjaxTry++;
					setTimeout(BX.delegate(function(){this.loadLastMessage(userId)}, this), 2000);
					BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
				}
				else if (data.ERROR == 'AUTHORIZE_ERROR')
				{
					this.BXIM.messenger.sendAjaxTry++;
					if (this.isDesktop() || this.isMobile())
					{
						setTimeout(BX.delegate(function (){
							this.loadLastMessage(userId)
						}, this), 10000);
					}
					BX.onCustomEvent(window, 'onImError', [data.ERROR]);
				}
				callback(userId, false, data);
			}
		}, this);

		var readMessage = this.isMobile() || this.BXIM.isFocus();
		if (
			userIsChat &&
			this.BXIM.messenger.chat[chatId] &&
			this.BXIM.messenger.chat[chatId].owner == 0 &&
			this.BXIM.messenger.chat[chatId].type == 'lines'
		)
		{
			readMessage = false;
		}

		var xhr = BX.ajax({
			url: this.BXIM.pathToAjax+'?LOAD_LAST_MESSAGE&D='+userId+'&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			data: {
				'IM_LOAD_LAST_MESSAGE' : 'Y',
				'CHAT' : userIsChat? 'Y': 'N',
				'USER_ID' : userId,
				'USER_LOAD' : 'Y',
				'TAB' : this.BXIM.messenger.currentTab,
				//'READ' : readMessage? 'Y': 'N',
				'MOBILE' : this.isMobile()? 'Y': 'N',
				'FOCUS' : !this.isMobile() || typeof BXMobileAppContext != "object" || BXMobileAppContext.isBackground()? 'N': 'Y',
				'SEARCH_MARK' : !userIsChat && this.BXIM.messenger.users[userId] && this.BXIM.messenger.users[userId].search_mark? this.BXIM.messenger.users[userId].search_mark: '',
				'IM_AJAX_CALL' : 'Y',
				'sessid': BX.bitrix_sessid()
			},
			onsuccess: onsuccess,
			onprogress: function(data){
				if (data.position == 0 && data.totalSize == 0)
				{
					onfailure();
				}
			},
			onfailure: onfailure
		});
	};

	MessengerCommon.prototype.openDialog = function(dialogId, extraClose, callToggle)
	{
		var dialog = BX.MessengerCommon.getUserParam(dialogId);
		if (dialog.id <= 0)
			return false;

		dialogId = dialogId? dialogId: 0;

		var element = this.recentListGetItem(dialogId);
		if (element && element.unread)
		{
			this.recentListUpdateItem({
				id: dialogId,
				unread: false
			});
			this.recentListRedraw();

			BX.rest.callMethod('im.recent.unread', {'DIALOG_ID': dialogId, 'ACTION': 'N'});
		}

		this.BXIM.messenger.currentTab = dialogId;
		if (dialogId.toString().substr(0,4) == 'chat')
		{
			this.BXIM.messenger.openChatFlag = true;
			if (this.BXIM.messenger.chat[dialogId.toString().substr(4)] && this.BXIM.messenger.chat[dialogId.toString().substr(4)].type == 'call')
				this.BXIM.messenger.openCallFlag = true;
			else if (this.BXIM.messenger.chat[dialogId.toString().substr(4)] && this.BXIM.messenger.chat[dialogId.toString().substr(4)].type == 'lines')
			{
				if (!this.BXIM.bitrixOpenLines)
				{
					return false;
				}
				this.BXIM.messenger.openLinesFlag = true;
			}
		}

		BX.localStorage.set('mct', this.BXIM.messenger.currentTab, 15);

		if (this.isMobile())
		{
			this.BXIM.messenger.dialogStatusRedrawDelay();
		}
		else
		{
			this.BXIM.messenger.dialogStatusRedraw();
		}

		if (!this.isMobile())
		{
			if (this.BXIM.messenger.popupMessengerPanel)
			{
				this.BXIM.messenger.popupMessengerPanel.className  = this.BXIM.messenger.openChatFlag? 'bx-messenger-panel bx-messenger-hide': 'bx-messenger-panel';
			}

			if (this.BXIM.messenger.openChatFlag)
			{
				this.BXIM.messenger.popupMessengerPanelChat.className = this.BXIM.messenger.openCallFlag? 'bx-messenger-panel bx-messenger-hide': 'bx-messenger-panel';
				this.BXIM.messenger.popupMessengerPanelCall.className = this.BXIM.messenger.openCallFlag? 'bx-messenger-panel': 'bx-messenger-panel bx-messenger-hide';
			}
			else
			{
				this.BXIM.messenger.popupMessengerPanelChat.className = 'bx-messenger-panel bx-messenger-hide';
				this.BXIM.messenger.popupMessengerPanelCall.className = 'bx-messenger-panel bx-messenger-hide';
			}
		}

		extraClose = extraClose == true;
		callToggle = callToggle === true;

		var arMessage = [];
		if (typeof(this.BXIM.messenger.showMessage[dialogId]) != 'undefined' && this.BXIM.messenger.showMessage[dialogId].length > 0)
		{
			if (
				!this.isMobile()
				&& this.BXIM.messenger.showMessage[dialogId]
				&& this.BXIM.messenger.showMessage[dialogId].length != 0
				&& this.BXIM.messenger.showMessage[dialogId].length == BX.MessengerCommon.getCounter(dialogId)
			)
			{
				this.drawTab(dialogId, true);

				BX.addClass(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-loading');
				var loading = BX.create("div", { props : { className : "bx-notifier-content-link-history"}, children : [
					BX.create('span', { props : { className : "bx-messenger-content-load-img" }}),
					BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: BX.message('IM_M_LOAD_MESSAGE')})
				]});
				this.BXIM.messenger.redrawTab[dialogId] = true;

				this.BXIM.messenger.popupMessengerBodyWrap.insertBefore(loading, this.BXIM.messenger.popupMessengerBodyWrap.firstChild);

				if (this.isMobile())
				{
					setTimeout(BX.delegate(function(){this.BXIM.messenger.autoScroll()}, this), 100);
				}
			}
			else if (!dialog.fake && this.BXIM.messenger.showMessage[dialogId].length >= 15)
			{
				if (this.isMobile() && this.BXIM.webComponent)
				{
					this.drawTab(dialogId, true);
					this.BXIM.messenger.redrawTab[dialogId] = true;
				}
				else if (this.BXIM.messenger.redrawTab[dialogId])
				{
					this.drawTab(dialogId, true);
				}
				// else // TODO remove this later
				// {
				//	this.BXIM.messenger.redrawTab[dialogId] = false;
				// }
			}
			else
			{
				this.drawTab(dialogId, true);
				this.BXIM.messenger.redrawTab[dialogId] = true;
			}
		}
		else if (this.BXIM.messenger.popupMessengerConnectionStatusState != 'online')
		{
			BX.addClass(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-loading');
			arMessage = [BX.create("div", { props : { className : "bx-messenger-content-empty"}, children : [
				BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: BX.message("IM_M_LOAD_ERROR")})
			]})];
			this.BXIM.messenger.redrawTab[dialogId] = true;
		}
		else if (typeof(this.BXIM.messenger.showMessage[dialogId]) == 'undefined')
		{
			BX.addClass(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-loading');
			arMessage = [BX.create("div", { props : { className : "bx-messenger-content-load"}, children : [
				BX.create('span', { props : { className : "bx-messenger-content-load-img" }}),
				BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: BX.message('IM_M_LOAD_MESSAGE')})
			]})];
			this.BXIM.messenger.redrawTab[dialogId] = true;
		}
		else if (this.BXIM.messenger.redrawTab[dialogId] && this.BXIM.messenger.showMessage[dialogId].length == 0)
		{
			BX.addClass(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-loading');
			arMessage = [BX.create("div", { props : { className : "bx-messenger-content-load"}, children : [
				BX.create('span', { props : { className : "bx-messenger-content-load-img" }}),
				BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: BX.message("IM_M_LOAD_MESSAGE")})
			]})];
			this.BXIM.messenger.showMessage[dialogId] = [];
		}
		else
		{
			var messageEmpty = "";
			if (this.isBot(dialogId) && this.BXIM.messenger.users[dialogId])
			{
				messageEmpty = BX.message("IM_M_NO_MESSAGE_BOT").replace('#BOT_NAME#', this.BXIM.messenger.users[dialogId].name);
			}
			else
			{
				messageEmpty = BX.message("IM_M_NO_MESSAGE");
			}
			BX.removeClass(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-loading');
			arMessage = [BX.create("div", { props : { className : "bx-messenger-content-empty"}, children : [
				BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: messageEmpty})
			]})];
		}
		if (arMessage.length > 0)
		{
			this.BXIM.messenger.popupMessengerBodyWrap.innerHTML = '';
			BX.adjust(this.BXIM.messenger.popupMessengerBodyWrap, {children: arMessage});
		}

		if (extraClose)
			this.BXIM.messenger.extraClose();

		if (callToggle && this.BXIM.callController && this.BXIM.callController.hasActiveCall())
			this.BXIM.callController.showChat();

		if (this.isMobile())
		{
			BXMobileApp.UI.Page.TextPanel.setText(this.BXIM.messenger.textareaHistory[dialogId]? this.BXIM.messenger.textareaHistory[dialogId]: "");
		}
		else
		{
			this.BXIM.messenger.popupMessengerTextarea.value = this.BXIM.messenger.textareaHistory[dialogId]? this.BXIM.messenger.textareaHistory[dialogId]: "";
		}

		if (this.BXIM.messenger.redrawTab[dialogId])
		{
			this.loadLastMessage(dialogId);
		}
		else
		{
			this.drawTab(dialogId, true);
			if (this.isMobile())
			{
				this.BXIM.isFocusMobile(BX.delegate(function(visible){
					if (visible)
					{
						BX.MessengerCommon.readMessage(dialogId);
					}
				},this));
			}
			else if (this.BXIM.isFocus())
			{
				this.readMessage(dialogId);
			}
		}

		if (!this.isMobile())
			this.BXIM.messenger.resizeMainWindow();

		if (BX.MessengerCommon.countWriting(dialogId))
		{
			if (this.BXIM.messenger.openChatFlag)
				BX.MessengerCommon.drawWriting(0, dialogId);
			else
				BX.MessengerCommon.drawWriting(dialogId);
		}
		else if (this.BXIM.messenger.readedList[dialogId])
		{
			if (this.BXIM.messenger.openChatFlag)
			{
				this.drawReadMessageChat(dialogId, false);
			}
			else
			{
				this.drawReadMessage(dialogId, this.BXIM.messenger.readedList[dialogId].messageId, this.BXIM.messenger.readedList[dialogId].date, false);
			}
		}

		BX.onCustomEvent("onImDialogOpen", [{id: dialogId}]);
		if (this.isMobile())
		{
			BXMobileApp.onCustomEvent('onImDialogOpen', {'id': dialogId}, true);
		}
		else
		{
			this.BXIM.messenger.linesShowPromo();
			this.support24QuestionShowPromo();
		}
	};

	MessengerCommon.prototype.support24QuestionShowPromo = function()
	{
		clearTimeout(this.support24QuestionSchedulePromoTimeout);
		this.support24QuestionSchedulePromoTimeout = null;

		clearTimeout(this.support24QuestionShowPromoTimeout);
		this.support24QuestionShowPromoTimeout = null;

		if (
			!this.BXIM.messenger.currentTab
			|| !this.BXIM.messenger.bot[this.BXIM.messenger.currentTab]
			|| this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type !== 'support24'
			|| !BX.MessengerPromo
			|| typeof BX.MessengerPromo.show !== 'function'
		)
		{
			return false;
		}

		if (this.BXIM.messenger.popupMessengerTextarea.disabled)
		{
			this.support24QuestionSchedulePromoTimeout = setTimeout(this.support24QuestionShowPromo.bind(this), 5000);

			return true;
		}

		this.support24QuestionShowPromoTimeout = setTimeout(function () {
			var applicationButton =
				document.getElementsByClassName('bx-messenger-textarea-icon-marketplace-app-question')[0]
			;

			if (!applicationButton)
			{
				return;
			}

			BX.MessengerPromo.show(
				'imbot:support24:25112021:web',
				applicationButton,
				{ offsetLeft: 15 }
			);
		}, 20000);
	};

	MessengerCommon.prototype.drawTab = function(userId, scroll, messageCount, changeTab)
	{
		messageCount = messageCount || 0;
		changeTab = changeTab !== false;

		if (!userId)
		{
			userId = this.BXIM.messenger.currentTab;
		}

		if (this.BXIM.messenger.popupMessenger == null || userId != this.BXIM.messenger.currentTab)
			return false;

		if (typeof(this.messageGroup) != 'object')
		{
			this.messageGroup = {};
		}
		this.messageGroup['default'] = {};

		var openPageTabIm = true;

		if (this.BXIM.messenger.openChatFlag)
		{
			var chatId = userId.toString().substr(4);
			if (this.BXIM.messenger.chat[chatId])
			{
				if (this.BXIM.messenger.chat[chatId].type == 'open')
				{
					if (!BX.MessengerCommon.userInChat(chatId))
					{
						if (this.isMobile())
						{
							BXMobileApp.onCustomEvent('onPullExtendWatch', {'id': 'IM_PUBLIC_'+chatId, force: this.BXIM.messenger.redrawTab[userId]? false: true}, true);
						}
						else
						{
							BX.PULL.extendWatch('IM_PUBLIC_'+chatId, this.BXIM.messenger.redrawTab[userId]? false: true);
						}
					}
				}
				else if (this.BXIM.messenger.chat[chatId].type == 'lines' && this.isLinesOperator())
				{
					openPageTabIm = false;
				}
			}
		}

		if (this.isPage() && changeTab)
		{
			if (openPageTabIm)
			{
				if (BX.MessengerWindow.currentTab != 'im')
				{
					BX.MessengerWindow.changeTab('im');
				}
			}
			else
			{
				if (BX.MessengerWindow.currentTab != 'im-ol')
				{
					BX.MessengerWindow.changeTab('im-ol');
				}
			}
		}

		if (this.isMobile())
		{
			this.BXIM.messenger.dialogStatusRedrawDelay();
		}
		else
		{
			this.BXIM.messenger.dialogStatusRedraw();
		}
		this.BXIM.messenger.popupMessengerBodyWrap.innerHTML = '';
		BX.removeClass(this.BXIM.messenger.popupMessengerBodyWrap, 'bx-messenger-loading');

		if (!this.BXIM.messenger.showMessage[userId] || this.BXIM.messenger.showMessage[userId].length <= 0)
		{
			var messageEmpty = "";
			var messageEmptyButton = null;
			if (this.isBot(userId) && this.BXIM.messenger.users[userId])
			{
				messageEmpty = BX.message("IM_M_NO_MESSAGE_BOT").replace('#BOT_NAME#', this.BXIM.messenger.users[userId].name);
			}
			else
			{
				messageEmpty = BX.message("IM_M_NO_MESSAGE");
				messageEmptyButton = BX.create('span', {props : { className : "bx-notifier-content-link-history bx-notifier-content-link-history-empty" }, children: [
					BX.create('span', {props : { className : "bx-notifier-item-button bx-notifier-item-button-white" }, html: BX.message('IM_M_NO_MESSAGE_LOAD')})
				], events: {click: BX.delegate(function(){
					this.loadHistory(this.BXIM.messenger.currentTab, false, true);
				}, this)}});
			}
			this.BXIM.messenger.popupMessengerBodyWrap.appendChild(BX.create("div", { props : { className : "bx-messenger-content-empty"}, children : [
				BX.create("span", { props : { className : "bx-messenger-content-load-text"}, html: messageEmpty}),
				messageEmptyButton
			]}));
		}

		if (this.BXIM.messenger.showMessage[userId])
			this.BXIM.messenger.showMessage[userId].sort(BX.delegate(function(i, ii) {if (!this.BXIM.messenger.message[i] || !this.BXIM.messenger.message[ii]){return 0;} var i1 = this.BXIM.messenger.message[i].date.getTime(); var i2 = this.BXIM.messenger.message[ii].date.getTime(); if (i1 < i2) { return -1; } else if (i1 > i2) { return 1;} else{ if (i < ii) { return -1; } else if (i > ii) { return 1;}else{ return 0;}}}, this));
		else
			this.BXIM.messenger.showMessage[userId] = [];

		for (var i = 0; i < this.BXIM.messenger.showMessage[userId].length; i++)
		{
			if (
				this.isMobile()
				&& this.BXIM.webComponent
				&& this.BXIM.messenger.showMessage[userId][i].toString().indexOf('temp') == 0
			)
			{
				continue;
			}

			BX.MessengerCommon.drawMessage(userId, this.BXIM.messenger.message[this.BXIM.messenger.showMessage[userId][i]], false);
		}

		if (messageCount > 0 && messageCount < 30)
		{
			if (!this.BXIM.messenger.openChatFlag || this.BXIM.messenger.chat[userId.toString().substr(4)])
			{
				var skipButton = false;
				if (this.BXIM.messenger.openChatFlag && this.BXIM.messenger.chat[userId.toString().substr(4)].date_create)
				{
					if ((this.BXIM.messenger.chat[userId.toString().substr(4)].date_create.getTime()/1000)+2500000 > (new Date().getTime())/1000)
					{
						skipButton = true;
					}
				}
				if (!skipButton)
				{
					var messageEmptyButton = BX.create('span', {props : { className : "bx-notifier-content-link-history bx-notifier-content-link-history-empty" }, children: [
						BX.create('span', {props : { className : "bx-notifier-item-button bx-notifier-item-button-white" }, html: BX.message('IM_M_NO_MESSAGE_LOAD')})
					], events: {click: BX.delegate(function(){
						this.loadHistory(this.BXIM.messenger.currentTab, false, true);
					}, this)}});
					this.BXIM.messenger.popupMessengerBodyWrap.insertBefore(messageEmptyButton, this.BXIM.messenger.popupMessengerBodyWrap.firstChild);
				}
			}
		}

		if (this.BXIM.messenger.chat[chatId])
		{
			if (this.BXIM.messenger.chat[chatId].entity_type == 'LINES')
			{
				var session = BX.MessengerCommon.linesGetSession(this.BXIM.messenger.chat[chatId]);
				var line;

				if (parseInt(session.id) > 0)
				{
					for (i=0; i < this.BXIM.messenger.openlines.queue.length; i++)
					{
						if (this.BXIM.messenger.openlines.queue[i].id == session.lineId)
						{
							line = this.BXIM.messenger.openlines.queue[i];
							break;
						}
					}

					if (line && line.queue_type == 'all')
					{
						if (!BX.MessengerCommon.isSessionBlocked(chatId))
						{
							BX.style(this.BXIM.messenger.popupMessengerTextareaOpenLinesSkip, 'display', 'none');
						}
						else
						{
							BX.style(this.BXIM.messenger.popupMessengerTextareaOpenLinesSkip, 'display', 'inline-block');
						}
					}
					else
					{
						BX.style(this.BXIM.messenger.popupMessengerTextareaOpenLinesSkip, 'display', 'inline-block');
					}
				}
			}
		}

		scroll = scroll != false;
		if (scroll)
		{
			if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
				this.BXIM.messenger.popupMessengerBodyAnimation.stop();

			if (userId != this.BXIM.userId && this.BXIM.messenger.unreadMessage[userId] && this.BXIM.messenger.unreadMessage[userId].length > 0)
			{
				var textElement = BX('im-message-'+this.BXIM.messenger.unreadMessage[userId][0]);
				if (textElement && textElement.parentNode.parentNode.parentNode.parentNode.parentNode)
				{
					this.scrollToNode(textElement.parentNode.parentNode.parentNode.parentNode.parentNode);
				}
				else
				{
					this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
				}
			}
			else
			{
				this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
			}
		}

		BX.onCustomEvent("onImDrawTab", [{id: userId, hasMessage: this.BXIM.messenger.showMessage[userId] && this.BXIM.messenger.showMessage[userId].length > 0}]);
		if (BX.MessengerProxy && BX.MessengerCommon.getCounter(userId) === 0)
		{
			BX.MessengerProxy.sendCounterChangeEvent(userId, 0);
		}

		if (BX.MessengerCommon.countWriting(userId))
		{
			if (this.BXIM.messenger.openChatFlag)
				BX.MessengerCommon.drawWriting(0, userId);
			else
				BX.MessengerCommon.drawWriting(userId);
		}
		else if (this.BXIM.messenger.readedList[userId])
		{
			if (this.BXIM.messenger.openChatFlag)
			{
				this.drawReadMessageChat(userId, false);
			}
			else
			{
				this.drawReadMessage(userId, this.BXIM.messenger.readedList[userId].messageId, this.BXIM.messenger.readedList[userId].date, false);
			}
		}

		if (this.BXIM.messenger.linesWritingList[chatId])
		{
			var chatName = 'chat' + chatId;
			if (chatName === BXIM.messenger.currentTab)
			{
				BX.MessengerCommon.drawMessage(BXIM.messenger.currentTab, BXIM.messenger.linesWritingList[chatId]);

				var createdMessage = BX.findChildByClassName(
					this.BXIM.messenger.popupMessengerBodyWrap,
					"bx-messenger-content-item-id-"+BXIM.messenger.linesWritingList[chatId].id
				);

				clearTimeout(this.BXIM.messenger.linesWritingListTimeout[chatId]);
				this.BXIM.messenger.linesWritingListTimeout[chatId] = setTimeout(BX.delegate(function(){
					BX.remove(createdMessage);
					delete this.BXIM.messenger.linesWritingList[chatId];
				}, this), 29500);
			}
		}

		//delete this.BXIM.messenger.redrawTab[userId]; // TODO remove this later
	};


	MessengerCommon.prototype.scrollToNode = function(node)
	{
		var obNode = BX(node);

		var isEdge = navigator.userAgent.indexOf('Edge') > -1;
		if (!isEdge && obNode.scrollIntoView)
		{
			obNode.scrollIntoView(true);
		}
		else
		{
			var arNodePos = BX.pos(obNode);
			window.scrollTo(arNodePos.left, arNodePos.top);
		}
	}

	/* Section: Send Message */
	MessengerCommon.prototype.sendMessageAjax = function(messageTmpIndex, recipientId, messageText, sendMessageToChat, olSilentMode)
	{
		if (this.BXIM.messenger.popupMessengerConnectionStatusState != 'online')
			return false;

		BX.MessengerCommon.drawProgessMessage('temp'+messageTmpIndex);

		if (this.BXIM.messenger.sendMessageFlag < 0)
			this.BXIM.messenger.sendMessageFlag = 0;

		clearTimeout(this.BXIM.messenger.sendMessageTmpTimeout['temp'+messageTmpIndex]);
		if (this.BXIM.messenger.sendMessageTmp[messageTmpIndex])
			return false;

		this.BXIM.messenger.sendMessageTmp[messageTmpIndex] = true;
		sendMessageToChat = sendMessageToChat == true;
		this.BXIM.messenger.sendMessageFlag++;

		if (typeof olSilentMode === 'boolean')
		{
			olSilentMode = olSilentMode? 'Y': 'N';
		}
		else
		{
			olSilentMode = 'N';
			if (sendMessageToChat && this.BXIM.messenger.linesSilentMode && this.BXIM.messenger.linesSilentMode[recipientId.toString().substr(4)])
			{
				olSilentMode = 'Y';
			}
		}

		this.recentListAddItem({
			id: recipientId,
			message: {
				id: 'temp'+messageTmpIndex,
				date: new Date(),
				author_id: this.BXIM.userId,
				status: 'received',
				text: BX.util.htmlspecialchars(messageText),
				attach: false,
				file: false,
			},
		});
		this.recentListRedraw();
		this.BXIM.messenger.updateMessageCount();

		BX.onCustomEvent('onImBeforeMessageSend', [{recipientId: recipientId, messageText: messageText}]);

		if (BX.MessengerProxy)
		{
			BX.MessengerProxy.sendSetMessageEvent({
				id: 'temp'+messageTmpIndex,
				dialogId: recipientId,
				text: messageText,
				date: new Date()
			});
		}
		var _ajax = BX.ajax({
			url: this.BXIM.pathToAjax+'?MESSAGE_SEND&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'im.message.add',
				dialog: BX.MessengerCommon.getDialogDataForTracking(recipientId)
			}),
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 120,
			data: {'IM_SEND_MESSAGE' : 'Y', 'CHAT': sendMessageToChat? 'Y': 'N', 'ID' : 'temp'+messageTmpIndex, 'RECIPIENT_ID' : recipientId, 'MESSAGE' : messageText, 'OL_SILENT': olSilentMode, 'TAB' : this.BXIM.messenger.currentTab, 'USER_TZ_OFFSET': BX.message('USER_TZ_OFFSET'), 'IM_AJAX_CALL' : 'Y', 'FOCUS' : !this.isMobile() || typeof BXMobileAppContext != "object" || BXMobileAppContext.isBackground()? 'N': 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (this.isMobile() && typeof fabric != 'undefined')
				{
					fabric.Answers.sendCustomEvent("imMessageSend", {});
				}
				this.BXIM.messenger.sendMessageFlag--;

				if (data && data.BITRIX_SESSID)
				{
					BX.message({'bitrix_sessid': data.BITRIX_SESSID});
				}

				if (data && data.ERROR == '')
				{
					this.BXIM.messenger.sendAjaxTry = 0;

					if (this.BXIM.messenger.message[data.TMP_ID])
					{
						this.BXIM.messenger.message[data.TMP_ID].date = new Date(data.SEND_DATE);
						this.BXIM.messenger.message[data.TMP_ID].textOriginal = data.SEND_MESSAGE;
						this.BXIM.messenger.message[data.TMP_ID].text = BX.MessengerCommon.prepareText(data.SEND_MESSAGE, true, true, true);
						this.BXIM.messenger.message[data.TMP_ID].id = data.ID;

						if (data.SEND_MESSAGE_PARAMS)
						{
							this.BXIM.messenger.message[data.TMP_ID].params = data.SEND_MESSAGE_PARAMS;
						}

						this.BXIM.messenger.message[data.ID] = this.BXIM.messenger.message[data.TMP_ID];
						delete this.BXIM.messenger.message[data.TMP_ID]
					}

					for (var i in data.SEND_MESSAGE_FILES)
					{
						if (!this.BXIM.messenger.disk.files[data.CHAT_ID])
							this.BXIM.messenger.disk.files[data.CHAT_ID] = {};
						if (this.BXIM.messenger.disk.files[data.CHAT_ID][i])
							continue;

						data.SEND_MESSAGE_FILES[i].date = new Date(data.SEND_MESSAGE_FILES[i].date);
						this.BXIM.messenger.disk.files[data.CHAT_ID][i] = data.SEND_MESSAGE_FILES[i];
					}

					if (this.BXIM.messenger.popupMessengerLastMessage == data.TMP_ID)
						this.BXIM.messenger.popupMessengerLastMessage = data.ID;

					var message = this.BXIM.messenger.message[data.ID];

					this.BXIM.messenger.showMessage[data.RECIPIENT_ID] = this.BXIM.messenger.showMessage[data.RECIPIENT_ID].filter(function(element){
						return element != data.TMP_ID && element != data.ID
					});
					this.BXIM.messenger.showMessage[data.RECIPIENT_ID].push(data.ID);

					var item = this.BXIM.messenger.recent.find(function(item) {
						return item.message.id == data.TMP_ID;
					});
					if (item)
					{
						item.message.id = ''+data.ID+'';
					}

					if (data.RECIPIENT_ID == this.BXIM.messenger.currentTab)
					{
						var element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-messageid': ''+data.TMP_ID+''}}, true);
						if (!element)
						{
							element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-messageid': ''+data.ID+''}}, true);
						}
						if (element)
						{
							element.setAttribute('data-messageid',	''+data.ID+'');
							if (element.getAttribute('data-blockmessageid') == ''+data.TMP_ID+'')
							{
								element.setAttribute('data-blockmessageid', ''+data.ID+'');
							}
							else
							{
								var element2 = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-blockmessageid': ''+data.TMP_ID+''}}, true);
								if (element2)
								{
									element2.setAttribute('data-blockmessageid', ''+data.ID+'');
								}
							}
							var element3 = BX.findChild(element, {attribute: {'data-messageid': ''+data.TMP_ID+''}}, true);
							if (element3)
							{
								element3.setAttribute('data-messageid', ''+data.ID+'');
							}
						}

						var messageKeyboardBox = BX('im-message-keyboard-'+data.TMP_ID);
						if (messageKeyboardBox)
						{
							messageKeyboardBox.id = 'im-message-keyboard-'+data.ID;
						}
						else
						{
							messageKeyboardBox = BX('im-message-keyboard-empty-'+data.TMP_ID);
							if (messageKeyboardBox)
							{
								messageKeyboardBox.id = 'im-message-keyboard-empty-'+data.ID;
							}
						}

						BX.MessengerCommon.clearProgessMessage(data.TMP_ID);

						var textElement = BX('im-message-'+data.TMP_ID);
						if (!textElement)
						{
							textElement = BX('im-message-'+data.ID);
						}
						if (textElement)
						{
							textElement.id = 'im-message-'+data.ID;
							var objectReference = {oneSmileInMessage: false};
							textElement.innerHTML = BX.MessengerCommon.prepareText(data.SEND_MESSAGE, true, true, true, null, objectReference);
							if (objectReference.oneSmileInMessage)
							{
								var elementContent = BX.findChildByClassName(element, "bx-messenger-content-item-content");
								if (elementContent)
								{
									BX.addClass(elementContent, 'bx-messenger-content-item-content-transparent');
								}
							}
						}

						var lastMessageElementDate = BX.findChildByClassName(element, "bx-messenger-content-item-date");
						if (lastMessageElementDate)
							lastMessageElementDate.innerHTML = BX.MessengerCommon.formatDate(message.date, BX.MessengerCommon.getDateFormatType('MESSAGE'));
					}

					if (!this.BXIM.messenger.history[data.RECIPIENT_ID])
					{
						this.BXIM.messenger.history[data.RECIPIENT_ID] = [];
					}
					this.BXIM.messenger.history[data.RECIPIENT_ID] = this.BXIM.messenger.history[data.RECIPIENT_ID].filter(function(element){
						return element != message.id
					});
					this.BXIM.messenger.history[data.RECIPIENT_ID].push(message.id);

					this.BXIM.messenger.updateStateVeryFastCount = 2;
					this.BXIM.messenger.updateStateFastCount = 5;
					this.BXIM.messenger.setUpdateStateStep();

					if (data.SEND_MESSAGE_PARAMS)
					{
						if (data.SEND_MESSAGE_PARAMS.URL_ONLY == 'Y' && this.BXIM.settings.enableRichLink)
						{
							BX.addClass(element.firstElementChild, 'bx-messenger-content-item-content-rich-link');
						}
						if (data.SEND_MESSAGE_PARAMS.LARGE_FONT == 'Y' && this.BXIM.settings.enableBigSmile)
						{
							BX.addClass(element.firstElementChild, 'bx-messenger-content-item-content-large-font');
						}

						if (data.RECIPIENT_ID.toString().substr(0,4) == 'chat')
						{
							if (this.isMobile())
							{
								BX.onCustomEvent(window, "onPull-im", [{
									command: "messageParamsUpdate",
									params: {
										"id": data.ID,
										"type":'chat',
										"chatId":data.CHAT_ID,
										"senderId":data.SENDER_ID,
										"params":data.SEND_MESSAGE_PARAMS,
										"animation": 'N'
									},
									extra: {
										"revision_im_web": this.BXIM.revision,
										"revision_im_mobile": this.BXIM.revision
									}
								}]);
							}
							else
							{
								BX.onCustomEvent(window, "onPullEvent-im", ["messageParamsUpdate", {
									"id": data.ID,
									"type":'chat',
									"chatId":data.CHAT_ID,
									"senderId":data.SENDER_ID,
									"params":data.SEND_MESSAGE_PARAMS,
									"animation": 'N'
								}, {
									"revision_im_web": this.BXIM.revision,
									"revision_im_mobile": this.BXIM.revision
								}]);
							}
						}
						else
						{
							if (this.isMobile())
							{
								BX.onCustomEvent(window, "onPull-im", [{
									command: "messageParamsUpdate",
									params: {
										"id": data.ID,
										"type":'private',
										"chatId":data.CHAT_ID,
										"fromUserId":data.SENDER_ID,
										"toUserId":data.RECIPIENT_ID,
										"senderId":data.SENDER_ID,
										"params":data.SEND_MESSAGE_PARAMS,
										"animation": 'N'
									},
									extra: {
										"revision_im_web": this.BXIM.revision,
										"revision_im_mobile": this.BXIM.revision,
									}
								}]);
							}
							else
							{
								BX.onCustomEvent(window, "onPullEvent-im", ["messageParamsUpdate", {
									"id": data.ID,
									"type":'private',
									"chatId":data.CHAT_ID,
									"fromUserId":data.SENDER_ID,
									"toUserId":data.RECIPIENT_ID,
									"senderId":data.SENDER_ID,
									"params":data.SEND_MESSAGE_PARAMS,
									"animation": 'N'
								}, {
									"revision_im_web": this.BXIM.revision,
									"revision_im_mobile": this.BXIM.revision
								}]);
							}
						}
					}

					BX.MessengerCommon.updateStateVar(data, true, true);
					BX.localStorage.set('msm2', {'id': data.ID, 'recipientId': data.RECIPIENT_ID, 'date': data.SEND_DATE, 'text' : data.SEND_MESSAGE, 'senderId' : this.BXIM.userId, 'MESSAGE': data.MESSAGE, 'USERS_MESSAGE': data.USERS_MESSAGE, 'USERS': data.USERS, 'USER_IN_GROUP': data.USER_IN_GROUP}, 5);

					if (this.isMobile() && document.body.offsetHeight <= window.innerHeight)
					{
						this.BXIM.messenger.popupMessengerBody.scrollTop = 0;
					}
					else if (this.BXIM.animationSupport)
					{
						if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
							this.BXIM.messenger.popupMessengerBodyAnimation.stop();
						(this.BXIM.messenger.popupMessengerBodyAnimation = new BX.easing({
							duration : 800,
							start : { scroll : this.BXIM.messenger.popupMessengerBody.scrollTop},
							finish : { scroll : this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1)},
							transition : BX.easing.makeEaseInOut(BX.easing.transitions.quart),
							step : BX.delegate(function(state){
								this.BXIM.messenger.popupMessengerBody.scrollTop = state.scroll;
							}, this)
						})).animate();
					}
					else
					{
						this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(this.isMobile()? 0: 1);
					}

					//if (this.MobileActionEqual('RECENT') && (this.BXIM.messenger.recentList || this.BXIM.messenger.recentListExternal))
					//	this.recentListRedraw();
				}
				else
				{
					if (data && data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
					{
						this.BXIM.messenger.sendAjaxTry++;
						setTimeout(BX.delegate(function(){
							this.BXIM.messenger.sendMessageTmp[messageTmpIndex] = false;
							this.sendMessageAjax(messageTmpIndex, recipientId, messageText, sendMessageToChat);
						}, this), 2000);
						BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
					}
					else if (data && data.ERROR == 'AUTHORIZE_ERROR')
					{
						this.BXIM.messenger.sendAjaxTry++;
						if (this.isDesktop() || this.isMobile())
						{
							setTimeout(BX.delegate(function (){
								this.BXIM.messenger.sendMessageTmp[messageTmpIndex] = false;
								this.sendMessageAjax(messageTmpIndex, recipientId, messageText, sendMessageToChat);
							}, this), 10000);
						}
						BX.onCustomEvent(window, 'onImError', [data.ERROR]);
					}
					else
					{
						this.BXIM.messenger.sendMessageTmp[messageTmpIndex] = false;
						var element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-messageid': 'temp'+messageTmpIndex}}, true);
						var lastMessageElementDate = BX.findChildByClassName(element, "bx-messenger-content-item-date");
						console.warn(lastMessageElementDate);
						if (lastMessageElementDate)
						{
							if (data.ERROR == 'SESSION_ERROR' || data.ERROR == 'AUTHORIZE_ERROR' || data.ERROR == 'UNKNOWN_ERROR' || data.ERROR == 'IM_MODULE_NOT_INSTALLED')
								lastMessageElementDate.innerHTML = BX.message('IM_M_NOT_DELIVERED');
							else
								lastMessageElementDate.innerHTML = data.ERROR;
						}
						BX.onCustomEvent(window, 'onImError', ['SEND_ERROR', data.ERROR, data.TMP_ID, data.SEND_DATE, data.SEND_MESSAGE, data.RECIPIENT_ID]);

						console.log('temp'+messageTmpIndex);
						BX.MessengerCommon.drawProgessMessage('temp'+messageTmpIndex, {title: BX.message('IM_M_RETRY'), chat: sendMessageToChat? 'Y':'N'});

						if (this.BXIM.messenger.message['temp'+messageTmpIndex])
							this.BXIM.messenger.message['temp'+messageTmpIndex].retry = true;
					}
				}
			}, this),
			onfailure: BX.delegate(function()	{
				this.BXIM.messenger.sendMessageFlag--;
				this.BXIM.messenger.sendMessageTmp[messageTmpIndex] = false;
				var element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-messageid': 'temp'+messageTmpIndex}}, true);
				var lastMessageElementDate = BX.findChildByClassName(element, "bx-messenger-content-item-date");
				if (lastMessageElementDate)
					lastMessageElementDate.innerHTML = BX.message('IM_M_NOT_DELIVERED');

				BX.MessengerCommon.drawProgessMessage('temp'+messageTmpIndex, {title: BX.message('IM_M_RETRY'), chat: sendMessageToChat? 'Y':'N'});

				this.BXIM.messenger.sendAjaxTry = 0;
				try {
					if (typeof(_ajax) == 'object' && _ajax.status == 0)
						BX.onCustomEvent(window, 'onImError', ['CONNECT_ERROR']);
				}
				catch(e) {}
				if (this.BXIM.messenger.message['temp'+messageTmpIndex])
					this.BXIM.messenger.message['temp'+messageTmpIndex].retry = true;
			}, this)
		});
	};

	MessengerCommon.prototype.sendMessageRetry = function()
	{
		var currentTab = this.BXIM.messenger.currentTab;
		var messageStack = [];
		for (var i = 0; i < this.BXIM.messenger.showMessage[currentTab].length; i++)
		{
			var message = this.BXIM.messenger.message[this.BXIM.messenger.showMessage[currentTab][i]];
			if (!message || message.id.toString().indexOf('temp') != 0)
				continue;

			message.text = message.textOriginal;
			if (!message.text)
				continue;

			messageStack.push(message);
		}
		if (messageStack.length <= 0)
			return false;

		messageStack.sort(function(i, ii) {i = i.id.substr(4); ii = ii.id.substr(4); if (i < ii) { return -1; } else if (i > ii) { return 1;}else{ return 0;}});
		for (var i = 0; i < messageStack.length; i++)
		{
			this.sendMessageRetryTimeout(messageStack[i], 100*i);
		}
	};

	MessengerCommon.prototype.sendMessageRetryTimeout = function(message, timeout)
	{
		var messageLinesHidden = undefined;
		if (message.params && message.params.CLASS === "bx-messenger-content-item-system")
		{
			messageLinesHidden = true;
		}
		clearTimeout(this.BXIM.messenger.sendMessageTmpTimeout[message.id]);
		this.BXIM.messenger.sendMessageTmpTimeout[message.id] = setTimeout(BX.delegate(function() {
			BX.MessengerCommon.sendMessageAjax(
				message.id.substr(4),
				message.recipientId,
				message.text,
				message.recipientId.toString().substr(0,4) == 'chat',
				messageLinesHidden
			);
		}, this), timeout);
	};

	MessengerCommon.prototype.getLastMessageInDialog = function(dialogId)
	{
		var result = false;

		if (this.BXIM.messenger.showMessage[dialogId] && this.BXIM.messenger.showMessage[dialogId].length > 0)
		{
			var lastId = this.BXIM.messenger.showMessage[dialogId][this.BXIM.messenger.showMessage[dialogId].length-1];
			result = this.BXIM.messenger.message[lastId];
		}

		return result;
	}

	MessengerCommon.prototype.joinToChat = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
		{
			return false;
		}

		if (
			this.BXIM.messenger.chat[chatId]
			&& !(
				this.BXIM.messenger.chat[chatId].type == 'open'
				|| this.BXIM.messenger.chat[chatId].type == 'announcement'
			)
		)
		{
			return false;
		}

		if (BX.MessengerCommon.userInChat(chatId))
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?CHAT_JOIN&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 60,
			data: {'IM_CHAT_JOIN' : 'Y', 'CHAT_ID' : chatId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;

				this.BXIM.messenger.popupMessengerTextarea.disabled = false;
				this.BXIM.messenger.popupMessengerTextarea.focus();
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};

	MessengerCommon.prototype.messageUrlAttachDelete = function(messageId, attachId)
	{
		if (
			messageId.toString().substr(0,4) == 'temp'
			|| !this.BXIM.messenger.message[messageId]
			|| !this.BXIM.messenger.message[messageId].params
			|| !this.BXIM.messenger.message[messageId].params.ATTACH
			|| !this.BXIM.messenger.message[messageId].params.URL_ID
			|| this.BXIM.messenger.message[messageId].params.URL_ID.indexOf(parseInt(attachId)) == -1 && this.BXIM.messenger.message[messageId].params.URL_ID.indexOf(attachId.toString()) == -1
		)
		{
			return false;
		}

		for (var i = 0; i < this.BXIM.messenger.message[messageId].params.ATTACH.length; i++)
		{
			if (!this.BXIM.messenger.message[messageId].params.ATTACH[i])
				continue;

			if (this.BXIM.messenger.message[messageId].params.ATTACH[i].ID == attachId)
			{
				delete this.BXIM.messenger.message[messageId].params.ATTACH[i];
				break;
			}
		}
		for (var i = 0; i < this.BXIM.messenger.message[messageId].params.URL_ID.length; i++)
		{
			if (!this.BXIM.messenger.message[messageId].params.URL_ID[i])
				continue;

			if (this.BXIM.messenger.message[messageId].params.URL_ID[i] == attachId)
			{
				delete this.BXIM.messenger.message[messageId].params.URL_ID[i];
				break;
			}
		}

		var messageBox = BX('im-message-'+messageId);
		var attachNode = BX.MessengerCommon.drawAttach(messageId, this.BXIM.messenger.message[messageId].chatId, this.BXIM.messenger.message[messageId].params.ATTACH);
		messageBox.nextElementSibling.innerHTML = '';
		if (attachNode.length > 0)
		{
			BX.adjust(messageBox.nextElementSibling, {children: attachNode});
		}
		if (attachNode.length <= 0)
		{
			BX.removeClass(messageBox.parentNode.parentNode.parentNode.parentNode, 'bx-messenger-content-item-content-rich-link');
		}

		BX.ajax({
			url: this.BXIM.pathToAjax+'?URL_ATTACH_DELETE&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 30,
			data: {'IM_URL_ATTACH_DELETE' : 'Y', 'ID': messageId, 'ATTACH_ID' : attachId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()}
		});

		return true;
	}

	MessengerCommon.prototype.messageLike = function(messageId, onlyDraw)
	{
		if (
			messageId.toString().substr(0,4) == 'temp'
			|| !this.BXIM.messenger.message[messageId]
			|| this.BXIM.messenger.popupMessengerLikeBlock[messageId]
		)
		{
			return false;
		}

		onlyDraw = typeof(onlyDraw) == 'undefined'? false: onlyDraw;

		if (!this.BXIM.messenger.message[messageId].params)
		{
			this.BXIM.messenger.message[messageId].params = {};
		}
		if (!this.BXIM.messenger.message[messageId].params.LIKE)
		{
			this.BXIM.messenger.message[messageId].params.LIKE = [];
		}

		var iLikeThis = BX.util.in_array(this.BXIM.userId, this.BXIM.messenger.message[messageId].params.LIKE);
		if (!onlyDraw)
		{
			var likeAction = iLikeThis? 'minus': 'plus';
			if (likeAction == 'plus')
			{
				this.BXIM.messenger.message[messageId].params.LIKE.push(this.BXIM.userId);
				iLikeThis = true;
			}
			else
			{
				var newLikeArray = [];
				for (var i = 0; i < this.BXIM.messenger.message[messageId].params.LIKE.length; i++)
				{
					if (this.BXIM.messenger.message[messageId].params.LIKE[i] != this.BXIM.userId)
					{
						newLikeArray.push(this.BXIM.messenger.message[messageId].params.LIKE[i])
					}
				}
				this.BXIM.messenger.message[messageId].params.LIKE = newLikeArray;
				iLikeThis = false;
			}
		}
		var likeCount = this.BXIM.messenger.message[messageId].params.LIKE.length > 0? this.BXIM.messenger.message[messageId].params.LIKE.length: '';

		if (BX('im-message-'+messageId))
		{
			var element = BX.findChild(this.BXIM.messenger.popupMessengerBodyWrap, {attribute: {'data-blockmessageid': ''+messageId+''}}, false);
			var elementLike = BX.findChildByClassName(element, "bx-messenger-content-item-like");
			var elementLikeDigit = BX.findChildByClassName(element, "bx-messenger-content-like-digit", false);

			if (iLikeThis)
			{
				BX.addClass(elementLike, 'bx-messenger-content-item-liked');
			}
			else
			{
				BX.removeClass(elementLike, 'bx-messenger-content-item-liked');
			}

			if (likeCount>0)
			{
				elementLikeDigit.setAttribute('title', BX.message('IM_MESSAGE_LIKE_LIST'));
				BX.removeClass(elementLikeDigit.parentNode, 'bx-messenger-content-like-digit-off');
			}
			else
			{
				elementLikeDigit.setAttribute('title', '');
				BX.addClass(elementLikeDigit.parentNode, 'bx-messenger-content-like-digit-off');
			}

			elementLikeDigit.innerHTML = likeCount;
		}

		if (this.isMobile())
		{
			app.exec("callVibration");
		}

		if (!onlyDraw)
		{
			clearTimeout(this.BXIM.messenger.popupMessengerLikeBlockTimeout[messageId]);
			this.BXIM.messenger.popupMessengerLikeBlockTimeout[messageId] = setTimeout(BX.delegate(function(){
				this.BXIM.messenger.popupMessengerLikeBlock[messageId] = true;
				BX.ajax({
					url: this.BXIM.pathToAjax+'?MESSAGE_LIKE&V='+this.BXIM.revision,
					method: 'POST',
					dataType: 'json',
					skipAuthCheck: true,
					timeout: 30,
					data: {'IM_LIKE_MESSAGE' : 'Y', 'ID': messageId, 'ACTION' : likeAction, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
					onsuccess: BX.delegate(function(data) {
						if (data.ERROR == '')
						{
							this.BXIM.messenger.message[messageId].params.LIKE = data.LIKE;
						}
						this.BXIM.messenger.popupMessengerLikeBlock[messageId] = false;
						BX.MessengerCommon.messageLike(messageId, true);
					}, this),
					onfailure: BX.delegate(function(data) {
						this.BXIM.messenger.popupMessengerLikeBlock[messageId] = false;
					}, this)
				});
			},this), 1000);
		}

		return true;
	}

	MessengerCommon.prototype.messageIsLike = function(messageId)
	{
		return (
			this.BXIM.messenger.message[messageId]
			&& this.BXIM.messenger.message[messageId].params
			&& typeof(this.BXIM.messenger.message[messageId].params.LIKE) == "object"
			&& BX.util.in_array(this.BXIM.userId, this.BXIM.messenger.message[messageId].params.LIKE)
		);
	};

	MessengerCommon.prototype.checkEditMessage = function(id, type)
	{
		type = type || 'list';

		if (this.BXIM.messenger.openLinesFlag)
		{
			var olSource = this.linesGetSource(this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)]);
		}

		var result = false;
		if (
			this.BXIM.messenger.bot[this.BXIM.messenger.currentTab]
			&& (
				this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type != 'network'
				&& this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type != 'support24'
			)
		)
		{
			return result;
		}

		if (
			this.BXIM.ppServerStatus
			&& parseInt(id) != 0
			&& id.toString().substr(0,4) != 'temp'
			&& this.BXIM.messenger.message[id]
			&& (this.BXIM.messenger.message[id].date.getTime()/1000)+259200 > (new Date().getTime())/1000
			&& (
				!this.BXIM.messenger.message[id].params
				|| this.BXIM.messenger.message[id].params.IS_DELETED != 'Y'
			)
			&& BX('im-message-'+id)
			&& BX.util.in_array(id, this.BXIM.messenger.showMessage[this.BXIM.messenger.currentTab])
		)
		{
			if (this.BXIM.messenger.openLinesFlag)
			{
				if (this.BXIM.messenger.message[id].senderId == this.BXIM.userId)
				{
					if(type == 'edit')
					{
						result = this.BXIM.messenger.openlines.canUpdateOwnMessage.indexOf(olSource) > -1;
					}
					else if(type == 'delete')
					{
						result = this.BXIM.messenger.openlines.canDeleteOwnMessage.indexOf(olSource) > -1;
					}
				}
				else if (this.BXIM.messenger.openlines.canDeleteMessage.indexOf(olSource) > -1 && type == 'delete')
				{
					result = true;
				}
				if (result && olSource != 'network')
				{
					if (
						this.BXIM.messenger.message[id].params
						&& this.BXIM.messenger.message[id].params.CLASS === "bx-messenger-content-item-system"
					)
					{
						return true;
					}
					if (
						!this.BXIM.messenger.message[id].params
						|| typeof(this.BXIM.messenger.message[id].params.CONNECTOR_MID) == 'undefined'
						|| this.BXIM.messenger.message[id].params.CONNECTOR_MID.length <= 0
					)
					{
						result = false;
					}
				}
			}
			else if (this.BXIM.messenger.message[id].senderId == this.BXIM.userId)
			{
				result = true;
			}
		}

		return result;
	}

	MessengerCommon.prototype.editMessageAjax = function(id, text)
	{
		if (this.BXIM.messenger.popupMessengerConnectionStatusState != 'online')
			return false;

		this.BXIM.messenger.editMessageCancel();
		if (!BX.MessengerCommon.checkEditMessage(id, 'edit'))
			return false;

		if (text == this.BXIM.messenger.message[id].textOriginal)
			return false;

		text = text.replace('    ', "\t");
		text = BX.util.trim(text);
		if (text.length <= 0)
		{
			BX.MessengerCommon.deleteMessageAjax(id);
			return false;
		}

		this.BXIM.messenger.message[id].text = BX.MessengerCommon.prepareText(text, true, true, true);
		this.BXIM.messenger.message[id].textOriginal = text;

		text = BX.MessengerCommon.prepareMention(this.BXIM.messenger.currentTab, text);

		BX.MessengerCommon.drawProgessMessage(id);

		if (BX.MessengerProxy)
		{
			BX.MessengerProxy.sendSetMessageEvent({
				id: +id,
				dialogId: this.BXIM.messenger.message[id].recipientId,
				text: this.BXIM.messenger.message[id].textOriginal
			});
		}
		BX.ajax({
			url: this.BXIM.pathToAjax+'?MESSAGE_EDIT&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'im.message.update',
				dialog: BX.MessengerCommon.getDialogDataForTracking(this.BXIM.messenger.message[id].recipientId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			data: {'IM_EDIT_MESSAGE' : 'Y', ID: id, MESSAGE: text, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data) {
				BX.MessengerCommon.clearProgessMessage(id);
			}, this),
			onfailure: BX.delegate(function() {
				BX.MessengerCommon.clearProgessMessage(id);
			}, this)
		});
	}

	MessengerCommon.prototype.deleteMessageAjax = function(id)
	{
		this.BXIM.messenger.editMessageCancel();

		if (
			this.BXIM.isAdmin &&
			this.BXIM.messenger.openChatFlag &&
			this.BXIM.messenger.message[id].chatId && this.BXIM.messenger.generalChatId == this.BXIM.messenger.message[id].chatId
		)
		{
		}
		else if (!BX.MessengerCommon.checkEditMessage(id, 'delete'))
		{
			return false;
		}

		BX.MessengerCommon.drawProgessMessage(id);

		if (BX.MessengerProxy)
		{
			BX.MessengerProxy.sendSetMessageEvent({
				id: +id,
				dialogId: this.BXIM.messenger.message[id].recipientId,
				text: this.BXIM.messenger.message[id].textOriginal
			});
		}
		BX.ajax({
			url: this.BXIM.pathToAjax+'?MESSAGE_DELETE&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'im.message.delete',
				dialog: BX.MessengerCommon.getDialogDataForTracking(this.BXIM.messenger.message[id].recipientId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			data: {'IM_DELETE_MESSAGE' : 'Y', ID: id, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data) {
				if (data.ERROR)
					return false;

				if (this.BXIM.messenger.message[id])
				{
					this.BXIM.messenger.message[id].isNowDeleted = true;
				}

				BX.MessengerCommon.clearProgessMessage(id);
			}, this),
			onfailure: BX.delegate(function() {
				BX.MessengerCommon.clearProgessMessage(id);
			}, this)
		});

		return true;
	}

	MessengerCommon.prototype.shareMessageAjax = function(id, type, date)
	{
		BX.MessengerCommon.drawProgessMessage(id);

		BX.ajax({
			url: this.BXIM.pathToAjax+'?MESSAGE_SHARE&TYPE='+type+'&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'im.message.share',
				dialog: BX.MessengerCommon.getDialogDataForTracking(this.BXIM.messenger.message[id].recipientId),
				data: {
					timShareType: type.toString().toLowerCase()
				}
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			data: {'IM_SHARE_MESSAGE' : 'Y', ID: id, TYPE: type, DATE: date? date: 0, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data) {
				BX.MessengerCommon.clearProgessMessage(id);

				if (data.ERROR)
				{
					if (type === 'POST')
					{
						BX.UI.Notification.Center.notify({
							content: BX.message('IM_SHARE_POST_ERROR'),
							autoHideDelay: 2000
						});
					}

					return false;
				}
			}, this),
			onfailure: BX.delegate(function() {
				BX.MessengerCommon.clearProgessMessage(id);
			}, this)
		});

		return true;
	}



	/* Section: keyboard */
	MessengerCommon.prototype.drawKeyboard = function(dialogId, messageId, buttonConfig)
	{
		if (!buttonConfig || buttonConfig == 'N')
		{
			keyboardNode = BX.create("div", {
				attrs : {id : "im-message-keyboard-empty-"+messageId},
			});
			return keyboardNode;
		}

		var keyboardNode = null;
		var keyboardButtons = [];
		var keyboardButton = null;
		var buttonValue = null;

		for (var i = 0; i < buttonConfig.length; i++)
		{
			if (buttonConfig[i].TYPE == 'NEWLINE')
			{
				keyboardButton = BX.create("div", {props : { className: "bx-messenger-keyboard-new-line"}});
			}
			else
			{
				if (
					buttonConfig[i].CONTEXT &&
					(
						this.isMobile() && buttonConfig[i].CONTEXT == 'DESKTOP' ||
						!this.isMobile() && buttonConfig[i].CONTEXT == 'MOBILE'
					)
				)
				{
					continue;
				}

				var textStyles = '';
				if (buttonConfig[i].WIDTH)
				{
					textStyles = textStyles+'width: '+buttonConfig[i].WIDTH+'px;';
				}
				else if (buttonConfig[i].DISPLAY == 'BLOCK')
				{
					textStyles = textStyles+'width: 225px;';
				}
				if (buttonConfig[i].BG_COLOR)
				{
					textStyles = textStyles+'background-color: '+buttonConfig[i].BG_COLOR+';';
				}
				if (buttonConfig[i].TEXT_COLOR)
				{
					textStyles = textStyles+'color: '+buttonConfig[i].TEXT_COLOR+';';
				}

				if (buttonConfig[i].DISABLED && buttonConfig[i].DISABLED == 'Y')
				{
					buttonValue = '<span class="bx-messenger-keyboard-button-text bx-messenger-keyboard-button-disabled" data-disabled="Y" style="'+textStyles+'">'+
						BX.util.htmlspecialchars(buttonConfig[i].TEXT)+
					'</span>';
				}
				else
				{
					if (buttonConfig[i].LINK)
					{
						buttonValue = '<a href="'+buttonConfig[i].LINK+'" target="_blank" class="bx-messenger-keyboard-button-text" style="'+textStyles+'">' +
							BX.util.htmlspecialchars(buttonConfig[i].TEXT)+
						'</a>';
					}
					else if (buttonConfig[i].FUNCTION)
					{
						var userFunc = buttonConfig[i].FUNCTION.toString().replace('#MESSAGE_ID#', messageId).replace('#DIALOG_ID#', dialogId).replace('#USER_ID#', this.BXIM.userId);
						buttonValue = '<a href="javascript:void(1);" onclick="'+userFunc+'; BX.PreventDefault(event);" class="bx-messenger-keyboard-button-text" style="'+textStyles+'">' +
							BX.util.htmlspecialchars(buttonConfig[i].TEXT)+
						'</a>';
					}
					else if (
						buttonConfig[i].ACTION
						&& buttonConfig[i].ACTION_VALUE.toString()
					)
					{
						buttonValue = '<a href="javascript:void(1);" onclick="BX.MessengerCommon.executeParamsButton(\'KEYBOARD\', '+messageId+', '+i+', event);" class="bx-messenger-keyboard-button-text" style="'+textStyles+'">' +
							BX.util.htmlspecialchars(buttonConfig[i].TEXT)+
						'</a>';
					}
					else if (buttonConfig[i].APP_ID)
					{
						buttonConfig[i].APP_PARAMS = buttonConfig[i].APP_PARAMS? buttonConfig[i].APP_PARAMS: '';
						buttonValue = '<a href="javascript:void(1);" onclick="BXIM.messenger.textareaIconDialogClick('+parseInt(buttonConfig[i].APP_ID)+', '+messageId+', \''+(BX.util.htmlspecialchars(buttonConfig[i].APP_PARAMS))+'\'); BX.PreventDefault(event);" class="bx-messenger-keyboard-button-text" style="'+textStyles+'">' +
							BX.util.htmlspecialchars(buttonConfig[i].TEXT)+
						'</a>';
					}
					else
					{
						buttonValue = '<span class="bx-messenger-keyboard-button-text" data-dialogId="'+dialogId+'" data-messageId="'+messageId+'" data-blockAfterClick="'+buttonConfig[i].BLOCK+'" data-command="'+BX.util.htmlspecialchars(buttonConfig[i].COMMAND)+'" data-commandParams="'+BX.util.htmlspecialchars(buttonConfig[i].COMMAND_PARAMS)+'" data-botId="'+buttonConfig[i].BOT_ID+'" style="'+textStyles+'">'+
							BX.util.htmlspecialchars(buttonConfig[i].TEXT)+
						'</span>';
					}
				}

				keyboardButton = BX.create("span", {
					props : { className: "bx-messenger-keyboard-button bx-messenger-keyboard-button-"+(buttonConfig[i].DISPLAY.toLowerCase())},
					children: [buttonValue]
				});
			}
			keyboardButtons.push(keyboardButton);
		}

		if (keyboardButtons.length > 0)
		{
			keyboardNode = BX.create("div", {
				attrs : { id: "im-message-keyboard-"+messageId},
				props : { className: "bx-messenger-keyboard"},
				children: keyboardButtons
			});
		}
		else
		{
			keyboardNode = BX.create("div", {
				attrs : {id : "im-message-keyboard-empty-"+messageId},
			});
		}

		return keyboardNode;
	}

	MessengerCommon.prototype.executeParamsButton = function(type, messageId, index)
	{
		if (
			!this.BXIM.messenger.message[messageId]
			|| !this.BXIM.messenger.message[messageId].params[type]
			|| !this.BXIM.messenger.message[messageId].params[type][index]
		)
		{
			return false;
		}

		var button = this.BXIM.messenger.message[messageId].params[type][index];
		if (button.ACTION)
		{
			if (button.ACTION === 'SEND')
			{
				this.BXIM.sendMessage(this.BXIM.messenger.currentTab, button.ACTION_VALUE);
			}
			else if (button.ACTION === 'PUT')
			{
				this.BXIM.putMessage(button.ACTION_VALUE);
			}
			else if (button.ACTION === 'CALL')
			{
				this.BXIM.phoneTo(button.ACTION_VALUE);
			}
			else if (button.ACTION === 'HELP')
			{
				if (button.ACTION_VALUE !== '' && button.ACTION_VALUE !== '-')
				{
					BX.Helper.show('redirect=detail&HD_ID=' + button.ACTION_VALUE);
				}
				else
				{
					BX.Helper.show();
				}
			}
			else if (button.ACTION === 'COPY')
			{
				if (this.isMobile())
				{
					app.exec("copyToClipboard", {text: button.ACTION_VALUE});

					(new BXMobileApp.UI.NotificationBar({
						message: BX.message("IM_COPIED"),
						color: "#af000000",
						textColor: "#ffffff",
						groupId: "clipboard",
						maxLines: 1,
						align: "center",
						isGlobal: true,
						useCloseButton: true,
						autoHideTimeout: 1500,
						hideOnTap: true
					}, "copy")).show();
				}
				else
				{
					BX.UI.Notification.Center.notify({
						content: BX.message('IM_COPIED'),
						autoHideDelay: 2000
					});
					BX.MessengerCommon.clipboardCopy(button.ACTION_VALUE);
				}
			}
			else if (button.ACTION === 'DIALOG')
			{
				this.BXIM.openMessenger(button.ACTION_VALUE);
			}
		}

		return false;
	}

	MessengerCommon.prototype.clickButtonKeyboard = function()
	{
		if (BX.proxy_context.tagName == 'A')
			return true;

		if (this.sendBotCommand)
			return true;

		var dialogId = BX.proxy_context.getAttribute('data-dialogId');
		var messageId = BX.proxy_context.getAttribute('data-messageId');
		var botId = BX.proxy_context.getAttribute('data-botId');
		var command = BX.proxy_context.getAttribute('data-command');
		var commandParams = BX.proxy_context.getAttribute('data-commandParams');
		var disabled = BX.proxy_context.getAttribute('data-disabled');
		var blockAfterClick = BX.proxy_context.getAttribute('data-blockAfterClick');

		if (disabled == 'Y' || BX.hasClass(BX.proxy_context, 'bx-messenger-keyboard-button-block'))
			return true;

		this.sendBotCommand = true;
		if (!this.sendBotCommandBlock[botId])
		{
			this.sendBotCommandBlock[botId] = {};
		}
		this.sendBotCommandBlock[botId][messageId] = true;

		if (blockAfterClick == 'Y')
		{
			var messageKeyboardBox = BX('im-message-keyboard-'+messageId);
			if (messageKeyboardBox)
			{
				var nodesButton = BX.findChildrenByClassName(messageKeyboardBox, "bx-messenger-keyboard-button-text", false);
				for (var i = 0; i < nodesButton.length; i++)
				{
					BX.addClass(nodesButton[i], "bx-messenger-keyboard-button-block");
				}
			}
		}
		BX.addClass(BX.proxy_context, 'bx-messenger-keyboard-button-progress bx-messenger-keyboard-button-block');

		BX.ajax({
			url: this.BXIM.pathToCallAjax+'?BOT_COMMAND&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			data: {'IM_BOT_COMMAND' : 'Y', 'BOT_ID': botId, 'COMMAND' : command, 'COMMAND_PARAMS' : commandParams, 'DIALOG_ID': dialogId, 'MESSAGE_ID': messageId, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				this.sendBotCommand = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.sendBotCommand = false;
			}, this)
		});

		return true;
	}

	/* Section: Attach */
	MessengerCommon.prototype.drawAttach = function(messageId, chatId, attachConfig, params)
	{
		if (!attachConfig || attachConfig.length == 0)
			return [];

		var attachArray = [];
		if (typeof(attachConfig) != 'object')
		{
			attachArray.push(attachConfig);
		}
		else
		{
			attachArray = attachConfig;
		}
		params = params || {};

		var userColor = this.getUserIdByChatId(chatId);

		var nodeCollection = [];
		for (var j = 0; j < attachArray.length; j++)
		{
			var attachBlock = attachArray[j];
			if (!attachBlock) continue;

			var color = "";
			if (typeof(attachBlock.COLOR) != 'undefined')
			{
				color = attachBlock.COLOR;
			}
			else if (userColor && this.BXIM.messenger.users[userColor])
			{
				color = this.BXIM.messenger.users[userColor].color;
			}
			else if (this.BXIM.messenger.chat[chatId])
			{
				color = this.BXIM.messenger.chat[chatId].color;
			}
			else if (this.BXIM.messenger.users[this.BXIM.userId])
			{
				color = this.BXIM.messenger.users[this.BXIM.userId].color;
			}

			if (typeof(attachBlock['BLOCKS']) != 'object')
			{
				continue;
			}

			var attachId = typeof(attachBlock['ID']) != 'undefined'? attachBlock['ID']: 0;

			var blockCollection = [];

			var deleteAttachId = false;
			if (
				attachId &&
				this.BXIM.messenger.message[messageId] &&
				this.BXIM.messenger.message[messageId].params &&
				this.BXIM.messenger.message[messageId].params.URL_ID &&
				(
					this.BXIM.messenger.message[messageId].params.URL_ID.indexOf(attachId) > -1
					|| this.BXIM.messenger.message[messageId].params.URL_ID.indexOf(parseInt(attachId)) > -1
				)
			)
			{
				if (!this.BXIM.settings.enableRichLink)
				{
					continue;
				}

				if (this.BXIM.messenger.message[messageId].senderId == this.BXIM.userId)
				{
					deleteAttachId = true;
				}
			}

			if (deleteAttachId)
			{
				blockCollection.push(
					BX.create("span", { props : { className: "bx-messenger-attach-delete"}, attrs: {'data-attachId': attachId, 'data-messageId': messageId, 'data-action': 'url'}})
				);
			}

			for (var k = 0; k < attachBlock['BLOCKS'].length; k++)
			{
				var attach = attachBlock['BLOCKS'][k];
				var blockNode = null;
				if (attach.USER && attach.USER.length > 0)
				{
					var userNodes = [];
					for (var i = 0; i < attach.USER.length; i++)
					{
						var linkTitle = null;
						if (attach.USER[i].NETWORK_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-attach-user-name bx-messenger-ajax"}, attrs: {'data-entity': 'network', 'data-networkId': attach.USER[i].NETWORK_ID}, text: attach.USER[i].NAME});
						}
						else if (attach.USER[i].BOT_ID)
						{
							if (this.BXIM.messenger.users[attach.USER[i].BOT_ID])
							{
								attach.USER[i].NAME = this.BXIM.messenger.users[attach.USER[i].BOT_ID].name;
								attach.USER[i].AVATAR = this.BXIM.messenger.users[attach.USER[i].BOT_ID].avatar;
							}
							else if (!this.BXIM.messenger.bot[attach.USER[i].BOT_ID])
							{
								attach.USER[i].AVATAR = '';
							}

							linkTitle = BX.create("span", {props : { className: "bx-messenger-attach-user-name bx-messenger-ajax"}, attrs: {'data-entity': 'user', 'data-userId': attach.USER[i].BOT_ID}, text: attach.USER[i].NAME});
						}
						else if (attach.USER[i].USER_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-attach-user-name bx-messenger-ajax "+(attach.USER[i].USER_ID == this.BXIM.userId? 'bx-messenger-ajax-self': '')}, attrs: {'data-entity': 'user', 'data-userId': attach.USER[i].USER_ID}, text: attach.USER[i].NAME});
							if (this.BXIM.messenger.users[attach.USER[i].USER_ID])
							{
								attach.USER[i].AVATAR = this.BXIM.messenger.users[attach.USER[i].USER_ID].avatar;
							}
						}
						else if (attach.USER[i].CHAT_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-attach-user-name bx-messenger-ajax"}, attrs: {'data-entity': 'chat', 'data-chatId': attach.USER[i].CHAT_ID}, text: attach.USER[i].NAME});
						}
						else if (attach.USER[i].LINK)
						{
							linkTitle = BX.create("a", {attrs: {'href': this.formatUrl(attach.USER[i].LINK), 'target': '_blank'}, props : { className: "bx-messenger-attach-user-name"}, text: attach.USER[i].NAME});
						}
						else
						{
							linkTitle = BX.create("span", { props : { className: "bx-messenger-attach-user-name"}, text: attach.USER[i].NAME})
						}

						var avatarType = 'user';
						if (attach.USER[i].AVATAR_TYPE == 'CHAT')
						{
							avatarType = 'chat';
						}
						else if (attach.USER[i].AVATAR_TYPE == 'BOT')
						{
							avatarType = 'bot';
						}

						var userNode = BX.create("span", { props : { className: "bx-messenger-attach-user"}, children: [
							BX.create("span", { props : { className: "bx-messenger-attach-user-avatar"}, children: [
								attach.USER[i].AVATAR?
									BX.create("img", { attrs:{'src': this.formatUrl(attach.USER[i].AVATAR)}, props : { className: "bx-messenger-attach-user-avatar-img"}}):
									BX.create("span", { attrs: {style: "background-color: "+color}, props : { className: "bx-messenger-attach-user-avatar-img bx-messenger-attach-"+avatarType+"-avatar-default "}})
							]}),
							linkTitle
						]});
						userNodes.push(userNode);
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-users"}, children: userNodes});
				}
				else if (attach.LINK && attach.LINK.length > 0)
				{
					var linkNodes = [];
					for (var i = 0; i < attach.LINK.length; i++)
					{
						var linkTitle = BX.create("span", { props : { className: "bx-messenger-attach-link-name"}, text: attach.LINK[i].NAME? attach.LINK[i].NAME: attach.LINK[i].LINK});
						if (attach.LINK[i].NETWORK_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-ajax "}, attrs: {'data-entity': 'network', 'data-networkId': attach.LINK[i].NETWORK_ID}, children: [linkTitle]});
						}
						else if (attach.LINK[i].USER_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-ajax "+(attach.LINK[i].USER_ID == this.BXIM.userId? 'bx-messenger-ajax-self': '')}, attrs: {'data-entity': 'user', 'data-userId': attach.LINK[i].USER_ID}, children: [linkTitle]});
						}
						else if (attach.LINK[i].CHAT_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-ajax"}, attrs: {'data-entity': 'chat', 'data-chatId': attach.LINK[i].CHAT_ID}, children: [linkTitle]});
						}
						else
						{
							linkTitle = BX.create("span", { props : { className: "bx-messenger-attach-link-name"}, children: [
								BX.create("a", {attrs: {'href': this.formatUrl(attach.LINK[i].LINK), 'target': '_blank'}, text: attach.LINK[i].NAME? attach.LINK[i].NAME: attach.LINK[i].LINK})
							]});
						}

						var linkDesc = null;
						if (attach.LINK[i].HTML)
						{
							linkDesc = BX.create("span", { props : { className: "bx-messenger-attach-link-desc"}, html: BX.MessengerCommon.prepareText(attach.LINK[i].HTML, true, true, true)});
						}
						else if (attach.LINK[i].DESC)
						{
							linkDesc = BX.create("span", { props : { className: "bx-messenger-attach-link-desc"}, html: BX.MessengerCommon.prepareText(attach.LINK[i].DESC, true, true, true)});
						}

						var linkPreview = null;
						if (attach.LINK[i].PREVIEW)
						{
							linkPreview = BX.create("span", { props : { className: "bx-messenger-file-image-src"}, children: [
								BX.create("img", { attrs:{'src': this.formatUrl(attach.LINK[i].PREVIEW), 'onerror': "BX.MessengerCommon.hideErrorImage(this, true)"}, props : { className: "bx-messenger-file-image-text"}}),
							]});
							var link = BX.create("div", {children: [
								linkTitle,
								linkDesc,
								linkPreview
							]});
						}
						else
						{
							var link = BX.create("div", {children: [
								linkTitle,
								linkDesc
							]});
						}
						linkNodes.push(link);
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-links"}, children: linkNodes});
				}
				else if (attach.RICH_LINK && attach.RICH_LINK.length > 0)
				{
					var linkNodes = [];
					for (var i = 0; i < attach.RICH_LINK.length; i++)
					{
						var convert = document.createElement("p");
						if (attach.RICH_LINK[i].NAME)
						{
							convert.innerHTML = attach.RICH_LINK[i].NAME;
							attach.RICH_LINK[i].NAME = convert.innerText;
						}
						if (attach.RICH_LINK[i].DESC)
						{
							convert.innerHTML = attach.RICH_LINK[i].DESC;
							attach.RICH_LINK[i].DESC = convert.innerText;
						}

						var linkSource = null;
						var linkTitle = BX.create("span", { props : { className: "bx-messenger-attach-rich-link-name"}, text: attach.RICH_LINK[i].NAME? attach.RICH_LINK[i].NAME: attach.RICH_LINK[i].LINK});
						if (attach.RICH_LINK[i].NETWORK_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-ajax "}, attrs: {'data-entity': 'network', 'data-networkId': attach.RICH_LINK[i].NETWORK_ID}, children: [linkTitle]});
						}
						else if (attach.RICH_LINK[i].USER_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-ajax "+(attach.RICH_LINK[i].USER_ID == this.BXIM.userId? 'bx-messenger-ajax-self': '')}, attrs: {'data-entity': 'user', 'data-userId': attach.RICH_LINK[i].USER_ID}, children: [linkTitle]});
						}
						else if (attach.RICH_LINK[i].CHAT_ID)
						{
							linkTitle = BX.create("span", {props : { className: "bx-messenger-ajax"}, attrs: {'data-entity': 'chat', 'data-chatId': attach.RICH_LINK[i].CHAT_ID}, children: [linkTitle]});
						}
						else
						{
							if (attach.RICH_LINK[i].HTML)
							{
								linkTitle = BX.create("span", { props : { className: "bx-messenger-attach-rich-link-name"}, children: [
									BX.create("a", {attrs: {'href': attach.RICH_LINK[i].LINK, 'target': '_blank'}, text: attach.RICH_LINK[i].NAME? attach.RICH_LINK[i].NAME: attach.RICH_LINK[i].LINK})
								]});
							}
							linkSource = BX.create("div", { props : { className: "bx-messenger-attach-rich-link-source"}, html: BX.create("a", {attrs: {'href': attach.RICH_LINK[i].LINK}}).hostname});
						}

						var linkDesc = null;
						if (attach.RICH_LINK[i].DESC)
						{
							linkDesc = BX.create("span", { props : { className: "bx-messenger-attach-rich-link-desc"}, text: attach.RICH_LINK[i].DESC});
						}

						var linkPreview = null;
						if (attach.RICH_LINK[i].HTML)
						{
							linkPreview = BX.create("div", { props : { className: "bx-messenger-attach-rich-link-html"}, text: attach.RICH_LINK[i].HTML});
							var link = BX.create("span", {props : { className: "bx-messenger-attach-rich-link"+(attach.RICH_LINK[i].PREVIEW? " bx-messenger-attach-rich-link-with-preview": "")}, children: [linkTitle, linkDesc, linkPreview]})
						}
						else if (attach.RICH_LINK[i].PREVIEW)
						{
							linkPreview = BX.create("span", { props : { className: "bx-messenger-file-image-src"}, children: [
								BX.create("img", { attrs:{'src': this.formatUrl(attach.RICH_LINK[i].PREVIEW), 'onerror': "BX.MessengerCommon.hideErrorImage(this, true)"}, props : { className: "bx-messenger-file-image-text"}}),
							]});
							var link = BX.create("a", {attrs: {'href': attach.RICH_LINK[i].LINK, 'target': '_blank'}, props : { className: "bx-messenger-file-image"}, children: [
								linkPreview,
								BX.create("span", {props : { className: "bx-messenger-attach-rich-link-panel"}, children: [linkTitle, linkDesc, linkSource]})
							]});
						}
						else
						{
							var link = BX.create("a", {attrs: {'href': attach.RICH_LINK[i].LINK, 'target': '_blank'}, props : { className: "bx-messenger-file-image bx-messenger-file-image-without-preview"}, children: [
								BX.create("span", {props : { className: "bx-messenger-attach-rich-link-panel"}, children: [linkTitle, linkDesc, linkSource]})
							]});
						}
						linkNodes.push(link);
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-rich-links"}, children: linkNodes});
				}
				else if(attach.MESSAGE && attach.MESSAGE.length > 0)
				{
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-message"}, html: BX.MessengerCommon.prepareText(attach.MESSAGE, true, true, true)});
				}
				else if(attach.HTML && attach.HTML.length > 0)
				{
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-message"}, html: BX.MessengerCommon.prepareText(attach.HTML, true, true, true)});
				}
				else if(attach.GRID && attach.GRID.length > 0)
				{
					var gridNodes = [];
					for (var i = 0; i < attach.GRID.length; i++)
					{
						var gridValue = BX.MessengerCommon.prepareText(attach.GRID[i].VALUE, true, true, true);
						if (attach.GRID[i].USER_ID)
						{
							gridValue = '<span class="bx-messenger-ajax '+(attach.GRID[i].USER_ID == this.BXIM.userId? 'bx-messenger-ajax-self': '')+'" data-entity="user" data-userId="'+attach.GRID[i].USER_ID+'">'+gridValue+'</span>';
						}
						else if (attach.GRID[i].CHAT_ID)
						{
							gridValue = '<span class="bx-messenger-ajax" data-entity="chat" data-chatId="'+attach.GRID[i].CHAT_ID+'">'+gridValue+'</span>';
						}
						else if (attach.GRID[i].LINK)
						{
							gridValue = '<a href="'+this.formatUrl(attach.GRID[i].LINK)+'" target="_blank">'+gridValue+'</a>';
						}
						var width = attach.GRID[i].WIDTH? 'width: '+attach.GRID[i].WIDTH+'px': '';
						var height = attach.GRID[i].HEIGHT? 'max-height: '+attach.GRID[i].HEIGHT+'px;': '';
						var maxHeight = 0;

						var gridNode = null;
						var gridValueTest = null;
						if (height)
						{
							gridValueTest = BX.create("div", { props : { className: "bx-messenger-attach bx-messenger-attach-block-name"}, attrs: { style: "position: absolute; left: -1000px;"+(attach.GRID[i].DISPLAY == 'ROW'? width: '')}, html: gridValue});
							document.body.appendChild(gridValueTest);
							if (attach.GRID[i].HEIGHT >= gridValueTest.offsetHeight)
							{
								height = '';
							}
							else
							{
								maxHeight = gridValueTest.offsetHeight;
							}
							BX.remove(gridValueTest);
						}
						if (height)
						{
							gridNode = BX.create("span", { props : { className: "bx-messenger-attach-block bx-messenger-attach-block-"+(attach.GRID[i].DISPLAY.toLowerCase())+" bx-messenger-attach-block-spoiler"}, attrs: { style: attach.GRID[i].DISPLAY == 'LINE' || attach.GRID[i].DISPLAY == 'CARD'? width: ''}, children: [
								BX.create("div", { props : { className: "bx-messenger-attach-block-name"}, attrs: { style: attach.GRID[i].DISPLAY == 'ROW'? width: ''}, children: [
									BX.create("span", {props : { className: "bx-messenger-attach-block-spoiler-name"}, text: attach.GRID[i].NAME}),
									BX.create("span", {props : { className: "bx-messenger-attach-block-spoiler-icon"}})
								]}),
								BX.create("div", { props : { className: "bx-messenger-attach-block-value"}, attrs: { style: height+(attach.GRID[i].COLOR? 'color: '+attach.GRID[i].COLOR: ''), 'data-min-height': attach.GRID[i].HEIGHT, 'data-max-height': maxHeight}, children: [
									BX.create("span", {html: gridValue})
								]})
							]});
						}
						else
						{
							var blockType = attach.GRID[i].DISPLAY;
							if (
								(blockType == 'row' || blockType == 'column')
								&& (!attach.GRID[i].NAME || !attach.GRID[i].VALUE)
							)
							{
								blockType = 'BLOCK';
							}
							gridNode = BX.create("span", { props : { className: "bx-messenger-attach-block bx-messenger-attach-block-"+blockType.toLowerCase()}, attrs: { style: blockType == 'LINE' || blockType == 'CARD'? width: ''}, children: [
								!attach.GRID[i].NAME? null: BX.create("div", { props : { className: "bx-messenger-attach-block-name"}, attrs: { style: blockType == 'ROW'? width: ''}, text: attach.GRID[i].NAME}),
								!attach.GRID[i].VALUE? null: BX.create("div", { props : { className: "bx-messenger-attach-block-value"}, attrs: { style: (attach.GRID[i].COLOR? 'color: '+attach.GRID[i].COLOR: '')}, html: gridValue})
							]});
						}
						gridNodes.push(gridNode);
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-blocks"}, children: gridNodes});
				}
				else if (attach.DELIMITER)
				{
					var attrs = "";
					if (attach.DELIMITER.SIZE)
					{
						attrs += "width: "+attach.DELIMITER.SIZE+"px;"
					}
					if (attach.DELIMITER.COLOR)
					{
						attrs += "background-color: "+attach.DELIMITER.COLOR
					}
					if (attrs)
					{
						attrs = {style: attrs};
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-delimiter"}, attrs: attrs});
				}
				else if (attach.IMAGE && attach.IMAGE.length > 0)
				{
					var imageNodes = [];
					for (var i = 0; i < attach.IMAGE.length; i++)
					{
						if (!attach.IMAGE[i].NAME)
						{
							attach.IMAGE[i].NAME = "";
						}

						if (!attach.IMAGE[i].PREVIEW)
						{
							attach.IMAGE[i].PREVIEW = attach.IMAGE[i].LINK;
						}
						var imageNode = BX.create("a", { props : { className: "bx-messenger-file-image-src"}, attrs: {'href': attach.IMAGE[i].LINK, 'target': '_blank', 'title': attach.IMAGE[i].NAME}, children: [
							BX.create("img", { attrs:{'src': BX.util.htmlspecialcharsback(attach.IMAGE[i].PREVIEW), 'onerror': "BX.MessengerCommon.hideErrorImage(this)"}, props : { className: "bx-messenger-attach-image bx-messenger-file-image-link"}})
						]})

						imageNodes.push(imageNode);
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-images"}, children: imageNodes});
				}
				else if(attach.FILE && attach.FILE.length > 0)
				{
					var filesNodes = [];
					for (var i = 0; i < attach.FILE.length; i++)
					{
						var fileName = attach.FILE[i].NAME? attach.FILE[i].NAME: attach.FILE[i].LINK;
						if (this.isMobile())
						{
							if (fileName.length > 20)
							{
								fileName = fileName.substr(0, 7)+'...'+fileName.substr(fileName.length-10, fileName.length);
							}
						}
						else
						{
							if (fileName.length > 43)
							{
								fileName = fileName.substr(0, 20)+'...'+fileName.substr(fileName.length-20, fileName.length);
							}
						}
						fileName = BX.create("span", { attrs: {'title': attach.FILE[i].NAME}, props : { className: "bx-messenger-file-title"}, children: [
							BX.create("span", { props : { className: "bx-messenger-file-title-name"}, text: fileName})
						]});
						var fileNode = BX.create("div", { props : { className: "bx-messenger-file"}, children: [
							BX.create("div", { props : { className: "bx-messenger-file-attrs"}, children: [
								BX.create("a", { props : { className: "bx-messenger-file-title-href"}, attrs: {'href': BX.util.htmlspecialcharsback(attach.FILE[i].LINK), 'target': '_blank'}, children: [fileName]}),
								attach.FILE[i].SIZE? BX.create("span", { props : { className: "bx-messenger-file-size"}, html: BX.UploaderUtils.getFormattedSize(attach.FILE[i].SIZE)}): null
							]}),
							BX.create("div", { props : { className: "bx-messenger-file-download"}, children: [
								BX.create("a", {attrs: {'href': BX.util.htmlspecialcharsback(attach.FILE[i].LINK), 'target': '_blank'}, props : { className: "bx-messenger-file-download-link bx-messenger-file-download-pc"}, html: BX.message('IM_F_DOWNLOAD')})
							]})
						]});
						filesNodes.push(fileNode);
					}
					blockNode = BX.create("span", { props : { className: "bx-messenger-attach-files"}, children: filesNodes});
				}
				blockCollection.push(blockNode);
			}

			if (blockCollection.length > 0)
			{
				nodeCollection.push(BX.create("div", {
					props : { className: "bx-messenger-attach"},
					attrs: { 'style': color == 'transparent'? 'border: 0; padding-left: 0;': 'border-color: '+color},
					children: blockCollection
				}));
			}
		}
		return nodeCollection
	}



	/* Section: Disk Manager */
	MessengerCommon.prototype.diskGetMessageId = function(chatId, fileId)
	{
		for (var messageId in this.BXIM.messenger.message)
		{
			if (!this.BXIM.messenger.message.hasOwnProperty(messageId))
			{
				continue;
			}

			var message = this.BXIM.messenger.message[messageId];
			if (message.params['FILE_ID'] && message.params['FILE_ID'].length > 0)
			{
				var result = message.params['FILE_ID'].find(function(element) {
					return element == fileId;
				});
				if (result)
				{
					return message.id;
				}
			}
		}

		return 0;
	}

	MessengerCommon.prototype.diskDrawFiles = function(chatId, fileId, params)
	{
		if (!this.BXIM.disk.enable || !chatId || !fileId)
			return [];

		var fileIds = [];
		if (typeof(fileId) != 'object')
		{
			fileIds.push(fileId);
		}
		else
		{
			fileIds = fileId;
		}
		params = params || {};

		var enableLink = true;
		var nodeCollection = []

		for (var i = 0; i < fileIds.length; i++)
		{
			var file = this.BXIM.disk.files[chatId] && this.BXIM.disk.files[chatId][fileIds[i]];

			if (!file)
			{
				var file = {'id': fileIds[i], 'chatId': chatId};
				var boxId = params.boxId? params.boxId: 'im-file';

				nodeCollection.push(BX.create("div", {
					attrs: { id: boxId+'-'+file.id, 'data-chatId': file.chatId , 'data-fileId': file.id, 'data-boxId': boxId},
					props : { className: "bx-messenger-file"},
					children: [BX.create("span", { props : { className: "bx-messenger-file-deleted"}, html: BX.message('IM_F_DELETED')})]
				}));

				continue;
			}

			if (this.isDesktop())
			{
				if (!this.BXIM.desktop.enableInVersion(43))
				{
					if (file.type == 'audio')
					{
						file.viewerAttrs = null;
					}
				}
				if (!this.BXIM.desktop.enableInVersion(47))
				{
					if (file.type == 'video')
					{
						file.viewerAttrs = null;
					}
				}
			}

			if (params.status)
			{
				if (typeof(params.status) != 'object')
				{
					params.status = [params.status];
				}
				if (!BX.util.in_array(file.status, params.status))
				{
					continue;
				}
			}

			var preview = null;
			var datasetSetted = false;
			if (file.preview || file.urlPreview)
			{
				var imageNode = null;
				if (file.preview && typeof(file.preview) != 'string')
				{
					imageNode = file.preview;
					if (file.urlPreview)
					{
						file.preview = '';
					}
				}
				else
				{
					imageNode = BX.create("img", {
						attrs:{
							'src': this.formatUrl(file.urlPreview? file.urlPreview: file.preview),
							'height': file.image? (file.image.height > 400? '400': file.image.height): 'auto'
						},
						props : { className: "bx-messenger-file-image-text bx-messenger-file-image-type-"+file.type},
						events: { load: function(){
							this.parentNode.style.background = "#fff";
							this.removeAttribute('height');
						}}
					});
				}

				if (enableLink)
				{
					var videoPlayNode = null;
					if (file.type == 'video')
					{
						if (this.isMobile())
						{
							videoPlayNode = BX.create("div", {props : { className: "bx-messenger-file-image-type-video-button"},  children: [
								BX.create("div", {events: {click: BX.delegate(function(e){
									BX.localStorage.set('impmh', true, 1);
									app.openDocument({url: this.formatUrl(file.urlDownload), filename: file.name.toString().toLowerCase()});
									return BX.PreventDefault(e);
								}, this)}, props : { className: "bx-messenger-file-image-type-video-button-play"}})
							]});
						}
						else
						{
							videoPlayNode = BX.create("div", {props : { className: "bx-messenger-file-image-type-video-button"},  children: [
								BX.create("div", {props : { className: "bx-messenger-file-image-type-video-button-play"}}),
							]});
						}
					}

					if (
						file.type == 'video' && file.urlDownload
						|| file.type != 'video' && file.urlPreview && file.urlShow
					)
					{
						if (this.isMobile())
						{
							preview = BX.create("div", {props : { className: "bx-messenger-file-preview"},  children: [
								BX.create("span", {props : { className: "bx-messenger-file-image"},  children: [
									BX.create("span", {events: {click: BX.delegate(function(){
										var file = this.BXIM.disk.files[BX.proxy_context.dataset.chatid][BX.proxy_context.dataset.diskid];
										var res = BX.findParent(BX.proxy_context, {"className" : "bx-messenger-content-item"});
										if (res && res.getAttribute('data-messageid').indexOf('temp') == 0)
										{
											return false;
										}
										if (file.type == 'image')
										{
											this.BXIM.messenger.openPhotoGallery(file.urlShow);
											BX.localStorage.set('impmh', true, 1);
										}
										else
										{
											BX.localStorage.set('impmh', true, 1);
											app.openDocument({url: file.urlShow, filename: file.name.toString().toLowerCase()})
										}
									}, this)}, attrs: {'data-chatId': file.chatId, 'data-diskId': file.id }, props : { className: "bx-messenger-file-image-src"},  children: [
										videoPlayNode,
										imageNode
									]})
								]})
							]});
						}
						else
						{
							preview = BX.create("div", {props : { className: "bx-messenger-file-preview"},  children: [
								BX.create("span", {props : { className: "bx-messenger-file-image"},  children: [
									BX.create("a", {
										dataset: file.viewerAttrs,
										attrs: {'href': this.formatUrl(file.urlShow), 'target': '_blank'},
										props : { className: "bx-messenger-file-image-src"},
										children: [
											videoPlayNode,
											imageNode
										]
									})
								]}),
							]});
							datasetSetted = true;
						}
					}
					else
					{
						preview = BX.create("div", {props : { className: "bx-messenger-file-preview"},  children: [
							BX.create("span", {props : { className: "bx-messenger-file-image"},  children: [
								BX.create("span", {props : { className: "bx-messenger-file-image-src"},  children: [
									imageNode
								]})
							]}),
						]});
					}
				}
				else
				{
					preview = BX.create("div", {props : { className: "bx-messenger-file-preview"},  children: [
						BX.create("span", {props : { className: "bx-messenger-file-image"},  children: [
							BX.create("span", {props : { className: "bx-messenger-file-image-src"},  children: [
								imageNode
							]})
						]}),
					]});
				}
			}
			var fileName = file.name;
			if (this.isMobile())
			{
				if (fileName.length > 20)
				{
					fileName = fileName.substr(0, 7)+'...'+fileName.substr(fileName.length-10, fileName.length);
				}
			}
			else
			{
				if (fileName.length > 43)
				{
					fileName = fileName.substr(0, 20)+'...'+fileName.substr(fileName.length-20, fileName.length);
				}
			}

			if (file.type === 'audio' && (file.viewerAttrs || this.isMobile()))
			{
				title = BX.create("div", { props : { className: "bx-messenger-audioplayer-container bx-messenger-audioplayer-container-dark"}, children: [
					BX.create("div", { props : { className: "bx-messenger-audioplayer-controls-container"}, children: [
						BX.create("div", { props : { className: "bx-messenger-audioplayer-control bx-messenger-audioplayer-control-play"}})
					]}),
					BX.create("div", { props : { className: "bx-messenger-audioplayer-timeline-container"}, children: [
						BX.create("div", { props : { className: "bx-messenger-audioplayer-track-mask"}}),
						BX.create("div", { props : { className: "bx-messenger-audioplayer-track"}}),
					]})
				], events: !this.isMobile()? null: {
					click: function(){ BX.localStorage.set('impmh', true, 1);  app.openDocument({url: file.urlDownload, filename: file.name.toString().toLowerCase()}) }
				}, dataset: file.viewerAttrs});
			}
			else
			{
				var title = BX.create("span", {
					attrs: {'title': file.name}, props: {className: "bx-messenger-file-title"}, children: [
						BX.create("span", {props: {className: "bx-messenger-file-title-name"}, html: fileName})
					]
				});
				if (enableLink && (file.urlShow || file.urlDownload))
				{
					if (this.isMobile())
					{
						title = BX.create("span", { props : { className: "bx-messenger-file-title-href"}, events: {click: function(){
							BX.localStorage.set('impmh', true, 1);
							app.openDocument({url: this.urlDownload, filename: this.name.toString().toLowerCase()})
						}.bind(file)}, children: [title]});
					}
					else if (!file.viewerAttrs && BX.desktopUtils.canDownload())
					{
						title = BX.create("span", { props : { className: "bx-messenger-file-title-href"}, events: {click: function(){
							BX.desktopUtils.downloadFile(this.urlDownload, this.name);
						}.bind(file)}, children: [title]});
					}
					else
					{
						title = BX.create("a", {
							dataset: datasetSetted? null: file.viewerAttrs,
							props : { className: "bx-messenger-file-title-href"},
							attrs: {'href': this.formatUrl(file.urlShow? file.urlShow: file.urlDownload), 'target': '_blank'},
							children: [title]
						});
					}
				}
				title = BX.create("div", { props : { className: "bx-messenger-file-attrs"}, children: [
					title,
					file.size? BX.create("span", { props : { className: "bx-messenger-file-size"}, html: BX.UploaderUtils.getFormattedSize(file.size)}): null,
				]});
			}

			var status = null;
			if (file.status == 'done')
			{
				if (!this.isMobile())
				{
					var link = null;
					if (file.urlDownload && enableLink)
					{
						if (BX.desktopUtils.canDownload())
						{
							link = BX.create("span", {
								events: {click: function(){
									BX.desktopUtils.downloadFile(this.urlDownload, this.name);
								}.bind(file)},
								props : { className: "bx-messenger-file-download-link bx-messenger-file-download-pc"},
								html: BX.message('IM_F_DOWNLOAD')
							});
						}
						else
						{
							link = BX.create("a", {
								attrs: {'href': this.formatUrl(file.urlDownload), 'target': '_blank'},
								props : { className: "bx-messenger-file-download-link bx-messenger-file-download-pc"},
								html: BX.message('IM_F_DOWNLOAD')
							});
						}
					}

					status = BX.create("div", { props : { className: "bx-messenger-file-download"}, children: [
						link,
						!file.urlDownload || !this.BXIM.disk.enable || this.BXIM.context == "LINES"? null: BX.create("span", { props : { className: "bx-messenger-file-download-link bx-messenger-file-download-disk"}, html: BX.message('IM_F_DOWNLOAD_DISK'), events: {click:BX.delegate(function(){
							var chatId = BX.proxy_context.parentNode.parentNode.getAttribute('data-chatId');
							var fileId = BX.proxy_context.parentNode.parentNode.getAttribute('data-fileId');
							var boxId = BX.proxy_context.parentNode.parentNode.getAttribute('data-boxId');
							this.BXIM.disk.saveToDisk(chatId, fileId, {boxId: boxId});
						}, this)}})
					]});
				}
				else
				{
					status = BX.create("div", { props : { className: "bx-messenger-file-download"}, children: []});
				}
			}
			else if (file.status == 'upload')
			{
				var statusStyles = {};
				var styles2 = '';
				var statusDelete = null;
				var statusClassName = '';
				var statusTitle = '';
				if (file.authorId == this.BXIM.userId && file.progress >= 0)
				{
					statusTitle = BX.message('IM_F_UPLOAD_2').replace('#PERCENT#', file.progress);
					statusStyles = { width: file.progress+'%' };
					statusDelete = BX.create("span", { attrs: {title: BX.message('IM_F_CANCEL')}, props : { className: "bx-messenger-file-delete"}})
				}
				else
				{
					statusTitle = BX.message('IM_F_UPLOAD');
					statusClassName = " bx-messenger-file-progress-infinite";
				}
				status = BX.create("div", { props : { className: "bx-messenger-progress-box"}, children: [
					BX.create("span", { attrs: {title: statusTitle}, props : { className: "bx-messenger-file-progress"}, children: [
						BX.create("span", { props : { className: "bx-messenger-file-progress-line"+statusClassName}, style : statusStyles})
					]}),
					statusDelete
				]});
			}
			else if (file.status == 'error')
			{
				status = BX.create("span", { props : { className: "bx-messenger-file-status-error"}, html: file.errorText? file.errorText: BX.message('IM_F_ERROR')})
			}

			if (!status)
				return false;

			if (fileIds.length == 1 && params.showInner == 'Y')
			{
				nodeCollection = [preview, title, status];
			}
			else
			{
				var boxId = params.boxId? params.boxId: 'im-file';
				nodeCollection.push(BX.create("div", {
					attrs: { id: boxId+'-'+file.id, 'data-chatId': file.chatId , 'data-fileId': file.id, 'data-boxId': boxId},
					props : { className: "bx-messenger-file"},
					children: [preview, title, status]
				}));
			}
		}

		return nodeCollection
	}

	MessengerCommon.prototype.diskRedrawFile = function(chatId, fileId, params)
	{
		params = params || {};
		var boxId = params.boxId? params.boxId: 'im-file';

		var fileBox = BX(boxId+'-'+fileId);
		if (fileBox)
		{
			var result = this.diskDrawFiles(chatId, fileId, {'showInner': 'Y', 'boxId': boxId});
			if (result)
			{
				if (
					this.BXIM.disk.files[chatId]
					&& this.BXIM.disk.files[chatId][fileId]
					&& this.BXIM.disk.files[chatId][fileId].id != fileId
				)
				{
					var newFileId = this.BXIM.disk.files[chatId][fileId].id;
					this.BXIM.disk.files[chatId][newFileId] = this.BXIM.disk.files[chatId][fileId];

					fileBox.setAttribute('data-fileid', newFileId);
					fileBox.setAttribute('id', 'im-file-' + newFileId);
				}
				fileBox.innerHTML = '';
				BX.adjust(fileBox, {children: result});
			}
		}
	}

	MessengerCommon.prototype.diskChatDialogFileInited = function(id, file, agent)
	{
		agent.messageText = agent.messageText || '';

		var chatId = agent.form.CHAT_ID.value;

		if (!this.BXIM.disk.files[chatId])
			this.BXIM.disk.files[chatId] = {};

		this.BXIM.disk.files[chatId][id] = {
			'id': id,
			'templateId': id,
			'chatId': chatId,
			'date': new Date(),
			'type': file.isImage? 'image': 'file',
			'preview': file.isImage? file.canvas: '',
			'name': BX.util.htmlspecialchars(file.name),
			'size': file.file.size,
			'status': 'upload',
			'progress': -1,
			'authorId': this.BXIM.userId,
			'authorName': this.BXIM.messenger.users[this.BXIM.userId].name,
			'urlPreview': '',
			'urlShow': '',
			'urlDownload': ''
		};

		var recipientId = 0;
		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].type != 'private')
		{
			recipientId = 'chat'+chatId;
		}
		else
		{
			for (var userId in this.BXIM.messenger.userChat)
			{
				if (this.BXIM.messenger.userChat[userId] == chatId)
				{
					recipientId = userId;
					break;
				}
			}
		}
		if (!recipientId)
			return false;

		var olSilentMode = 'N';
		if (recipientId.toString().substr(0,4) == 'chat' && this.BXIM.messenger.linesSilentMode && this.BXIM.messenger.linesSilentMode[chatId])
		{
			olSilentMode = 'Y';
		}

		// TODO: check
		var paramsFileId = [this.BXIM.disk.files[chatId][id].id];
		var fileType = 'file';
		var tmpMessageId = 'tempFile'+this.BXIM.disk.fileTmpId + new Date().getTime();
		this.BXIM.messenger.message[tmpMessageId] = {
			'id': tmpMessageId,
			'chatId': chatId,
			'senderId': this.BXIM.userId,
			'recipientId': recipientId,
			'date': new Date(),
			'text': BX.MessengerCommon.prepareText(agent.messageText, true, true, true),
			'textOriginal': agent.messageText,
			'params': {'FILE_ID': paramsFileId, 'CLASS': olSilentMode == "Y"? "bx-messenger-content-item-system": ""}
		};
		if (!this.BXIM.messenger.showMessage[recipientId])
			this.BXIM.messenger.showMessage[recipientId] = [];

		this.BXIM.messenger.showMessage[recipientId] = this.BXIM.messenger.showMessage[recipientId].filter(function(element) {
			return element != tmpMessageId;
		});
		this.BXIM.messenger.showMessage[recipientId].push(tmpMessageId.toString());

		BX.MessengerCommon.drawMessage(recipientId, this.BXIM.messenger.message[tmpMessageId]);
		BX.MessengerCommon.drawProgessMessage(tmpMessageId);

		this.recentListAddItem({
			id: recipientId,
			message: {
				id: tmpMessageId,
				date: new Date(),
				author_id: this.BXIM.userId,
				status: 'delivered',
				text: agent.messageText? agent.messageText: '',
				attach: false,
				file: true,
			},
		});
		this.recentListRedraw();

		this.BXIM.messenger.popupMessengerFileFormRegChatId.value = chatId;
		file.regTmpMessageId = this.BXIM.messenger.popupMessengerFileFormRegMessageId.value = tmpMessageId;
		file.regHiddenMessageId = this.BXIM.messenger.popupMessengerFileFormRegMessageHidden.value = olSilentMode;
		file.regParams = this.BXIM.messenger.popupMessengerFileFormRegParams.value = JSON.stringify({
			'FILE_TMP_ID' : this.BXIM.disk.files[chatId][id].id,
			'TEXT' : agent.messageText
		});
		this.BXIM.disk.OldBeforeUnload = window.onbeforeunload;
		window.onbeforeunload = function()
		{
			return BX.message('IM_F_EFP')
		};

		this.BXIM.disk.fileTmpId++;

		agent.messageText = '';
	}

	MessengerCommon.prototype.diskChatDialogFileStart = function(status, percent, agent, pIndex)
	{
		var formFields = agent.streams.packages.getItem(pIndex).data;
		var chatId = formFields.CHAT_ID;
		var fileId = this.BXIM.disk.files[chatId][status.id].id;
		if (!this.BXIM.disk.files[formFields.CHAT_ID][fileId])
			return false;

		this.BXIM.disk.files[chatId][fileId].progress = parseInt(percent);
		BX.MessengerCommon.diskRedrawFile(chatId, fileId);
	}

	MessengerCommon.prototype.diskChatDialogFileProgress = function(status, percent, agent, pIndex)
	{
		var formFields = agent.streams.packages.getItem(pIndex).data;
		var chatId = formFields.CHAT_ID;
		var fileId = this.BXIM.disk.files[chatId][status.id].id;
		if (!this.BXIM.disk.files[formFields.CHAT_ID][fileId])
			return false;

		this.BXIM.disk.files[chatId][fileId].progress = Math.max(
			parseInt(percent),
			(this.BXIM.disk.files[chatId][fileId].progress || 0));
		BX.MessengerCommon.diskRedrawFile(chatId, fileId);
	}

	MessengerCommon.prototype.diskChatDialogFileDone = function(status, file, agent, pIndex)
	{
		window.onbeforeunload = this.BXIM.disk.OldBeforeUnload;
	}

	MessengerCommon.prototype.diskChatDialogFileError = function(item, file, agent, pIndex)
	{
		var formFields = agent.streams.packages.getItem(pIndex).data;
		this.clearProgessMessage(formFields.REG_MESSAGE_ID);

		var chatId = formFields.CHAT_ID;
		var fileId = this.BXIM.disk.files[chatId][item.id].id;
		if (!this.BXIM.disk.files[formFields.CHAT_ID][fileId])
			return false;

		item.deleteFile();

		this.BXIM.disk.files[formFields.CHAT_ID][fileId].status = "error";
		this.BXIM.disk.files[formFields.CHAT_ID][fileId].errorText = file.error;
		BX.MessengerCommon.diskRedrawFile(formFields.CHAT_ID, fileId);

		window.onbeforeunload = this.BXIM.disk.OldBeforeUnload;
	}

	MessengerCommon.prototype.diskChatDialogUploadError = function(stream, pIndex, data)
	{
		var files = stream.post.REG_PARAMS? JSON.parse(stream.post.REG_PARAMS): {};
		var messages = {};
		for (var tmpId in files)
		{
			if (this.BXIM.disk.filesMessage[tmpId])
			{
				delete this.BXIM.disk.filesMessage[tmpId];
			}
			if (this.BXIM.disk.files[stream.post.REG_CHAT_ID])
			{
				if (this.BXIM.disk.files[stream.post.REG_CHAT_ID][files[tmpId]])
				{
					this.BXIM.disk.files[stream.post.REG_CHAT_ID][files[tmpId]].status = 'error';
					BX.MessengerCommon.diskRedrawFile(stream.post.REG_CHAT_ID, files[tmpId]);
				}
				if (this.BXIM.disk.files[stream.post.REG_CHAT_ID][tmpId])
				{
					this.BXIM.disk.files[stream.post.REG_CHAT_ID][tmpId].status = 'error';
					BX.MessengerCommon.diskRedrawFile(stream.post.REG_CHAT_ID, tmpId);
				}

			}
			delete this.BXIM.disk.filesProgress[tmpId];
		}
		window.onbeforeunload = this.BXIM.disk.OldBeforeUnload;
		BX.MessengerCommon.drawTab(this.getRecipientByChatId(stream.post.REG_CHAT_ID));
	}

	MessengerCommon.prototype.phoneCheckDesktop = function(allowMobile)
	{
		allowMobile = allowMobile === true;

		var result = new BX.Promise();

		if(allowMobile && this.isMobile())
		{
			result.resolve();
			return result;
		}

		BX.desktopUtils.runningCheck(
			function()
			{
				result.reject();
			},
			function()
			{
				result.resolve();
			}
		);
		return result;
	};


	/* Section: Telephony */
	MessengerCommon.prototype.pullPhoneEvent = function()
	{
		if (this.BXIM.options.frameMode)
		{
			return false;
		}

		var pullPhoneEventHandler =  BX.delegate(function(command,params)
		{
			if (this.isMobile())
			{
				params = command.params;
				command = command.command;
				console.info('pull info: ', command, params);
			}

			if (command == 'invite')
			{
				if(!this.BXIM.webrtc.phoneSupport())
					return false;

				if (this.BXIM.callController && this.BXIM.callController.hasActiveCall())
				{
					// todo: set and proceed busy status in b_voximplant_queue
					/*BX.MessengerCommon.phoneCommand('busy', {'CALL_ID' : params.callId});*/
					return false;
				}

				if (this.BXIM.webrtc.isCallListMode())
				{
					BX.MessengerCommon.phoneCommand('busy', {'CALL_ID' : params.callId});
					return false;
				}

				if (BX.localStorage.get('viInitedCall') || BX.localStorage.get('viExternalCard'))
				{
					return false;
				}

				this.phoneCheckDesktop(true).then(function()
				{
					if (params.CRM && params.CRM.FOUND)
					{
						this.BXIM.webrtc.phoneCrm = params.CRM;
					}
					else
					{
						this.BXIM.webrtc.phoneCrm = {};
					}

					this.BXIM.webrtc.phonePortalCall = params.portalCall? true: false;
					if (this.BXIM.webrtc.phonePortalCall && params.portalCallData)
					{
						for (var i in params.portalCallData.users)
						{
							params.portalCallData.users[i].last_activity_date = params.portalCallData.users[i].last_activity_date? new Date(params.portalCallData.users[i].last_activity_date): false;
							params.portalCallData.users[i].mobile_last_date = params.portalCallData.users[i].mobile_last_date? new Date(params.portalCallData.users[i].mobile_last_date): false;
							params.portalCallData.users[i].idle = params.portalCallData.users[i].idle? new Date(params.portalCallData.users[i].idle): false;
							params.portalCallData.users[i].absent = params.portalCallData.users[i].absent? new Date(params.portalCallData.users[i].absent): false;

							this.BXIM.messenger.users[i] = params.portalCallData.users[i];
						}

						for (var i in params.portalCallData.hrphoto)
							this.BXIM.messenger.hrphoto[i] = params.portalCallData.hrphoto[i];

						params.callerId = this.BXIM.messenger.users[params.portalCallUserId].name;
						params.phoneNumber = '';
					}

					this.BXIM.webrtc.phoneCallConfig = params.config? params.config: {};
					this.BXIM.webrtc.phoneCallTime = 0;

					this.BXIM.repeatSound('ringtone', 5000);

					if (this.isPage())
					{
						BX.MessengerWindow.changeTab('im');
					}

					BX.MessengerCommon.phoneCommand('wait', {'CALL_ID' : params.callId, 'DEBUG_INFO': this.getDebugInfo()});

					if(params.isTransfer)
					{
						this.BXIM.webrtc.phoneTransferEnabled = true;
					}

					this.BXIM.webrtc.phoneIncomingWait({
						chatId: params.chatId,
						callId: params.callId,
						callerId: params.callerId,
						lineNumber: params.lineNumber,
						companyPhoneNumber: params.phoneNumber,
						isCallback: params.isCallback,
						showCrmCard: params.showCrmCard,
						crmEntityType: params.crmEntityType,
						crmEntityId: params.crmEntityId,
						crmActivityId: params.crmActivityId,
						crmActivityEditUrl: params.crmActivityEditUrl,
						portalCall: params.portalCall,
						portalCallUserId: params.portalCallUserId,
						portalCallData: params.portalCallData,
						config: params.config
					});
				}.bind(this));

			}
			else if (command == 'answer_self')
			{
				if (this.BXIM.webrtc.callSelfDisabled || this.BXIM.webrtc.phoneCallId != params.callId)
					return false;

				this.BXIM.stopRepeatSound('ringtone');
				this.BXIM.stopRepeatSound('dialtone');

				this.BXIM.webrtc.callInit = false;
				this.BXIM.webrtc.phoneCallFinish();
				this.BXIM.webrtc.callAbort();
				this.BXIM.webrtc.phoneCallView.close();

				this.BXIM.webrtc.callInit = true;
				this.BXIM.webrtc.phoneCallId = params.callId;
			}
			else if (command == 'timeout')
			{
				if(this.BXIM.webrtc.phoneTransferCallId === params.callId)
				{
					return this.BXIM.webrtc.errorInviteTransfer(params.failedCode, params.failedReason);
				}
				else if (this.BXIM.webrtc.phoneCallId != params.callId)
				{
					return false;
				}

				clearInterval(this.BXIM.webrtc.phoneConnectedInterval);
				BX.localStorage.remove('viInitedCall');

				var external = this.BXIM.webrtc.phoneCallExternal;

				this.BXIM.stopRepeatSound('ringtone');
				this.BXIM.stopRepeatSound('dialtone');

				this.BXIM.webrtc.callInit = false;

				var phoneNumber = this.BXIM.webrtc.phoneNumber;
				this.BXIM.webrtc.phoneCallFinish();
				this.BXIM.webrtc.callAbort();

				if(this.BXIM.webrtc.phoneCallView)
				{
					this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle, {failedCode: params.failedCode});
				}

				if (external && params.failedCode == 486)
				{
					if (this.BXIM.webrtc.phoneCallView)
					{
						this.BXIM.webrtc.phoneCallView.setProgress('offline');
						this.BXIM.webrtc.phoneCallView.setStatusText(BX.message('IM_PHONE_ERROR_BUSY_PHONE'));
						this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.sipPhoneError);
					}
				}
				else if (external && params.failedCode == 480)
				{
					if (this.BXIM.webrtc.phoneCallView)
					{
						this.BXIM.webrtc.phoneCallView.setProgress('error');
						this.BXIM.webrtc.phoneCallView.setStatusText(BX.message('IM_PHONE_ERROR_NA_PHONE'));
						this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.sipPhoneError);
					}
				}
				else
				{
					if (this.BXIM.webrtc.phoneCallView)
					{
						if(this.BXIM.webrtc.isCallListMode())
						{
							this.BXIM.webrtc.phoneCallView.setStatusText('');
							this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.outgoing);
						}
						else
						{
							this.BXIM.webrtc.phoneCallView.setStatusText(BX.message('IM_PHONE_END'));
							this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.idle);
							this.BXIM.webrtc.phoneCallView.autoClose();
						}
					}
				}
			}
			else if (command == 'outgoing')
			{
				if (this.BXIM.webrtc.callInit && (this.BXIM.webrtc.phoneNumber == params.phoneNumber || params.phoneNumber.indexOf(this.BXIM.webrtc.phoneNumber) >= 0))
				{
					this.BXIM.webrtc.phoneCallDevice = params.callDevice == 'PHONE'? 'PHONE': 'WEBRTC';
					this.BXIM.webrtc.phonePortalCall = !!params.portalCall;

					this.BXIM.webrtc.phoneNumber = params.phoneNumber;

					if (this.BXIM.webrtc.phoneCallExternal && this.BXIM.webrtc.phoneCallDevice == 'PHONE')
					{
						this.BXIM.webrtc.phoneCallView.setProgress('connect');
						this.BXIM.webrtc.phoneCallView.setStatusText(BX.message('IM_PHONE_WAIT_ANSWER'));
					}

					this.BXIM.webrtc.phoneCallConfig = params.config? params.config: {};
					this.BXIM.webrtc.phoneCallId = params.callId;
					this.BXIM.webrtc.phoneCallTime = 0;
					this.BXIM.webrtc.phoneCrm = params.CRM;
					if(this.BXIM.webrtc.phoneCallView && params.showCrmCard)
					{
						this.BXIM.webrtc.phoneCallView.setCrmData(params.CRM);
						this.BXIM.webrtc.phoneCallView.setCrmEntity({
							type: params.crmEntityType,
							id: params.crmEntityId,
							activityId: params.crmActivityId,
							activityEditUrl: params.crmActivityEditUrl,
							bindings: params.crmBindings
						});
						this.BXIM.webrtc.phoneCallView.setConfig(params.config);
						this.BXIM.webrtc.phoneCallView.setCallId(params.callId);
						if(params.lineNumber)
							this.BXIM.webrtc.phoneCallView.setLineNumber(params.lineNumber);

						if(params.lineName)
							this.BXIM.webrtc.phoneCallView.setCompanyPhoneNumber(params.lineName);

						this.BXIM.webrtc.phoneCallView.reloadCrmCard();
					}

					if (this.BXIM.webrtc.phoneCallView && this.BXIM.webrtc.phonePortalCall)
					{
						this.BXIM.webrtc.phoneCallView.setPortalCall(true);
						this.BXIM.webrtc.phoneCallView.setPortalCallData(params.portalCallData);
						this.BXIM.webrtc.phoneCallView.setPortalCallUserId(params.portalCallUserId);
						this.BXIM.webrtc.phoneCallView.setPortalCallQueueName(params.portalCallQueueName);
					}

				}
				else if (!this.BXIM.webrtc.callInit && !this.BXIM.webrtc.callActive && params.callDevice == 'PHONE')
				{
					this.phoneCheckDesktop(true).then(function()
					{
						this.BXIM.webrtc.phoneCallDevice = params.callDevice == 'PHONE'? 'PHONE': 'WEBRTC';
						this.BXIM.webrtc.phonePortalCall = params.portalCall? true: false;
						this.BXIM.webrtc.phoneCallId = params.callId;
						this.BXIM.webrtc.phoneCallTime = 0;
						this.BXIM.webrtc.phoneCallConfig = params.config? params.config: {};
						this.BXIM.webrtc.phoneCrm = params.CRM;

						this.BXIM.webrtc.phoneDisplayExternal({
							callId: params.callId,
							config: params.config? params.config: {},
							phoneNumber: params.phoneNumber,
							portalCall: params.portalCall,
							portalCallUserId: params.portalCallUserId,
							portalCallData: params.portalCallData,
							portalCallQueueName: params.portalCallQueueName,
							showCrmCard: params.showCrmCard,
							crmEntityType: params.crmEntityType,
							crmEntityId: params.crmEntityId
						});

					}.bind(this));
				}
			}
			else if (command == 'start')
			{
				if(this.BXIM.webrtc.phoneTransferCallId === params.callId)
				{
					this.BXIM.webrtc.phoneCallView.setStatusText(BX.message('IM_M_CALL_ST_TRANSFER_CONNECTED'));
					return;
				}
				else if (this.BXIM.webrtc.phoneCallId != params.callId)
				{
					return;
				}

				this.BXIM.webrtc.callOverlayTimer('start');
				this.BXIM.stopRepeatSound('ringtone');
				if (this.BXIM.webrtc.phoneCallId == params.callId && this.BXIM.webrtc.phoneCallDevice == 'PHONE' && (this.BXIM.webrtc.phoneCallDevice == params.callDevice || this.BXIM.webrtc.phonePortalCall))
				{
					this.BXIM.webrtc.phoneOnCallConnected();
				}
				else if (this.BXIM.webrtc.phoneCallId == params.callId && params.callDevice == 'PHONE' && this.BXIM.webrtc.phoneIncoming)
				{
					this.BXIM.webrtc.phoneCallDevice = 'PHONE';
					if(this.BXIM.webrtc.phoneCallView)
					{
						this.BXIM.webrtc.phoneCallView.setDeviceCall(true);
					}
					this.BXIM.webrtc.phoneOnCallConnected();
				}
				if (params.CRM)
				{
					this.BXIM.webrtc.phoneCrm = params.CRM;
					this.BXIM.webrtc.callOverlayDrawCrm();
				}

				if (this.BXIM.webrtc.phoneNumber != '')
				{
					this.BXIM.webrtc.phoneNumberLast = this.BXIM.webrtc.phoneNumber;
					this.BXIM.setLocalConfig('phone_last', this.BXIM.webrtc.phoneNumber);
				}
			}
			else if (command == 'hold' || command == 'unhold')
			{
				if (this.BXIM.webrtc.phoneCallId == params.callId)
				{
					this.BXIM.webrtc.phoneHolded = command == 'hold';
				}
			}
			else if (command == 'update_crm')
			{
				if (this.BXIM.webrtc.phoneCallId == params.callId && params.CRM && params.CRM.FOUND)
				{
					this.BXIM.webrtc.phoneCrm = params.CRM;

					if(this.isMobile())
					{
						this.BXIM.webrtc.callOverlayDrawCrm();
						if (this.BXIM.webrtc.callNotify)
							this.BXIM.webrtc.callNotify.adjustPosition();
					}
					else if(this.BXIM.webrtc.phoneCallView)
					{
						this.BXIM.webrtc.phoneCallView.setCrmData(params.CRM);
						if(params.showCrmCard)
						{
							this.BXIM.webrtc.phoneCallView.setCrmEntity({
								type: params.crmEntityType,
								id: params.crmEntityId,
								activityId: params.crmActivityId,
								activityEditUrl: params.crmActivityEditUrl,
								bindings: params.crmBindings
							});
							this.BXIM.webrtc.phoneCallView.reloadCrmCard();
						}
					}
				}
			}
			else if (command === 'updatePortalUser')
			{
				if (this.BXIM.webrtc.phoneCallId == params.callId && this.BXIM.webrtc.phoneCallView)
				{
					this.BXIM.webrtc.phoneCallView.setPortalCall(true);
					this.BXIM.webrtc.phoneCallView.setPortalCallData(params.portalCallData);
					this.BXIM.webrtc.phoneCallView.setPortalCallUserId(params.portalCallUserId);
				}
			}
			else if (command == 'completeTransfer')
			{
				if (this.BXIM.webrtc.phoneCallId != params.callId)
				{
					return false;
				}

				this.BXIM.webrtc.phoneCallId = params.newCallId;

				this.phoneTransferTargetId = 0;
				this.phoneTransferTargetType = '';
				this.phoneTransferCallId = '';
				this.phoneTransferEnabled = false;
				BX.localStorage.set('vite', false, 1);

				this.BXIM.webrtc.phoneCallDevice = params.callDevice == 'PHONE'? 'PHONE': 'WEBRTC';
				if(this.BXIM.webrtc.phoneCallDevice == 'PHONE')
				{
					this.BXIM.webrtc.phoneCallView.setDeviceCall(true);
				}
				this.BXIM.webrtc.phoneCallView.setTransfer(false);
				this.BXIM.webrtc.phoneOnCallConnected();
			}
			else if (command == 'phoneDeviceActive')
			{
				this.BXIM.webrtc.phoneDeviceActive = params.active == 'Y';
			}
			else if (command == 'changeDefaultLineId')
			{
				this.BXIM.webrtc.phoneDefaultLineId = params.defaultLineId;
			}
			else if (command == 'replaceCallerId')
			{
				var callTitle = BX.message('IM_PHONE_CALL_TRANSFER').replace('#PHONE#', params.callerId);
				this.BXIM.webrtc.setCallOverlayTitle(callTitle);
				this.BXIM.webrtc.phoneCallView.setPhoneNumber(params.callerId);
				if (params.CRM)
				{
					this.BXIM.webrtc.phoneCrm = params.CRM;
					this.BXIM.webrtc.phoneCallView.setCrmData(params.CRM);
					if(params.showCrmCard)
					{
						this.BXIM.webrtc.phoneCallView.setCrmEntity({
							type: params.crmEntityType,
							id: params.crmEntityId,
							activityId: params.crmActivityId,
							activityEditUrl: params.crmActivityEditUrl,
							bindings: params.crmBindings
						});
						this.BXIM.webrtc.phoneCallView.reloadCrmCard();
					}
				}
			}
			else if (command == 'showExternalCall')
			{
				if (this.BXIM.callController && this.BXIM.callController.hasActiveCall())
					return false;

				if ( BX.localStorage.get('viInitedCall') || BX.localStorage.get('viExternalCard'))
				{
					return false;
				}

				this.phoneCheckDesktop().then(function()
				{
					if (params.CRM && params.CRM.FOUND)
					{
						this.BXIM.webrtc.phoneCrm = params.CRM;
					}
					else
					{
						this.BXIM.webrtc.phoneCrm = {};
					}

					this.BXIM.webrtc.showExternalCall({
						callId: params.callId,
						fromUserId: params.fromUserId,
						toUserId: params.toUserId,
						isCallback: params.isCallback,
						phoneNumber: params.phoneNumber,
						lineNumber: params.lineNumber,
						companyPhoneNumber: params.companyPhoneNumber,
						showCrmCard: params.showCrmCard,
						crmEntityType: params.crmEntityType,
						crmEntityId: params.crmEntityId,
						crmBindings: params.crmBindings,
						crmActivityId: params.crmActivityId,
						crmActivityEditUrl: params.crmActivityEditUrl,
						config: params.config,
						portalCall: params.portalCall,
						portalCallData: params.portalCallData,
						portalCallUserId: params.portalCallUserId
					});

				}.bind(this));
			}
			else if (command == 'hideExternalCall')
			{
				if (this.isMobile())
					return false;

				if(this.BXIM.webrtc.callActive && this.BXIM.webrtc.phoneCallExternal && this.BXIM.webrtc.phoneCallId == params.callId)
				{
					this.BXIM.webrtc.hideExternalCall();
				}
			}
		}, this);

		BX.addCustomEvent("onPullEvent-voximplant", pullPhoneEventHandler);
	}

	MessengerCommon.prototype.phoneCommand = function(command, params, async, successCallback)
	{
		var promiseMode = !BX.type.isFunction(successCallback);
		var result;
		if(promiseMode)
		{
			result = new BX.Promise();
		}
		if (!this.BXIM.webrtc.phoneSupport())
		{
			if(promiseMode)
			{
				result.reject();
				return result;
			}
			else
			{
				return false;
			}
		}

		async = async != false;
		params = typeof(params) == 'object' ? params: {};

		try
		{
			params = JSON.stringify(params);
		}
		catch (e)
		{
			console.error("Could not convert params to JSON, error: ", e);
			return;
		}

		BX.ajax({
			url: this.BXIM.pathToCallAjax+'?PHONE_SHARED&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			async: async,
			data: {'IM_PHONE' : 'Y', 'COMMAND': command, 'PARAMS' : params, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: function(response)
			{
				if(promiseMode)
				{
					result.resolve(response);
				}
				else
				{
					successCallback(response)
				}
			}
		});

		return promiseMode ? result : true;
	}

	MessengerCommon.prototype.phoneCorrect = function(number)
	{
		return  number.toString().replace(/[^0-9+#*;,]/g, '');
	}

	MessengerCommon.prototype.phoneOnIncomingCall = function(params)
	{
		if (this.BXIM.webrtc.phoneCurrentCall)
			return false;

		var viEvent = {};
		if (this.isMobile())
		{
			viEvent = BX.MobileVoximplantCall.events;
		}
		else
		{
			viEvent = VoxImplant.CallEvents;
		}

		this.BXIM.webrtc.phoneCurrentCall = params.call;
		this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.Connected, BX.delegate(this.BXIM.webrtc.phoneOnCallConnected, this.BXIM.webrtc));
		this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.Disconnected, BX.delegate(this.BXIM.webrtc.phoneOnCallDisconnected, this.BXIM.webrtc));
		this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.Failed, BX.delegate(this.BXIM.webrtc.phoneOnCallFailed, this.BXIM.webrtc));
		this.BXIM.webrtc.phoneCurrentCall.answer();
	}

	MessengerCommon.prototype.phoneGetCallParams = function()
	{
		var result = BX.type.isPlainObject(this.BXIM.webrtc.phoneParams) ? BX.clone(this.BXIM.webrtc.phoneParams) : {};
		if (this.BXIM.webrtc.phoneFullNumber != this.BXIM.webrtc.phoneNumber)
		{
			result['FULL_NUMBER'] = this.BXIM.webrtc.phoneFullNumber;
		}
		return JSON.stringify(result);
	}

	MessengerCommon.prototype.phoneCallStart = function()
	{
		this.BXIM.webrtc.phoneParams['CALLER_ID'] = '';
		this.BXIM.webrtc.phoneParams['USER_ID'] = this.BXIM.userId;
		this.BXIM.webrtc.phoneLog('Call params: ', this.BXIM.webrtc.phoneNumber, this.BXIM.webrtc.phoneParams);
		if (!this.BXIM.webrtc.phoneAPI.connected())
		{
			this.BXIM.webrtc.phoneOnSDKReady();
			return false;
		}

		if (!this.isMobile() && false) // TODO debug mode for testing interface
		{
			this.BXIM.webrtc.phoneCurrentCall = true;
			this.BXIM.webrtc.callActive = true;
			this.BXIM.webrtc.phoneOnCallConnected();
			this.BXIM.webrtc.phoneCrm.FOUND = 'N';
			this.BXIM.webrtc.phoneCrm.CONTACT_URL = '#';
			this.BXIM.webrtc.phoneCrm.LEAD_URL = '#';
			this.BXIM.webrtc.callOverlayDrawCrm();
		}
		else
		{
			var viEvent = {};
			if (this.isMobile())
			{
				viEvent = BX.MobileVoximplantCall.events;
			}
			else
			{
				viEvent = VoxImplant.CallEvents;
				this.BXIM.webrtc.phoneAPI.setOperatorACDStatus('ONLINE');
			}

			this.BXIM.webrtc.phoneCurrentCall = this.BXIM.webrtc.phoneAPI.call(this.BXIM.webrtc.phoneNumber, false, this.phoneGetCallParams());
			this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.Connected, BX.delegate(this.BXIM.webrtc.phoneOnCallConnected, this.BXIM.webrtc));
			this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.Disconnected, BX.delegate(this.BXIM.webrtc.phoneOnCallDisconnected, this.BXIM.webrtc));
			this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.Failed, BX.delegate(this.BXIM.webrtc.phoneOnCallFailed, this.BXIM.webrtc));
			this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.ProgressToneStart, BX.delegate(this.BXIM.webrtc.phoneOnProgressToneStart, this.BXIM.webrtc));
			this.BXIM.webrtc.phoneCurrentCall.addEventListener(viEvent.ProgressToneStop, BX.delegate(this.BXIM.webrtc.phoneOnProgressToneStop, this.BXIM.webrtc));
			if (this.isMobile())
			{
				this.BXIM.webrtc.phoneCurrentCall.start();
			}
		}

		BX.ajax({
			url: this.BXIM.pathToCallAjax+'?PHONE_INIT&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 30,
			data: {'IM_PHONE' : 'Y', 'COMMAND': 'init', 'NUMBER' : this.BXIM.webrtc.phoneNumber, 'NUMBER_USER' : BX.util.htmlspecialcharsback(this.BXIM.webrtc.phoneNumberUser), 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				if (data.ERROR == '')
				{
					if (!(data.HR_PHOTO.length == 0))
					{
						for (var i in data.HR_PHOTO)
							this.BXIM.messenger.hrphoto[i] = data.HR_PHOTO[i];

						this.BXIM.webrtc.callOverlayUserId = data.DIALOG_ID;
					}
					else
					{
						this.BXIM.webrtc.callOverlayChatId = data.DIALOG_ID.substr(4);
					}
				}
			}, this)
		});
	}

	MessengerCommon.prototype.phoneCallFinish = function()
	{
		clearInterval(this.BXIM.webrtc.phoneConnectedInterval);
		BX.localStorage.remove('viInitedCall');
		clearInterval(this.BXIM.webrtc.phoneCallTimeInterval);

		this.BXIM.webrtc.callOverlayTimer('pause');

		if (!this.isMobile())
		{
			this.BXIM.desktop.closeTopmostWindow();
		}

		if (this.BXIM.webrtc.phoneCurrentCall)
		{
			try { this.BXIM.webrtc.phoneCurrentCall.hangup({"X-Disconnect-Code": 200, "X-Disconnect-Reason": "Normal hangup"}); } catch (e) {}
			this.BXIM.webrtc.phoneCurrentCall = null;
			this.BXIM.webrtc.phoneLog('Call hangup call');
		}
		else if (this.BXIM.webrtc.phoneDisconnectAfterCallFlag && this.BXIM.webrtc.phoneAPI && this.BXIM.webrtc.phoneAPI.connected())
		{
			setTimeout(BX.delegate(function(){
				if (this.BXIM.webrtc.phoneAPI && this.BXIM.webrtc.phoneAPI.connected())
					this.BXIM.webrtc.phoneAPI.disconnect();
			}, this), 500)
		}

		if (this.isMobile())
		{}
		else
		{
			if (this.BXIM.webrtc.popupKeyPad)
				this.BXIM.webrtc.popupKeyPad.close();
			if (this.BXIM.webrtc.popupTransferDialog)
				this.BXIM.webrtc.popupTransferDialog.close();

			BX.localStorage.set('vite', false, 1);
		}

		this.BXIM.webrtc.phoneRinging = 0;
		this.BXIM.webrtc.phoneIncoming = false;
		this.BXIM.webrtc.phoneCallId = '';
		this.BXIM.webrtc.phoneCallExternal = false;
		this.BXIM.webrtc.phoneCallDevice = 'WEBRTC';
		//this.BXIM.webrtc.phonePortalCall = false;
		this.BXIM.webrtc.phoneNumber = '';
		this.BXIM.webrtc.phoneNumberUser = '';
		this.BXIM.webrtc.phoneParams = {};
		this.BXIM.webrtc.callOverlayOptions = {};
		this.BXIM.webrtc.callSelfDisabled = false;
		//this.BXIM.webrtc.phoneCrm = {};
		this.BXIM.webrtc.phoneMicMuted = false;
		this.BXIM.webrtc.phoneHolded = false;
		this.BXIM.webrtc.phoneMicAccess = false;
		this.BXIM.webrtc.phoneTransferTargetType = '';
		this.BXIM.webrtc.phoneTransferTargetId = 0;
		this.BXIM.webrtc.phoneTransferCallId = '';
		this.BXIM.webrtc.phoneTransferEnabled = false;
	}

	MessengerCommon.prototype.phoneAuthorize = function()
	{
		BX.ajax({
			url: this.BXIM.pathToCallAjax+'?PHONE_AUTHORIZE&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			skipAuthCheck: true,
			timeout: 30,
			data: {'IM_PHONE' : 'Y', 'COMMAND': 'authorize', 'UPDATE_INFO': this.BXIM.webrtc.phoneCheckBalance? 'Y': 'N', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (data && data.BITRIX_SESSID)
				{
					BX.message({'bitrix_sessid': data.BITRIX_SESSID});
				}
				if (data.ERROR == '')
				{
					this.BXIM.messenger.sendAjaxTry = 0;
					this.BXIM.webrtc.phoneCheckBalance = false;

					if (data.HR_PHOTO)
					{
						for (var i in data.HR_PHOTO)
							this.BXIM.messenger.hrphoto[i] = data.HR_PHOTO[i];
					}

					if (this.isMobile())
					{
						this.BXIM.webrtc.phoneLogin = data.LOGIN;
						this.BXIM.webrtc.phoneServer = data.SERVER;

						this.BXIM.webrtc.phoneLog('auth with', this.BXIM.webrtc.phoneLogin+"@"+this.BXIM.webrtc.phoneServer);
						BX.MobileVoximplant.loginWithOneTimeKey(data.LOGIN+'@'+data.SERVER, data.HASH)
					}
					else
					{
						this.BXIM.webrtc.phoneLogin = data.LOGIN;
						this.BXIM.webrtc.phoneServer = data.SERVER;
					}
					this.BXIM.webrtc.phoneCallerID = data.CALLERID;

					this.BXIM.webrtc.phoneApiInit();
				}
				else if (data.ERROR == 'AUTHORIZE_ERROR' && (this.isDesktop() || this.isMobile()) && this.BXIM.messenger.sendAjaxTry < 3)
				{
					this.BXIM.messenger.sendAjaxTry++;
					setTimeout(BX.delegate(function (){
						this.phoneAuthorize();
					}, this), 5000);

					BX.onCustomEvent(window, 'onImError', [data.ERROR]);
				}
				else if (data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
				{
					this.BXIM.messenger.sendAjaxTry++;
					setTimeout(BX.delegate(function(){
						this.phoneAuthorize();
					}, this), 2000);
					BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
				}
				else
				{
					this.BXIM.webrtc.callOverlayDeleteEvents();
					this.BXIM.webrtc.callOverlayProgress('offline');

					this.BXIM.webrtc.phoneLog('onetimekey', data.ERROR, data.CODE);
					if (data.ERROR == 'AUTHORIZE_ERROR' || data.ERROR == 'SESSION_ERROR')
					{
						BX.onCustomEvent(window, 'onImError', [data.ERROR]);
						this.BXIM.webrtc.callAbort(BX.message('IM_PHONE_401'));
					}
					else
					{
						this.BXIM.webrtc.callAbort(data.ERROR+(this.BXIM.webrtc.debug? '<br />('+BX.message('IM_ERROR_CODE')+': '+data.CODE+')': ''));
					}
					if (!this.isMobile())
					{
						this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);
						this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);
					}
				}
			}, this),
			onfailure: BX.delegate(function() {
				this.BXIM.webrtc.phoneCallFinish();
				this.BXIM.webrtc.callAbort(BX.message('IM_M_CALL_ERR'));
			}, this)
		});
	}

	MessengerCommon.prototype.phoneOnAuthResult = function(e)
	{
		if (e.result)
		{
			if (this.BXIM.webrtc.phoneCallDevice == 'PHONE')
				return false;

			this.BXIM.webrtc.phoneLog('Authorize result', 'success');
			if (this.BXIM.webrtc.phoneIncoming)
			{
				BX.MessengerCommon.phoneCommand('ready', {'CALL_ID': this.BXIM.webrtc.phoneCallId});
			}
			else if (this.BXIM.webrtc.callInitUserId == this.BXIM.userId)
			{
				BX.MessengerCommon.phoneCallStart();
			}
		}
		else if (!this.isMobile() && e.code == 302)
		{
			BX.ajax({
				url: this.BXIM.pathToCallAjax+'?PHONE_ONETIMEKEY&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 30,
				data: {'IM_PHONE' : 'Y', 'COMMAND': 'onetimekey', 'KEY': e.key, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
				onsuccess: BX.delegate(function(data)
				{
					if (data.ERROR == '')
					{
						this.BXIM.webrtc.phoneLog('auth with', this.BXIM.webrtc.phoneLogin+"@"+this.BXIM.webrtc.phoneServer);
						this.BXIM.webrtc.phoneAPI.loginWithOneTimeKey(this.BXIM.webrtc.phoneLogin+"@"+this.BXIM.webrtc.phoneServer, data.HASH);
					}
					else
					{
						this.BXIM.webrtc.phoneCallFinish();

						this.BXIM.webrtc.phoneLog('onetimekey', data.ERROR, data.CODE);
						if (data.CODE)
							this.BXIM.webrtc.callAbort(BX.message('IM_PHONE_ERROR_CONNECT'));
						else
							this.BXIM.webrtc.callAbort(data.ERROR+(this.debug? '<br />('+BX.message('IM_ERROR_CODE')+': '+data.CODE+')': ''));

						if (!this.isMobile())
						{
							this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);
							this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);
						}
					}
				}, this),
				onfailure: BX.delegate(function() {
					this.BXIM.webrtc.callAbort(BX.message('IM_M_CALL_ERR'));
					this.BXIM.webrtc.phoneCallFinish();
				}, this)
			});
		}
		else
		{
			if (e.code == 401 || e.code == 400 || e.code == 403 || e.code == 404 || e.code == 302)
			{
				this.BXIM.webrtc.callAbort(BX.message('IM_PHONE_401'));
				this.BXIM.webrtc.phoneServer = '';
				this.BXIM.webrtc.phoneLogin = '';
				this.BXIM.webrtc.phoneCheckBalance = true;
				BX.MessengerCommon.phoneCommand('authorize_error');
			}
			else
			{
				this.BXIM.webrtc.callAbort(BX.message('IM_M_CALL_ERR'));
			}
			this.BXIM.webrtc.callOverlayProgress('offline');
			if (!this.isMobile())
			{
				this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);
				this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);
			}
			this.BXIM.webrtc.phoneCallFinish();
			this.BXIM.webrtc.phoneLog('Authorize result', 'failed', e.code);
			this.BXIM.webrtc.phoneServer = '';
			this.BXIM.webrtc.phoneLogin = '';
		}
	}

	MessengerCommon.prototype.phoneOnCallFailed = function(e)
	{
		var headers = e.headers || {};
		this.BXIM.webrtc.phoneLog('Call failed', e.code, e.reason);

		var reason = BX.message('IM_PHONE_END');
		if (e.code == 603)
		{
			reason = BX.message('IM_PHONE_DECLINE');
		}
		else if (e.code == 380)
		{
			reason = BX.message('IM_PHONE_ERR_SIP_LICENSE');
		}
		else if (e.code == 436)
		{
			reason = BX.message('IM_PHONE_ERR_NEED_RENT');
		}
		else if (e.code == 438)
		{
			reason = BX.message('IM_PHONE_ERR_BLOCK_RENT');
		}
		else if (e.code == 400)
		{
			reason = BX.message('IM_PHONE_ERR_LICENSE');
		}
		else if (e.code == 401)
		{
			reason = BX.message('IM_PHONE_401');
		}
		else if (e.code == 480 || e.code == 503)
		{
			if (this.BXIM.webrtc.phoneNumber == 911 || this.BXIM.webrtc.phoneNumber == 112)
			{
				reason = BX.message('IM_PHONE_NO_EMERGENCY');
			}
			else
			{
				reason = BX.message('IM_PHONE_UNAVAILABLE');
			}
		}
		else if (e.code == 484 || e.code == 404)
		{
			if (this.BXIM.webrtc.phoneNumber == 911 || this.BXIM.webrtc.phoneNumber == 112)
			{
				reason = BX.message('IM_PHONE_NO_EMERGENCY');
			}
			else
			{
				reason = BX.message('IM_PHONE_INCOMPLETED');
			}
		}
		else if (e.code == 402)
		{
			if(headers.hasOwnProperty('X-Reason') && headers['X-Reason'] === "SIP_PAYMENT_REQUIRED")
			{
				reason = BX.message('IM_PHONE_ERR_SIP_LICENSE');
			}
			else
			{
				reason = BX.message('IM_PHONE_NO_MONEY')+(this.BXIM.isAdmin? ' '+BX.message('IM_PHONE_PAY_URL_NEW'): '');
			}
		}
		else if (e.code == 486 && this.BXIM.webrtc.phoneRinging > 1)
		{
			reason = BX.message('IM_M_CALL_ST_DECLINE');
		}
		else if (e.code == 486)
		{
			reason = BX.message('IM_PHONE_ERROR_BUSY');
		}
		else if (e.code == 403)
		{
			reason = BX.message('IM_PHONE_403');
			this.BXIM.webrtc.phoneServer = '';
			this.BXIM.webrtc.phoneLogin = '';
			this.BXIM.webrtc.phoneCheckBalance = true;
		}

		this.BXIM.webrtc.phoneCallFinish();
		if (e.code == 408 || e.code == 403)
		{
			if (this.BXIM.webrtc.phoneAPI && this.BXIM.webrtc.phoneAPI.connected())
			{
				setTimeout(BX.delegate(function(){
					if (this.BXIM.webrtc.phoneAPI && this.BXIM.webrtc.phoneAPI.connected())
						this.BXIM.webrtc.phoneAPI.disconnect();
				}, this), 500)
			}
		}
		this.BXIM.webrtc.callOverlayProgress('offline');
		this.BXIM.webrtc.callAbort(reason);

		if (!this.isMobile())
		{
			this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);
			this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);
		}
	}

	MessengerCommon.prototype.phoneOnCallDisconnected = function(e)
	{
		this.BXIM.webrtc.phoneLog('Call disconnected', this.BXIM.webrtc.phoneCurrentCall? this.BXIM.webrtc.phoneCurrentCall.id(): '-', this.BXIM.webrtc.phoneCurrentCall? this.BXIM.webrtc.phoneCurrentCall.state(): '-');

		if (this.BXIM.webrtc.phoneCurrentCall)
		{
			this.BXIM.webrtc.phoneCallFinish();
			this.BXIM.webrtc.callOverlayDeleteEvents();
			this.BXIM.webrtc.callOverlayStatus(BX.message('IM_M_CALL_ST_END'));

			if (this.isMobile())
			{
				this.BXIM.webrtc.callOverlayProgress('offline');
				this.BXIM.webrtc.callOverlayState(BX.MobileCallUI.form.state.FINISHED);
			}
			else
			{
				this.BXIM.playSound('stop');
				this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);
				if(this.BXIM.webrtc.isCallListMode())
				{
					this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.outgoing);
				}
				else
				{
					this.BXIM.webrtc.phoneCallView.setStatusText(BX.message('IM_PHONE_END'));
					this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.idle);
					this.BXIM.webrtc.phoneCallView.autoClose();
				}
			}
		}

		if (this.BXIM.webrtc.phoneDisconnectAfterCallFlag && this.BXIM.webrtc.phoneAPI && this.BXIM.webrtc.phoneAPI.connected())
		{
			setTimeout(BX.delegate(function(){
				if (this.BXIM.webrtc.phoneAPI && this.BXIM.webrtc.phoneAPI.connected())
					this.BXIM.webrtc.phoneAPI.disconnect();
			}, this), 500)
		}
	}

	MessengerCommon.prototype.phoneOnProgressToneStart = function(e)
	{
		if (!this.BXIM.webrtc.phoneCurrentCall)
			return false;

		this.BXIM.webrtc.phoneLog('Progress tone start', this.BXIM.webrtc.phoneCurrentCall.id());
		this.BXIM.webrtc.phoneRinging++;
		this.BXIM.webrtc.callOverlayStatus(BX.message('IM_PHONE_WAIT_ANSWER'));
	}

	MessengerCommon.prototype.phoneOnProgressToneStop = function(e)
	{
		if (!this.BXIM.webrtc.phoneCurrentCall)
			return false;
		this.BXIM.webrtc.phoneLog('Progress tone stop', this.BXIM.webrtc.phoneCurrentCall.id());
	}

	MessengerCommon.prototype.phoneOnConnectionEstablished = function(e)
	{
		this.BXIM.webrtc.phoneLog('Connection established', this.BXIM.webrtc.phoneAPI.connected());
	}

	MessengerCommon.prototype.phoneOnConnectionFailed = function(e)
	{
		this.BXIM.webrtc.phoneLog('Connection failed');
		this.BXIM.webrtc.phoneCallFinish();
		this.BXIM.webrtc.callAbort(BX.message('IM_M_CALL_ERR'));
	}

	MessengerCommon.prototype.phoneOnConnectionClosed = function(e)
	{
		this.BXIM.webrtc.phoneLog('Connection closed');
		this.BXIM.webrtc.phoneSDKinit = false;
	}

	MessengerCommon.prototype.phoneOnMicResult = function(e)
	{
		this.BXIM.webrtc.phoneMicAccess = e.result;
		this.BXIM.webrtc.phoneLog('Mic Access Allowed', e.result);

		if (!this.isMobile())
		{
			clearTimeout(this.BXIM.webrtc.callDialogAllowTimeout);
			if (this.BXIM.webrtc.callDialogAllow)
				this.BXIM.webrtc.callDialogAllow.close();
		}

		if (e.result)
		{
			this.BXIM.webrtc.callOverlayProgress('connect');
			this.BXIM.webrtc.callOverlayStatus(BX.message('IM_M_CALL_ST_CONNECT'));
		}
		else
		{
			this.BXIM.webrtc.phoneCallFinish();
			this.BXIM.webrtc.callOverlayProgress('offline');
			this.BXIM.webrtc.callAbort(BX.message('IM_M_CALL_ST_NO_ACCESS'));
			if (!this.isMobile())
			{
				this.BXIM.webrtc.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);
				this.BXIM.webrtc.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);
			}
		}
	}

	MessengerCommon.prototype.phoneOnNetStatsReceived = function(e)
	{
		if (!this.BXIM.webrtc.phoneCurrentCall || this.BXIM.webrtc.phoneCurrentCall.state() != "CONNECTED")
			return false;

		var percent = (100-parseInt(e.stats.packetLoss));
		var grade = this.BXIM.webrtc.callPhoneOverlayMeter(percent);

		this.BXIM.webrtc.phoneCurrentCall.sendMessage(JSON.stringify({'COMMAND': 'meter', 'PACKETLOSS': e.stats.packetLoss, 'PERCENT': percent, 'GRADE': grade}));
	}

	MessengerCommon.prototype.phoneHold = function()
	{
		if (!this.BXIM.webrtc.phoneCurrentCall && this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
			return false;

		this.BXIM.webrtc.phoneHolded = true;
		if (this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
		{
			this.BXIM.webrtc.phoneCurrentCall.sendMessage(JSON.stringify({'COMMAND': 'hold'}));
		}
		else
		{
			BX.MessengerCommon.phoneCommand('hold', {'CALL_ID': this.BXIM.webrtc.phoneCallId});
		}
	}

	MessengerCommon.prototype.phoneUnhold = function()
	{
		if (!this.BXIM.webrtc.phoneCurrentCall && this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
			return false;

		this.BXIM.webrtc.phoneHolded = false;
		if (this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
		{
			this.BXIM.webrtc.phoneCurrentCall.sendMessage(JSON.stringify({'COMMAND': 'unhold'}));
		}
		else
		{
			BX.MessengerCommon.phoneCommand('unhold', {'CALL_ID': this.BXIM.webrtc.phoneCallId});
		}
	}

	MessengerCommon.prototype.phoneToggleHold = function(state)
	{
		if (!this.BXIM.webrtc.phoneCurrentCall && this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
			return false;

		if (typeof(state) != 'undefined')
		{
			this.BXIM.webrtc.phoneHolded = !state;
		}

		if (this.BXIM.webrtc.phoneHolded)
		{
			if (this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
			{
				this.BXIM.webrtc.phoneCurrentCall.sendMessage(JSON.stringify({'COMMAND': 'unhold'}));
			}
			else
			{
				BX.MessengerCommon.phoneCommand('unhold', {'CALL_ID': this.BXIM.webrtc.phoneCallId});
			}
		}
		else
		{
			if (this.BXIM.webrtc.phoneCallDevice == 'WEBRTC')
			{
				this.BXIM.webrtc.phoneCurrentCall.sendMessage(JSON.stringify({'COMMAND': 'hold'}));
			}
			else
			{
				BX.MessengerCommon.phoneCommand('hold', {'CALL_ID': this.BXIM.webrtc.phoneCallId});
			}
		}
		this.BXIM.webrtc.phoneHolded = !this.BXIM.webrtc.phoneHolded;
	}

	MessengerCommon.prototype.phoneSendDTMF = function(key)
	{
		if (!this.BXIM.webrtc.phoneCurrentCall)
			return false;

		this.BXIM.webrtc.phoneLog('Send DTMF code', this.BXIM.webrtc.phoneCurrentCall.id(), key);

		this.BXIM.webrtc.phoneCurrentCall.sendTone(key);
	}

	MessengerCommon.prototype.phoneStartCallViaRestApp = function(number, lineId, params)
	{
		BX.rest.callMethod(
			'voximplant.call.startViaRest',
			{
				'NUMBER': number,
				'LINE_ID': lineId,
				'PARAMS': params,
				'SHOW': 'Y'
			}
		);
	}

	MessengerCommon.prototype.phoneGetCallFields = function(chatId)
	{
		if (!this.BXIM.messenger.chat[chatId] || this.BXIM.messenger.chat[chatId].type != "call")
			return {crm: false};

		var currentChat = this.BXIM.messenger.chat[chatId];

		var crmData = currentChat.entity_data_1.toString().split('|');
		if(!this.BXIM.bitrixCrm || crmData.length < 3 || crmData[0] !== 'Y' || !this.BXIM.path.crm[crmData[1]])
		{
			return {crm: false};
		}
		else
		{
			return {
				crm: true,
				crmEntityType: crmData[1],
				crmEntityId: crmData[2],
				crmShowUrl: this.BXIM.path.crm[crmData[1]].replace("#ID#", crmData[2])
			};
		}
	}

	MessengerCommon.prototype.getUser = function(userId)
	{
		return this.BXIM.messenger.users[userId] || false;
	}

	MessengerCommon.prototype.getHrPhoto = function(userId, color)
	{
		var hrphoto = '';

		if(color === undefined)
		{
			color = this.BXIM.messenger.users[userId].color || '';
		}

		if (userId == 'phone')
		{
			hrphoto = '/bitrix/js/im/images/hidef-phone-v3.png';
		}
		else if (this.BXIM.messenger.hrphoto[userId])
		{
			hrphoto = this.BXIM.messenger.hrphoto[userId];
			if (this.BXIM.messenger.hrphoto[userId] != '/bitrix/js/im/images/hidef-avatar-v3.png')
			{
				color = '';
			}
		}
		else if (!this.BXIM.messenger.users[userId] || this.BXIM.messenger.users[userId].avatar == this.BXIM.pathToBlankImage)
		{
			hrphoto = '/bitrix/js/im/images/hidef-avatar-v3.png'
		}
		else
		{
			hrphoto = this.BXIM.messenger.users[userId].avatar;
			color = '';
		}

		return {'src': hrphoto, 'color': color};
	};

	/* OPEN LINES */
	MessengerCommon.prototype.linesBodyScroll = function()
	{
		if (this.isMobile() && document.body.offsetHeight <= window.innerHeight)
		{
			this.BXIM.messenger.popupMessengerBody.scrollTop = 0;
			return false;
		}

		if (this.BXIM.animationSupport)
		{
			if (this.BXIM.messenger.popupMessengerBodyAnimation != null)
				this.BXIM.messenger.popupMessengerBodyAnimation.stop();

			BX.defer(function(){
				(this.BXIM.messenger.popupMessengerBodyAnimation = new BX.easing({
					duration : 600,
					start : { scroll : this.BXIM.messenger.popupMessengerBody.scrollTop },
					finish : { scroll : this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(BX.MessengerCommon.isMobile()? 0: 1)},
					transition : BX.easing.makeEaseInOut(BX.easing.transitions.quart),
					step : BX.delegate(function(state){
						this.BXIM.messenger.popupMessengerBody.scrollTop = state.scroll;
					}, this)
				})).animate();
			}, this)();
		}
		else
		{
			BX.defer(function(){
				this.BXIM.messenger.popupMessengerBody.scrollTop = this.BXIM.messenger.popupMessengerBody.scrollHeight - this.BXIM.messenger.popupMessengerBody.offsetHeight*(BX.MessengerCommon.isMobile()? 0: 1);
			}, this)();
		}
	}

	MessengerCommon.prototype.linesGetSessionHistory = function(sessionId)
	{
		BX.ajax({
			url: this.BXIM.pathToAjax+'?SESSION_GET_HISTORY&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'sessionGetHistory', 'SESSION_ID': sessionId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data)
			{
				if (data && data.BITRIX_SESSID)
				{
					BX.message({'bitrix_sessid': data.BITRIX_SESSID});
				}

				if (data.ERROR == '')
				{
					for (var i in data.FILES)
					{
						if (!this.BXIM.messenger.disk.files[data.CHAT_ID])
							this.BXIM.messenger.disk.files[data.CHAT_ID] = {};
						if (this.BXIM.messenger.disk.files[data.CHAT_ID][i])
							continue;
						data.FILES[i].date = new Date(data.FILES[i].date);
						this.BXIM.messenger.disk.files[data.CHAT_ID][i] = data.FILES[i];
					}

					this.BXIM.messenger.sendAjaxTry = 0;
					for (var i in data.MESSAGE)
					{
						data.MESSAGE[i].date = new Date(data.MESSAGE[i].date);
						data.MESSAGE[i].textOriginal = data.MESSAGE[i].text;
						data.MESSAGE[i].text = BX.MessengerCommon.prepareText(data.MESSAGE[i].text, false, true, true);

						this.BXIM.messenger.message[i] = data.MESSAGE[i];
					}

					for (var i in data.USERS)
					{
						data.USERS[i].last_activity_date = data.USERS[i].last_activity_date? new Date(data.USERS[i].last_activity_date): false;
						data.USERS[i].mobile_last_date = data.USERS[i].mobile_last_date? new Date(data.USERS[i].mobile_last_date): false;
						data.USERS[i].idle = data.USERS[i].idle? new Date(data.USERS[i].idle): false;
						data.USERS[i].absent = data.USERS[i].absent? new Date(data.USERS[i].absent): false;

						this.BXIM.messenger.users[i] = data.USERS[i];
					}

					for (var i in data.CHAT)
					{
						if (!this.BXIM.messenger.chat[i])
						{
							data.CHAT[i].date_create = new Date(data.CHAT[i].date_create);
							this.BXIM.messenger.chat[i] = data.CHAT[i];
						}
					}

					if (data.OPENLINES.canVoteAsHead)
					{
						if (!this.BXIM.messenger.openlines.canVoteAsHead)
						{
							this.BXIM.messenger.openlines.canVoteAsHead = {};
						}

						for (var i in data.OPENLINES.canVoteAsHead)
						{
							this.BXIM.messenger.openlines.canVoteAsHead[i] = data.OPENLINES.canVoteAsHead[i];
						}
					}

					this.BXIM.messenger.linesShowHistory(data.CHAT_ID, {'HISTORY': data.USERS_MESSAGE, 'FILES': data.FILES, 'CAN_JOIN': data.CAN_JOIN, 'CAN_VOTE_HEAD': data.CAN_VOTE_HEAD, 'SESSION_VOTE_HEAD': data.SESSION_VOTE_HEAD, 'SESSION_COMMENT_HEAD': data.SESSION_COMMENT_HEAD, 'SESSION_ID': data.SESSION_ID});
				}
				else
				{
					if (data.CODE == 'ACCESS_DENIED')
					{
						this.BXIM.openConfirm(data.ERROR);
					}
					else if (data.ERROR == 'SESSION_ERROR' && this.BXIM.messenger.sendAjaxTry < 2)
					{
						this.BXIM.messenger.sendAjaxTry++;
						setTimeout(function(){MessengerCommon.prototype.linesGetSessionHistory(sessionID)}, 1000);
						BX.onCustomEvent(window, 'onImError', [data.ERROR, data.BITRIX_SESSID]);
					}
					else if (data.ERROR == 'AUTHORIZE_ERROR')
					{
						this.BXIM.messenger.sendAjaxTry++;
						BX.onCustomEvent(window, 'onImError', [data.ERROR]);
					}
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.sendAjaxTry = 0;
			}, this)
		});
	}

	MessengerCommon.prototype.linesJoinSession = function(chatId)
	{
		BX.ajax({
			url: this.BXIM.pathToAjax+'?JOIN_SESSION&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'joinSession', 'CHAT_ID': chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	}

	MessengerCommon.prototype.linesStartSession = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?START_SESSION_BY_CHAT&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'startSession', 'CHAT_ID': chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	}

	MessengerCommon.prototype.linesStartSessionByMessage = function(messageId)
	{
		if (!this.BXIM.messenger.message[messageId])
		{
			return false;
		}

		var chatId = this.BXIM.messenger.message[messageId].chatId;

		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?START_SESSION_BY_MESSAGE&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'startSessionByMessage', 'CHAT_ID' : chatId, 'MESSAGE_ID' : messageId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};


	MessengerCommon.prototype.linesOpenSession = function(userCode, params)
	{
		params = params || {};

		BX.ajax({
			url: this.BXIM.pathToAjax+'?OPEN_SESSION&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'openSession', 'USER_CODE': userCode, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				if (data.ERROR == '')
				{
					this.BXIM.messenger.openMessenger('chat'+data.CHAT_ID, params).then(function() {
						if (BX.MessengerWindow && this.isLinesOperator())
						{
							if (BX.MessengerWindow.currentTab != 'im-ol')
							{
								BX.MessengerWindow.changeTab('im-ol');
							}
						}
					}.bind(this));
				}
				else
				{
					if (data.CODE == 'ACCESS_DENIED')
					{
						this.BXIM.openConfirm(data.ERROR);
					}
				}
			}, this)
		});
	}

	MessengerCommon.prototype.linesVoteDraw = function(messageId)
	{
		if (
			!this.BXIM.messenger.message[messageId]
			|| !this.BXIM.messenger.message[messageId].params
			|| !this.BXIM.messenger.message[messageId].params.IMOL_VOTE
		)
		{
			return null;
		}

		var message = this.BXIM.messenger.message[messageId];

		var disableAction = false;
		if (this.BXIM.messenger.currentTab.toString().substr(0, 4) == 'chat')
		{
			var lineSource = this.linesGetSource(this.BXIM.messenger.chat[this.BXIM.messenger.message[messageId].chatId]);
			if (!lineSource)
			{
				return null;
			}
			if (
				!this.BXIM.messenger.users[this.BXIM.userId].connector &&
				!(lineSource == 'livechat' || lineSource == 'network' || lineSource == 'support24Question')
			)
			{
				return null;
			}

			disableAction =
				!this.BXIM.messenger.users[this.BXIM.userId].connector
				&& lineSource != 'support24Question';
		}
		else if (
			!this.BXIM.messenger.bot[this.BXIM.messenger.currentTab]
			|| (
				this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type != 'network'
				&& this.BXIM.messenger.bot[this.BXIM.messenger.currentTab].type != 'support24'
			)
		)
		{
			return null;
		}

		var blockText = '';
		var blockDone = false;
		if (message.params.IMOL_VOTE == 'like')
		{
			blockDone = true;
			blockText = message.params.IMOL_VOTE_LIKE;
		}
		else if (message.params.IMOL_VOTE == 'dislike')
		{
			blockDone = true;
			blockText = message.params.IMOL_VOTE_DISLIKE;
		}
		else
		{
			blockText = message.params.IMOL_VOTE_TEXT;
		}

		return BX.create('div', {attrs: {'data-messageId': messageId}, props : {className: 'bx-messenger-content-item-vote-block'+(blockDone? ' bx-messenger-content-item-vote-block-done': '')}, children: [
			BX.create('div', {props : {className: 'bx-messenger-content-item-vote-block-text'}, html: BX.util.htmlspecialchars(blockText)}),
			BX.create('div', {props : {className: 'bx-messenger-content-item-vote-block-buttons'}, children: [
				BX.create('span', {attrs: {title: BX.message('IM_OL_VOTE_LIKE')}, props : {className: 'bx-messenger-content-item-vote-block-like'+(disableAction? ' bx-messenger-content-item-vote-block-disabled': '')}, events: {click: disableAction? function(){}: BX.delegate(function(){ this.linesVoteSend(this.BXIM.messenger.currentTab, BX.proxy_context.parentNode.parentNode.getAttribute('data-messageId'), 'like')}, this)}}),
				BX.create('span', {attrs: {title: BX.message('IM_OL_VOTE_DISLIKE')}, props : {className: 'bx-messenger-content-item-vote-block-dislike'+(disableAction? ' bx-messenger-content-item-vote-block-disabled': '')}, events: {click: disableAction? function(){}: BX.delegate(function(){ this.linesVoteSend(this.BXIM.messenger.currentTab, BX.proxy_context.parentNode.parentNode.getAttribute('data-messageId'), 'dislike')}, this)}})
			]}),
			BX.create('div', {props : {className: 'bx-messenger-content-item-vote-block-final'}, children: [
				BX.create('span', {props : {className: message.params.IMOL_VOTE == 'dislike'? 'bx-messenger-content-item-vote-block-smile-dislike': 'bx-messenger-content-item-vote-block-smile-like'}})
			]})
		]});
	}

	MessengerCommon.prototype.linesVoteResultDraw = function(messageId, messageText)
	{
		if (
			!this.BXIM.messenger.message[messageId]
			|| !this.BXIM.messenger.message[messageId].params
			|| !this.BXIM.messenger.message[messageId].params.IMOL_VOTE_SID
		)
		{
			return messageText;
		}

		var message = this.BXIM.messenger.message[messageId];

		var userResult = '';
		if (typeof(message.params.IMOL_VOTE_USER) == 'undefined' || message.params.IMOL_VOTE_USER == 0)
		{
			userResult = BX.message('IM_OL_VOTE_WO');
		}
		else if (message.params.IMOL_VOTE_USER == 5)
		{
			userResult = '<span class="bx-smile bx-im-smile-like" title="'+BX.message('IM_MESSAGE_LIKE')+'"></span>';
		}
		else
		{
			userResult = '<span class="bx-smile bx-im-smile-dislike" title="'+BX.message('IM_MESSAGE_DISLIKE')+'"></span>';
		}

		var session = this.linesGetSession(this.BXIM.messenger.chat[message.chatId]);
		if (!session)
		{
			return messageText;
		}

		var headResult = this.linesVoteHeadNodes(message.params.IMOL_VOTE_SID, message.params.IMOL_VOTE_HEAD, session.canVoteHead);

		if(typeof message.params.IMOL_COMMENT_HEAD == 'object' && message.params.IMOL_COMMENT_HEAD)
		{
			var textCommentHead = message.params.IMOL_COMMENT_HEAD['text'];
		}
		else
		{
			var textCommentHead = message.params.IMOL_COMMENT_HEAD;
		}

		var headCommentResult = this.linesCommentHeadNodes(message.params.IMOL_VOTE_SID, textCommentHead, session.canVoteHead);

		return BX.create('div', {attrs: {'data-messageId': messageId}, children: [
			BX.create('div', {props : {className: 'bx-messenger-content-item-vote-message-text'}, html: messageText}),
			BX.create('div', {props : {className: 'bx-messenger-content-item-vote-result'}, children: [
				BX.create('div', {props: {className: "bx-messenger-content-item-vote-result-row"}, children: [
					BX.create('span', {props: {className: "bx-messenger-content-item-vote-result-name"}, html: BX.message('IM_OL_VOTE_USER')+':'}),
					BX.create('span', {props: {className: "bx-messenger-content-item-vote-result-value"}, html: userResult})
				]}),
				BX.create('div', {props: {className: "bx-messenger-content-item-vote-result-row"}, children: [
					BX.create('span', {props: {className: "bx-messenger-content-item-vote-result-name"}, html: BX.message('IM_OL_VOTE_HEAD')+':'}),
					BX.create('span', {props: {className: "bx-messenger-content-item-vote-result-value"}, children: [headResult]})
				]}),
				headCommentResult? BX.create('div', {props: {className: "bx-messenger-content-item-vote-result-row"}, children: [
					BX.create('span', {props: {className: "bx-messenger-content-item-vote-result-name"}, html: BX.message('IM_OL_COMMENT_HEAD')+':'}),
					BX.create('span', {props: {className: "bx-messenger-content-item-vote-result-value"}, children: [headCommentResult]})
				]}): null
			]})
		]});
	}

	MessengerCommon.prototype.linesVoteSend = function(dialogId, messageId, rating)
	{
		if (
			!this.BXIM.messenger.message[messageId]
			|| !this.BXIM.messenger.message[messageId].params
			|| !this.BXIM.messenger.message[messageId].params.IMOL_VOTE
		)
		{
			return false;
		}

		if (
			!!this.BXIM.messenger.message[messageId].params.IMOL_DATE_CLOSE_VOTE &&
			(new Date(this.BXIM.messenger.message[messageId].params.IMOL_DATE_CLOSE_VOTE).getTime()) < (new Date().getTime())
		)
		{
			var closeVoteMessage = BX.message('IM_OL_CLOSE_VOTE_NO_DAY');
			if (
				!!this.BXIM.messenger.message[messageId].params.IMOL_TIME_LIMIT_VOTE &&
				this.BXIM.messenger.message[messageId].params.IMOL_TIME_LIMIT_VOTE > 0
			)
			{
				closeVoteMessage = BX.message('IM_OL_CLOSE_VOTE').replace('#DAYS#', BX.date.format('ddiff', (Date.now()/1000) - this.BXIM.messenger.message[messageId].params.IMOL_TIME_LIMIT_VOTE));
			}

			var container = BX.findChild(
				BX('im-message-'+messageId),
				{'class' : 'bx-messenger-content-item-vote-block-' + rating},
				true,
				false
			);

			var popupCloseVoteMessage = BX.PopupWindowManager.create('popup-close-vote-message-' + rating , container, {
				content:  BX.create('DIV', {style: {padding: '10px'}, children: closeVoteMessage}),
				zIndex: 100,
				closeIcon: {
					opacity: 1
				},
				closeByEsc: true,
				darkMode: false,
				autoHide: true,
				angle: true,
				offsetLeft: 20,
				offsetTop: 10,
				events: {
					onPopupClose: BX.proxy(function() {
						popupCloseVoteMessage.destroy();
					}, this)
				}
			})
			popupCloseVoteMessage.show();
			return false;
		}
		if (dialogId.toString().substr(0, 4) == 'chat')
		{
			var lineSource = this.linesGetSource(this.BXIM.messenger.chat[this.BXIM.messenger.message[messageId].chatId]);
			if (!lineSource)
			{
				return null;
			}
			if (
				!this.BXIM.messenger.users[this.BXIM.userId].connector &&
				!(lineSource == 'livechat' || lineSource == 'network' || lineSource == 'support24Question')
			)
			{
				return null;
			}
		}
		else if (
			!this.BXIM.messenger.bot[dialogId]
			|| (
				this.BXIM.messenger.bot[dialogId].type != 'network'
				&& this.BXIM.messenger.bot[dialogId].type != 'support24'
			)
		)
		{
			return null;
		}

		this.BXIM.messenger.message[messageId].params.IMOL_VOTE = rating;

		var messageNode = BX('im-message-'+messageId);
		if (messageNode)
		{
			messageNode.innerHTML = '';
			messageNode.appendChild(this.linesVoteDraw(messageId))
		}

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_VOTE_SEND&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'IM_LINES_VOTE_SEND': 'Y', 'DIALOG_ID': dialogId, 'MESSAGE_ID': messageId, 'RATING': rating, 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				if (this.BXIM.messenger.popupMessengerLiveChatDelayedForm)
				{
					clearTimeout(this.BXIM.messenger.popupMessengerLiveChatActionTimeout);
					this.BXIM.messenger.popupMessengerLiveChatActionTimeout = setTimeout(BX.delegate(function() {
						this.BXIM.messenger.linesLivechatFormShow(this.BXIM.messenger.popupMessengerLiveChatDelayedForm);
						this.BXIM.messenger.popupMessengerLiveChatDelayedForm = null;
					}, this), 1000);
				}
			}, this)
		});

	}

	MessengerCommon.prototype.linesSaveToQuickAnswers = function(messageId, silentMode)
	{
		if (!this.BXIM.messenger.message[messageId])
		{
			return false;
		}

		var chatId = this.BXIM.messenger.message[messageId].chatId;

		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_SAVE_TO_QUICK_ANSWERS&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.message.saveToQuickAnswers',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'saveToQuickAnswers', 'CHAT_ID' : chatId, 'MESSAGE_ID' : messageId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(addResult){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				if(silentMode !== true)
				{
					if(addResult.ERROR)
					{
						this.BXIM.openConfirm(addResult.ERROR);
					}
					else
					{
						this.BXIM.openConfirm(BX.message('IM_SAVE_TO_QUICK_ANSWERS_SUCCESS'));
						this.BXIM.messenger.message[messageId].quick_saved = true;
					}
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				if(silentMode !== true)
				{
					this.BXIM.openConfirm(BX.message('IM_SAVE_TO_QUICK_ANSWERS_ERROR'));
				}
			}, this)
		});
	};

	MessengerCommon.prototype.linesVoteHeadNodes = function(sessionId, rating, canVoteHead, bindElement)
	{
		rating = rating || 0;
		canVoteHead = canVoteHead || false;

		var ratingSelect = BX.delegate(function() {
			if (!this.BXIM.messenger.openlines.canUseVoteHead)
			{
				BX.UI.InfoHelper.show('limit_contact_center_ol_boss_rate');
				return false;
			}

			var elementRating = BX.proxy_context.getAttribute('data-rating');
			var elementSessionId = BX.proxy_context.getAttribute('data-sessionId');

			BX.proxy_context.parentNode.previousSibling.style.width = (elementRating*20)+'%';

			if (bindElement)
				bindElement.setAttribute('data-rating', elementRating);

			this.linesVoteHeadSend(elementSessionId, elementRating);

			if (this.BXIM.messenger.popupTooltip)
				this.BXIM.messenger.popupTooltip.close();
		},this);

		return BX.create('div', {props: {className: 'bx-lines-rating-box'}, children: [
			BX.create('div', {props: {className: 'bx-lines-rating-box-current'}, attrs: { style: 'width:'+(rating*20)+'%' }}),
			canVoteHead? BX.create('div', {props: {className: 'bx-lines-rating-box-live'}, children: [
				BX.create('span', {attrs: {'data-rating': 1, 'data-sessionId': sessionId}, props: {className: 'bx-lines-rating-box-item'}, events: {click: ratingSelect}}),
				BX.create('span', {attrs: {'data-rating': 2, 'data-sessionId': sessionId}, props: {className: 'bx-lines-rating-box-item'}, events: {click: ratingSelect}}),
				BX.create('span', {attrs: {'data-rating': 3, 'data-sessionId': sessionId}, props: {className: 'bx-lines-rating-box-item'}, events: {click: ratingSelect}}),
				BX.create('span', {attrs: {'data-rating': 4, 'data-sessionId': sessionId}, props: {className: 'bx-lines-rating-box-item'}, events: {click: ratingSelect}}),
				BX.create('span', {attrs: {'data-rating': 5, 'data-sessionId': sessionId}, props: {className: 'bx-lines-rating-box-item'}, events: {click: ratingSelect}})
			]}): null
		]});
	}

	MessengerCommon.prototype.linesCommentHeadNodes = function(sessionId, comment, canVoteHead, context)
	{
		var result = null;

		if(!context)
		{
			context = 'im';
		}

		if(typeof comment === 'undefined' || comment === null || comment ===  '')
			comment = '';

		canVoteHead = canVoteHead || false;

		var addComment = BX.delegate(function() {
			if (!this.BXIM.messenger.openlines.canUseVoteHead)
			{
				BX.UI.InfoHelper.show('limit_contact_center_ol_boss_rate');
				return false;
			}

			if (this.BXIM.messenger.linesCommentHeadAdd)
			{
				this.BXIM.messenger.linesCommentHeadAdd(null, comment);
			}

			if (this.BXIM.messenger.popupTooltip)
				this.BXIM.messenger.popupTooltip.close();
		},this);

		if(comment === '')
		{
			if(canVoteHead && this.BXIM.messenger.linesCommentHeadAdd)
			{
				result = BX.create('span', {attrs: {'data-sessionId': sessionId, 'data-context': context}, props: {className: 'bx-messenger-content-item-vote-comment-add bx-messenger-ajax'}, html: BX.message('IM_OL_COMMENT_HEAD_ADD'), events: {click: addComment}});
			}
		}
		else
		{
			var commentTitle = comment.replace(/\n/gi, '<br />');

			if(canVoteHead && this.BXIM.messenger.linesCommentHeadAdd)
			{
				result = BX.create('span', {attrs: {'data-sessionId': sessionId, 'data-context': context}, props: {className: 'bx-messenger-content-item-vote-comment-edit bx-messenger-ajax'}, html: commentTitle, events: {click: addComment}});
			}
			else
			{
				result = BX.create('span', {attrs: {'data-sessionId': sessionId, 'data-context': context}, props: {className: 'bx-messenger-content-item-vote-comment-not-edit bx-messenger-ajax'}, html: commentTitle});
			}
		}

		return result;
	}

	MessengerCommon.prototype.linesVoteHeadSend = function(sessionId, rating, comment)
	{
		var result = false;

		if(!rating)
		{
			rating = null;
		}
		if(typeof comment === 'undefined')
		{
			comment = null;
		}

		sessionId = parseInt(sessionId);
		rating = parseInt(rating);

		if(rating <= 0 || rating > 5 || isNaN(rating))
		{
			rating = null;
		}

		if (sessionId > 0 && (rating != null || comment != null))
		{
			if(rating != null)
			{
				if(!this.BXIM.messenger.openlines["voteRatingHead"])
				{
					this.BXIM.messenger.openlines["voteRatingHead"] = {};
				}

				this.BXIM.messenger.openlines["voteRatingHead"][sessionId] = rating;
			}

			if(comment != null)
			{
				if(!this.BXIM.messenger.openlines["voteCommentHead"])
				{
					this.BXIM.messenger.openlines["voteCommentHead"] = {};
				}

				this.BXIM.messenger.openlines["voteCommentHead"][sessionId] = comment;
			}

			BX.ajax({
				url: this.BXIM.pathToAjax+'?LINES_VOTE_SEND&V='+this.BXIM.revision,
				method: 'POST',
				dataType: 'json',
				timeout: 60,
				data: {'COMMAND': 'voteHead', 'SESSION_ID' : sessionId, 'RATING' : rating, 'COMMENT' : comment, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			});

			result = true;
		}

		return result;
	}

	MessengerCommon.prototype.linesCanVoteAsHead = function(lineId)
	{
		if (
			!this.BXIM.messenger.openlines
			|| !this.BXIM.messenger.openlines.canVoteAsHead
			|| !this.BXIM.messenger.openlines.canVoteAsHead[lineId]
		)
		{
			return false;
		}

		return true;
	}

	MessengerCommon.prototype.linesGetCrmPath = function(entityType, entityId)
	{
		if (!this.BXIM.path.crm[entityType] || !this.BXIM.bitrixCrm)
		{
			return '';
		}

		return this.BXIM.path.crm[entityType].replace("#ID#", entityId);
	}

	MessengerCommon.prototype.linesGetSession = function(chatData) // after change this code, sync with IM and MOBILE
	{
		var session = null;
		if (!chatData || chatData.type != "lines")
			return session;

		session = {};
		session.source = this.linesGetSource(chatData);

		var source = chatData.entity_id.toString().split('|');

		session.connector = source[0];
		session.canVoteHead = this.linesCanVoteAsHead(source[1]);

		var sessionData = chatData.entity_data_1.toString().split('|');
		var crmData = chatData.entity_data_2.toString().split('|');

		session.crm = this.BXIM.bitrixCrm && typeof(sessionData[0]) != 'undefined' && sessionData[0] == 'Y'? 'Y': 'N';
		session.crmEntityType = this.BXIM.bitrixCrm && typeof(sessionData[1]) != 'undefined'? sessionData[1]: 'NONE';
		session.crmEntityId = this.BXIM.bitrixCrm && typeof(sessionData[2]) != 'undefined'? sessionData[2]: 0;
		session.crmLink = '';
		session.pin = typeof(sessionData[3]) != 'undefined' && sessionData[3] == 'Y'? 'Y': 'N';
		session.wait = typeof(sessionData[4]) != 'undefined' && sessionData[4] == 'Y'? 'Y': 'N';
		session.id = typeof(sessionData[5]) != 'undefined'? parseInt(sessionData[5]): Math.round(new Date()/1000)+chatData.id;
		session.dateCreate = typeof(sessionData[6]) != 'undefined' || sessionData[6] > 0? parseInt(sessionData[6]): session.id;
		session.lineId = typeof(sessionData[7]) != 'undefined' && sessionData[7] > 0? parseInt(sessionData[7]) : source[1];
		session.blockDate = typeof(sessionData[8]) != 'undefined' || sessionData[8] > 0? parseInt(sessionData[8]) : 0;
		session.blockReason = typeof(sessionData[9]) != 'undefined'? sessionData[9].toUpperCase(): 'NONE';

		session.crmLinkLead = '';
		session.crmLead = 0;
		session.crmLinkCompany = '';
		session.crmCompany = 0;
		session.crmLinkContact = '';
		session.crmContact = 0;
		session.crmLinkDeal = '';
		session.crmDeal = 0;

		if(this.BXIM.bitrixCrm && crmData)
		{
			var index;

			for (index = 0; index < crmData.length; index = index+2)
			{
				if(crmData[index] == 'LEAD' && crmData[index+1] != 0 && crmData[index+1] != 'undefined')
				{
					session.crmLinkLead = this.linesGetCrmPath('LEAD', crmData[index+1]);
					session.crmLead = crmData[index+1];
				}
				if(crmData[index] == 'COMPANY' && crmData[index+1] != 0 && crmData[index+1] != 'undefined')
				{
					session.crmLinkCompany = this.linesGetCrmPath('COMPANY', crmData[index+1]);
					session.crmCompany = crmData[index+1];
				}
				if(crmData[index] == 'CONTACT' && crmData[index+1] != 0 && crmData[index+1] != 'undefined')
				{
					session.crmLinkContact = this.linesGetCrmPath('CONTACT', crmData[index+1]);
					session.crmContact = crmData[index+1];
				}
				if(crmData[index] == 'DEAL' && crmData[index+1] != 0 && crmData[index+1] != 'undefined')
				{
					session.crmLinkDeal = this.linesGetCrmPath('DEAL', crmData[index+1]);
					session.crmDeal = crmData[index+1];
				}
				else
				{
					session.crmDeal = 0;
				}
			}
		}

		if (session.crmEntityType != 'NONE')
		{
			session.crmLink = this.linesGetCrmPath(session.crmEntityType, session.crmEntityId);
		}

		return session;
	};

	MessengerCommon.prototype.linesSetSession = function(chatId, params)
	{
		var session = null;
		if (!this.BXIM.messenger.chat[chatId] || this.BXIM.messenger.chat[chatId].type != "lines")
			return session;

		session = this.linesGetSession(this.BXIM.messenger.chat[chatId]);
		if (typeof(params.crm) != "undefined")
		{
			session.crm = params.crm;
		}
		if (typeof(params.crmEntityType) != "undefined")
		{
			session.crmEntityType = params.crmEntityType;
		}
		if (typeof(params.crmEntityId) != "undefined")
		{
			session.crmEntityId = params.crmEntityId;
		}
		if (typeof(params.pin) != "undefined")
		{
			session.pin = params.pin;
		}
		if (typeof(params.wait) != "undefined")
		{
			session.wait = params.wait;
		}
		if (typeof(params.id) != "undefined")
		{
			session.id = params.id;
		}
		if (typeof(params.dateCreate) != "undefined")
		{
			session.dateCreate = params.dateCreate;
		}
		if (typeof(params.crmLead) != "undefined")
		{
			session.crmLead = params.crmLead;
		}
		if (typeof(params.crmCompany) != "undefined")
		{
			session.crmCompany = params.crmCompany;
		}
		if (typeof(params.crmContact) != "undefined")
		{
			session.crmContact = params.crmContact;
		}
		if (typeof(params.crmDeal) != "undefined")
		{
			session.crmDeal = params.crmDeal;
		}

		this.BXIM.messenger.chat[chatId].entity_data_1 = [session.crm, session.crmEntityType, session.crmEntityId, session.pin, session.wait, session.id, session.dateCreate].join('|');
		this.BXIM.messenger.chat[chatId].entity_data_2 = 'LEAD|' + session.crmLead + '|COMPANY|' + session.crmCompany + '|CONTACT|' + session.crmContact + '|DEAL|' + session.crmDeal;

		return session;
	}

	MessengerCommon.prototype.livechatGetSession = function(chatId)
	{
		var session = null;
		if (!this.BXIM.messenger.chat[chatId] || this.BXIM.messenger.chat[chatId].type != "livechat")
			return session;

		session = {};
		var sessionData = this.BXIM.messenger.chat[chatId].entity_data_1.toString().split('|');

		session.readed = typeof(sessionData[0]) != 'undefined' && sessionData[0] == 'Y'? 'Y': 'N';
		session.readedId = typeof(sessionData[1]) != 'undefined'? sessionData[1]: 0;
		session.readedTime = typeof(sessionData[2]) != 'undefined'? sessionData[2]: false;
		session.sessionId = typeof(sessionData[3]) != 'undefined'? sessionData[3]: 0;
		session.showForm = typeof(sessionData[4]) != 'undefined'? sessionData[4]: 'Y';

		return session;
	}

	MessengerCommon.prototype.linesGetSource = function(chatData) // after change this code, sync with IM and MOBILE
	{
		var sourceId = '';
		if (!chatData || !(chatData.type == 'livechat' || chatData.type == 'lines' || chatData.type == 'support24Question'))
		{
			return sourceId;
		}

		if (chatData.type == 'livechat')
		{
			sourceId = 'livechat';
		}
		else if (chatData.type == 'support24Question')
		{
			sourceId = 'support24Question';
		}
		else
		{
			sourceId = (chatData.entity_id.toString().split('|'))[0];
		}

		if (sourceId == 'skypebot')
		{
			sourceId = 'skype';
		}
		else
		{
			sourceId = sourceId.replace('.', '_');
		}

		return sourceId;
	};

	MessengerCommon.prototype.linesAnswer = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		//if (!BX.MessengerCommon.userInChat(chatId))
		//	return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_ANSWER&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.answer',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'answer', 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				//this.BXIM.messenger.chat[chatId].owner = this.BXIM.userId;
				//this.BXIM.messenger.redrawChatHeader();
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};

	MessengerCommon.prototype.linesSkip = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_SKIP&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.skip',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'skip', 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				if (this.closeSlider())
				{
					return true;
				}
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});

		delete this.BXIM.messenger.chat[chatId];
		delete this.BXIM.messenger.showMessage['chat'+chatId];
	};

	MessengerCommon.prototype.linesActivateSilentMode = function(chatId, flag, force)
	{
		if (!force)
			return false;

		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		flag = flag == 'Y'? 'Y': '';
		if (this.BXIM.messenger.chat[chatId].entity_data_3 == flag)
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_ACTIVATE_SILENT_MODE&V='+this.BXIM.revision,
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'silentMode', 'ACTIVATE': flag? 'Y': 'N', 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				this.BXIM.messenger.chat[chatId].entity_data_3 = flag;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};

	MessengerCommon.prototype.linesActivatePinMode = function(chatId, flag)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		flag = flag == 'Y'? 'Y': 'N';

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_ACTIVATE_PIN_MODE&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.pin',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
				data: {
					timLinesPinAction: flag
				}
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'pinMode', 'ACTIVATE': flag, 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				if(typeof(data.CODE) != "undefined")
				{
					if(data.CODE === 'ERROR_USER_NOT_OPERATOR')
					{
						BX.MessengerCommon.reloadDialogOL();
						BXIM.openMessenger('chat'+chatId);
					}
				}
				else
				{
					BX.MessengerCommon.linesSetSession(chatId, {'pin': flag});
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};

	MessengerCommon.prototype.linesCloseDialog = function(chatId, permissionOtherClose)
	{
		if(permissionOtherClose === undefined)
		{
			permissionOtherClose = false;
		}

		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.MessengerCommon.dialogCloseCurrent();

		var command = 'closeDialog';
		if(permissionOtherClose !== false)
		{
			command = 'closeDialogOtherOperator';
		}

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_CLOSE_DIALOG&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.finish',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': command, 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				BX.MessengerCommon.linesSetSession(chatId, {'wait': 'Y'});
				this.BXIM.messenger.redrawChatHeader({userRedraw: false});

				if(typeof(data.CODE) != "undefined" && data.CODE === 'ERROR_USER_NOT_OPERATOR')
				{
					BX.MessengerCommon.reloadDialogOL();
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});

		delete this.BXIM.messenger.chat[chatId];
		delete this.BXIM.messenger.showMessage['chat'+chatId];
	};

	MessengerCommon.prototype.linesMarkAsSpam = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_MARK_SPAM&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.spam',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'markSpam', 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
				this.linesSetSession(chatId, {'id': 0, 'wait': 'Y'});
				this.dialogCloseCurrent();
				this.BXIM.messenger.redrawChatHeader({userRedraw: false});
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});

		delete this.BXIM.messenger.chat[chatId];
		delete this.BXIM.messenger.showMessage['chat'+chatId];
	};

	MessengerCommon.prototype.linesInterceptSession = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_INTERCEPT_SESSION&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.session.intercept',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'interceptSession', 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};

	MessengerCommon.prototype.linesCreateLead = function(chatId)
	{
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		var session = this.linesGetSession(this.BXIM.messenger.chat[chatId]);
		if (!this.BXIM.bitrixCrm || session.crm == 'Y')
		{
			return false;
		}

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_CREATE_LEAD&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.crm.create',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'createLead', 'CHAT_ID' : chatId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(data){
				this.BXIM.messenger.blockJoinChat[chatId] = false;

				if(typeof(data.CODE) != "undefined" && data.CODE === 'ERROR_USER_NOT_OPERATOR')
				{
					BX.MessengerCommon.reloadDialogOL();
					BXIM.openMessenger('chat'+chatId);
				}
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	};

	MessengerCommon.prototype.linesChangeCrmEntity = function(messageId)
	{
		if (!this.BXIM.messenger.message[messageId])
			return false;

		var chatId = this.BXIM.messenger.message[messageId].chatId;
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		var session = this.linesGetSession(this.BXIM.messenger.chat[chatId]);
		if (!this.BXIM.bitrixCrm || session.crm == 'N')
			return false;

		this.linesChangeCrmEntityMessageId = messageId;

		if (window.obCrm && window.obCrm.olCrmSelector)
		{
			window.obCrm.olCrmSelector.Open();
		}
		else
		{
			BX.ajax({
				url: BXIM.pathToAjax+'?CRM_SELECTOR&V='+BXIM.revision,
				method: 'POST',
				timeout: 30,
				data: {'IM_CRM_SELECTOR' : 'Y', 'sessid': BX.bitrix_sessid()}
			});

			BX.addCustomEvent('onCrmSelectorInit', function(id, name, object){
				if (name != 'olCrmSelector')
					return true;

				setTimeout(function(){
					window.obCrm[name].Open();
					window.obCrm[name].AddOnSaveListener(function(result)
					{
						BX.MessengerCommon.linesChangeCrmEntityAjax(result);
					});
				}, 200);
			});
		}
	}

	MessengerCommon.prototype.linesChangeCrmEntityAjax = function(result)
	{
		if (!this.BXIM.bitrixCrm)
		{
			return false;
		}

		var found = false;
		for(var i in result['company'])
		{
			found = result['company'][i];
		}
		if (!found)
		{
			for(var i in result['contact'])
			{
				found = result['contact'][i];
			}
		}
		if (!found)
		{
			for(var i in result['lead'])
			{
				found = result['lead'][i];
			}
		}
		if (!found)
		{
			return false;
		}

		var messageId = this.linesChangeCrmEntityMessageId;
		if (!this.BXIM.messenger.message[messageId])
			return false;

		var chatId = this.BXIM.messenger.message[messageId].chatId;
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		var entityId = found.id.split('_')[1];
		var entityType = found.type;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_CHANGE_CRM_ENTITY&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.crm.change',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'changeCrmEntity', 'CHAT_ID' : chatId, 'MESSAGE_ID': messageId, 'ENTITY_TYPE' : entityType, 'ENTITY_ID': entityId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});
	}

	MessengerCommon.prototype.linesCancelCrmExtend = function(messageId)
	{
		if (!this.BXIM.bitrixCrm)
		{
			return false;
		}

		if (!this.BXIM.messenger.message[messageId])
			return false;

		var chatId = this.BXIM.messenger.message[messageId].chatId;
		if (this.BXIM.messenger.blockJoinChat[chatId])
			return false;

		if (this.BXIM.messenger.chat[chatId] && this.BXIM.messenger.chat[chatId].entity_type != 'LINES')
			return false;

		if (!BX.MessengerCommon.userInChat(chatId))
			return false;

		this.BXIM.messenger.blockJoinChat[chatId] = true;

		BX.ajax({
			url: this.BXIM.pathToAjax+'?LINES_CANCEL_CRM_EXTEND&V='+this.BXIM.revision+'&logTag='+BX.MessengerCommon.getLogTrackingParams({
				name: 'imopenlines.operator.crm.cancel',
				dialog: BX.MessengerCommon.getDialogDataForTracking('chat'+chatId),
			}),
			method: 'POST',
			dataType: 'json',
			timeout: 60,
			data: {'COMMAND': 'cancelCrmExtend', 'CHAT_ID' : chatId, 'MESSAGE_ID': messageId, 'IM_OPEN_LINES' : 'Y', 'IM_AJAX_CALL' : 'Y', 'sessid': BX.bitrix_sessid()},
			onsuccess: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this),
			onfailure: BX.delegate(function(){
				this.BXIM.messenger.blockJoinChat[chatId] = false;
			}, this)
		});

		var keyboard = BX('im-message-keyboard-'+messageId);
		if (keyboard)
		{
			keyboard.innerHTML = '';
			keyboard.id = 'im-message-keyboard-empty-'+messageId;
			keyboard.className = '';
		}
	}

	MessengerCommon.prototype.getMessageParam = function(messageId, name, defaultValue)
	{
		var params = this.getMessageParams(messageId);
		if (!params)
		{
			return defaultValue;
		}

		if (typeof (params[name]) === 'undefined')
		{
			return defaultValue;
		}

		return params[name];
	}

	MessengerCommon.prototype.getMessageParams = function(messageId)
	{
		if (typeof(this.BXIM.messenger.message[messageId]) === 'undefined')
		{
			return null;
		}

		var message = this.BXIM.messenger.message[messageId];

		if (typeof(message.params) === 'undefined')
		{
			return {};
		}

		return message.params;
	}

	/**
	 * @deprecated
	 */
	MessengerCommon.prototype.getMessagePlural = function(messageId, number)
	{
		return BX.Loc.getMessagePlural(messageId, parseInt(number));
	}

	MessengerCommon.prototype.openStore = function(additionalParams)
	{
		if (!BX.MessengerCommon.isSliderSupport())
		{
			if (this.isDesktop())
			{
				BX.desktop.browse('/online/?IM_DIALOG=' + this.BXIM.messenger.currentTab);
			}
			else
			{
				this.BXIM.openConfirm(BX.message('IM_FUNCTION_FOR_BROWSER'));
			}
			return false;
		}
		else
		{
			var dialogId = this.getDialogId();
			var session = this.linesGetSession(this.BXIM.messenger.chat[dialogId.substr(4)]);
			var params = {
				dialogId: dialogId,
				sessionId: session.id,
				ownerId: session.crmDeal,
				context: 'chat',
			};
			Object.assign(params, additionalParams);
			var salescenterUrl = BX.util.add_url_param('/saleshub/app/', params);
			if (params['compilationId'])
			{
				BX.SidePanel.Instance.destroy(salescenterUrl);
			}
			BX.SidePanel.Instance.open(salescenterUrl, {allowChangeHistory: false, width: 1140});
		}
	}

	MessengerCommon.prototype.sendCompilationByChat = function(compilationId)
	{
		BX.ajax.runAction('salescenter.compilation.sendCompilationByChat', {
			data: {
				compilationId
			},
		})
	}

	MessengerCommon.prototype.openRenamePortal = function(button)
	{
		if (button && BX.hasClass(button, 'bx-messenger-keyboard-button-block'))
		{
			return false;
		}

		if (this.isMobile())
		{
			app.alert({'text': BX.message('IM_FUNCTION_FOR_BROWSER')});
		}
		if (this.isDesktop())
		{
			BX.desktop.browse(this.BXIM.path.profile+'?b24renameform=1', "desktopApp");
		}
		else if (typeof(BX.Bitrix24) != 'undefined')
		{
			BX.Bitrix24.renamePortal()
		}
		else
		{
			this.BXIM.openConfirm(BX.message('IM_UNKNOWN_ERROR'));
		}
		return true;
	}

	MessengerCommon.prototype.updateUserData = function(params)
	{
		var i;
		if(BX.type.isPlainObject(params.users))
		{
			for (i in params.users)
			{
				params.users[i].last_activity_date = params.users[i].last_activity_date? new Date(params.users[i].last_activity_date): false;
				params.users[i].mobile_last_date = params.users[i].mobile_last_date? new Date(params.users[i].mobile_last_date): false;
				params.users[i].idle = params.users[i].idle? new Date(params.users[i].idle): false;
				params.users[i].absent = params.users[i].absent? new Date(params.users[i].absent): false;

				this.BXIM.messenger.users[i] = params.users[i];
			}
		}

		if(BX.type.isPlainObject(params.hrphoto))
		{
			for (i in params.hrphoto)
			{
				this.BXIM.messenger.hrphoto[i] = params.hrphoto[i];
			}
		}

		if(BX.type.isPlainObject(params.chat))
		{
			for (i in params.chat)
			{
				params.chat[i].date_create = new Date(params.chat[i].date_create);
				this.BXIM.messenger.chat[i] = params.chat[i];
			}
		}

		if(BX.type.isPlainObject(params.userInChat))
		{
			for (i in params.userInChat)
			{
				this.BXIM.messenger.userInChat[i] = params.userInChat[i];
			}
		}
	}

	BX.MessengerCommon = new MessengerCommon();


	/* Time queue API */
	var MessengerTimer = function()
	{
		this.list = {};

		this.updateInterval = 1000;

		clearInterval(this.updateIntervalId);
		this.updateIntervalId = setInterval(this.worker.bind(this), this.updateInterval)
	};

	MessengerTimer.prototype.start = function(type, id, time, callback, callbackParams)
	{
		id = id === null? 'default': id;

		time = parseInt(time);
		if (time <= 0 || id.toString().length <= 0)
		{
			return false;
		}

		if (typeof this.list[type] == 'undefined')
		{
			this.list[type] = {};
		}

		this.list[type][id] = {
			'dateStop': new Date().getTime()+time,
			'callback': typeof callback == 'function'? callback: function() {},
			'callbackParams': typeof callbackParams == 'undefined'? {}: callbackParams
		};

		return true;
	};

	MessengerTimer.prototype.stop = function(type, id, skipCallback)
	{
		id = id === null? 'default': id;

		if (id.toString().length <= 0 || typeof this.list[type] == 'undefined')
		{
			return false;
		}

		if (!this.list[type][id])
		{
			return true;
		}

		if (skipCallback !== true)
		{
			this.list[type][id]['callback'](id, this.list[type][id]['callbackParams']);
		}

		delete this.list[type][id];

		return true;
	};

	MessengerTimer.prototype.stopAll = function(skipCallback)
	{
		for (var type in this.list)
		{
			if (this.list.hasOwnProperty(type))
			{
				for (var id in this.list[type])
				{
					if(this.list[type].hasOwnProperty(id))
					{
						this.stop(type, id, skipCallback);
					}
				}
			}
		}
		return true;
	};

	MessengerTimer.prototype.worker = function()
	{
		for (var type in this.list)
		{
			if (!this.list.hasOwnProperty(type))
			{
				continue;
			}
			for (var id in this.list[type])
			{
				if(!this.list[type].hasOwnProperty(id) || this.list[type][id]['dateStop'] > new Date())
				{
					continue;
				}
				this.stop(type, id);
			}
		}
		return true;
	};

	MessengerTimer.prototype.destroy = function()
	{
		clearInterval(this.updateIntervalId);
		this.stopAll(true);
		return true;
	};

	BX.MessengerTimer = new MessengerTimer();


})(window);

/* End */
;
; /* Start:"a:4:{s:4:"full";s:40:"/bitrix/js/im/im.min.js?1697617533722828";s:6:"source";s:19:"/bitrix/js/im/im.js";s:3:"min";s:23:"/bitrix/js/im/im.min.js";s:3:"map";s:23:"/bitrix/js/im/im.map.js";}"*/
(function(){if(BX.IM)return;BX.IM=function(e,t){if(t.loggerConfig){BX.Messenger.Lib.Logger.setConfig(t.loggerConfig);BX.Messenger.Embedding.Lib.Logger.setConfig(t.loggerConfig)}BX.onCustomEvent(window,"onImInitBefore",[this]);this.init=typeof t.init!="undefined"?t.init:true;if(typeof BX.message("USER_TZ_OFFSET")==="undefined"||BX.message("USER_TZ_AUTO")=="Y")BX.message({USER_TZ_OFFSET:-(new Date).getTimezoneOffset()*60-parseInt(BX.message("SERVER_TZ_OFFSET"))});if(typeof BX.MessengerCommon!="undefined")BX.MessengerCommon.setBxIm(this);if(typeof BX.MessengerSlider!="undefined")BX.MessengerSlider.setBxIm(this);if(typeof BX.MessengerCalls!="undefined")BX.MessengerCalls.setBxIm(this);if(typeof BX.MessengerPromo!="undefined")BX.MessengerPromo.init(t.promo,this);if(typeof BX.MessengerLimit!="undefined")BX.MessengerLimit.init(t.limit,this);const s=BX.Reflection.getClass("BX.Messenger.Embedding.Lib.SmileManager");if(s){s.init()}this.mobileVersion=false;this.mobileAction="none";this.revision=130;this.revisionError={active:false,notified:false,notifyArmed:false,notifyTime:0,reloadTime:0,text:""};this.ieVersion=BX.browser.DetectIeVersion();this.errorMessage="";this.animationSupport=true;this.context=t.context;this.design=t.design;this.isUtfMode=t.isUtfMode;this.isAdmin=t.isAdmin;this.canInvite=t.canInvite;this.isLinesOperator=t.isLinesOperator;this.bitrixNetwork=t.bitrixNetwork;this.bitrixOpenLines=t.bitrixOpenLines;this.bitrixCrm=t.bitrixCrm;this.bitrix24=t.bitrix24;this.bitrix24blocked=t.bitrix24blocked;this.bitrixPaid=t.bitrixPaid;this.bitrixIntranet=t.bitrixIntranet;this.bitrix24net=t.bitrix24net;this.bitrixXmpp=t.bitrixXmpp;this.bitrixMobile=t.bitrixMobile;this.colors=t.colors;this.colorsHex=t.colorsHex;this.ppStatus=t.ppStatus;this.ppServerStatus=this.ppStatus?t.ppServerStatus:false;this.updateStateInterval=t.updateStateInterval;this.desktopStatus=t.desktopStatus||false;this.desktopVersion=t.desktopVersion;this.desktopProtocolVersion=2;this.xmppStatus=t.xmppStatus;this.lastRecordId=0;this.debug=t.debug||false;this.next=t.next||false;this.betaAvailable=t.betaAvailable||false;this.userId=t.userId;this.userEmail=t.userEmail;this.userColor=t.userColor;this.userGender=t.userGender;this.userExtranet=t.userExtranet;this.options=t.options||{};this.path=t.path;this.language=t.language||"en";this.windowFocus=true;this.windowFocusTimeout=null;this.extraOpen=false;this.dialogOpen=false;this.notifyOpen=false;this.adjustSizeTimeout=null;this.tryConnect=true;this.openSettingsFlag=typeof t.openSettings!="undefined"?t.openSettings:false;this.popupConfirm=null;this.zoomStatus=t.zoomStatus;this.broadcastingEnabled=t.broadcastingEnabled||false;this.userChatOptions=t.userChatOptions||{};this.newRecent=BX.clone(t.recent);if(this.newRecent){this.newRecent.botList=t.bot}this.newSearchEnabled=true;this.settings=t.settings;this.settingsDisabled={};this.settingsView=t.settingsView||{common:{},notify:{},privacy:{}};this.settingsNotifyBlocked=t.settingsNotifyBlocked||{};this.settingsTableConfig={};this.settingsSaveCallback={};this.settingsAfterSaveCallback={};this.settingsCameraTestMediaStream=null;this.micTestMediaStream=null;this.settingsLevelMeter=null;this.saveSettingsTimeout={};this.popupSettings=null;this.pathToAjax=t.path.im?t.path.im:"/bitrix/components/bitrix/im.messenger/im.ajax.php";this.pathToCallAjax=t.path.call?t.path.call:"/bitrix/components/bitrix/im.messenger/call.ajax.php";this.pathToFileAjax=t.path.file?t.path.file:"/bitrix/components/bitrix/im.messenger/file.ajax.php";this.pathToBlankImage="/bitrix/js/im/images/blank.gif";this.audio={};this.audio.reminder=null;this.audio.newMessage1=null;this.audio.newMessage2=null;this.audio.send=null;this.audio.dialtone=null;this.audio.ringtone=null;this.audio.start=null;this.audio.stop=null;this.audio.current=null;this.audio.repeatActive=false;this.audio.timeout={};this.mailCount=t.chatCounters?t.chatCounters.type.mail:0;this.notifyCount=t.chatCounters?t.chatCounters.type.notify:0;this.messageCount=t.chatCounters?t.chatCounters.type.dialog+t.chatCounters.type.chat:0;this.linesCount=t.chatCounters?t.chatCounters.type.lines:0;this.linesDetailCounter={};this.dialogDetailCounter={};this.quirksMode=BX.browser.IsIE()&&!BX.browser.IsDoctype()&&(/MSIE 8/.test(navigator.userAgent)||/MSIE 9/.test(navigator.userAgent));this.platformName=BX.browser.IsMac()?"OS X":/windows/.test(navigator.userAgent.toLowerCase())?"Windows":"";if(BX.browser.IsIE()&&!BX.browser.IsIE9()&&/MSIE 7/i.test(navigator.userAgent)){this.errorMessage=BX.message("IM_M_OLD_BROWSER")}else if(!this.ppServerStatus&&!BX.MessengerCommon.isDesktop()){this.errorMessage=BX.message("IM_M_PP_SERVER_ERROR");this.errorButtons=[new BX.PopupWindowButton({text:BX.message("IM_M_PP_SERVER_ERROR_MORE"),className:"popup-window-button-accept",events:{click:BX.delegate((function(e){if(this.bitrixIntranet){BX.Helper.show("redirect=detail&code=12715116")}else{BX.MessengerCommon.openLink(BX.message("IM_M_PP_SERVER_ERROR_BUS_LINK"))}}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),events:{click:BX.delegate((function(e){BX.proxy_context.popupWindow.close();if(BX.MessengerWindow){BX.MessengerWindow.closePopup()}BX.PreventDefault(e)}),this)}})]}if(this.context=="POPUP-FULLSCREEN"&&BX.browser.IsMobile()&&false){this.design="POPUP"}if(this.context=="DESKTOP"||this.context=="FULLSCREEN"||this.context=="PAGE"||this.context=="DIALOG"||this.context=="LINES"||this.context=="POPUP-FULLSCREEN"){if(BX.desktop){BX.desktop.init({context:this.context,design:this.design,bxim:this})}if(BX.MessengerCommon.isPage()){if(this.context=="POPUP-FULLSCREEN"&&BX.MessengerCommon.isIntranet()){BX.MessengerWindow.init({context:"SLIDER",design:this.design,bxim:this})}else{BX.MessengerWindow.init({context:this.context,design:this.design,bxim:this})}}}this.desktop=new BX.IM.Desktop(this,{desktop:t.desktop});BX.DesktopZoomLevel.init(this);BX.DesktopFinder.init(this);BX.DesktopExternalOpener.init(this);BX.MessengerTheme.init(this.settings.enableDarkTheme,this);BX.MessengerSupport24.init(this);BX.MessengerExternalList.init(t.externalRecentList,this);BX.ImEventHandler.init(this);BX.MessengerProxy.init(this);this.webrtc=new BX.IM.WebRTC(this,{desktopClass:this.desktop,phoneEnabled:t.webrtc&&t.webrtc.phoneEnabled||false,phoneCanPerformCalls:t.webrtc&&t.webrtc.phoneCanPerformCalls=="Y"||false,phoneCanCallUserNumber:t.webrtc&&t.webrtc.phoneCanCallUserNumber||false,phoneDeviceActive:t.webrtc&&t.webrtc.phoneDeviceActive||"N",phoneDeviceCall:t.webrtc&&t.webrtc.phoneDeviceCall||"Y",phoneCrm:t.phoneCrm&&t.phoneCrm||{},phoneDefaultLineId:t.webrtc&&t.webrtc.phoneDefaultLineId||"",phoneAvailableLines:t.webrtc&&t.webrtc.availableLines||[],turnServer:t.webrtc&&t.webrtc.turnServer||"",turnServerFirefox:t.webrtc&&t.webrtc.turnServerFirefox||"",turnServerLogin:t.webrtc&&t.webrtc.turnServerLogin||"",turnServerPassword:t.webrtc&&t.webrtc.turnServerPassword||"",panel:e!=null?e:BX.create("div")});this.callController=new BX.Call.Controller({init:this.init,messenger:null,language:this.language,incomingVideoStrategyType:this.settings.callAcceptIncomingVideo,formatRecordDate:t.webrtc&&t.webrtc.formatRecordDate||"d.m.Y",messengerFacade:{getDefaultZIndex:()=>BX.MessengerCommon.getDefaultZIndex(),isThemeDark:()=>BX.MessengerTheme.isDark(),openMessenger:e=>new Promise(((t,s)=>{this.messenger.openMessenger(e).then((()=>t())).catch((e=>s(e)))})),isMessengerOpen:()=>!!this.messenger.popupMessenger,isSliderFocused:()=>BX.MessengerSlider&&BX.MessengerSlider.isFocus(),openHistory:e=>this.messenger.openHistory(e),openSettings:e=>this.openSettings(e),openHelpArticle:e=>BX.MessengerLimit.showHelpSlider(e),getContainer:()=>BX.MessengerWindow?BX.MessengerWindow.content:this.messenger.popupMessengerContent,getMessageCount:()=>this.messenger.messageCount,getCurrentDialogId:()=>this.messenger.currentTab,isPromoRequired:e=>BX.MessengerPromo.needToShow(e),showUserSelector:e=>new Promise((t=>{BX.loadExt("im.component.call.invite-popup").then((()=>{if(this.callInvitePopup){this.callInvitePopup.close();return}this.callInvitePopup=new BX.Messenger.Call.InvitePopup({viewElement:e.viewElement,bindElement:e.bindElement,zIndex:e.zIndex,darkMode:e.darkMode,idleUsers:e.idleUsers,allowNewUsers:e.allowNewUsers,onDestroy:()=>{this.callInvitePopup=null;e.onDestroy()},onSelect:t=>e.onSelect(t)});this.callInvitePopup.show();t(this.callInvitePopup)}))})),repeatSound:(e,t,s)=>this.repeatSound(e,t,s),stopRepeatSound:e=>this.stopRepeatSound(e)},events:{[BX.Call.Controller.Events.onPromoViewed]:e=>{const t=e.getData();if(BX.MessengerPromo){BX.MessengerPromo.save(t.code)}},[BX.Call.Controller.Events.onOpenVideoConference]:e=>{const t=e.getData();const s=t.dialogId;if(this.messenger.chat.hasOwnProperty(s)){this.openVideoconf(this.messenger.chat[s].public.code)}},[BX.Call.Controller.Events.onCallLeft]:e=>{this.messenger.dialogStatusRedraw();const t=e.getData();const s=t.callDetails;if(s.wasConnected){if(this.messenger.currentTab){BXIM.callController.lastCallDetails=s;BX.MessengerCommon.drawMessage(s.chatId,{id:"call"+s.id,chatId:this.messenger.getChatId(),senderId:0,recipientId:this.messenger.currentTab,date:new Date,text:'<span class="bx-messenger-ajax" onclick="BXIM.callController.showFeedbackPopup();">'+BX.message("IM_CALL_RATE_CALL")+"</span>",textOriginal:BX.message("IM_CALL_RATE_CALL"),params:{}})}}},[BX.Call.Controller.Events.onCallDestroyed]:()=>this.messenger.dialogStatusRedraw()}});BX.PhoneCallView.setDefaults({restApps:t.webrtc&&t.webrtc.phoneCallCardRestApps||[],callInterceptAllowed:t.webrtc&&t.webrtc.phoneCanInterceptCall||false});BX.PhoneCallView.initializeBackgroundAppPlacement();this.desktop.webrtc=this.webrtc;if(BX.MessengerCommon.isDesktop()){if(this.init){if(!this.desktop.enableInVersion(45)){this.windowTitle=this.bitrixIntranet?!BX.browser.IsMac()?BX.message("IM_DESKTOP_B24_TITLE"):BX.message("IM_DESKTOP_B24_OSX_TITLE"):BX.message("IM_WM");BX.desktop.setWindowTitle(this.windowTitle)}else{this.windowTitle=document.title}if(BX.MessengerCommon.isSliderBindingsEnable()){if(this.desktop.sliderStatus()){BX.SidePanel.Instance.enableAnchorBinding()}else{BX.SidePanel.Instance.disableAnchorBinding()}}else{BX.SidePanel.Instance.anchorRules=[]}}else{BX.SidePanel.Instance.anchorRules=[]}}else{this.windowTitle=document.title}for(var i in t.notify){t.notify[i].date=new Date(t.notify[i].date);t.notify[i].textOriginal=t.notify[i].text;t.notify[i].text=BX.MessengerCommon.prepareText(t.notify[i].text,true,true,false);if(parseInt(i)>this.lastRecordId)this.lastRecordId=parseInt(i)}for(var i in t.message){t.message[i].date=new Date(t.message[i].date);t.message[i].textOriginal=t.message[i].text;t.message[i].text=BX.MessengerCommon.prepareText(t.message[i].text,true,true,true);if(parseInt(i)>this.lastRecordId)this.lastRecordId=parseInt(i)}if(BX.browser.SupportLocalStorage()){BX.addCustomEvent(window,"onLocalStorageSet",BX.proxy(this.storageSet,this));var n=BX.localStorage.get("lri");if(parseInt(n)>this.lastRecordId)this.lastRecordId=parseInt(n);BX.garbage((function(){BX.localStorage.set("lri",this.lastRecordId,60)}),this)}this.notifyManager=new BX.IM.NotifyManager(this,{});this.notify=new BX.MessengerNotify(this,{desktopClass:this.desktop,webrtcClass:this.webrtc,domNode:e,chatCounters:t.chatCounters||null,counters:t.counters||{},mailCount:t.mailCount||0,notify:t.notify||{},unreadNotify:t.unreadNotify||{},flashNotify:t.flashNotify||{},countNotify:t.countNotify||0,loadNotify:t.loadNotify});this.webrtc.notify=this.notify;this.desktop.notify=this.notify;this.disk=new BX.IM.DiskManager(this,{notifyClass:this.notify,desktopClass:this.desktop,files:t.files||{},enable:t.disk&&t.disk.enable,enableExternal:t.disk&&t.disk.external});this.notify.disk=this.disk;this.webrtc.disk=this.disk;this.desktop.disk=this.disk;var a=t.users||{};if(t.user){a[t.user.id]=t.user}this.launchVueApplications();this.messenger=new BX.MessengerChat(this,{openChatEnable:t.openChatEnable,updateStateInterval:t.updateStateInterval,notifyClass:this.notify,webrtcClass:this.webrtc,desktopClass:this.desktop,diskClass:this.disk,recent:t.recent||[],recentLastUpdate:t.recentLastUpdate||null,chatCounters:t.chatCounters||{},users:a,userBirthday:t.userBirthday||[],openlines:t.openlines||false,groups:t.groups||{},userChatBlockStatus:t.userChatBlockStatus||{},userChatOptions:t.userChatOptions||{},userInGroup:t.userInGroup||{},currentTab:t.currentTab||0,generalChatId:t.generalChatId||0,canSendMessageGeneralChat:t.canSendMessageGeneralChat||false,chat:t.chat||{},userInChat:t.userInChat||{},userChat:t.userChat||{},hrphoto:t.hrphoto||{},message:t.message||{},showMessage:t.showMessage||{},unreadMessage:t.unreadMessage||{},flashMessage:t.flashMessage||{},countMessage:t.countMessage||0,tooltipShowed:t.tooltipShowed||{},bot:t.bot||{},command:t.command||[],textareaIcon:t.textareaIcon||[],smile:t.smile||false,smileSet:t.smileSet||false,history:t.history||{},openMessenger:typeof t.openMessenger!="undefined"?t.openMessenger:false,openHistory:typeof t.openHistory!="undefined"?t.openHistory:false,openNotify:typeof t.openNotify!="undefined"?t.openNotify:false});this.webrtc.messenger=this.messenger;this.callController.messenger=this.messenger;this.notify.messenger=this.messenger;this.desktop.messenger=this.messenger;this.disk.messenger=this.messenger;if(this.init){BX.addCustomEvent(window,"onImUpdateCounterNotify",BX.proxy(this.updateCounter,this));BX.addCustomEvent(window,"onImUpdateCounterMessage",BX.proxy(this.updateCounter,this));BX.addCustomEvent(window,"onImUpdateCounterMail",BX.proxy(this.updateCounter,this));BX.addCustomEvent(window,"onImUpdateCounter",BX.proxy(this.updateCounter,this));BX.bind(window,"blur",BX.delegate((function(){this.changeFocus(false)}),this));this.setFocusFunction=BX.delegate((function(e){if(this.windowFocus){return false}if(e!="click"&&BX.MessengerCommon.isDesktop()&&!BX.desktop.isActiveWindow()){return false}this.changeFocus(true);if(this.isFocus()&&BX.MessengerCommon.getCounter(this.messenger.currentTab)){BX.MessengerCommon.readMessage(this.messenger.currentTab)}}),this);BX.bind(window,"focus",BX.delegate((function(){this.setFocusFunction("focus")}),this));if(BX.MessengerCommon.isDesktop()){BX.bind(window,"click",BX.delegate((function(){this.setFocusFunction("click")}),this))}BX.addCustomEvent("onPullEvent-xmpp",BX.delegate((function(e,t){if(e=="lastActivityDate"){this.xmppStatus=t.timestamp>0}}),this));this.updateCounter();BX.onCustomEvent(window,"onImInit",[this])}if(this.openSettingsFlag!==false){var o={};if(this.openSettingsFlag=="true"){if(location.hash.startsWith("#tab-")){o["select"]=location.hash.substr(5)}}else if(typeof this.openSettingsFlag=="string"){o["onlyPanel"]=this.openSettingsFlag.toString().toLowerCase()}this.openSettings(o)}BX.MessengerLimit.disableExtensions()};BX.IM.prototype.isOpen=function(e){return!!this.messenger.popupMessenger};BX.IM.prototype.isFocus=function(e){e=typeof e=="undefined"?"dialog":e;if(!BX.MessengerCommon.isPage()&&(this.messenger==null||this.messenger.popupMessenger==null)){return false}if(this.callController.hasActiveCall()&&this.callController.hasVisibleCall()){return false}if(e=="dialog"){if(BX.MessengerCommon.isPage()&&BX.MessengerWindow.getCurrentTab()!="im"&&BX.MessengerWindow.getCurrentTab()!="im-phone"&&BX.MessengerWindow.getCurrentTab()!="im-ol")return false;if(this.messenger&&!BX.MessengerCommon.isScrollMax(this.messenger.popupMessengerBody,200))return false;if(this.dialogOpen==false)return false}else if(e=="notify"){if(BX.MessengerCommon.isPage()&&BX.MessengerWindow.getCurrentTab()!="notify"&&BX.MessengerWindow.getCurrentTab()!="im-phone")return false;if(this.notifyOpen==false)return false}if(this.quirksMode||BX.browser.IsIE()&&!BX.browser.IsIE9())return true;return this.windowFocus};BX.IM.prototype.changeFocus=function(e){this.windowFocus=typeof e=="boolean"?e:false;return this.windowFocus};BX.IM.prototype.playSound=function(e,t){t=t?true:false;if(!t&&(!this.init||BX.MessengerCalls.hasActiveCall()))return false;var s={start:true,dialtone:true,ringtone:true};if(!this.settings.enableSound&&!s[e]){return false}if(this.audio.repeatActive){return false}BX.localStorage.set("mps",true,1);try{this.stopSound();this.audio.current=this.audio[e];var i=this.audio[e].play();if(window.Promise&&i instanceof Promise){i.catch((function(e){console.warn("BX.playSound",e);BXIM.audio.current=null}))}}catch(e){this.audio.current=null}};BX.IM.prototype.repeatSound=function(e,t,s){t=parseInt(t)||1e3;t=t>=1e3?t:1e3;s=s===true;if(this.audio.timeout[e])clearTimeout(this.audio.timeout[e]);this.audio.repeatActive=false;if(BX.MessengerCommon.isDesktop()||!this.desktopStatus)this.playSound(e,s);this.audio.repeatActive=true;this.audio.timeout[e]=setTimeout(BX.delegate((function(){this.repeatSound(e,t,s)}),this),t)};BX.IM.prototype.stopRepeatSound=function(e,t){t=t!=false;if(t)BX.localStorage.set("mrss",{sound:e},1);if(this.audio.timeout[e])clearTimeout(this.audio.timeout[e]);if(!this.audio[e])return false;this.audio[e].pause();this.audio[e].currentTime=0;this.audio.currentCode=null;this.audio.repeatActive=false};BX.IM.prototype.stopSound=function(){if(this.audio.current){this.audio.current.pause();this.audio.current.currentTime=0;this.audio.currentCode=null}};BX.IM.prototype.autoHide=function(e){if(this.autoHideDisable)return true;e=e||window.event;if(e.which==1){if(this.popupSettings!=null)this.popupSettings.destroy();else if(this.messenger.popupHistory!=null)this.messenger.popupHistory.destroy();else if(BX.DiskFileDialog&&BX.DiskFileDialog.popupWindow!=null)BX.DiskFileDialog.popupWindow.destroy();else if(!this.callController.hasActiveCall()&&this.messenger.popupMessenger!=null)this.messenger.popupMessenger.destroy()}};BX.IM.prototype.updateCounter=function(e,t){if(t=="MESSAGE")this.messageCount=e;else if(t=="NOTIFY")this.notifyCount=e;else if(t=="MAIL")this.mailCount=e;var s=0;if(this.notifyCount>0)s+=parseInt(this.notifyCount);if(this.messageCount>0)s+=parseInt(this.messageCount);if(this.linesCount>0)s+=parseInt(this.linesCount);if(BX.MessengerCommon.isPage()){var i="";if(s>0)i=s;var n=BX.message("IM_DESKTOP_UNREAD_EMPTY");if(this.notifyCount>0&&this.messageCount+this.linesCount>0)n=BX.message("IM_DESKTOP_UNREAD_MESSAGES_NOTIFY");else if(this.notifyCount>0)n=BX.message("IM_DESKTOP_UNREAD_NOTIFY");else if(this.messageCount+this.linesCount>0)n=BX.message("IM_DESKTOP_UNREAD_MESSAGES");else if(this.notify!=null&&this.notify.getCounter("**")>0)n=BX.message("IM_DESKTOP_UNREAD_LF_2");if(BX.MessengerCommon.isDesktop()){BX.desktop.setIconTooltip(n);BX.desktop.setIconBadge(i,this.messageCount+this.linesCount>0)}}if(BX.MessengerCommon.isPage()&&this.notify&&!this.userExtranet){var a=this.notify.getCounter("**");BX.MessengerWindow.setTabBadge("im-lf",a)}BX.onCustomEvent(window,"onImUpdateSumCounters",[s,"SUM"]);if(!this.desktopStatus&&!BX.MessengerCommon.isDesktop()){var o=document.title.match(/^(\((\d+)\)\s)(.*)+/);if(o&&o[1]){var r=parseInt(o[1]);if(r!=s){document.title=(s>0?"("+s+") ":"")+o[3]}}else if(s>0){document.title="("+s+") "+document.title}}if(this.notify.panelButtonMessage){if(this.messageCount>0)BX.addClass(this.notify.panelButtonMessage,"bx-notifier-message-new");else BX.removeClass(this.notify.panelButtonMessage,"bx-notifier-message-new")}};BX.IM.prototype.openNotify=function(e){force=e&&e.force==true;openThis=false;if(BX.MessengerCommon.isDesktop()){openThis=true}var t=typeof BXDesktopSystem!=="undefined"&&!openThis||this.settings.openDesktopFromPanel;if(!t||openThis){this.messenger.openMessenger(false).then(function(){if(BX.MessengerCommon.isPage()){BX.MessengerWindow.changeTab("notify")}else{this.notify.openNotify(false,true)}}.bind(this));return false}BX.desktopUtils.runningCheck((function(){BX.desktopUtils.goToBx("bx://notify")}),BX.defer((function(){this.messenger.openMessenger(false).then(function(){if(BX.MessengerCommon.isPage()){BX.MessengerWindow.changeTab("notify")}else{this.notify.openNotify(false,true)}}.bind(this))}),this))};BX.IM.prototype.closeNotify=function(){BX.onCustomEvent(window,"onImNotifyWindowClose",[]);if(this.messenger.popupMessenger!=null&&!this.callController.hasActiveCall())this.messenger.popupMessenger.destroy()};BX.IM.prototype.toggleNotify=function(){if(this.isOpenNotify())this.closeNotify();else this.openNotify()};BX.IM.prototype.isOpenNotify=function(){return this.notifyOpen};BX.IM.prototype.sendMessage=function(e,t){if(!t&&!e)return false;if(!t){t=e;e=this.messenger.currentTab}var s=this.messenger.popupMessengerTextarea.value;this.messenger.popupMessengerTextarea.value=t;this.messenger.sendMessage(e);setTimeout(BX.delegate((function(){this.messenger.popupMessengerTextarea.value=s;this.messenger.textareaCheckText()}),this),10);return true};BX.IM.prototype.putMessage=function(e){BX.addClass(this.messenger.popupMessengerTextarea.parentNode,"bx-messenger-textarea-focus");this.messenger.popupMessengerTextarea.focus();this.messenger.insertTextareaText(this.messenger.popupMessengerTextarea,e+" ",false);this.messenger.textareaHistory[this.messenger.currentTab]=e+" ";return true};BX.IM.prototype.phoneTo=function(e,t){if(BX.message["voximplantCanMakeCalls"]=="N"){BX.loadExt("voximplant.common").then((function(){BX.Voximplant.openLimitSlider()}));return}this.webrtc.loadPhoneLines().then(function(){this._doPhoneTo(e,t)}.bind(this))};BX.IM.prototype._doPhoneTo=function(e,t){t=t?t:{};var s=t["LINE_ID"]?t["LINE_ID"]:this.webrtc.phoneDefaultLineId;if(typeof t!="object"){try{t=JSON.parse(t)}catch(e){t={}}}if(this.webrtc.isRestLine(s)){BX.MessengerCommon.phoneStartCallViaRestApp(e,s,t);return true}if(!BX.MessengerCommon.isDesktop()&&this.desktopStatus&&this.desktopVersion>=18){var i=t?"/params/"+BX.desktopUtils.encodeParamsJson(t):"";this.webrtc.closeKeyPad();this.checkDesktop((function(){BX.desktopUtils.goToBx("bx://callto/phone/"+escape(e)+i)}),BX.delegate((function(){this.webrtc.phoneCall(e,t)}),this))}else{this.webrtc.phoneCall(e,t)}return true};BX.IM.prototype.startCallList=function(e,t){t=t?t:{};e=parseInt(e);if(e==0)return;if(!this.desktop.ready()&&this.desktopStatus&&this.desktopVersion>=18){this.checkDesktop((function(){BX.desktopUtils.goToBx("bx://calllist/id/"+e+/params/+BX.desktopUtils.encodeParams(t))}),BX.delegate((function(){this.webrtc.startCallList(e,t)}),this))}else{this.webrtc.startCallList(e,t)}return true};BX.IM.prototype.checkCallSupport=function(e){var t=true;if(typeof e!="undefined"){if(parseInt(e)>0){t=this.messenger.users[e]&&this.messenger.users[e].status!="guest"&&!this.messenger.users[e].bot&&!this.messenger.users[e].network&&e!=this.userId&&this.messenger.users[e].last_activity_date}else{var s=e.toString().substr(4);t=this.messenger.userInChat[s];if(t&&Array.isArray(t)){var i=0;this.messenger.userInChat[s].forEach(function(e){if(this.messenger.users[e]&&this.messenger.users[e].active){i++}}.bind(this));if(this.messenger.chat[s].type==="videoconf"){if(this.messenger.chat[s].entity_data_1==="BROADCAST"){t=i<=500}else{t=i<=BX.Call.Util.getUserLimit()}}else{t=i>1&&i<=BX.Call.Util.getUserLimit()}}}}return this.ppServerStatus&&BX.Call.Util.isWebRTCSupported()&&t};BX.IM.prototype.addPopupMenuModifier=function(e){this.messenger.popupPopupMenuModifyFunction.push(e);return true};BX.IM.prototype.openMessengerSlider=function(e,t){t=t||{};t.SLIDER="Y";BX.defer((function(){if(e&&e.toString().substr(0,4)=="imol"){this.messenger.linesOpenMessenger(e.toString().substr(5),t)}else{this.messenger.openMessenger(e)}}),this)()};BX.IM.prototype.callTo=function(e,t){t=!(typeof t!="undefined"&&!t);this.checkDesktop((function(){BX.desktopUtils.goToBx("bx://callto/"+(t?"video":"audio")+"/"+e)}),function(){this.callController.startCall(e,t)}.bind(this))};BX.IM.prototype.openVideoconf=function(e){if(!e){return false}if(this.desktop.openVideoconf(e)){return true}this.checkDesktop((function(){BX.desktopUtils.goToBx("bx://videoconf/code/"+e)}),(function(){var t=BX.MessengerCommon.getVideoconfLinkByCode(e);BX.MessengerCommon.openLink(t,"videoconf"+e)}))};BX.IM.prototype.openVideoconfByUrl=function(e){var t=null;var s=e.match(/^(https|http):\/\/(.*)\/(video|online\/call)\/([.\-0-9a-zA-Z]+)/i);if(s){t=s[4];if(!s[2].includes(location.host)){BX.MessengerCommon.openLink(e,"videoconf"+t);return true}}if(!t){return false}this.openVideoconf(t);return true};BX.IM.prototype.createZoom=function(e){if(!this.zoomStatus["enabled"]){BX.UI.InfoHelper.show("limit_video_conference_zoom")}else{var t="/company/personal/user/"+this.userId+"/social_services/";BX.ajax({url:this.pathToAjax+"?V="+this.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CREATE_ZOOM_CONF:"Y",IM_AJAX_CALL:"Y",CHAT_ID:e,sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e["ERROR"]==="NOT_CONNECTED"){BX.SidePanel.Instance.open(t)}else if(e["ERROR"]==="COULD_NOT_CREATE"){BXIM.openConfirm(BX.message("IM_M_COULD_NOT_CREATE_ZOOM_CONF").replace("#HREF#",t))}else if(e["ERROR"]==="COULD_NOT_ADD_MESSAGE"){BXIM.openConfirm(BX.message("IM_M_COULD_NOT_ADD_CONF_MESSAGE"))}}),this),onfailure:BX.delegate((function(e){BXIM.openConfirm(BX.message("IM_M_ZOOM_ERROR_UNKNOWN"))}),this)})}};BX.IM.prototype.createJitsi=function(e){BX.ajax.runAction("im.jitsilite.createConference",{data:{dialogId:e}}).then((function(e){console.log(e.data)})).catch((function(e){console.error(e.errors)}))};BX.IM.prototype.openMessenger=function(e,t,s){e=e===false||e===""?false:e;s=s?true:false;if(BX.MessengerCommon.isDesktop()){s=true}var i=typeof BXDesktopSystem!=="undefined"&&!s||this.settings.openDesktopFromPanel;if(!i||s){BX.defer((function(){if(e&&e.toString().substr(0,4)=="imol"){this.messenger.linesOpenMessenger(e.toString().substr(5))}else{this.messenger.openMessenger(e);if(t){BX.MessengerWindow.changeTab(t,true)}}}),this)();return false}BX.desktopUtils.runningCheck((function(){BX.desktopUtils.goToBx(e===false?"bx://messenger":"bx://messenger/dialog/"+encodeURIComponent(e)+"/tab/"+t)}),BX.defer((function(){if(e&&e.toString().substr(0,4)=="imol"){this.messenger.linesOpenMessenger(e.toString().substr(5))}else{this.messenger.openMessenger(e);if(t){BX.MessengerWindow.changeTab(t,true)}}}),this));return false};BX.IM.prototype.closeMessenger=function(){if(BX.MessengerCommon.isPopupPage()){BX.MessengerSlider.close()}else if(this.messenger&&this.messenger.popupMessenger){this.messenger.popupMessenger.close()}};BX.IM.prototype.isOpenMessenger=function(){return this.dialogOpen};BX.IM.prototype.toggleMessenger=function(){if(this.isOpenMessenger())this.closeMessenger();else if(this.extraOpen&&!this.isOpenNotify())this.closeMessenger();else this.openMessenger(this.messenger.currentTab)};BX.IM.prototype.openHistory=function(e){if(e&&e.toString().substr(0,4)=="imol"){setTimeout(BX.delegate((function(){this.messenger.linesOpenHistory(e.toString().substr(5))}),this),300)}else{setTimeout(BX.delegate((function(){this.messenger.openHistory(e)}),this),10)}};BX.IM.prototype.openContactList=function(){this.messenger.openMessenger(false);setTimeout(BX.delegate((function(){if(this.messenger.popupContactListActive){this.messenger.popupContactListSearchInput.focus();return false}BX.addClass(this.messenger.popupContactListWrap,"bx-messenger-box-contact-hover");clearTimeout(this.messenger.popupContactListWrapAnimation);this.messenger.popupContactListWrapAnimation=setTimeout(BX.delegate((function(){BX.removeClass(this.messenger.popupContactListWrap,"bx-messenger-box-contact-normal");this.messenger.popupContactListSearchInput.focus()}),this),200);this.messenger.popupContactListSearchInput.focus()}),this),200);return false};BX.IM.prototype.closeContactList=function(){return false};BX.IM.prototype.isOpenContactList=function(){return false};BX.IM.prototype.checkRevision=function(e){if(!this.init){return true}if(e&&this.revision<e){if(!this.init){return false}this.revisionError.active=true;this.revisionError.notifyTime=Math.floor(Math.random()*12e4)+3e4;if(!this.revisionError.text){if(BX.MessengerCommon.isDesktop()){this.revisionError.text=BX.message("IM_B24_UPDATE_APP")}else{this.revisionError.text=BX.message("IM_B24_UPDATE")}}if(this.revisionError.text&&!this.revisionError.notifyArmed){console.warn("REVISION: Notify about reload will show in "+Math.floor(this.revisionError.notifyTime/1e3)+" min, REVISION UP ("+this.revision+" -> "+e+")");setTimeout(function(){BX.UI.Notification.Center.notify({content:this.revisionError.text,position:"top-right",autoHide:false,closeButton:false,actions:[{title:BX.message("IM_M_OLD_REVISION_DESKTOP_REFRESH"),events:{click:function(){location.reload()}}}]});this.revisionError.notified=true;console.warn("REVISION: Notify about reload - showed!")}.bind(this),this.revisionError.notifyTime*60);this.revisionError.notifyArmed=true}return false}return true};BX.IM.prototype.openSettings=function(e){if(this.messenger&&this.messenger.popupMessengerConnectionStatusState!="online")return false;e=typeof e=="object"?e:{};if(this.popupSettings!=null||!this.messenger)return false;if(!BX.MessengerCommon.isPage())this.messenger.setClosingByEsc(false);this.settingsSaveCallback={};this.settingsTableConfig={};var t=[];if(this.colors){for(var s in this.colors){t.push({title:this.colors[s],value:s})}}var i=false;if(BX.MessengerCommon.isDesktop()&&this.desktopVersion>=42&&/windows/.test(navigator.userAgent.toLowerCase())&&BXDesktopSystem.GetNotifyPosition){i=true;notifyPositionValue=BXDesktopSystem.GetNotifyPosition();notifyPositionValue=notifyPositionValue?notifyPositionValue:"RB";notifyPositionValues=[{title:BX.message("IM_M_NOTIFY_POSITION_LT"),value:"LT"},{title:BX.message("IM_M_NOTIFY_POSITION_RT"),value:"RT"},{title:BX.message("IM_M_NOTIFY_POSITION_LB"),value:"LB"},{title:BX.message("IM_M_NOTIFY_POSITION_RB"),value:"RB"}]}var n=[];if(BX.MessengerTheme.isAvailable()===true){n.push({title:BX.message("IM_M_THEME_AUTO"),value:"auto"})}n.push({title:BX.message("IM_M_THEME_LIGHT"),value:"light"});n.push({title:BX.message("IM_M_THEME_DARK"),value:"dark"});if(this.settings.enableDarkTheme===true){this.settings.enableDarkTheme="dark"}var a=BX.browser.IsChrome()||BX.browser.IsFirefox()||BX.browser.IsSafari();var o=BX.Helper?BX.Helper.frameOpenUrl+(BX.Helper.frameOpenUrl.indexOf("?")<0?"?":"&")+"redirect=detail&code=12933226":"";this.settingsView.common={title:BX.message("IM_SETTINGS_COMMON"),settings:[{title:BX.message("IM_M_VIEW_LAST_MESSAGE_OFF"),type:"checkbox",name:"viewLastMessage",checked:!this.settings.viewLastMessage,saveCallback:BX.delegate((function(e){BX.MessengerCommon.recentListRedraw();return!e.checked}),this)},this.messenger.birthdayEnable!=="none"?{title:BX.message("IM_M_VIEW_BIRTHDAY"),type:"checkbox",name:"viewBirthday",checked:this.settings.viewBirthday,afterSaveCallback:BX.delegate((function(e){BX.MessengerCommon.applyBirthdaySettings()}),this)}:null,this.bitrixIntranet?{title:BX.message("IM_M_VIEW_INVITED_USERS"),tooltip:BX.message("IM_M_VIEW_INVITED_USERS_HINT"),type:"checkbox",name:"viewCommonUsers",checked:this.settings.viewCommonUsers,afterSaveCallback:BX.delegate((function(e){BX.MessengerCommon.applyViewCommonUsers()}),this)}:null,{type:"space"},{title:BX.message("IM_M_NAR"),type:"checkbox",name:"notifyAutoRead",checked:this.settings.notifyAutoRead},{type:"space"},{title:BX.message("IM_M_DESKTOP_BIG_SMILE_ON"),type:"checkbox",name:"enableBigSmile",checked:this.settings.enableBigSmile},{title:BX.message("IM_M_RICH_LINK_ON"),type:"checkbox",name:"enableRichLink",checked:this.settings.enableRichLink},{title:BX.message("IM_M_ENABLE_SOUND"),type:"checkbox",name:"enableSound",checked:this.settings.enableSound},BX.MessengerCommon.isDesktop()&&BX.MessengerCommon.isSliderBindingsEnable()?{title:BX.message("IM_M_ENABLE_SLIDER"),type:"checkbox",checked:this.desktop.sliderStatus(),callback:BX.delegate((function(){this.desktop.sliderStatus(!this.desktop.sliderStatus())}),this)}:null,{title:BX.message("IM_M_KEY_SEND"),type:"select",name:"sendByEnter",value:this.settings.sendByEnter?"Y":"N",items:[{title:BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter",value:"N"},{title:"Enter",value:"Y"}],saveCallback:BX.delegate((function(e){return e[e.selectedIndex].value=="Y"}),this)},{type:"space"},i?{title:BX.message("IM_M_NOTIFY_POSITION"),name:"notifyPosition",type:"select",value:notifyPositionValue,items:notifyPositionValues,skipSave:"Y",saveCallback:BX.delegate((function(e){BXDesktopSystem.SetNotifyPosition(e.options[e.selectedIndex].value)}),this)}:null,this.colors?{title:BX.message("IM_M_USER_COLOR_2"),name:"userColor",type:"select",value:this.userColor,items:t,skipSave:"Y",saveCallback:BX.delegate((function(e){BX.MessengerCommon.setColor(e.options[e.selectedIndex].value)}),this)}:null,typeof BXDesktopSystem!=="undefined"&&!BX.MessengerCommon.isDesktop()||!this.desktopVersion?null:{title:BX.message("IM_M_OPEN_CHAT_IN_DESKTOP"),type:"checkbox",name:"openDesktopFromPanel",checked:this.settings.openDesktopFromPanel},BX.MessengerCommon.isDesktop()&&this.desktop.enableInVersion(49)?{title:BX.message("IM_M_BITRIX24_ADDITIONAL_APPLICATION"),type:"checkbox",name:"openBitrix24Window",checked:this.desktop.isTwoWindowMode(),callback:BX.delegate((function(){this.desktop.setTwoWindowMode(!this.desktop.isTwoWindowMode())}),this)}:null,BX.MessengerCommon.isDesktop()?{title:BX.message("IM_M_DESKTOP_AUTORUN_ON"),type:"checkbox",checked:BX.desktop.autorunStatus(),callback:BX.delegate((function(){BX.desktop.autorunStatus(!BX.desktop.autorunStatus())}),this)}:null,BX.MessengerCommon.isDesktop()&&this.desktop.enableInVersion(55)?{title:BX.message("IM_M_DESKTOP_TELEMETRY").replace("#LINK#",'<a href="'+o+'">'+BX.message("IM_M_DESKTOP_TELEMETRY_LINK")+"</a>"),type:"checkbox",checked:BX.desktop.telemetryStatus(),callback:BX.delegate((function(){BX.desktop.telemetryStatus(!BX.desktop.telemetryStatus())}),this)}:null,{type:"space"},{title:BX.message("IM_M_THEME"),name:"enableDarkTheme",type:"select",items:n,value:this.settings.enableDarkTheme,saveCallback:BX.delegate((function(e){var t=e.options[e.selectedIndex].value;this.settings.enableDarkTheme=t;if(this.init){BX.MessengerTheme.theme=t;this.messenger.toggleDarkTheme()}return t}),this)},null]};this.settingsView.notify={title:BX.message("IM_SETTINGS_NOTIFY"),settings:[{type:"notifyControl"},{type:"table",name:"notify",show:this.settings.notifyScheme=="expert"},{type:"table",name:"simpleNotify",show:this.settings.notifyScheme=="simple"}]};this.settingsTableConfig["notify"]={condition:BX.delegate((function(){return this.settingsTableConfig["notify"].rows.length>0}),this),headers:["",BX.message("IM_SETTINGS_NOTIFY_SITE"),this.bitrixXmpp?BX.message("IM_SETTINGS_NOTIFY_XMPP"):false,BX.message("IM_SETTINGS_NOTIFY_EMAIL"),this.bitrixMobile?BX.message("IM_SETTINGS_NOTIFY_PUSH"):false],rows:[],error_rows:BX.create("div",{children:[BX.create("div",{props:{className:"bx-messenger-content-item-progress"}}),BX.create("span",{props:{className:"bx-messenger-content-item-progress-with-text"},html:BX.message("IM_SETTINGS_LOAD")})]})};this.settingsTableConfig["simpleNotify"]={condition:BX.delegate((function(){return this.settingsTableConfig["simpleNotify"].rows.length>0}),this),headers:[BX.message("IM_SETTINGS_SNOTIFY"),""],rows:[]};this.settingsView.privacy={title:BX.message("IM_SETTINGS_PRIVACY"),condition:BX.delegate((function(){return!this.bitrixIntranet}),this),settings:[{title:BX.message("IM_SETTINGS_PRIVACY_MESS"),name:"privacyMessage",type:"select",items:[{title:BX.message("IM_SETTINGS_SELECT_1"),value:"all"},{title:BX.message("IM_SETTINGS_SELECT_2"),value:"contact"}],value:this.settings.privacyMessage},{title:BX.message("IM_SETTINGS_PRIVACY_CALL"),name:"privacyCall",type:"select",items:[{title:BX.message("IM_SETTINGS_SELECT_1"),value:"all"},{title:BX.message("IM_SETTINGS_SELECT_2"),value:"contact"}],value:this.settings.privacyCall},{title:BX.message("IM_SETTINGS_PRIVACY_CHAT"),name:"privacyChat",type:"select",items:[{title:BX.message("IM_SETTINGS_SELECT_1_2"),value:"all"},{title:BX.message("IM_SETTINGS_SELECT_2_2"),value:"contact"}],value:this.settings.privacyChat},{title:BX.message("IM_SETTINGS_PRIVACY_SEARCH"),name:"privacySearch",type:"select",items:[{title:BX.message("IM_SETTINGS_SELECT_1_3"),value:"all"},{title:BX.message("IM_SETTINGS_SELECT_2_3"),value:"contact"}],value:this.settings.privacySearch},this.bitrix24net?{title:BX.message("IM_SETTINGS_PRIVACY_PROFILE"),name:"privacyProfile",type:"select",items:[{title:BX.message("IM_SETTINGS_SELECT_1_3"),value:"all"},{title:BX.message("IM_SETTINGS_SELECT_2_3"),value:"contact"},{title:BX.message("IM_SETTINGS_SELECT_3_3"),value:"nobody"}],value:this.settings.privacyProfile}:null]};this.settingsView.hardware={title:BX.message("IM_SETTINGS_CALLS"),settings:[{title:"hardwareError",type:"html",value:'<div id="bx-messenger-settings-hardware-error"></div>'},{title:"cameraImage",type:"html",value:'<div class="bx-messenger-settings-hardware-camera-image"><div id="bx-messenger-settings-hardware-camera-image"></div></div>'},{title:BX.message("IM_SETTINGS_HARDWARE_CAMERA"),type:"select",name:"defaultCamera",items:{},callback:this.changeHardwareSettings.bind(this),saveCallback:function(e){if(!localStorage)return e.value;localStorage.setItem("bx-im-settings-default-camera",e.value)}},{title:BX.message("IM_SETTINGS_HARDWARE_CAMERA_PREFER_HD_QUALITY"),type:"checkbox",name:"preferHdQuality",items:{},checked:BX.Call.Hardware.preferHdQuality,saveCallback:function(e){if(!localStorage)return e.value;localStorage.setItem("bx-im-settings-camera-prefer-hd",e.checked?"Y":"N")}},{title:BX.message("IM_SETTINGS_HARDWARE_CAMERA_ENABLE_MIRRORING"),type:"checkbox",name:"enableMirroring",items:{},checked:BX.Call.Hardware.enableMirroring,callback:function(e){BX.Call.Hardware.emit("changeMirroringVideoSetting",{enableMirroring:e.target.checked})},saveCallback:function(e){BX.Call.Hardware.enableMirroring=e.checked}},BX.MessengerCommon.isDesktop()&&this.desktop.enableInVersion(64)?{title:BX.message("IM_SETTINGS_HARDWARE_CAMERA_FACE_IMPROVE"),tooltip:BX.message("IM_SETTINGS_HARDWARE_CAMERA_FACE_IMPROVE_HINT"),type:"checkrange",checked:BX.desktop.cameraSmoothingStatus(),range:BX.desktop.cameraSmoothingLambda(),callback:function(e){BX.desktop.cameraSmoothingStatus(e.checkbox.checked);if(e.checkbox.checked){BX.desktop.cameraSmoothingLambda(e.range.value)}}}:null,{type:"space"},{title:BX.message("IM_SETTINGS_HARDWARE_MICROPHONE"),type:"select",name:"defaultMicrophone",items:{},callback:this.changeHardwareSettings.bind(this),saveCallback:function(e){if(!localStorage)return e.value;localStorage.setItem("bx-im-settings-default-microphone",e.value)}},{type:"space"},{title:"microphoneLevel",type:"html",value:'<div id="bx-messenger-settings-hardware-microphone-level" class="bx-messenger-settings-level-meter-container"></div>'},{type:"space"},{title:BX.message("IM_SETTINGS_HARDWARE_SPEAKER"),type:"select",name:"defaultSpeaker",items:{},saveCallback:function(e){if(!localStorage)return e.value;localStorage.setItem("bx-im-settings-default-speaker",e.value)}},{type:"space"},{title:BX.message("IM_SETTINGS_CALLS_INCOMING_VIDEO"),type:"select",name:"callAcceptIncomingVideo",items:[{title:BX.message("IM_SETTINGS_CALLS_INCOMING_VIDEO_ACCEPT_ALL"),value:BX.Call.VideoStrategy.Type.AllowAll},{title:BX.message("IM_SETTINGS_CALLS_INCOMING_VIDEO_ACCEPT_SPEAKING"),value:BX.Call.VideoStrategy.Type.CurrentlyTalking},{title:BX.message("IM_SETTINGS_CALLS_INCOMING_VIDEO_DENY_ALL"),value:BX.Call.VideoStrategy.Type.AllowNone}],value:this.settings.callAcceptIncomingVideo,saveCallback:function(e){var t=e[e.selectedIndex].value;this.callController.setVideoStrategyType(t);return t}.bind(this)}],click:BX.delegate(this.showHardwareSettings,this)};var r=[BX.create("tr",{children:[BX.create("th",{text:BX.message("IM_SETTINGS_HOTKEYS_HEADER_OPTION")}),BX.create("th",{text:BX.message("IM_SETTINGS_HOTKEYS_HEADER_KEYS")})]})];var l=BX.browser.IsMac()?"&#8984;":"Ctrl";var p=BX.browser.IsMac()?" &#8997;":"Alt";if(BX.MessengerCommon.isDesktop()){var h="Ctrl + Shift";if(BX.browser.IsMac()){h="&#8984; + Shift"}r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_CALLS"),props:{className:"bx-messenger-settings-hotkeys-separator"},attrs:{colspan:2}})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_MICROPHONE")}),BX.create("td",{html:h+" + A"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_MICROPHONE_MUTED")}),BX.create("td",{html:BX.message("IM_SETTINGS_HOTKEYS_MICROPHONE_MUTED_HOTKEY")})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_SCREEN_SHARING")}),BX.create("td",{html:h+" + S"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_CAMERA")}),BX.create("td",{html:h+" + V"})]}));if(BXIM.desktop.getApiVersion()>=60){r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_RECORDING")}),BX.create("td",{html:h+" + R"})]}))}r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_WANT_TO_SAY")}),BX.create("td",{html:h+" + H"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_MINIMIZE_CALL")}),BX.create("td",{html:h+" + C"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_LAYOUT_CHANGE")}),BX.create("td",{html:h+" + W"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_MUTE_SPEAKERS")}),BX.create("td",{html:h+" + M"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_LIST_USERS")}),BX.create("td",{html:h+" + U"})]}))}r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_CHATS"),props:{className:"bx-messenger-settings-hotkeys-separator"},attrs:{colspan:2}})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_SEARCH_CHATS")}),BX.create("td",{html:p+" + 0"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_RECENT_CHATS")}),BX.create("td",{html:p+" + [1-9]"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_QUOTE_MESSAGE")}),BX.create("td",{html:l+" + "+BX.message("IM_SETTINGS_HOTKEYS_QUOTE_MESSAGE_HOTKEY")})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_QUICK_QUOTE")}),BX.create("td",{html:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_QUICK_QUOTE_HOTKEY")})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_QUICK_EDIT")}),BX.create("td",{html:"&#8593; "+BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_QUICK_EDIT_HOTKEY")})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_MENTION_USER")}),BX.create("td",{html:l+" + "+BX.message("IM_SETTINGS_HOTKEYS_MENTION_USER_HOTKEY")})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_BOLD")}),BX.create("td",{html:l+" + B"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_ITALIC")}),BX.create("td",{html:l+" + I"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_UNDERLINE")}),BX.create("td",{html:l+" + U"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_STRIKE")}),BX.create("td",{html:l+" + S"})]}));if(this.language==="ru"){r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_TEXT_EDITOR_CHANGE_LAYOUT_RU")}),BX.create("td",{html:l+" + "+(BX.MessengerCommon.isDesktop()?"T":"E")})]}))}if(this.desktop.enableInVersion(66)){r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_PAGE"),props:{className:"bx-messenger-settings-hotkeys-separator"},attrs:{colspan:2}})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_FIND")}),BX.create("td",{html:l+" + F"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_FIND_NEXT")}),BX.create("td",{html:l+" + G"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_FIND_NEXT")}),BX.create("td",{html:l+" + Shift + G"})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_ZOOM_IN")}),BX.create("td",{html:BX.message("IM_SETTINGS_HOTKEYS_ZOOM_IN_KEY").replace("#CMD#",l)})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_ZOOM_OUT")}),BX.create("td",{html:BX.message("IM_SETTINGS_HOTKEYS_ZOOM_OUT_KEY").replace("#CMD#",l)})]}));r.push(BX.create("tr",{children:[BX.create("td",{text:BX.message("IM_SETTINGS_HOTKEYS_ZOOM_DEFAULT")}),BX.create("td",{html:l+" + 0"})]}))}this.settingsView.hotkeys={title:BX.message("IM_SETTINGS_HOTKEYS"),settings:[{title:"hotkeysPalette",type:"html",children:[BX.create("table",{text:"Hotkeys here",props:{className:"bx-messenger-settings-hotkeys"},children:r})]}]};if(!BX.MessengerCommon.isDesktop()&&this.betaAvailable){this.settingsView.v2={title:BX.message("IM_SETTINGS_V2"),click:BX.delegate(this.showV2Settings,this),settings:[{title:"v2Panel",type:"html",children:[BX.create("div",{props:{className:"bx-messenger-settings-v2-container"}})]}]}}BX.onCustomEvent(this,"prepareSettingsView",[]);if(e.onlyPanel&&!this.settingsView[e.onlyPanel])return false;this.popupSettingsButtonSave=new BX.PopupWindowButton({text:BX.message("IM_SETTINGS_SAVE"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){this.popupSettingsButtonSave.setClassName("popup-window-button");this.popupSettingsButtonSave.setName(BX.message("IM_SETTINGS_WAIT"));BX.hide(this.popupSettingsButtonClose.buttonNode);this.saveFormSettings();this.closeHardwareSettings()}),this)}});this.popupSettingsButtonClose=new BX.PopupWindowButton({text:BX.message("IM_SETTINGS_CLOSE"),className:"popup-window-button-close",events:{click:BX.delegate((function(){this.popupSettings.close();BX.hide(this.popupSettingsButtonSave.buttonNode);BX.hide(this.popupSettingsButtonClose.buttonNode);this.closeHardwareSettings()}),this)}});this.popupSettingsBody=BX.create("div",{props:{className:"bx-messenger-settings"+(!BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},children:this.prepareSettings({onlyPanel:e.onlyPanel?e.onlyPanel:false,active:e.active?e.active:false})});if(BX.MessengerCommon.isDesktop()){if(this.init){this.desktop.openSettings(this.popupSettingsBody,"BXIM.openSettings("+JSON.stringify(e)+"); BX.desktop.resize(); ",e);return false}else{this.popupSettings=new BX.PopupWindowDesktop;this.desktop.drawOnPlaceholder(this.popupSettingsBody)}}else{this.popupSettings=new BX.PopupWindow("bx-messenger-popup-settings",null,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),autoHide:false,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,overlay:{opacity:50,backgroundColor:"#000000"},buttons:[this.popupSettingsButtonSave,this.popupSettingsButtonClose],draggable:{restrict:true},closeByEsc:true,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupSettings=null;if(!BX.MessengerCommon.isPage()&&this.messenger.popupMesseger==null)BX.bind(document,"click",BX.proxy(this.autoHide,this));this.closeHardwareSettings();this.messenger.setClosingByEsc(true)}),this)},titleBar:e.onlyPanel?this.settingsView[e.onlyPanel].title:BX.message("IM_SETTINGS"),closeIcon:true,contentNoPaddings:true,contentColor:BX.MessengerTheme.isDark()?"":"white",content:this.popupSettingsBody});this.popupSettings.show();BX.addClass(this.popupSettings.popupContainer,"bx-messenger-mark");BX.bind(this.popupSettings.popupContainer,"click",BX.MessengerCommon.preventDefault)}BX.bindDelegate(this.popupSettingsBody,"click",{className:"bx-messenger-settings-tab"},BX.delegate((function(){this.selectSettings(BX.proxy_context.getAttribute("data-name"))}),this));if(this.settings.notifyScheme=="simple"){this.GetSimpleNotifySettings()}else{this.GetNotifySettings()}if(!BX.MessengerCommon.isDesktop()){BX.bind(document,"click",BX.proxy(this.autoHide,this))}if(e.onlyPanel){this.selectSettings(e.onlyPanel)}else if(e.select){this.selectSettings(e.select)}};BX.IM.prototype.selectSettings=function(e){if(!this.settingsView[e]){return false}BX.onCustomEvent(window,"onImSettingsTabShow",[e]);BX.findChildrenByClassName(this.popupSettingsBody,"bx-messenger-settings-tab").forEach((function(t){if(t.getAttribute("data-name")==e){BX.addClass(t,"bx-messenger-settings-tab-active")}else{BX.removeClass(t,"bx-messenger-settings-tab-active")}}));BX.findChildrenByClassName(this.popupSettingsBody,"bx-messenger-settings-content").forEach((function(t){if(t.getAttribute("data-name")==e){BX.addClass(t,"bx-messenger-settings-content-active")}else{BX.removeClass(t,"bx-messenger-settings-content-active")}}));if(this.settingsView[e].click){this.settingsView[e].click()}if(BX.MessengerCommon.isDesktop()){this.desktop.autoResize()}return true};BX.IM.prototype.prepareSettings=function(e){e=typeof e=="object"?e:{};var t=[];var s=[];var i=true;var n=0;for(var a in this.settingsView){if(this.settingsView[a].condition&&!this.settingsView[a].condition())continue;if(e.active&&this.settingsView[e.active]){if(e.active==a)i=true;else i=false}if(i){BX.onCustomEvent(window,"onImSettingsTabShow",[a])}s.push(BX.create("div",{attrs:{"data-id":n+"","data-name":a},props:{className:"bx-messenger-settings-tab"+(i?" bx-messenger-settings-tab-active":"")},html:this.settingsView[a].title}));i=false;n++}t.push(BX.create("div",{style:{display:!e.onlyPanel?"block":"none"},props:{className:"bx-messenger-settings-tabs"},children:s}));var s=[];var i=true;for(var a in this.settingsView){if(this.settingsView[a].condition&&!this.settingsView[a].condition())continue;if(e.active&&this.settingsView[e.active]){if(e.active==a)i=true;else i=false}var o=[];if(this.settingsView[a].settings){var r=[];for(var l=0;l<this.settingsView[a].settings.length;l++){if(typeof this.settingsView[a].settings[l]!="object"||this.settingsView[a].settings[l]===null)continue;if(this.settingsView[a].settings[l].condition&&!this.settingsView[a].settings[l].condition())continue;var p=null;if(this.settingsView[a].settings[l].tooltip){p=BX.create("span",{props:{className:"bx-messenger-settings-tooltip"},attrs:{"data-tooltip":this.settingsView[a].settings[l].tooltip},html:"?",events:{mouseover:BX.delegate((function(e){this.messenger.tooltip(BX.proxy_context,BX.proxy_context.getAttribute("data-tooltip"),{angle:false,width:300,closeIcon:false});BX.PreventDefault(e)}),this),mouseout:function(e){if(this.messenger.tooltipIsOpen()){this.messenger.popupTooltip.close()}}.bind(this)}})}if(this.settingsView[a].settings[l].type=="notifyControl"||this.settingsView[a].settings[l].type=="table"||this.settingsView[a].settings[l].type=="space"){r.push(BX.create("tr",{children:[BX.create("td",{attrs:{colspan:2},children:this.prepareSettingsItem(this.settingsView[a].settings[l])})]}))}else if(this.settingsView[a].settings[l].type==="header"){r.push(BX.create("tr",{children:[BX.create("td",{props:{className:"bx-messenger-settings-header"},attrs:{colspan:2},html:this.settingsView[a].settings[l].title})]}))}else if(this.settingsView[a].settings[l].type==="html"){r.push(BX.create("tr",{children:[BX.create("td",{attrs:{colspan:2},children:this.prepareSettingsItem(this.settingsView[a].settings[l])})]}))}else{r.push(BX.create("tr",{children:[BX.create("td",{attrs:{width:"55%"},children:[BX.create("span",{html:this.settingsView[a].settings[l].title}),p]}),BX.create("td",{attrs:{width:"45%"},children:this.prepareSettingsItem(this.settingsView[a].settings[l])})]}))}}if(r.length>0)o.push(BX.create("table",{attrs:{cellpadding:"0",cellspacing:"0",border:"0",width:"100%"},props:{className:"bx-messenger-settings-table bx-messenger-settings-table-style-"+a},children:r}))}s.push(BX.create("div",{style:{display:e.onlyPanel?e.onlyPanel==a?"block":"none":""},attrs:{"data-name":a},props:{id:"bx-messenger-settings-content-"+a,className:"bx-messenger-settings-content"+(i?" bx-messenger-settings-content-active":"")},children:o}));i=false}t.push(BX.create("div",{props:{className:"bx-messenger-settings-contents"},children:s}));if(BX.MessengerCommon.isDesktop()){t.push(BX.create("div",{props:{className:"popup-window-buttons"},children:[this.popupSettingsButtonSave.buttonNode,this.popupSettingsButtonClose.buttonNode]}))}return t};BX.IM.prototype.prepareSettingsTable=function(e){var t=this.settingsTableConfig[e];if(!t.error_rows&&t.condition&&!BX.delegate(t.condition,this)())return null;var s=[];var i=[];for(var n=0;n<t.headers.length;n++){if(typeof t.headers[n]=="boolean")continue;i.push(BX.create("th",{html:t.headers[n]}))}if(i.length>0)s.push(BX.create("tr",{children:i}));if(t.error_rows&&t.condition&&!t.condition()){s.push(BX.create("tr",{children:[BX.create("td",{attrs:{colspan:t.headers.length},style:{textAlign:"center"},children:[t.error_rows]})]}));t.rows=[]}for(var n=0;n<t.rows.length;n++){var a=[];for(var o=0;o<t.rows[n].length;o++){if(typeof t.rows[n][o]!="object"||t.rows[n][o]===null)continue;var r={};var l={};if(t.rows[n][o].type=="separator"){r={colspan:t.headers.length};l={className:"bx-messenger-settings-table-sep"}}else if(t.rows[n][o].type=="error"){r={colspan:t.headers.length};l={className:"bx-messenger-settings-table-error"}}if(typeof this.settingsDisabled[t.rows[n][o].name]!="undefined"){t.rows[n][o].disabled=this.settingsDisabled[t.rows[n][o].name]}a.push(BX.create("td",{attrs:r,props:l,children:this.prepareSettingsItem(t.rows[n][o])}))}if(a.length>0)s.push(BX.create("tr",{children:a}))}var p=null;if(s.length>0)p=BX.create("table",{attrs:{cellpadding:"0",cellspacing:"0",border:"0"},props:{className:"bx-messenger-settings-table-extra bx-messenger-settings-table-extra-"+e},children:s});return p};BX.IM.prototype.prepareSettingsItem=function(e){var t=[];var s=BX.clone(e);if(s.type=="space"){t.push(BX.create("span",{props:{className:"bx-messenger-settings-space"}}))}if(s.type=="text"||s.type=="separator"||s.type=="error"){t.push(BX.create("span",{html:s.title}))}if(s.type=="html"){if(typeof s.children==="object"){t.push(BX.create("div",{children:s.children}))}else{t.push(BX.create("div",{html:s.value}))}}if(s.type=="link"){if(s.callback)var i={click:s.callback};t.push(BX.create("span",{props:{className:"bx-messenger-settings-link"},attrs:s.attrs,html:s.title,events:i}))}if(s.type=="checkbox"){if(s.callback)var i={change:s.callback};if(typeof s.checked=="undefined")s.checked=this.settings[s.name]!=false;var n={type:"checkbox",name:s.name?s.name:false,id:s.id?s.id:"",checked:s.checked==true?"true":false,disabled:s.disabled==true?"true":false};if(!s.skipSave&&s.name)n["data-save"]=1;var a=BX.create("input",{attrs:n,events:i});t.push(BX.create("div",{style:{whiteSpace:"nowrap"},children:[a]}));if(s.saveCallback)this.settingsSaveCallback[s.name]=s.saveCallback;if(s.afterSaveCallback)this.settingsAfterSaveCallback[s.name]=s.afterSaveCallback}else if(s.type=="checkrange"){var o=BX.create("input",{attrs:{type:"checkbox",checked:s.checked==true?"true":false}});var r=BX.create("input",{attrs:{type:"range",min:0,max:100,value:s.range},style:{display:s.checked==true?"inline-block":"none",verticalAlign:"bottom",height:"14px"}});var l=function(){if(o.checked){r.style.display="inline"}else{r.style.display="none"}var e={checkbox:o,range:r};s.callback(e)};BX.bind(o,"change",l);BX.bind(r,"change",l);t.push(BX.create("div",{style:{whiteSpace:"nowrap"},children:[o,r]}))}else if(s.type=="select"){if(s.callback)var i={change:s.callback};var p=[];for(var h=0;h<s.items.length;h++){p.push(BX.create("option",{attrs:{value:s.items[h].value,selected:s.value==s.items[h].value?"true":false},html:s.items[h].title}))}var n={name:s.name};if(s.name)n["data-save"]=1;var a=BX.create("select",{attrs:n,events:i,children:p});t.push(BX.create("div",{style:{whiteSpace:"nowrap"},children:[a]}));if(s.saveCallback)this.settingsSaveCallback[s.name]=s.saveCallback;if(s.afterSaveCallback)this.settingsAfterSaveCallback[s.name]=s.afterSaveCallback}else if(s.type=="table"){t.push(BX.create("div",{attrs:{id:"bx-messenger-settings-table-"+s.name,className:"bx-messenger-settings-table-"+s.name},style:{display:s.show?"block":"none"},children:[this.prepareSettingsTable(s.name)]}))}else if(s.type=="notifyControl"){var c=BX.delegate((function(){if(BX.proxy_context.value=="simple"){BX.hide(BX("bx-messenger-settings-table-notify"));BX.show(BX("bx-messenger-settings-table-simpleNotify"));BX.show(BX("bx-messenger-settings-notify-clients"));this.GetSimpleNotifySettings()}else{BX.show(BX("bx-messenger-settings-table-notify"));BX.hide(BX("bx-messenger-settings-table-simpleNotify"));BX.hide(BX("bx-messenger-settings-notify-clients"));this.GetNotifySettings()}}),this);t.push(BX.create("div",{props:{className:"bx-messenger-settings-notify-type"},children:[BX.create("input",{attrs:{id:"notifySchemeSimpleValue","data-save":1,type:"radio",name:"notifyScheme",value:"simple",checked:this.settings.notifyScheme=="simple"},events:{change:c}}),BX.create("label",{attrs:{for:"notifySchemeSimpleValue"},html:" "+BX.message("IM_SETTINGS_NS_1")+" "}),BX.create("input",{attrs:{id:"notifySchemeExpertValue","data-save":1,type:"radio",name:"notifyScheme",value:"expert",checked:this.settings.notifyScheme=="expert"},events:{change:c}}),BX.create("label",{attrs:{for:"notifySchemeExpertValue"},html:" "+BX.message("IM_SETTINGS_NS_2")+" "})]}));t.push(BX.create("div",{attrs:{id:"bx-messenger-settings-notify-clients"},style:{display:this.settings.notifyScheme=="simple"?"block":"none"},props:{className:"bx-messenger-settings-notify-clients"},children:[BX.create("div",{props:{className:"bx-messenger-settings-notify-clients-title"},html:BX.message("IM_SETTINGS_NC_1_NEW")}),BX.create("div",{props:{className:"bx-messenger-settings-notify-clients-item"},children:[BX.create("input",{attrs:{"data-save":1,type:"checkbox",id:"notifySchemeSendSite",name:"notifySchemeSendSite",value:"Y",checked:this.settings.notifySchemeSendSite},events:{change:function(e){if(!this.checked){BX("notifySchemeSendEmail").checked=false}else{BX("notifySchemeSendEmail").checked=true}}}}),BX.create("label",{attrs:{for:"notifySchemeSendSite"},html:" "+BX.message("IM_SETTINGS_NC_2")+"<br />"})]}),this.bitrixXmpp?BX.create("div",{props:{className:"bx-messenger-settings-notify-clients-item"},children:[BX.create("input",{attrs:{"data-save":1,type:"checkbox",id:"notifySchemeSendXmpp",name:"notifySchemeSendXmpp",value:"Y",checked:this.settings.notifySchemeSendXmpp}}),BX.create("label",{attrs:{for:"notifySchemeSendXmpp"},html:" "+BX.message("IM_SETTINGS_NC_3")+"<br />"})]}):null,BX.create("div",{props:{className:"bx-messenger-settings-notify-clients-item"},children:[BX.create("input",{attrs:{"data-save":1,type:"checkbox",id:"notifySchemeSendEmail",name:"notifySchemeSendEmail",value:"Y",checked:this.settings.notifySchemeSendEmail},events:{change:function(e){if(this.checked){BX("notifySchemeSendSite").checked=true}}}}),BX.create("label",{attrs:{for:"notifySchemeSendEmail"},html:" "+BX.message("IM_SETTINGS_NC_4").replace("#MAIL#",this.userEmail)+""})]}),this.bitrixMobile?BX.create("div",{props:{className:"bx-messenger-settings-notify-clients-item"},children:[BX.create("input",{attrs:{"data-save":1,type:"checkbox",id:"notifySchemeSendPush",name:"notifySchemeSendPush",value:"Y",checked:this.settings.notifySchemeSendPush}}),BX.create("label",{attrs:{for:"notifySchemeSendPush"},html:" "+BX.message("IM_SETTINGS_NC_5")+"<br />"})]}):null]}))}return t};BX.IM.prototype.showHardwareSettings=function(){var e=this;var t={micSelect:document.querySelector("[name=defaultMicrophone]"),camSelect:document.querySelector("[name=defaultCamera]"),speakerSelect:document.querySelector("[name=defaultSpeaker]"),audioLevel:BX("bx-messenger-settings-hardware-microphone-level"),cameraImage:BX("bx-messenger-settings-hardware-camera-image"),video:BX("bx-messenger-settings-hardware-camera-image-video"),error:BX("bx-messenger-settings-hardware-error")};if(this.settingsCameraTestMediaStream){return}if(!t.micSelect||!t.camSelect){return}t.micSelect.style.minWidth="200px";t.micSelect.style.maxWidth="350px";t.camSelect.style.minWidth="200px";t.camSelect.style.maxWidth="350px";t.speakerSelect.style.minWidth="200px";t.speakerSelect.style.maxWidth="350px";if(!t.video){t.video=BX.create("video",{attrs:{id:"bx-messenger-settings-hardware-camera-image-video"}});t.cameraImage.appendChild(t.video);if((opener||top).BX.Call.BackgroundDialog.isAvailable()){var s=BX.create("div",{props:{className:"bx-messenger-settings-hardware-camera-image-button-block"}});if((opener||top).BX.Call.BackgroundDialog.isMaskAvailable()){var i=BX.create("div",{props:{className:"bx-messenger-settings-hardware-camera-image-button-mask"},children:[BX.create("div",{props:{className:"bx-messenger-videocall-user-panel-button-icon mask"}}),BX.create("div",{props:{className:"bx-messenger-videocall-user-panel-button-text"},text:BX.message("IM_CALL_CHANGE_MASK")})],events:{click:function(){(opener||top).BX.Call.BackgroundDialog.open({tab:"mask"})}}});s.appendChild(i)}var n=BX.create("div",{props:{className:"bx-messenger-settings-hardware-camera-image-button-background"},children:[BX.create("div",{props:{className:"bx-messenger-videocall-user-panel-button-icon background"}}),BX.create("div",{props:{className:"bx-messenger-videocall-user-panel-button-text"},text:BX.message("IM_CALL_CHANGE_BACKGROUND")})],events:{click:function(){(opener||top).BX.Call.BackgroundDialog.open()}}});s.appendChild(n);t.cameraImage.appendChild(s)}if(BX.Call.Hardware.enableMirroring){t.video.classList.add("bx-messenger-settings-hardware-camera-image-video-flipped")}t.video.addEventListener("loadedmetadata",(function(){if(BX.MessengerCommon.isDesktop()){BX.desktop.resize()}}));BX.Call.Hardware.subscribe("changeMirroringVideoSetting",this.changeVideoMirroring.bind(this))}if(!BX.Call.Util.isWebRTCSupported()){console.log("webrtc is not supported");return}var a={audio:false,video:false};var o={audioInput:false,videoInput:false,audioOutput:false};var r={audioInput:false,videoInput:false,audioOutput:false};var l=window.location.protocol==="https:";if(!navigator.mediaDevices){t.error.innerHTML="";t.error.appendChild(BX.create("div",{props:{className:"ui-alert ui-alert-icon-danger"},children:[BX.create("span",{props:{className:"ui-alert-message"},text:BX.message("IM_SETTINGS_HARDWARE_ERROR")+(l?"":" "+BX.message("IM_SETTINGS_HARDWARE_USE_HTTPS"))})]}));return}navigator.mediaDevices.enumerateDevices().then((function(t){t.forEach((function(t){if(t.kind=="audioinput"){o.audioInput=true;if(e.webrtc.defaultMicrophone===t.deviceId){r.audioInput=true}}else if(t.kind=="videoinput"){o.videoInput=true;if(e.webrtc.defaultCamera===t.deviceId){r.videoInput=true}}else if(t.kind=="audiooutput"){o.audioOutput=true;if(e.webrtc.defaultSpeaker===t.deviceId){r.audioOutput=true}}}));if(!r.audioInput){window.localStorage.removeItem("bx-im-settings-default-microphone");e.webrtc.defaultMicrophone=""}if(!r.videoInput){window.localStorage.removeItem("bx-im-settings-default-camera");e.webrtc.defaultCamera=""}if(!r.audioOutput){window.localStorage.removeItem("bx-im-settings-default-speaker");e.webrtc.defaultSpeaker=""}if(o.audioInput){if(e.webrtc.defaultMicrophone)a.audio={deviceId:{exact:e.webrtc.defaultMicrophone}};else a.audio=true}if(o.videoInput){if(e.webrtc.defaultCamera)a.video={deviceId:{exact:e.webrtc.defaultCamera}};else a.video=true}if(a.video!==false){if(a.video===true){a.video={}}a.video.width={ideal:1280};a.video.height={ideal:720}}if(!o.audioInput&&!o.videoInput){return Promise.reject(new Error("NO_HARDWARE"))}else{return navigator.mediaDevices.getUserMedia(a)}})).then((function(s){e.settingsCameraTestMediaStream=s;e.settingsLevelMeter=new BX.IM.LevelMeter(t.audioLevel);if(e.settingsLevelMeter.supported)e.settingsLevelMeter.attachMediaStream(s);t.video.srcObject=s;t.video.play();t.video.muted=true;if(BX.MessengerCommon.isDesktop()){BX.desktop.resize()}return BX.Call.Hardware.init()})).then((function(){var s=function(){var t=e.settingsCameraTestMediaStream.getVideoTracks();if(t.length>0&&t[0].label)return t[0].label;else return""}();var i=function(){var t=e.settingsCameraTestMediaStream.getAudioTracks();if(t.length>0&&t[0].label)return t[0].label;else return""}();var n;var a=BX.Call.Hardware.getMicrophoneList().length>0;var o=BX.Call.Hardware.getSpeakerList().length>0;var r=BX.Call.Hardware.getCameraList().length>0;BX.Call.Hardware.getMicrophoneList().forEach((function(e){n=BX.create("option",{text:e.label,attrs:{value:e.deviceId}});if(e.label===i||e.deviceId===BX.Call.Hardware.defaultMicrophone){n.selected=true}t.micSelect.options.add(n)}));BX.Call.Hardware.getCameraList().forEach((function(i){n=BX.create("option",{text:i.label,attrs:{value:i.deviceId}});if(i.label===s||i.deviceId===e.webrtc.defaultCamera){n.selected=true}t.camSelect.options.add(n)}));BX.Call.Hardware.getSpeakerList().forEach((function(s){n=BX.create("option",{text:s.label,attrs:{value:s.deviceId}});if(s.deviceId===e.webrtc.defaultSpeaker){n.selected=true}t.speakerSelect.options.add(n)}))})).catch((function(e){console.error(e);let s;if("message"in e&&e.message==="NO_HARDWARE"){s=BX.message("IM_SETTINGS_HARDWARE_NOT_FOUND")}else{s=BX.message("IM_SETTINGS_HARDWARE_ERROR")+(l?"\n"+e.toString():" "+BX.message("IM_SETTINGS_HARDWARE_USE_HTTPS"))}t.error.innerHTML="";t.error.appendChild(BX.create("div",{props:{className:"ui-alert ui-alert-icon-danger"},children:[BX.create("span",{props:{className:"ui-alert-message"},text:s})]}))}))};BX.IM.prototype.changeHardwareSettings=function(){var e=this;var t={micSelect:document.querySelector("[name=defaultMicrophone]"),camSelect:document.querySelector("[name=defaultCamera]"),audioLevel:BX("bx-messenger-settings-hardware-microphone-level"),cameraImage:BX("bx-messenger-settings-hardware-camera-image"),video:BX("bx-messenger-settings-hardware-camera-image-video")};if(this.settingsCameraTestMediaStream){BX.webrtc.stopMediaStream(this.settingsCameraTestMediaStream);this.settingsCameraTestMediaStream=null}if(this.settingsLevelMeter){this.settingsLevelMeter.stop()}var s={audio:{deviceId:t.micSelect.value?{exact:t.micSelect.value}:undefined},video:{deviceId:t.camSelect.value?{exact:t.camSelect.value}:undefined}};navigator.mediaDevices.getUserMedia(s).then((function(s){e.settingsCameraTestMediaStream=s;if(e.settingsLevelMeter.supported)e.settingsLevelMeter.attachMediaStream(s);t.video.srcObject=s;t.video.play();if(BX.MessengerCommon.isDesktop()){BX.desktop.resize()}})).catch((function(e){console.log("could not access user hardware",e)}))};BX.IM.prototype.changeVideoMirroring=function(e){var t={video:BX("bx-messenger-settings-hardware-camera-image-video")};if(t.video){t.video.classList.toggle("bx-messenger-settings-hardware-camera-image-video-flipped",e.data.enableMirroring)}};BX.IM.prototype.closeHardwareSettings=function(){if(this.settingsCameraTestMediaStream)BX.webrtc.stopMediaStream(this.settingsCameraTestMediaStream);if(this.settingsLevelMeter)this.settingsLevelMeter.stop();this.settingsCameraTestMediaStream=null;this.webrtc.readDefaults();BX.Event.EventEmitter.unsubscribe("IM.Settings:changeVideoMirroring",this.changeVideoMirroring.bind(this))};BX.IM.prototype.showV2Settings=function(){const e=document.querySelector(".bx-messenger-settings-v2-container");if(!e){return false}const t=document.querySelector(".bx-messenger-settings-v2-content");if(!t){const t=BX.Tag.render`
			<div class="bx-messenger-settings-v2-content">
				<div class="bx-messenger-settings-v2-accent-button-container">
					<div class="bx-messenger-settings-v2-accent-button">
						${BX.message("IM_SETTINGS_V2_BETA")}
					</div>
				</div>
				<div class="bx-messenger-settings-v2-title">
					${BX.message("IM_SETTINGS_V2_TITLE")}
				</div>
				<div class="bx-messenger-settings-v2-subtitle">
					${BX.message("IM_SETTINGS_V2_SUBTITLE")}
				</div>
				<div class="bx-messenger-settings-v2-link-container">
					<a href="#helpdesk" class="bx-messenger-settings-v2-link">
						${BX.message("IM_SETTINGS_V2_LINK")}
					</a>
				</div>
				<div class="bx-messenger-settings-v2-button-container">
					<button class="bx-messenger-settings-v2-button ui-btn ui-btn-lg ui-btn-round ui-btn-success">
						${BX.message("IM_SETTINGS_V2_BUTTON")}
					</button>
				</div>
			</div>
		`;e.appendChild(t);const s=e.querySelector(".bx-messenger-settings-v2-link");BX.Event.bind(s,"click",(e=>{BX.Helper.show("redirect=detail&code=17373696");e.preventDefault()}));const i=e.querySelector(".bx-messenger-settings-v2-button");BX.Event.bind(i,"click",(e=>{this.switchToV2()}))}};BX.IM.prototype.switchToV2=function(){BX.rest.callMethod("im.version.v2.enable").then(function(){window.location.replace("/online/")}.bind(this))};BX.IM.prototype.saveSetting=function(e,t){this.settings[e]=t;var s={};s[e]=t;this.saveSettings(s);return true};BX.IM.prototype.saveSettings=function(e){var t="";for(var s in e){this.settings[s]=e[s];t=t+s}BX.localStorage.set("ims",JSON.stringify(this.settings),5);if(this.saveSettingsTimeout[t])clearTimeout(this.saveSettingsTimeout[t]);this.saveSettingsTimeout[t]=setTimeout(BX.delegate((function(){BX.ajax({url:this.pathToAjax+"?SETTINGS_SAVE&V="+this.revision,method:"POST",dataType:"json",timeout:30,data:{IM_SETTING_SAVE:"Y",IM_AJAX_CALL:"Y",SETTINGS:JSON.stringify(e),sessid:BX.bitrix_sessid()}});delete this.saveSettingsTimeout[t]}),this),700)};BX.IM.prototype.saveFormSettings=function(){var e=BX.findChildren(this.popupSettingsBody,{attribute:"data-save"},true);var t=null;for(var s=0;s<e.length;s++){if(e[s].tagName=="INPUT"&&e[s].type=="checkbox"){if(typeof this.settingsSaveCallback[e[s].name]=="function")t=this.settingsSaveCallback[e[s].name](e[s]);else t=e[s].checked}else if(e[s].tagName=="INPUT"&&e[s].type=="radio"&&e[s].checked){if(typeof this.settingsSaveCallback[e[s].name]=="function")t=this.settingsSaveCallback[e[s].name](e[s]);else t=e[s].value}else if(e[s].tagName=="SELECT"){if(typeof this.settingsSaveCallback[e[s].name]=="function")t=this.settingsSaveCallback[e[s].name](e[s]);else t=e[s][e[s].selectedIndex].value}if(this.settings[e[s].name]!=t){this.settings[e[s].name]=t}else{delete this.settingsAfterSaveCallback[e[s].name]}}var i=this.settings["notifyScheme"]=="simple"?{}:{notify:{}};for(var n in this.settings){if(n.substr(0,7)=="notify|"){if(this.settingsDisabled[n])continue;if(i["notify"])i["notify"][n.substr(7)]=this.settings[n]}else{i[n]=this.settings[n]}}if(this.messenger!=null){if(this.messenger.popupMessengerTextareaSendType){this.messenger.popupMessengerTextareaSendType.innerHTML=this.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter"}}BX.ajax({url:this.pathToAjax+"?SETTINGS_FORM_SAVE&V="+this.revision,method:"POST",dataType:"json",timeout:30,data:{IM_SETTINGS_SAVE:"Y",IM_AJAX_CALL:"Y",SETTINGS:JSON.stringify(i),sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(){BX.MessengerProxy.sendSettingsChangeEvent(i);BX.MessengerCommon.userListRedraw(true);BX.MessengerCommon.drawTab(this.messenger.currentTab,true);for(var e in this.settingsAfterSaveCallback){if(!this.settingsAfterSaveCallback.hasOwnProperty(e)){continue}this.settingsAfterSaveCallback[e]();delete this.settingsAfterSaveCallback[e]}this.settingsSaveCallback={};if(BX.MessengerCommon.isDesktop()){BX.desktop.onCustomEvent("bxSaveSettings",[this.settings])}else{BX.localStorage.set("ims",JSON.stringify(this.settings),5)}this.popupSettings.close()}),this),onfailure:BX.delegate((function(){this.popupSettingsButtonSave.setClassName("popup-window-button popup-window-button-accept");this.popupSettingsButtonSave.setName(BX.message("IM_SETTINGS_SAVE"));BX.show(this.popupSettingsButtonClose.buttonNode)}),this)})};BX.IM.prototype.GetNotifySettings=function(){BX.ajax({url:this.pathToAjax+"?SETTINGS_NOTIFY_LOAD&V="+this.revision,method:"POST",dataType:"json",timeout:30,data:{IM_SETTINGS_NOTIFY_LOAD:"Y",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e.ERROR==""){for(var t in e.VALUES){if(t.substr(0,10)=="important|"){continue}if(t.substr(0,9)=="disabled|"){this.settingsDisabled["notify|"+t.substr(9)]=e.VALUES[t];continue}this.settings["notify|"+t]=e.VALUES[t]}var s=[];if(e.NAMES["im"]){s.push([{type:"separator",title:e.NAMES["im"].NAME}]);for(var i in e.NAMES["im"]["NOTIFY"]){var n=e.NAMES["im"]["NOTIFY"][i];s.push([{type:"text",title:n},{type:"checkbox",id:"notifyId|site|im|"+i,name:"notify|site|im|"+i,callback:function(e){if(BX(this.id.replace("|site|","|email|")).disabled){return true}if(!this.checked){BX(this.id.replace("|site|","|email|")).checked=false}else{BX(this.id.replace("|site|","|email|")).checked=true}}},this.bitrixXmpp?{type:"checkbox",name:"notify|xmpp|im|"+i}:false,{type:"checkbox",id:"notifyId|email|im|"+i,name:"notify|email|im|"+i,callback:function(e){if(BX(this.id.replace("|email|","|site|")).disabled){return true}if(this.checked){BX(this.id.replace("|email|","|site|")).checked=true}}},this.bitrixMobile?{type:"checkbox",name:"notify|push|im|"+i}:false])}}for(var a in e.NAMES){if(a=="im")continue;s.push([{type:"separator",title:e.NAMES[a].NAME}]);for(var i in e.NAMES[a]["NOTIFY"]){var n=e.NAMES[a]["NOTIFY"][i];s.push([{type:"text",title:n},{type:"checkbox",id:"notifyId|site|"+a+"|"+i,name:"notify|site|"+a+"|"+i,callback:function(e){if(BX(this.id.replace("|site|","|email|")).disabled){return true}if(!this.checked){BX(this.id.replace("|site|","|email|")).checked=false}else{BX(this.id.replace("|site|","|email|")).checked=true}}},this.bitrixXmpp?{type:"checkbox",name:"notify|xmpp|"+a+"|"+i}:false,{type:"checkbox",id:"notifyId|email|"+a+"|"+i,name:"notify|email|"+a+"|"+i,callback:function(e){if(BX(this.id.replace("|email|","|site|")).disabled){return true}if(this.checked){BX(this.id.replace("|email|","|site|")).checked=true}}},this.bitrixMobile?{type:"checkbox",name:"notify|push|"+a+"|"+i}:false])}}this.settingsTableConfig["notify"].rows=s}else{this.settingsTableConfig["notify"].rows=[[{type:"error",title:BX.message("IM_M_ERROR")}]]}var o=BX("bx-messenger-settings-table-notify");if(o){o.innerHTML="";BX.adjust(o,{children:[this.prepareSettingsTable("notify")]})}if(e.ERROR!="")this.settingsTableConfig["notify"].rows=[];if(BX.MessengerCommon.isDesktop())this.desktop.autoResize()}),this),onfailure:BX.delegate((function(){this.settingsTableConfig["notify"].rows=[[{type:"error",title:BX.message("IM_M_ERROR")}]];var e=BX("bx-messenger-settings-table-notify");if(e){e.innerHTML="";BX.adjust(e,{children:[this.prepareSettingsTable("notify")]})}this.settingsTableConfig["notify"].rows=[];if(BX.MessengerCommon.isDesktop())this.desktop.autoResize()}),this)})};BX.IM.prototype.GetSimpleNotifySettings=function(){BX.ajax({url:this.pathToAjax+"?SETTINGS_SIMPLE_NOTIFY_LOAD&V="+this.revision,method:"POST",dataType:"json",timeout:30,data:{IM_SETTINGS_SIMPLE_NOTIFY_LOAD:"Y",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e.ERROR==""){var t=[];for(var s in e.VALUES){t.push([{type:"separator",title:e.NAMES[s]?e.NAMES[s].NAME:"-"}]);for(var i in e.VALUES[s]){var n=e.NAMES[s]?e.NAMES[s]["NOTIFY"][i]:"-";t.push([{type:"text",title:n},{type:"link",title:BX.message("IM_SETTINGS_SNOTIFY_ENABLE"),attrs:{"data-settingName":s+"|"+i},callback:BX.delegate((function(){this.removeSimpleNotify(BX.proxy_context)}),this)}]);this.settingsNotifyBlocked[s+"|"+i]=true}}this.settingsTableConfig["simpleNotify"].rows=t}else{this.settingsTableConfig["simpleNotify"].rows=[[{type:"error",title:BX.message("IM_M_ERROR")}]]}var a=BX("bx-messenger-settings-table-simpleNotify");if(a){a.innerHTML="";BX.adjust(a,{children:[this.prepareSettingsTable("simpleNotify")]})}if(e.ERROR!="")this.settingsTableConfig["simpleNotify"].rows=[];if(BX.MessengerCommon.isDesktop())this.desktop.autoResize()}),this),onfailure:BX.delegate((function(){this.settingsTableConfig["simpleNotify"].rows=[[{type:"error",title:BX.message("IM_M_ERROR")}]];if(BX("bx-messenger-settings-table-simpleNotify")){BX("bx-messenger-settings-table-simpleNotify").innerHTML="";BX.adjust(BX("bx-messenger-settings-table-simpleNotify"),{children:[this.prepareSettingsTable("simpleNotify")]})}this.settingsTableConfig["simpleNotify"].rows=[];if(BX.MessengerCommon.isDesktop())this.desktop.autoResize()}),this)})};BX.IM.prototype.removeSimpleNotify=function(e){var t=e.parentNode.parentNode.parentNode;if(!e.parentNode.parentNode.nextSibling&&e.parentNode.parentNode.previousSibling.childNodes[0].className!="bx-messenger-settings-table-sep"){BX.remove(e.parentNode.parentNode)}else if(e.parentNode.parentNode.previousSibling&&e.parentNode.parentNode.previousSibling.childNodes[0].className!="bx-messenger-settings-table-sep"){BX.remove(e.parentNode.parentNode)}else if(e.parentNode.parentNode.nextSibling&&e.parentNode.parentNode.nextSibling.childNodes[0].className!="bx-messenger-settings-table-sep"){BX.remove(e.parentNode.parentNode)}else if(e.parentNode.parentNode.previousSibling.childNodes[0].className=="bx-messenger-settings-table-sep"&&!e.parentNode.parentNode.nextSibling){BX.remove(e.parentNode.parentNode.previousSibling);BX.remove(e.parentNode.parentNode)}else if(e.parentNode.parentNode.previousSibling.childNodes[0].className=="bx-messenger-settings-table-sep"&&e.parentNode.parentNode.nextSibling.childNodes[0].className=="bx-messenger-settings-table-sep"){BX.remove(e.parentNode.parentNode.previousSibling);BX.remove(e.parentNode.parentNode)}if(t.childNodes.length<=1)BX.remove(t);this.notify.blockNotifyType(e.getAttribute("data-settingName"));if(BX.MessengerCommon.isDesktop())this.desktop.autoResize()};BX.IM.prototype.openConfirm=function(e,t,s,i){if(this.popupConfirm!=null)this.popupConfirm.destroy();if(typeof e=="object")e='<div class="bx-messenger-confirm-title">'+e.title+"</div>"+e.message;s=s!==false;var n=t===false;if(typeof t=="undefined"||typeof t=="object"&&t.length<=0||t===false){t=[new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(e){this.popupWindow.close();BX.PreventDefault(e)}}})]}var a={targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),zIndex:BX.MessengerCommon.getDefaultZIndex()+1e3,autoHide:t===false,buttons:t,closeByEsc:t===false,overlay:s,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupConfirm=null}),this)},content:BX.create("div",{props:{className:t===false?" bx-messenger-confirm-without-buttons":"bx-messenger-confirm"},html:e})};if(BX.type.isPlainObject(i)){a=Object.assign(a,i)}this.popupConfirm=new BX.PopupWindow("bx-notifier-popup-confirm",null,a);BX.addClass(this.popupConfirm.popupContainer,"bx-messenger-mark");this.popupConfirm.show();BX.bind(this.popupConfirm.popupContainer,"click",BX.MessengerCommon.preventDefault);BX.bind(this.popupConfirm.contentContainer,"click",BX.PreventDefault);BX.bind(this.popupConfirm.overlay.element,"click",BX.PreventDefault);if(n===true){setTimeout(BX.delegate((function(){this.close()}),this.popupConfirm),2e3)}};BX.IM.prototype.setBackground=function(e){var t=null;var s=null;if(BX.MessengerCommon.isPage()){s=BX.MessengerWindow.contentBox}else{s=this.messenger.popupMessengerContent}var i=false;if(typeof e=="undefined"){e=this.settings.backgroundImage}else{if(e=="on"){e=true}else if(e=="off"){e=false}else if(this.colorsHex[e.toString().toUpperCase()]){e=this.colorsHex[e.toString().toUpperCase()]}else{var n={};for(var a in this.colors){n[this.colors[a].toUpperCase()]=a}if(n[e.toString().toUpperCase()]){var a=n[e.toString().toUpperCase()];if(this.colorsHex[a]){e=this.colorsHex[a]}}}i=this.settings.backgroundImage!=e}var o=e;if(BX.MessengerTheme.isDark()){o=false}if(o===false){BX.removeClass(s,"bx-messenger-image");BX.removeClass(s,"bx-messenger-image-link");BX.style(s,"background-image","");BX.style(s,"background-color","")}else if(o===true){BX.addClass(s,"bx-messenger-image");BX.removeClass(s,"bx-messenger-image-link");BX.style(s,"background-image","");BX.style(s,"background-color","")}else if(o.toString().length>0){BX.addClass(s,"bx-messenger-image");if(o.toString().substr(0,1)=="#"){BX.style(s,"background-color",o);BX.style(s,"background-image","")}else if(o.toString().substr(0,4)=="http"){BX.addClass(s,"bx-messenger-image-link");BX.style(s,"background-image","url("+o+")");BX.style(s,"background-color","")}else{return false}}else{return false}if(i&&this.init){this.saveSettings({backgroundImage:e})}};BX.IM.getSelectionText=function(){var e="";if(window.getSelection){e=window.getSelection().toString()}else{e=document.selection.createRange().text}return e};BX.IM.prototype.getLocalConfig=function(e,t){if(BX.MessengerCommon.isDesktop()){return BX.desktop.getLocalConfig(e,t)}t=typeof t=="undefined"?null:t;if(!BX.browser.SupportLocalStorage()){return t}if(BX.MessengerCommon.isPage()&&!BX.MessengerCommon.isDesktop())e="full-"+e;var s=BX.localStorage.get(e);if(s==null){return t}if(typeof s=="string"&&s.length>0){try{s=JSON.parse(s)}catch(e){s=t}}return s};BX.IM.prototype.setLocalConfig=function(e,t,s){if(BX.MessengerCommon.isDesktop()){return BX.desktop.setLocalConfig(e,t)}s=s||86400;if(typeof t=="object")t=JSON.stringify(t);else if(typeof t=="boolean")t=t?"true":"false";else if(typeof t=="undefined")t="";else if(typeof t!="string")t=t+"";if(!BX.browser.SupportLocalStorage())return false;if(BX.MessengerCommon.isPage()&&!BX.MessengerCommon.isDesktop())e="full-"+e;BX.localStorage.set(e,t,s);return true};BX.IM.prototype.removeLocalConfig=function(e){if(BX.MessengerCommon.isDesktop()){return BX.desktop.removeLocalConfig(e)}if(!BX.browser.SupportLocalStorage())return false;if(BX.MessengerCommon.isPage()&&!BX.MessengerCommon.isDesktop())e="full-"+e;BX.localStorage.remove(e);return true};BX.IM.prototype.checkDesktop=function(e,t){var s=typeof BXDesktopSystem!=="undefined"&&!BX.MessengerCommon.isDesktop()||this.settings.openDesktopFromPanel;if(!s){t();return}BX.desktopUtils.runningCheck(e,t)};BX.IM.prototype.storageSet=function(e){if(e.key=="mps"){this.stopSound()}else if(e.key=="mrss"){this.stopRepeatSound(e.value.sound,false)}}})();BX.IM.prototype.launchVueApplications=function(){if(!BX.Messenger.Embedding){this.errorMessage=BX.message("IM_M_OLD_REVISION");return false}this.initLeftPanelApp();if(!BX.MessengerCommon.isDesktop()){this.initSidebarApp()}};BX.IM.prototype.initLeftPanelApp=function(){if(this.leftPanelAppLaunched){return Promise.resolve()}var e={};if(BX.MessengerCommon.isDesktop()){e.preloadedList=this.newRecent;e.chatOptions=this.userChatOptions}return BX.Messenger.Embedding.Application.Launch("leftPanel",e).then(function(e){this.leftpanelApp=e;this.leftPanelAppLaunched=true}.bind(this))};BX.IM.prototype.initSidebarApp=function(){var e="#bx-im-external-recent-list";return BX.Messenger.Embedding.Application.Launch("sidebar",{node:e,preloadedList:this.newRecent,chatOptions:this.userChatOptions}).then((function(e){this.sidebarApp=e}))};(function(){if(BX.MessengerNotify)return;BX.MessengerNotify=function(e,t){this.BXIM=e;this.settings={};this.params=t||{};this.windowInnerSize={};this.windowScrollPos={};this.sendAjaxTry=0;this.muteModeCode=0;this.webrtc=t.webrtcClass;this.desktop=t.desktopClass;this.notifyCount=t.chatCounters?t.chatCounters.type.notify:0;this.notifyUpdateCount=t.chatCounters?t.chatCounters.type.notify:0;this.notify={};this.mailCount=t.chatCounters?t.chatCounters.type.mail:0;this.counters=t.counters;this.notifyAnswerBlock={};this.notifyAnswerText={};this.notifyHistoryPage=0;this.notifyHistoryLoad=false;this.notifyBody=null;this.notifyLoad=false;this.unreadNotify={};this.unreadNotifyLoad=true;this.flashNotify={};this.confirmDisabledButtons=false;if(t.domNode){this.panel=t.domNode;this.panelEnabled=true;BX.bind(this.panel,"click",BX.PreventDefault)}else{this.panel=BX.create("span",{props:{className:"bx-messenger-hide"}});this.panelEnabled=false}if(this.panelEnabled){if(BX.browser.IsDoctype())BX.addClass(this.panel,"bx-notifier-panel-doc");else BX.addClass(document.body,"bx-no-doctype");this.panelButtonCall=BX.findChildByClassName(this.panel,"bx-notifier-call");if(!this.webrtc.phoneEnabled||!this.webrtc.phoneCanPerformCalls){BX.style(this.panelButtonCall,"display","none")}this.panelButtonNetwork=BX.findChildByClassName(this.panel,"bx-notifier-network");if(this.panelButtonNetwork){this.panelButtonNetworkCount=BX.findChildByClassName(this.panelButtonNetwork,"bx-notifier-indicator-count");if(this.BXIM.bitrixNetwork){this.panelButtonNetwork.href="https://www.bitrix24.net/";this.panelButtonNetwork.setAttribute("target","_blank");if(this.panelButtonNetworkCount!=null)this.panelButtonNetworkCount.innerHTML=""}else{BX.style(this.panelButtonNetwork,"display","none");this.panelButtonNetworkCount.innerHTML=""}}this.panelButtonNotify=BX.findChildByClassName(this.panel,"bx-notifier-notify");if(this.panelButtonNotify){this.panelButtonNotifyCount=BX.findChildByClassName(this.panelButtonNotify,"bx-notifier-indicator-count");if(this.panelButtonNotifyCount)this.panelButtonNotifyCount.innerHTML=""}this.panelButtonMessage=BX.findChildByClassName(this.panel,"bx-notifier-message");if(this.panelButtonMessage){this.panelButtonMessageCount=BX.findChildByClassName(this.panelButtonMessage,"bx-notifier-indicator-count");if(this.panelButtonMessageCount)this.panelButtonMessageCount.innerHTML=""}this.panelButtonMail=BX.findChildByClassName(this.panel,"bx-notifier-mail");if(this.panelButtonMail){this.panelButtonMailCount=BX.findChildByClassName(this.panelButtonMail,"bx-notifier-indicator-count");if(this.panelButtonMailCount){this.panelButtonMail.href=this.BXIM.path.mail;this.panelButtonMail.setAttribute("target","_blank");if(this.panelButtonMailCount!=null)this.panelButtonMailCount.innerHTML=""}}this.panelDragLabel=BX.findChildByClassName(this.panel,"bx-notifier-drag");if(this.panelDragLabel){BX.bind(this.panelDragLabel,"mousedown",BX.delegate(this._startDrag,this));BX.bind(this.panelDragLabel,"dobleclick",BX.delegate(this._stopDrag,this))}}if(BX.browser.IsAndroid()||BX.browser.IsIOS())BX.addClass(document.body,"bx-im-mobile");this.messenger=null;this.messengerNotifyButton=null;this.messengerNotifyButtonCount=null;this.popupNotifyItem=null;this.popupNotifySize=387;this.popupNotifySizeMin=317;this.popupNotifyButtonFilter=null;this.popupNotifyButtonFilterBox=null;this.popupHistoryFilterVisible=false;this.popupNotifyMore=null;this.dragged=false;this.dragPageX=0;this.dragPageY=0;this.notificationApp=null;this.nextNotifications=true;if(this.BXIM.init){BX.Messenger.Application.Launch("notifications",{node:"#notifyNext",mode:"legacy",initCounter:this.notifyCount}).then(function(e){this.notificationApp=e}.bind(this));if(BX.MessengerCommon.isPage()){BX.MessengerWindow.addTab({id:"notify",title:BX.message("IM_NOTIFY_BUTTON_TITLE"),badge:this.notifyCount,order:115,target:"im",toggleEnable:false,events:{open:function(){this.openNotify(false,true)}.bind(this),close:function(){this.messenger.extraClose()}.bind(this)}})}this.panel.appendChild(this.BXIM.audio.reminder=BX.create("audio",{props:{className:"bx-notify-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/reminder.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/reminder.mp3",type:"audio/mpeg"}})]}));if(typeof this.BXIM.audio.reminder.play=="undefined"){this.BXIM.settings.enableSound=false}if(BX.browser.SupportLocalStorage()){BX.addCustomEvent(window,"onLocalStorageSet",BX.proxy(this.storageSet,this));var s=BX.localStorage.get("npp");this.BXIM.settings.panelPositionHorizontal=!!s?s.h:this.BXIM.settings.panelPositionHorizontal;this.BXIM.settings.panelPositionVertical=!!s?s.v:this.BXIM.settings.panelPositionVertical;var i=BX.localStorage.get("mfn");if(i){for(var n in this.flashNotify)if(this.flashNotify[n]!=i[n]&&i[n]==false)this.flashNotify[n]=false}}if(this.panelButtonNotify){BX.bind(this.panelButtonNotify,"click",BX.proxy((function(){this.toggleNotify()}),this.BXIM))}if(this.webrtc.phoneEnabled&&this.webrtc.phoneCanPerformCalls){if(this.panelButtonCall){BX.bind(this.panelButtonCall,"click",BX.delegate(this.webrtc.openKeyPad,this.webrtc))}BX.bind(window,"scroll",BX.delegate((function(){this.webrtc.closeKeyPad()}),this))}if(this.panelDragLabel){BX.bind(this.panelDragLabel,"mousedown",BX.proxy(this._startDrag,this));BX.bind(this.panelDragLabel,"dobleclick",BX.proxy(this._stopDrag,this))}this.updateNotifyMailCount();if(!BX.MessengerCommon.isPage()){this.adjustPosition({resize:true});BX.bind(window,"resize",BX.proxy((function(){this.closePopup();this.adjustPosition({resize:true})}),this));if(!BX.browser.IsDoctype())BX.bind(window,"scroll",BX.proxy((function(){this.adjustPosition({scroll:true})}),this))}setTimeout(BX.delegate((function(){this.updateNotifyCounters();this.updateNotifyCount()}),this),100)}BX.addCustomEvent(window,"onSonetLogCounterClear",BX.proxy((function(e){var t={};t[e]=0;this.updateNotifyCounters(t)}),this));if(this.desktop.ready()&&this.desktop.getApiVersion()>=58){this.muteModeCode=BXDesktopSystem.NotificationsMode();BX.desktop.addCustomEvent("BXNotificationsMode",function(e){this.muteModeCode=e}.bind(this))}};BX.MessengerNotify.prototype.getCounter=function(e){if(typeof e!="string")return false;e=e.toString();if(e=="im_notify")return this.notifyCount;if(e=="im_message")return this.BXIM.messageCount;return this.counters[e]?this.counters[e]:0};BX.MessengerNotify.prototype.updateNotifyCounters=function(e,t){t=t!=false;if(typeof e=="object"){for(var s in e)this.counters[s]=e[s]}BX.onCustomEvent(window,"onImUpdateCounter",[this.counters]);if(t)BX.localStorage.set("nuc",this.counters,5)};BX.MessengerNotify.prototype.updateNotifyMailCount=function(e,t){t=t!=false;if(typeof e!="undefined"||parseInt(e)>0)this.mailCount=parseInt(e);var s="";if(this.mailCount>99)s="99+";else if(this.mailCount>0)s=this.mailCount;if(this.panelButtonMail){if(this.mailCount>0)BX.removeClass(this.panelButtonMail,"bx-notifier-hide");else BX.addClass(this.panelButtonMail,"bx-notifier-hide");if(this.panelButtonMailCount!=null){this.panelButtonMailCount.innerHTML=s;this.adjustPosition({resize:true,timeout:500})}}BX.onCustomEvent(window,"onImUpdateCounterMail",[this.mailCount,"MAIL"]);if(t)BX.localStorage.set("numc",this.mailCount,5)};BX.MessengerNotify.prototype.updateNotifyCount=function(e){e=e!=false;var t=this.notifyCount;var s="";if(t>99)s="99+";else if(t>0)s=t;if(this.panelButtonNotifyCount){this.panelButtonNotifyCount.innerHTML=s;this.adjustPosition({resize:true,timeout:500})}if(this.messengerNotifyButtonCount)this.messengerNotifyButtonCount.innerHTML=this.notifyCount>0?'<span class="bx-messenger-cl-count-digit">'+s+"</span>":"";if(BX.MessengerCommon.isPage()){BX.MessengerWindow.setTabBadge("notify",t)}BX.onCustomEvent(window,"onImUpdateCounterNotify",[this.notifyCount,"NOTIFY"]);if(e){BX.localStorage.set("nunc2",{unread:this.unreadNotify,notifyCount:this.notifyCount},5)}};BX.MessengerNotify.prototype.updateNotifyNextCount=function(e,t){t=t!=false;var s="";if(e>99){s="99+"}else if(e>0){s=e}if(this.panelButtonNotifyCount){this.panelButtonNotifyCount.innerHTML=s;this.adjustPosition({resize:true,timeout:500})}if(this.messengerNotifyButtonCount){this.messengerNotifyButtonCount.innerHTML=parseInt(s)>0?'<span class="bx-messenger-cl-count-digit">'+s+"</span>":""}if(BX.MessengerCommon.isPage()){BX.MessengerWindow.setTabBadge("notify",e)}this.notifyCount=parseInt(e);BX.onCustomEvent(window,"onImUpdateCounterNotify",[this.notifyCount,"NOTIFY"]);if(t){BX.localStorage.set("nund",{notifyCount:this.notifyCount},5)}};BX.MessengerNotify.prototype.changeUnreadNotify=function(e,t,s){t=t!=false;var i=false;s=!!s;for(var n in e){if(!this.BXIM.xmppStatus&&this.BXIM.settings.status!="dnd")this.flashNotify[e[n]]=s;else this.flashNotify[e[n]]=false;this.unreadNotify[e[n]]=e[n];i=true}this.newNotify(t);for(var n in e){if(this.notify[e[n]].onlyFlash){delete this.notify[e[n]]}}};BX.MessengerNotify.prototype.viewNotify=function(e,t,s){if(parseInt(e)<=0)return false;t=t===false?false:true;s=s===false?false:true;var i=this.notify[e];if(i&&i.type!=1){if(t){delete this.unreadNotify[e]}else{this.unreadNotify[e]=e}}delete this.flashNotify[e];if(s){BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_VIEW&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:60,data:{IM_NOTIFY_VIEW:"Y",ID:parseInt(e),READ:t?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}if(this.BXIM.notifyOpen){var i=BX.findChildByClassName(document.body,"bx-notifier-item-"+e);if(t){BX.removeClass(i,"bx-notifier-item-new")}else{BX.addClass(i,"bx-notifier-item-new")}}this.updateNotifyCount(false);return true};BX.MessengerNotify.prototype.viewNotifyMarkupUpdate=function(){if(this.BXIM.notifyOpen){var e=BX.findChildrenByClassName(this.popupNotifyItem,"bx-notifier-item-new",false);if(e!=null){for(var t=0;t<e.length;t++){if(e[t].getAttribute("data-notifyType")==1){continue}if(!this.unreadNotify[e[t].getAttribute("data-notifyId")]){BX.removeClass(e[t],"bx-notifier-item-new")}}}for(var t in this.unreadNotify){var s=BX.findChildByClassName(this.popupNotifyItem,"bx-notifier-item-"+t,false);if(s!=null){BX.addClass(s,"bx-notifier-item-new")}}}};BX.MessengerNotify.prototype.viewNotifyAll=function(e){e=e!==false;if(this.BXIM.settings.notifyAutoRead){var t=null;for(var s in this.unreadNotify){if(this.notify[s]&&this.notify[s].type!=1){delete this.unreadNotify[s];if(t===null||t>s){t=s}}delete this.flashNotify[s]}if(!t){return false}if(e){BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_READ&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:60,data:{IM_NOTIFY_READ:"Y",ID:t,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}setTimeout(this.viewNotifyMarkupUpdate,500);this.updateNotifyCount(false)}else{for(var s in this.unreadNotify){delete this.flashNotify[s]}}return true};BX.MessengerNotify.prototype.newNotify=function(e){e=e!=false;var t=[];var s=[];var i=[];for(var n in this.flashNotify){if(this.flashNotify[n]===true){i.push(parseInt(n));this.flashNotify[n]=false}}var a={};i.sort(BX.delegate((function(e,t){if(!this.notify[e]||!this.notify[t]){return 0}var s=this.notify[e].date.getTime();var i=this.notify[t].date.getTime();var n=parseInt(this.notify[e].type);var a=parseInt(this.notify[t].type);if(n==1&&a!=1){return-1}else if(a==1&&n!=1){return 1}else if(i>s){return 1}else if(i<s){return-1}else{return 0}}),this));for(var n=0;n<i.length;n++){var o=BX.clone(this.notify[i[n]]);if(o&&o.userId&&o.userName)a[o.userId]=o.userName;o.text=o.text.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi,(function(e,t,s,i){return i}));o.text=o.text.split("&amp;quot;").join("&quot;");o.text=o.text.split("&amp;#039;").join("&#039;");o=this.createNotify(o,true);if(o!==false){t.push(o);o=this.notify[i[n]];var r=o.text;r=r.split("<br />").join("\n");r=r.replace(/\[USER=([0-9]{1,})\](.*?)\[\/USER\]/gi,(function(e,t,s){return s}));r=r.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi,(function(e,t,s,i){return i}));r=r.replace(/\[PCH=([0-9]{1,})\](.*?)\[\/PCH\]/gi,(function(e,t,s){return s}));r=r.replace(/\[SEND(?:=(.+?))?\](.+?)?\[\/SEND\]/gi,(function(e,t,s){return s?s:t}));r=r.replace(/\[PUT(?:=(.+?))?\](.+?)?\[\/PUT\]/gi,(function(e,t,s){return s?s:t}));r=r.replace(/\[CALL(?:=(.+?))?\](.+?)?\[\/CALL\]/gi,(function(e,t,s){return s?s:t}));r=r.replace(/\[ATTACH=([0-9]{1,})\]/gi,(function(e,t,s){return""}));s.push({title:o.userName?BX.util.htmlspecialcharsback(o.userName):BX.message("IM_NOTIFY_WINDOW_NEW_TITLE"),text:r.split("<br />").join("\n").replace(/<\/?[^>]+>/gi,""),icon:o.userAvatar?o.userAvatar:"",link:o.link||"",tag:"im-notify-"+o.tag})}}if(t.length>5){var l="";for(var n in a)l+=", <i>"+a[n]+"</i>";var o={id:0,type:4,date:new Date,tag:"",originalTag:"",title:BX.message("IM_NM_NOTIFY_1").replace("#COUNT#",t.length),text:l.length>0?BX.message("IM_NM_NOTIFY_2").replace("#USERS#",l.substr(2)):BX.message("IM_NM_NOTIFY_3")};o=this.createNotify(o,true);BX.style(o,"cursor","pointer");t=[o];s=[{id:"",title:BX.message("IM_NM_NOTIFY_1").replace("#COUNT#",t.length),text:l.length>0?BX.message("IM_NM_NOTIFY_2").replace("#USERS#",BX.util.htmlspecialcharsback(l.substr(2))).replace(/<\/?[^>]+>/gi,""):BX.message("IM_NM_NOTIFY_3")}]}if(t.length==0)return false;if(BX.MessengerCommon.isDesktop())BX.desktop.flashIcon(false);this.closePopup();if(this.BXIM.context=="LINES"||this.BXIM.context=="DIALOG"){return false}if(this.BXIM.settings.status=="dnd"||this.BXIM.notify.muteModeCode>0||BX.MessengerCalls.hasActiveSharing()||BX.MessengerCommon.isSlider()||!BX.MessengerCommon.isDesktop()&&this.BXIM.desktopStatus){return false}if(e&&!this.BXIM.xmppStatus)this.BXIM.playSound("reminder");if(e&&BX.MessengerCommon.isDesktop()&&!this.BXIM.callController.isFullScreen()){if(!document.hasFocus()&&BX.desktop.getLocalConfig("nativeNotify",false)&&BX.browser.IsMac()){for(var n=0;n<s.length;n++){var p=s[n].title;var h=s[n].text;var c="";if(s[n].icon){c=s[n].icon.toString().startsWith("http")?s[n].icon:location.origin+"/"+s[n].icon}if(BX.MessengerCommon.isBlankAvatar(c)){c=""}BXDesktopSystem.Notify(p,"",h,encodeURI(c))}}else{for(var n=0;n<t.length;n++){var u=t[n].getAttribute("data-notifyId");var d='var notify = BX.findChildByClassName(document.body, "bx-notifier-item");'+'BX.bind(BX.findChildByClassName(notify, "bx-notifier-item-delete"), "click", function(event){ if (this.getAttribute("data-notifyType") != 1) { BX.desktop.onCustomEvent("main", "bxImClickCloseNotify", [this.getAttribute("data-notifyId")]); } BX.desktop.windowCommand("close"); BX.MessengerCommon.preventDefault(event); });'+(t[n].id>0?"":'BX.bind(notify, "click", function(event){ BX.desktop.onCustomEvent("main", "bxImClickNotify", [this.getAttribute("data-notifyId"), this.getAttribute("data-link")]); BX.desktop.windowCommand("close"); BX.MessengerCommon.preventDefault(event); });')+'BX.bindDelegate(notify, "click", {className: "bx-notifier-item-button"}, BX.delegate(function(){ '+'BX.desktop.windowCommand("freeze");'+'notifyId = BX.proxy_context.getAttribute("data-id");'+"BXIM.notify.confirmRequest({"+'"notifyId": notifyId,'+'"notifyValue": BX.proxy_context.getAttribute("data-value"),'+'"notifyURL": BX.proxy_context.getAttribute("data-url"),'+'"notifyTag": BXIM.notify.notify[notifyId] && BXIM.notify.notify[notifyId].tag? BXIM.notify.notify[notifyId].tag: null,'+'"groupDelete": BX.proxy_context.getAttribute("data-group") == null? false: true,'+"}, true);"+'BX.desktop.onCustomEvent("main", "bxImClickConfirmNotify", [notifyId]); '+"}, BXIM.notify));"+'BX.bind(notify, "contextmenu", function(){ BX.desktop.windowCommand("close")});';this.desktop.openNewNotify(u,t[n],d)}}}else if(e&&!this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){for(var n=0;n<s.length;n++){var o=s[n];o.onshow=function(){var e=this;setTimeout((function(){e.close()}),5e3)};o.onclick=function(){window.focus();if(o.link){var e=BX.create("a",{attrs:{href:o.link,style:"display:none"}});document.body.appendChild(e);e.click()}else{top.BXIM.openNotify()}this.close()};this.BXIM.notifyManager.nativeNotify(o)}}else{if(this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){BX.localStorage.set("mnnb",true,1)}for(var n=0;n<t.length;n++){var m=this.notify[t[n].getAttribute("data-notifyId")]?this.notify[t[n].getAttribute("data-notifyId")]:null;this.BXIM.notifyManager.add({html:t[n],tag:m&&m.tag?"im-notify-"+m.tag:"",originalTag:m&&m.originalTag?m.originalTag:"",notifyId:t[n].getAttribute("data-notifyId"),notifyType:t[n].getAttribute("data-notifyType"),link:m&&m.link?m.link:"",click:t[n].id>0?null:BX.delegate((function(e){if(e.notifyParams.link){var t=BX.create("a",{attrs:{href:e.notifyParams.link,style:"display:none"}});document.body.appendChild(t);t.click()}else{this.BXIM.openNotify()}e.close()}),this),close:BX.delegate((function(e){if(e.notifyParams.notifyType!=1&&e.notifyParams.notifyId)this.viewNotify(e.notifyParams.notifyId)}),this)})}}return true};BX.MessengerNotify.prototype.confirmRequest=function(e,t){if(this.confirmDisabledButtons)return false;t=t==true;e.notifyOriginTag=this.notify[e.notifyId]?this.notify[e.notifyId].originalTag:"";if(BX.MessengerCommon.isMobile()){if(e.groupDelete&&e.notifyTag!=null){for(var s in this.notify){if(this.notify[s].tag==e.notifyTag)delete this.notify[s]}}else{delete this.notify[e.notifyId]}}this.updateNotifyCount();if(t&&BX.MessengerCommon.isDesktop())BX.desktop.windowCommand("freeze");else BX.hide(BX.proxy_context.parentNode.parentNode.parentNode);BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_CONFIRM&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_NOTIFY_CONFIRM:"Y",NOTIFY_ID:e.notifyId,NOTIFY_VALUE:e.notifyValue,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(s){if(e.notifyURL!=null){if(t&&BX.MessengerCommon.isDesktop())BX.desktop.browse(e.notifyURL);else location.href=e.notifyURL;this.confirmDisabledButtons=true}if(!BX.MessengerCommon.isMobile()&&this.notify[e.notifyId]&&s.MESSAGES){this.notify[e.notifyId].confirmMessages=s.MESSAGES}BX.onCustomEvent(window,"onImConfirmNotify",[{NOTIFY_ID:e.notifyId,NOTIFY_TAG:e.notifyOriginTag,NOTIFY_VALUE:e.notifyValue,NOTIFY_MESSAGES:s.MESSAGES}]);if(t&&BX.MessengerCommon.isDesktop())BX.desktop.windowCommand("close")}),this),onfailure:BX.delegate((function(){if(t&&BX.MessengerCommon.isDesktop())BX.desktop.windowCommand("close")}),this)});if(e.groupDelete)BX.localStorage.set("nrgn",e.notifyTag,5);else BX.localStorage.set("nrn",e.notifyId,5);return false};BX.MessengerNotify.prototype.drawNotify=function(e,t){t=t==true;var s=typeof e=="object"?e:BX.clone(this.notify);var i={};var n={};var a=[];var o=[];for(var r in s){if(!s.hasOwnProperty(r)){continue}o.push(parseInt(r))}o.sort((function(e,t){if(!s[e]||!s[t]){return 0}var i=s[e].date.getTime();var n=s[t].date.getTime();var a=typeof s[e].confirmMessages=="undefined"?parseInt(s[e].type):2;var o=typeof s[t].confirmMessages=="undefined"?parseInt(s[t].type):2;if(a==1&&o!=1){return-1}else if(o==1&&a!=1){return 1}else if(n>i){return 1}else if(n<i){return-1}else{return 0}}));for(var r=0;r<o.length;r++){var l=s[o[r]];if(!l){continue}if(l.params.hasOwnProperty("USERS")&&l.params.USERS.length>0){l.otherCount=l.params.USERS.length;if(l.type==2){l.type=3}}l=this.createNotify(l);if(l!==false)a.push(l)}if(a.length==0){if(this.messenger.popupMessengerConnectionStatusState!="online"){a.push(BX.create("div",{attrs:{style:"padding-top: 231px; margin-bottom: 45px;"},props:{className:"bx-messenger-box-empty bx-notifier-content-empty",id:"bx-notifier-content-empty"},html:BX.message("IM_NOTIFY_ERROR")}));a.push(BX.create("a",{attrs:{href:"#notifyHistory",id:"bx-notifier-content-link-history"},props:{className:"bx-notifier-content-link-history bx-notifier-content-link-history-empty"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_NOTIFY_HISTORY_2")})]}));this.notifyLoad=false}else if(this.BXIM.settings.loadLastNotify&&!this.notifyLoad||this.unreadNotifyLoad){a.push(BX.create("div",{attrs:{style:"padding-top: 162px;"},props:{className:"bx-notifier-content-load",id:"bx-notifier-content-load"},children:[BX.create("div",{props:{className:"bx-notifier-content-load-block bx-notifier-item"},children:[BX.create("span",{props:{className:"bx-notifier-content-load-block-img"}}),BX.create("span",{props:{className:"bx-notifier-content-load-block-text"},html:BX.message("IM_NOTIFY_LOAD_NOTIFY")+"..."})]})]}))}else if(!t&&!this.BXIM.settings.loadLastNotify){a.push(BX.create("div",{attrs:{style:"padding-top: 231px; margin-bottom: 45px;"},props:{className:"bx-messenger-box-empty bx-notifier-content-empty",id:"bx-notifier-content-empty"},html:BX.message("IM_NOTIFY_EMPTY_2")}));a.push(BX.create("a",{attrs:{href:"#notifyHistory",id:"bx-notifier-content-link-history"},props:{className:"bx-notifier-content-link-history bx-notifier-content-link-history-empty"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_NOTIFY_HISTORY")})]}))}else if(!t){a.push(BX.create("div",{attrs:{style:"padding-top: 231px; margin-bottom: 45px;"},props:{className:"bx-messenger-box-empty bx-notifier-content-empty",id:"bx-notifier-content-empty"},html:BX.message("IM_NOTIFY_EMPTY_3")}));a.push(BX.create("a",{attrs:{href:"#notifyHistory",id:"bx-notifier-content-link-history"},props:{className:"bx-notifier-content-link-history bx-notifier-content-link-history-empty"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_NOTIFY_HISTORY_LATE")})]}))}if(this.BXIM.settings.loadLastNotify)return a}else if(!t){a.push(BX.create("a",{attrs:{href:"#notifyHistory",id:"bx-notifier-content-link-history"},props:{className:"bx-notifier-content-link-history bx-notifier-content-link-history-empty"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_NOTIFY_HISTORY_LATE")})]}))}return a};BX.MessengerNotify.prototype.openNotify=function(e,t){if(this.nextNotifications){return this.openNotifyNext(e,t)}e=e==true;t=t==true;if(!this.messenger){return false}if(this.messenger.popupMessenger==null){this.messenger.openMessenger(false)}if(BX.MessengerCommon.isPopupPage()&&!BX.MessengerSlider.isFocus()&&!this.BXIM.notifyOpen){BX.MessengerSlider.open().then(function(){this.openNotify(e,t);this.BXIM.desktop.adjustSize();setTimeout((function(){BX.MessengerSlider.getCurrent().closeLoader()}),50)}.bind(this));return true}if(BX.MessengerCommon.isPage()){BX.MessengerWindow.changeTab("notify",true,true)}if(this.BXIM.notifyOpen&&!t){if(!e){this.messenger.extraClose(true);return false}}else{this.BXIM.dialogOpen=false;this.BXIM.notifyOpen=true;if(!BX.MessengerCommon.isPage()){this.messengerNotifyButton.className="bx-messenger-cl-notify-button bx-messenger-cl-notify-button-active"}}this.messenger.closeMenuPopup();var s=this.drawNotify();this.notifyBody=BX.create("div",{props:{className:"bx-notifier-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-panel"},children:[BX.create("span",{props:{className:"bx-messenger-panel-avatar bx-messenger-avatar-notify"}}),BX.create("span",{props:{className:"bx-messenger-panel-title bx-messenger-panel-title-middle"},html:BX.message("IM_NOTIFY_WINDOW_TITLE")})]}),this.popupNotifyButtonFilterBox=BX.create("div",{props:{className:"bx-messenger-panel-filter-box"},style:{display:"none"},children:[BX.create("div",{props:{className:"bx-messenger-filter-name"},html:BX.message("IM_PANEL_FILTER_NAME")}),this.popupHistorySearchDateWrap=BX.create("div",{props:{className:"bx-messenger-filter-date bx-messenger-input-wrap bx-messenger-filter-date-notify"},html:'<span class="bx-messenger-input-date"></span><a class="bx-messenger-input-close" href="#close"></a><input type="text" class="bx-messenger-input" value="" tabindex="1002" placeholder="'+BX.message("IM_PANEL_FILTER_DATE")+'" />'})]}),this.popupNotifyItem=BX.create("div",{props:{className:"bx-notifier-item-wrap"},style:{height:this.popupNotifySize+"px"},children:s})]});this.messenger.extraOpen(this.notifyBody);if(this.unreadNotifyLoad)this.loadNotify();else if(!this.notifyLoad&&this.BXIM.settings.loadLastNotify)this.notifyHistory();if(!e&&this.BXIM.isFocus("notify")&&this.notifyUpdateCount>0)this.viewNotifyAll();BX.bind(this.popupNotifyItem,"scroll",BX.delegate((function(){if(this.messenger.popupPopupMenu!=null){if(BX.util.in_array(this.messenger.popupPopupMenu.uniquePopupId.replace("bx-messenger-popup-",""),["copypaste","copylink","notifyDelete","notify","external-data"])){this.messenger.popupPopupMenu.close()}}}),this));BX.bind(BX("bx-notifier-content-link-history"),"click",BX.delegate(this.notifyHistory,this));BX.bind(this.popupNotifyItem,"click",BX.delegate(this.closePopup,this));BX.bind(this.notifyBody,"click",BX.delegate((function(e){BX.MessengerCommon.contactListSearchClear(e)}),BX.MessengerCommon));BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-messenger-ajax"},BX.delegate((function(){if(BX.proxy_context.getAttribute("data-entity")=="user"){this.messenger.openPopupExternalData(BX.proxy_context,"user",true,{ID:BX.proxy_context.getAttribute("data-userId")})}else if(BX.proxy_context.getAttribute("data-entity")=="chat"){this.messenger.openPopupExternalData(BX.proxy_context,"chat",true,{ID:BX.proxy_context.getAttribute("data-chatId")})}else if(BX.proxy_context.getAttribute("data-entity")=="openlines"){this.messenger.linesOpenHistory(BX.proxy_context.getAttribute("data-sessionId"))}else if(BX.proxy_context.getAttribute("data-entity")=="network"){this.messenger.openMessenger("network"+BX.proxy_context.getAttribute("data-networkId"))}else if(BX.proxy_context.getAttribute("data-entity")=="date"){this.messenger.openPopupMenu(BX.proxy_context,"shareMenu")}}),this));BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-notifier-item-help"},BX.proxy((function(e){if(this.popupNotifyMore!=null)this.popupNotifyMore.destroy();else{var t=this.notify[BX.proxy_context.getAttribute("data-help")];if(!Array.isArray(t.params.USERS)||t.params.USERS.length<=0){return false}var s=false;for(var i=0;i<t.params.USERS.length;i++){if(BXIM.messenger.users[t.params.USERS[i]]===undefined){s=true;break}}if(s){var n=BX.create("div",{props:{className:"bx-messenger-popup-menu"},children:[BX.create("div",{style:{display:"flex","align-items":"center","justify-content":"center",height:t.params.USERS.length*30+"px","min-width":"180px"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img-old"}})]})]});BX.rest.callMethod("im.user.list.get",{ID:t.params.USERS}).then(function(e){var s=e.data();for(var i in s){if(typeof BXIM.messenger.users[s[i]]==="undefined"){s[i].name=BX.util.htmlspecialchars(s[i].name);s[i].first_name=BX.util.htmlspecialchars(s[i].first_name);s[i].last_name=BX.util.htmlspecialchars(s[i].last_name);s[i].work_position=BX.util.htmlspecialchars(s[i].work_position);s[i].external_auth_id=BX.util.htmlspecialchars(s[i].external_auth_id);s[i].status=BX.util.htmlspecialchars(s[i].status);s[i].absent=s[i].absent?new Date(s[i].absent):false;s[i].idle=s[i].idle?new Date(s[i].idle):false;s[i].last_activity_date=s[i].last_activity_date?new Date(s[i].last_activity_date):false;s[i].mobile_last_date=s[i].mobile_last_date?new Date(s[i].mobile_last_date):false;BXIM.messenger.users[i]=s[i]}}htmlElement=this.buildMoreUsersNotifyPopup(t.params.USERS);n=BX.create("div",{props:{className:"bx-messenger-popup-menu"},html:htmlElement});this.popupNotifyMore.setContent(htmlElement)}.bind(this))}else{htmlElement=this.buildMoreUsersNotifyPopup(t.params.USERS);var n=BX.create("div",{props:{className:"bx-messenger-popup-menu"},html:htmlElement})}this.popupNotifyMore=new BX.PopupWindow("bx-notifier-other-window",BX.proxy_context,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),zIndex:BX.MessengerCommon.getDefaultZIndex()+200,lightShadow:true,offsetTop:-2,offsetLeft:3,autoHide:true,closeByEsc:true,bindOptions:{position:"top"},events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.proxy((function(){this.popupNotifyMore=null}),this)},content:n});if(!BX.MessengerTheme.isDark())this.popupNotifyMore.setAngle({});BX.addClass(this.popupNotifyMore.popupContainer,"bx-messenger-mark");this.popupNotifyMore.show();BX.bind(this.popupNotifyMore.popupContainer,"click",BX.MessengerCommon.preventDefault)}return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-notifier-answer-reply"},BX.proxy((function(e){if(!BX.proxy_context)return;if(!this.toggleNotifyAnswer(BX.proxy_context.parentNode))return true;return BX.PreventDefault(e)}),this));var i=BX.findChildByClassName(this.popupNotifyItem,"bx-notifier-answer-box-open");if(i){var n=i.firstChild.nextSibling.firstChild;n.focus();n.selectionStart=n.value.length+1;n.selectionEnd=n.value.length+1}BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-notifier-answer-button"},BX.proxy((function(e){if(!BX.proxy_context)return;this.sendNotifyAnswer(BX.proxy_context.parentNode);return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-notifier-item-delete"},BX.proxy((function(e){if(!BX.proxy_context)return;BX.proxy_context.setAttribute("id","bx-notifier-item-delete-"+BX.proxy_context.getAttribute("data-notifyId"));this.deleteNotify(BX.proxy_context.getAttribute("data-notifyId"));return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-notifier-item-button-confirm"},BX.proxy((function(e){if(this.messenger.popupMessengerConnectionStatusState!="online")return false;var t=BX.proxy_context.getAttribute("data-id");this.confirmRequest({notifyId:t,notifyValue:BX.proxy_context.getAttribute("data-value"),notifyURL:BX.proxy_context.getAttribute("data-url"),notifyTag:this.notify[t]&&this.notify[t].tag?this.notify[t].tag:null,groupDelete:BX.proxy_context.getAttribute("data-group")!=null});this.openNotify(true);if(BX.MessengerCommon.isMobile()){if(BX.proxy_context.parentNode.parentNode.parentNode.previousSibling==null&&BX.proxy_context.parentNode.parentNode.parentNode.nextSibling==null)this.openNotify(true);else if(BX.proxy_context.parentNode.parentNode.parentNode.previousSibling==null&&BX.proxy_context.parentNode.parentNode.parentNode.nextSibling.tagName.toUpperCase()=="A")this.openNotify(true);else BX.remove(BX.proxy_context.parentNode.parentNode.parentNode)}return BX.PreventDefault(e)}),this));if(BX.MessengerCommon.isDesktop()){BX.bindDelegate(this.popupNotifyItem,"contextmenu",{className:"bx-notifier-item-content"},BX.delegate((function(e){if(!BX.proxy_context)return;BX.proxy_context.parentNode.setAttribute("id","bx-notifier-item-delete-"+BX.proxy_context.parentNode.getAttribute("data-notifyId"));this.messenger.openPopupMenu(e,"notify",false);return BX.PreventDefault(e)}),this))}else{BX.bindDelegate(this.popupNotifyItem,"contextmenu",{className:"bx-notifier-item-delete"},BX.proxy((function(e){if(!BX.proxy_context)return;BX.proxy_context.setAttribute("id","bx-notifier-item-delete-"+BX.proxy_context.getAttribute("data-notifyId"));this.messenger.openPopupMenu(BX.proxy_context,"notifyDelete");return BX.PreventDefault(e)}),this))}BX.bindDelegate(this.popupNotifyItem,"dblclick",{className:"bx-notifier-item"},BX.delegate((function(e){if(!BX.proxy_context)return;var t=BX.proxy_context.getAttribute("data-notifyId");if(this.unreadNotify[t]){this.viewNotify(t,true)}else{this.viewNotify(t,false)}return BX.PreventDefault(e)}),this));if(false&&!this.BXIM.settings.notifyAutoRead){BX.bindDelegate(this.popupNotifyItem,"click",{className:"bx-notifier-item-text-link"},BX.delegate((function(e){var t=BX.proxy_context.parentNode.parentNode.parentNode.getAttribute("data-notifyId");if(this.unreadNotify[t]){this.viewNotify(t,true)}}),this))}return false};BX.MessengerNotify.prototype.openNotifyNext=function(e,t){if(!this.nextNotifications){return this.openNotify(e,t)}if(this.notificationApp&&this.notificationApp.hasVueInstance()){this.notificationApp.destroyVueInstance()}this.messenger.extraOpen(BX.create("div",{attrs:{id:"notifyNext"}}));this.BXIM.notifyOpen=true;this.openNotifyWait();var s=this};BX.MessengerNotify.prototype.openNotifyWait=function(){if(!BX("notifyNext")||!this.notificationApp){setTimeout(function(){this.openNotifyWait()}.bind(this),50);return false}if(!this.BXIM.notifyOpen){return false}this.notificationApp.initComponent();return true};BX.MessengerNotify.prototype.deleteNotify=function(e){var t=BX("bx-notifier-item-delete-"+e);var s=false;if(this.notify[e]){s=true;var i=null;if(this.notify[e].tag){i=this.notify[e].tag}if(this.notify[e].type==1){s=false}var n=!(!t||t.getAttribute("data-group")==null||i==null);if(n){for(var a in this.notify){if(this.notify[a].tag==i)delete this.notify[a]}}else{delete this.notify[e]}}this.updateNotifyCount();if(s){this.skipMassDelete=true;var o={};if(n)o={IM_NOTIFY_GROUP_REMOVE:"Y",NOTIFY_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()};else o={IM_NOTIFY_REMOVE:"Y",NOTIFY_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()};BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_REMOVE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:o,onsuccess:BX.delegate((function(e){setTimeout(BX.delegate((function(){this.skipMassDelete=false}),this),2e3)}),this)});if(n)BX.localStorage.set("nrgn",i,5);else BX.localStorage.set("nrn",e,5)}if(t.parentNode.parentNode.previousSibling==null&&t.parentNode.parentNode.nextSibling==null){this.openNotify(true)}else if(t.parentNode.parentNode.previousSibling==null&&t.parentNode.parentNode.nextSibling.tagName.toUpperCase()=="A"){this.notifyLoad=false;this.notifyHistoryPage=0;this.openNotify(true)}else{BX.remove(t.parentNode.parentNode)}return true};BX.MessengerNotify.prototype.blockNotifyType=function(e){var t=typeof this.BXIM.settingsNotifyBlocked[e]=="undefined";BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_BLOCK_TYPE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_NOTIFY_BLOCK_TYPE:"Y",BLOCK_TYPE:e,BLOCK_RESULT:t?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}});if(t){this.BXIM.settingsNotifyBlocked[e]=true;this.BXIM.settings["site|".settingName]=false;this.BXIM.settings["xmpp|".settingName]=false;this.BXIM.settings["email|".settingName]=false}else{delete this.BXIM.settingsNotifyBlocked[e];this.BXIM.settings["site|".settingName]=true;this.BXIM.settings["xmpp|".settingName]=true;this.BXIM.settings["email|".settingName]=true}return true};BX.MessengerNotify.prototype.closeNotify=function(){if(!BX.MessengerCommon.isPage()){this.messengerNotifyButton.className="bx-messenger-cl-notify-button"}if(this.notify.notificationApp&&this.notify.notificationApp.hasVueInstance()){this.notify.notificationApp.destroyVueInstance()}this.BXIM.notifyOpen=false;this.popupNotifyItem=null;BX.unbindAll(this.popupNotifyButtonFilter);BX.unbindAll(this.popupNotifyItem)};BX.MessengerNotify.prototype.loadNotify=function(e){if(this.loadNotityBlock)return false;e=e!=false;this.loadNotityBlock=true;BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_LOAD&V="+this.BXIM.revision,method:"POST",dataType:"json",lsId:"IM_NOTIFY_LOAD",lsTimeout:5,timeout:30,data:{IM_NOTIFY_LOAD:"Y",IM_AUTO_READ:this.BXIM.settings.notifyAutoRead?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(t){this.loadNotityBlock=false;this.unreadNotifyLoad=false;this.notifyLoad=true;var s={};if(typeof t.NOTIFY=="object"){for(var i in t.UNREAD_NOTIFY){this.unreadNotify[i]=i}for(var i in t.NOTIFY){t.NOTIFY[i].date=new Date(t.NOTIFY[i].date);s[i]=this.notify[i]=t.NOTIFY[i];this.BXIM.lastRecordId=parseInt(i)>this.BXIM.lastRecordId?parseInt(i):this.BXIM.lastRecordId}}if(e){this.openNotify(true);if(this.BXIM.settings.loadLastNotify)this.notifyHistory();BX.localStorage.set("nln",true,5)}this.updateNotifyCount()}),this),onfailure:BX.delegate((function(){this.loadNotityBlock=false}),this)})};BX.MessengerNotify.prototype.notifyHistory=function(e){e=e||window.event;if(this.notifyHistoryLoad)return false;if(this.messenger&&this.messenger.popupMessengerConnectionStatusState!="online")return false;if(BX("bx-notifier-content-link-history")){BX("bx-notifier-content-link-history").innerHTML='<span class="bx-notifier-item-button bx-notifier-item-button-white">'+BX.message("IM_NOTIFY_LOAD_NOTIFY")+"..."+"</span>"}this.notifyHistoryLoad=true;BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_HISTORY_LOAD_MORE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_NOTIFY_HISTORY_LOAD_MORE:"Y",PAGE:!this.BXIM.settings.loadLastNotify&&this.notifyHistoryPage==0?1:this.notifyHistoryPage,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e&&e.BITRIX_SESSID){BX.message({bitrix_sessid:e.BITRIX_SESSID})}if(e.ERROR==""){this.notifyLoad=true;BX.remove(BX("bx-notifier-content-load"));this.sendAjaxTry=0;var t={};var s=0;if(typeof e.NOTIFY=="object"){for(var i in e.NOTIFY){e.NOTIFY[i].date=new Date(e.NOTIFY[i].date);if(!this.notify[i])t[i]=e.NOTIFY[i];if(!this.notify[i]){this.notify[i]=BX.clone(e.NOTIFY[i])}s++}}if(this.popupNotifyItem){if(BX("bx-notifier-content-link-history"))BX.remove(BX("bx-notifier-content-link-history"));if(s>0){if(BX("bx-notifier-content-empty"))BX.remove(BX("bx-notifier-content-empty"));var t=this.drawNotify(t,true);for(var i=0;i<t.length;i++){this.popupNotifyItem.appendChild(t[i])}if(s<20&&this.notifyHistoryPage>0){BX.remove(BX("bx-notifier-content-link-history"))}else{this.popupNotifyItem.appendChild(BX.create("a",{attrs:{href:"#notifyHistory",id:"bx-notifier-content-link-history"},events:{click:BX.delegate(this.notifyHistory,this)},props:{className:"bx-notifier-content-link-history"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_NOTIFY_HISTORY_LATE")})]}));if(s>=20&&this.notifyHistoryPage==0)this.notifyHistoryPage=1}}else if(s<=0&&this.notifyHistoryPage==0){if(BX("bx-notifier-content-link-history"))BX.remove(BX("bx-notifier-content-link-history"));this.popupNotifyItem.innerHTML="";this.popupNotifyItem.appendChild(BX.create("div",{attrs:{style:"padding-top: 210px; margin-bottom: 20px;"},props:{className:"bx-messenger-box-empty bx-notifier-content-empty",id:"bx-notifier-content-empty"},html:BX.message("IM_NOTIFY_EMPTY_3")}));this.popupNotifyItem.appendChild(BX.create("a",{attrs:{href:"#notifyHistory",id:"bx-notifier-content-link-history"},events:{click:BX.delegate(this.notifyHistory,this)},props:{className:"bx-notifier-content-link-history bx-notifier-content-link-history-empty"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_NOTIFY_HISTORY_LATE")})]}))}else{if(this.popupNotifyItem.innerHTML==""){this.popupNotifyItem.appendChild(BX.create("div",{attrs:{style:"padding-top: 210px; margin-bottom: 20px;"},props:{className:"bx-messenger-box-empty bx-notifier-content-empty",id:"bx-notifier-content-empty"},html:BX.message("IM_NOTIFY_EMPTY_3")}))}}}this.notifyHistoryLoad=false;this.notifyHistoryPage++}else{if(e.ERROR=="SESSION_ERROR"&&this.sendAjaxTry<2){this.sendAjaxTry++;BX.message({bitrix_sessid:e.BITRIX_SESSID});setTimeout(BX.delegate((function(){this.notifyHistoryLoad=false;this.notifyHistory()}),this),2e3);BX.onCustomEvent(window,"onImError",[e.ERROR,e.BITRIX_SESSID])}else if(e.ERROR=="AUTHORIZE_ERROR"){this.sendAjaxTry++;if(BX.MessengerCommon.isDesktop()){setTimeout(BX.delegate((function(){this.notifyHistoryLoad=false;this.notifyHistory()}),this),1e4)}BX.onCustomEvent(window,"onImError",[e.ERROR])}}}),this),onfailure:BX.delegate((function(){this.notifyHistoryLoad=false;this.sendAjaxTry=0}),this)});if(e)return BX.PreventDefault(e);else return true};BX.MessengerNotify.prototype.adjustPosition=function(e){if(BX.MessengerCommon.isDesktop())return false;e=e||{};e.timeout=typeof e.timeout=="number"?parseInt(e.timeout):0;clearTimeout(this.adjustPositionTimeout);this.adjustPositionTimeout=setTimeout(BX.delegate((function(){e.scroll=e.scroll||!BX.browser.IsDoctype();e.resize=e.resize||false;if(!this.windowScrollPos.scrollLeft)this.windowScrollPos={scrollLeft:0,scrollTop:0};if(e.scroll)this.windowScrollPos=BX.GetWindowScrollPos();if(e.resize||!this.windowInnerSize.innerWidth){this.windowInnerSize=BX.GetWindowInnerSize();if(this.BXIM.settings.panelPositionVertical=="bottom"&&typeof window.scroll=="function"&&!(BX.browser.IsAndroid()||BX.browser.IsIOS())){if(typeof window.scrollX!="undefined"&&typeof window.scrollY!="undefined"){var t=window.scrollX;window.scroll(1,window.scrollY);this.windowInnerSize.innerHeight+=window.scrollX==1?-16:0;window.scroll(t,window.scrollY)}else{var s=document.documentElement.scrollLeft?document.documentElement.scrollLeft:document.body.scrollLeft;var i=document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop;var t=s;window.scroll(1,i);s=document.documentElement.scrollLeft?document.documentElement.scrollLeft:document.body.scrollLeft;this.windowInnerSize.innerHeight+=s==1?-16:0;window.scroll(t,i)}}}if(e.scroll||e.resize){if(this.BXIM.settings.panelPositionHorizontal=="left")this.panel.style.left=this.windowScrollPos.scrollLeft+25+"px";else if(this.BXIM.settings.panelPositionHorizontal=="center")this.panel.style.left=(this.windowScrollPos.scrollLeft+this.windowInnerSize.innerWidth-this.panel.offsetWidth)/2+"px";else if(this.BXIM.settings.panelPositionHorizontal=="right")this.panel.style.left=this.windowScrollPos.scrollLeft+this.windowInnerSize.innerWidth-this.panel.offsetWidth-35+"px";if(this.BXIM.settings.panelPositionVertical=="top"){this.panel.style.top=this.windowScrollPos.scrollTop+"px";if(BX.hasClass(this.panel,"bx-notifier-panel-doc"))this.panel.className="bx-notifier-panel bx-notifier-panel-top bx-notifier-panel-doc";else this.panel.className="bx-notifier-panel bx-notifier-panel-top"}else if(this.BXIM.settings.panelPositionVertical=="bottom"){if(BX.hasClass(this.panel,"bx-notifier-panel-doc"))this.panel.className="bx-notifier-panel bx-notifier-panel-bottom bx-notifier-panel-doc";else this.panel.className="bx-notifier-panel bx-notifier-panel-bottom";this.panel.style.top=this.windowScrollPos.scrollTop+this.windowInnerSize.innerHeight-this.panel.offsetHeight+"px"}}}),this),e.timeout)};BX.MessengerNotify.prototype.move=function(e,t){var s=parseInt(this.panel.style.left)+e;var i=parseInt(this.panel.style.top)+t;if(s<0)s=0;var n=BX.GetWindowScrollSize();var a=this.panel.offsetWidth;var o=this.panel.offsetHeight;if(s>n.scrollWidth-a)s=n.scrollWidth-a;if(i>n.scrollHeight-o)i=n.scrollHeight-o;if(i<0)i=0;this.panel.style.left=s+"px";this.panel.style.top=i+"px"};BX.MessengerNotify.prototype._startDrag=function(e){e=e||window.event;BX.fixEventPageXY(e);this.dragPageX=e.pageX;this.dragPageY=e.pageY;this.dragged=false;this.closePopup();BX.bind(document,"mousemove",BX.proxy(this._moveDrag,this));BX.bind(document,"mouseup",BX.proxy(this._stopDrag,this));if(document.body.setCapture)document.body.setCapture();document.body.ondrag=BX.False;document.body.onselectstart=BX.False;document.body.style.cursor="move";document.body.style.MozUserSelect="none";this.panel.style.MozUserSelect="none";BX.addClass(this.panel,"bx-notifier-panel-drag-"+(this.BXIM.settings.panelPositionVertical=="top"?"top":"bottom"));return BX.PreventDefault(e)};BX.MessengerNotify.prototype._moveDrag=function(e){e=e||window.event;BX.fixEventPageXY(e);if(this.dragPageX==e.pageX&&this.dragPageY==e.pageY)return;this.move(e.pageX-this.dragPageX,e.pageY-this.dragPageY);this.dragPageX=e.pageX;this.dragPageY=e.pageY;if(!this.dragged){BX.onCustomEvent(this,"onPopupDragStart");this.dragged=true}BX.onCustomEvent(this,"onPopupDrag")};BX.MessengerNotify.prototype._stopDrag=function(e){if(document.body.releaseCapture)document.body.releaseCapture();BX.unbind(document,"mousemove",BX.proxy(this._moveDrag,this));BX.unbind(document,"mouseup",BX.proxy(this._stopDrag,this));document.body.ondrag=null;document.body.onselectstart=null;document.body.style.cursor="";document.body.style.MozUserSelect="";this.panel.style.MozUserSelect="";BX.removeClass(this.panel,"bx-notifier-panel-drag-"+(this.BXIM.settings.panelPositionVertical=="top"?"top":"bottom"));BX.onCustomEvent(this,"onPopupDragEnd");var t=BX.GetWindowScrollPos();this.BXIM.settings.panelPositionVertical=this.windowInnerSize.innerHeight/2>(e.pageY-t.scrollTop||e.y)?"top":"bottom";if(this.windowInnerSize.innerWidth/3>(e.pageX-t.scrollLeft||e.x))this.BXIM.settings.panelPositionHorizontal="left";else if(this.windowInnerSize.innerWidth/3*2<(e.pageX-t.scrollLeft||e.x))this.BXIM.settings.panelPositionHorizontal="right";else this.BXIM.settings.panelPositionHorizontal="center";this.BXIM.saveSettings({panelPositionVertical:this.BXIM.settings.panelPositionVertical,panelPositionHorizontal:this.BXIM.settings.panelPositionHorizontal});BX.localStorage.set("npp",{v:this.BXIM.settings.panelPositionVertical,h:this.BXIM.settings.panelPositionHorizontal});this.adjustPosition({resize:true});this.dragged=false;return BX.PreventDefault(e)};BX.MessengerNotify.prototype.closePopup=function(){if(this.popupNotifyMore!=null)this.popupNotifyMore.destroy();if(this.messenger!=null&&this.messenger.popupPopupMenu!=null)this.messenger.popupPopupMenu.destroy()};BX.MessengerNotify.prototype.createNotify=function(e,t){var s=false;if(!e)return false;t=t==true;if(BX.MessengerCommon.isDesktop()||this.BXIM.context=="FULLSCREEN"||this.BXIM.context=="PAGE"){e.text=e.text.replace(/<a(.*?)>(.*?)<\/a>/gi,BX.delegate((function(e,t,s){return"<a"+t.replace('target="_self"','target="_blank"')+' class="bx-notifier-item-text-link">'+s+"</a>"}),this))}else if(t&&typeof BX.SidePanel!=="undefined"){e.text=e.text.replace(/<a(.*?)>(.*?)<\/a>/gi,BX.delegate((function(e,t,s){return"<a "+t+' class="bx-notifier-item-text-link" data-slider-ignore-autobinding="true">'+s+"</a>"}),this))}var i=this.unreadNotify[e.id]&&!t?" bx-notifier-item-new":"";e.userAvatar=e.userAvatar?e.userAvatar:this.BXIM.pathToBlankImage;var n=e.params&&e.params.ATTACH?BX.MessengerCommon.drawAttach(0,0,e.params.ATTACH):[];if(n.length>0){n=BX.create("div",{props:{className:"bx-messenger-attach-box"},children:n})}else{n=null}if(e.type==1&&typeof e.buttons!="undefined"&&e.buttons.length>0){var a=[];var o=false;if(typeof e.confirmMessages!="undefined"){o=true;for(var r=0;r<e.confirmMessages.length;r++){a.push(BX.create("div",{props:{className:"bx-notifier-item-confirm-message"},html:e.confirmMessages[r]}))}}else{for(var r=0;r<e.buttons.length;r++){var l=e.buttons[r].TYPE=="accept"?"accept":e.buttons[r].TYPE=="cancel"?"cancel":"default";var p={"data-id":e.id,"data-value":e.buttons[r].VALUE};if(e.grouped)p["data-group"]="Y";if(e.buttons[r].URL)p["data-url"]=e.buttons[r].URL;a.push(BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-confirm bx-notifier-item-button-"+l},attrs:p,html:e.buttons[r].TITLE}))}}s=BX.create("div",{attrs:{"data-notifyId":e.id,"data-notifyType":e.type,"data-link":e.link},props:{className:"bx-notifier-item bx-notifier-item-"+e.id+" "+i},children:[BX.create("span",{props:{className:"bx-notifier-item-content"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(e.userAvatar)?" bx-notifier-item-avatar-img-default":"")},attrs:{style:BX.MessengerCommon.isBlankAvatar(e.userAvatar)?"background-color: "+e.userColor:"background: url('"+encodeURI(e.userAvatar)+"'); background-size: cover;"}})]}),!o?BX.create("span",{props:{className:"bx-notifier-item-delete bx-notifier-item-delete-fake"}}):BX.create("a",{attrs:{href:"#","data-notifyId":e.id,"data-notifyType":e.type,title:BX.message("IM_NOTIFY_DELETE_1")},props:{className:"bx-notifier-item-delete"}}),BX.create("span",{props:{className:"bx-notifier-item-date"},html:BX.MessengerCommon.formatDate(e.date)}),e.userName?BX.create("span",{props:{className:"bx-notifier-item-name"},html:'<a href="'+e.userLink+'"  data-slider-ignore-autobinding="true" onclick="if (BXIM.init) { BXIM.openMessenger('+e.userId+'); return false; } ">'+BX.MessengerCommon.prepareText(e.userName)+"</a>"}):null,BX.create("span",{props:{className:"bx-notifier-item-text"},html:e.text}),n,BX.create("span",{props:{className:"bx-notifier-item-button-wrap"},children:a})]})]})}else if(e.type==2||e.type==1&&typeof e.buttons!="undefined"&&e.buttons.length<=0){s=BX.create("div",{attrs:{"data-notifyId":e.id,"data-notifyType":e.type,"data-link":e.link},props:{className:"bx-notifier-item bx-notifier-item-"+e.id+" "+i},children:[BX.create("span",{props:{className:"bx-notifier-item-content"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(e.userAvatar)?" bx-notifier-item-avatar-img-default":"")},attrs:{style:BX.MessengerCommon.isBlankAvatar(e.userAvatar)?"background-color: "+e.userColor:"background: url('"+encodeURI(e.userAvatar)+"'); background-size: cover;"}})]}),BX.create("a",{attrs:{href:"#","data-notifyId":e.id,"data-notifyType":e.type,title:BX.message("IM_NOTIFY_DELETE_1")},props:{className:"bx-notifier-item-delete"}}),BX.create("span",{props:{className:"bx-notifier-item-date"},html:BX.MessengerCommon.formatDate(e.date)}),BX.create("span",{props:{className:"bx-notifier-item-name"},html:'<a href="'+e.userLink+'" data-slider-ignore-autobinding="true" onclick="if (BXIM.init) { BXIM.openMessenger('+e.userId+'); return false; } ">'+BX.MessengerCommon.prepareText(e.userName)+"</a>"}),BX.create("span",{props:{className:"bx-notifier-item-text"},html:e.text}),n,this.drawNotifyAnswer(e)]})]})}else if(e.type==3){s=BX.create("div",{attrs:{"data-notifyId":e.id,"data-notifyType":e.type,"data-link":e.link},props:{className:"bx-notifier-item bx-notifier-item-"+e.id+" "+i},children:[BX.create("span",{props:{className:"bx-notifier-item-content"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-group"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(e.userAvatar)?" bx-notifier-item-avatar-img-default":"")},attrs:{style:BX.MessengerCommon.isBlankAvatar(e.userAvatar)?"background-color: "+e.userColor:"background: url('"+encodeURI(e.userAvatar)+"'); background-size: cover;"}})]})]}),BX.create("a",{attrs:{href:"#","data-notifyId":e.id,"data-group":"Y","data-notifyType":e.type,title:BX.message("IM_NOTIFY_DELETE_1")},props:{className:"bx-notifier-item-delete"}}),BX.create("span",{props:{className:"bx-notifier-item-date"},html:BX.MessengerCommon.formatDate(e.date)}),BX.create("span",{props:{className:"bx-notifier-item-name"},html:BX.message("IM_NOTIFY_GROUP_NOTIFY").replace("#USER_NAME#",'<a href="'+e.userLink+'"  data-slider-ignore-autobinding="true" onclick="if (BXIM.init) { BXIM.openMessenger('+e.userId+'); return false;} ">'+BX.MessengerCommon.prepareText(e.userName)+"</a>").replace("#U_START#",'<span class="bx-notifier-item-help" data-help="'+e.id+'">').replace("#U_END#","</span>").replace("#COUNT#",e.otherCount)}),BX.create("span",{props:{className:"bx-notifier-item-text"},html:e.text}),n,this.drawNotifyAnswer(e)]})]})}else{s=BX.create("div",{attrs:{"data-notifyId":e.id,"data-notifyType":e.type,"data-link":e.link},props:{className:"bx-notifier-item bx-notifier-item-"+e.id+" "+i},children:[BX.create("span",{props:{className:"bx-notifier-item-content"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-img bx-notifier-item-avatar-img-default-2"},attrs:{style:BX.MessengerCommon.isBlankAvatar(e.userAvatar)?"background-color: "+e.userColor:"background: url('"+encodeURI(e.userAvatar)+"'); background-size: cover;"}})]}),BX.create("a",{attrs:{href:"#","data-notifyId":e.id,"data-notifyType":e.type,title:BX.message("IM_NOTIFY_DELETE_1")},props:{className:"bx-notifier-item-delete"}}),BX.create("span",{props:{className:"bx-notifier-item-date"},html:BX.MessengerCommon.formatDate(e.date)}),e.title&&e.title.length>0?BX.create("span",{props:{className:"bx-notifier-item-name"},html:BX.MessengerCommon.prepareText(e.title)}):null,BX.create("span",{props:{className:"bx-notifier-item-text"},html:e.text}),n,this.drawNotifyAnswer(e)]})]})}return s};BX.MessengerNotify.prototype.drawNotifyAnswer=function(e){var t=null;if(!e.params||typeof e.params=="object"&&e.params.CAN_ANSWER!="Y"){return t}value=this.notifyAnswerText[e.id]?this.notifyAnswerText[e.id]:"";t=BX.create("div",{props:{className:"bx-notifier-item-text"},children:[BX.create("div",{props:{className:"bx-notifier-answer-link"},children:[BX.create("span",{props:{className:"bx-notifier-answer-reply bx-messenger-ajax"},html:BX.message("IM_N_REPLY")})]}),BX.create("div",{attrs:{"data-id":e.id},props:{className:"bx-notifier-answer-box"+(value?" bx-notifier-answer-box-open":"")},children:[BX.create("span",{props:{className:"bx-notifier-answer-progress"}}),BX.create("span",{props:{className:"bx-notifier-answer-input"},children:[BX.create("input",{attrs:{type:"text",value:value,"data-id":e.id},events:{keydown:BX.delegate((function(e){if(e.keyCode==13){this.sendNotifyAnswer(BX.proxy_context.parentNode.parentNode)}else if(e.keyCode==27){if(BX.proxy_context.value!=""){BX.proxy_context.value="";this.notifyAnswerText[BX.proxy_context.getAttribute("data-id")]=""}else{this.toggleNotifyAnswer(BX.proxy_context.parentNode.parentNode.previousSibling)}return BX.MessengerCommon.preventDefault(e)}}),this),keyup:BX.delegate((function(e){this.notifyAnswerText[BX.proxy_context.getAttribute("data-id")]=BX.proxy_context.value}),this)},props:{className:"bx-messenger-input"}})]}),BX.create("a",{attrs:{href:"javascript:void(0);"},props:{className:"bx-notifier-answer-button"}})]}),BX.create("div",{props:{className:"bx-notifier-answer-text"},html:BX.message("IM_N_REPLY_TEXT")})]});return t};BX.MessengerNotify.prototype.toggleNotifyAnswer=function(e){var t=e.nextSibling.getAttribute("data-id");if(this.notifyAnswerBlock[t])return false;BX.toggleClass(e.nextSibling,"bx-notifier-answer-box-open");BX.removeClass(e.nextSibling.nextSibling,"bx-notifier-answer-text-show");var s=BX.findChildByClassName(e.nextSibling,"bx-messenger-input");if(s){s.focus()}return true};BX.MessengerNotify.prototype.sendNotifyAnswer=function(e,t){var s=e.getAttribute("data-id");if(this.notifyAnswerBlock[s])return true;var i=BX.findChildByClassName(e,"bx-messenger-input");if(!i)return false;i.value=BX.util.trim(i.value);if(i.value==""){return true}if(!this.BXIM.init&&BX.MessengerCommon.isDesktop())BX.desktop.windowCommand("freeze");this.notifyAnswerBlock[s]=true;this.notifyAnswerText[s]=i.value;i.disabled=true;BX.addClass(e,"bx-notifier-answer-box-send");BX.ajax({url:this.BXIM.pathToAjax+"?NOTIFY_ANSWER&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_NOTIFY_ANSWER:"Y",NOTIFY_ID:s,NOTIFY_ANSWER:i.value,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(t){BX.removeClass(e,"bx-notifier-answer-box-error");BX.removeClass(e,"bx-notifier-answer-box-send");this.notifyAnswerBlock[s]=false;this.notifyAnswerText[s]="";var i=BX.findChildByClassName(e,"bx-messenger-input");if(i){i.disabled=false}if(t.ERROR==""){BX.removeClass(e,"bx-notifier-answer-box-open");BX.addClass(e.nextSibling,"bx-notifier-answer-text-show");if(t.MESSAGES&&t.MESSAGES.length>0){e.nextSibling.innerHTML=t.MESSAGES.join("<br/>")}if(i){i.value=""}if(!this.BXIM.init&&BX.MessengerCommon.isDesktop())BX.desktop.windowCommand("close")}else{BX.addClass(e,"bx-notifier-answer-box-error")}}),this),onfailure:BX.delegate((function(){BX.addClass(e,"bx-notifier-answer-box-error");BX.removeClass(e,"bx-notifier-answer-box-send");this.notifyAnswerBlock[s]=false;var t=BX.findChildByClassName(e,"bx-messenger-input");if(t){t.disabled=false}}),this)});return true};BX.MessengerNotify.prototype.buildMoreUsersNotifyPopup=function(e){htmlElement='<span class="bx-notifier-item-help-popup">';for(var t=0;t<e.length;t++){var s=BX.MessengerCommon.getUserParam(e[t]);var i=BX.MessengerCommon.isBlankAvatar(s.avatar)?BXIM.pathToBlankImage:s.avatar;var n=BX.MessengerCommon.isBlankAvatar(s.avatar)?'style="background-color: '+s.color+'"':"";htmlElement+='<a class="bx-notifier-item-help-popup-img" href="'+s.avatar+'" onclick="BXIM.openMessenger('+s.id+'); return false;" target="_blank">'+'<span class="bx-notifier-popup-avatar bx-notifier-popup-avatar-status-'+s.status+'">'+'<span class="bx-notifier-popup-avatar-img'+(BX.MessengerCommon.isBlankAvatar(s.avatar)?" bx-notifier-popup-avatar-img-default":"")+'" '+BX.MessengerCommon.getAvatarStyle(s)+"></span>"+"</span>"+'<span class="bx-notifier-item-help-popup-name '+(s.extranet?" bx-notifier-popup-avatar-extranet":"")+'">'+BX.MessengerCommon.prepareText(s.name)+"</span>"+"</a>"}htmlElement+="</span>";return htmlElement};BX.MessengerNotify.prototype.storageSet=function(e){if(e.key=="npp"){var t=BX.localStorage.get(e.key);this.BXIM.settings.panelPositionHorizontal=!!t?t.h:this.BXIM.settings.panelPositionHorizontal;this.BXIM.settings.panelPositionVertical=!!t?t.v:this.BXIM.settings.panelPositionVertical;this.adjustPosition({resize:true})}else if(e.key=="nun"){this.notify=e.value}else if(e.key=="nrn"){delete this.notify[e.value];this.updateNotifyCount(false)}else if(e.key=="nrgn"){for(var s in this.notify){if(this.notify[s].tag==e.value)delete this.notify[s]}this.updateNotifyCount()}else if(e.key=="numc"){this.updateNotifyMailCount(e.value,false)}else if(e.key=="nuc"){this.updateNotifyCounters(e.value,false)}else if(e.key=="nunc2"){setTimeout(BX.delegate((function(){this.notifyCount=e.value.notifyCount;this.unreadNotify=e.value.unread;this.updateNotifyCount(false)}),this),500)}else if(e.key=="nund"){this.updateNotifyNextCount(e.value.notifyCount,false)}}})();(function(){if(BX.MessengerChat)return;BX.MessengerChat=function(e,t){this.BXIM=e;this.BXIM.messenger=this;this.settings={};this.params=t||{};this.realSearchAvailable=!this.BXIM.userExtranet||!this.BXIM.bitrixIntranet&&!this.BXIM.bitrix24net;this.realSearch=!this.BXIM.options.contactListLoad;this.realSearchFound=true;this.updateStateCount=1;this.sendAjaxTry=0;this.updateStateVeryFastCount=0;this.updateStateFastCount=0;this.updateStateStepDefault=parseInt(t.updateStateInterval);this.updateStateStep=this.updateStateStepDefault;this.updateStateTimeout=null;this.redrawContactListTimeout={};this.redrawRecentListTimeout=null;this.floatDateTimeout=null;this.readMessageTimeout={};this.readMessageTimeoutSend=null;this.sendFrameTokenCollection={};this.sendFrameTokenTimeout=500;this.webrtc=t.webrtcClass;this.notify=t.notifyClass;this.desktop=t.desktopClass;this.bot=t.bot;this.command=t.command;this.commandPopup=null;this.commandListen=false;this.commandList=[];this.commandSelect="";this.commandSelectIndex=1;this.textareaIcon=t.textareaIcon;this.smile=t.smile;this.smileSet=t.smileSet;this.smileCurrentSet=this.BXIM.getLocalConfig("smiles-current-set",0)||[];this.smileRecentId=1;this.getRecentSmiles();this.popupTooltip=null;this.users=t.users;this.birthdayEnable=this.BXIM.options.contactListBirthday||"all";this.birthdayUsers={};this.birthdayRecent={};t.userBirthday.forEach(function(e){if(!this.users[e.id]){e.name=BX.util.htmlspecialchars(e.name);e.first_name=BX.util.htmlspecialchars(e.first_name);e.last_name=BX.util.htmlspecialchars(e.last_name);e.work_position=BX.util.htmlspecialchars(e.work_position);this.users[e.id]=e}this.birthdayUsers[e.id]=true}.bind(this));for(var s in this.users){this.users[s].absent=this.users[s].absent?new Date(this.users[s].absent):false;this.users[s].idle=this.users[s].idle?new Date(this.users[s].idle):false;this.users[s].last_activity_date=this.users[s].last_activity_date?new Date(this.users[s].last_activity_date):false;this.users[s].mobile_last_date=this.users[s].mobile_last_date?new Date(this.users[s].mobile_last_date):false}if(t.openlines&&Array.isArray(t.openlines.queue)){t.openlines.queue.forEach((function(e){e.name=BX.util.htmlspecialchars(e.name)}))}this.openlines=t.openlines;this.groups=t.groups;this.userInGroup=t.userInGroup;this.currentTab=0;this.generalChatId=t.generalChatId;this.canSendMessageGeneralChat=t.canSendMessageGeneralChat;this.redrawTab={};this.loadLastMessageTimeout={};this.loadLastMessageClassTimeout={};this.showMessage=t.showMessage;this.unreadMessage=t.unreadMessage;this.flashMessage=t.flashMessage;this.tooltipShowed=t.tooltipShowed||{};this.disk=t.diskClass;this.disk.messenger=this;this.popupMessengerFileForm=null;this.popupMessengerFileDropZone=null;this.popupMessengerFileButton=null;this.popupMessengerFileFormChatId=null;this.popupMessengerFileFormInput=null;this.openChatEnable=t.openChatEnable;this.chat=t.chat;for(var i in this.chat){this.chat[i].date_create=new Date(this.chat[i].date_create)}this.recent=[];this.recentLoadMore=true;this.recentLoadWait=false;this.recentLastMessageUpdateDate="";this.recentLastUpdate=t.recentLastUpdate||null;this.recentList=true;this.chatList=false;this.linesList=false;this.linesListLoad=false;this.linesListWait=false;this.linesLastUpdate=null;this.contactList=false;this.contactListShowed={};this.userChat=t.userChat;this.userInChat=t.userInChat;this.userChatBlockStatus=t.userChatBlockStatus;this.userChatOptions=t.userChatOptions;this.blockJoinChat={};this.hrphoto=t.hrphoto;this.chatPublicWatch=0;this.chatPublicWatchAdd=false;this.popupIframeBind=true;this.popupIframeMenu=null;this.popupMessengerLiveChatDelayedFormMid=0;this.popupMessengerLiveChatActionTimeout=null;this.popupMessengerLiveChatDelayedForm=null;this.popupMessengerLiveChatFormStage=null;this.phones={};this.errorMessage={};this.message=t.message;if(this.BXIM.init&&t.recent&&t.recent.items&&t.recent.items.length>0){BX.localStorage.set("mru2",{recent:t.recent.items,counters:t.chatCounters},1);BX.MessengerCommon.recentListApply(t.recent,t.chatCounters)}this.messageTmpIndex=0;this.history={};this.historyOptions=t.historyOptions||{};this.textareaHistory={};this.textareaHistoryTimeout=null;this.messageCount=t.countMessage;this.sendMessageFlag=0;this.sendMessageTmp={};this.sendMessageTmpTimeout={};this.popupSettings=null;this.popupSettingsBody=null;this.popupChatDialog=null;this.popupChatDialogContactListElements=null;this.popupChatDialogContactListSearch=null;this.popupChatDialogContactListElementsType="";this.popupChatDialogContactListSearchLastText="";this.popupChatDialogDestElements=null;this.popupChatDialogUsers={};this.popupChatDialogSendBlock=false;this.renameChatDialogFlag=false;this.renameChatDialogInput=null;this.popupHistory=null;this.popupHistoryElements=null;this.popupHistoryItems=null;this.popupHistoryItemsSize=475;this.popupHistorySearchDateWrap=null;this.popupHistorySearchWrap=null;this.popupHistoryFilesSearchWrap=null;this.popupHistoryButtonDeleteAll=null;this.popupHistoryButtonFilter=null;this.popupHistoryButtonFilterBox=null;this.popupHistoryFilterVisible=true;this.popupHistoryBodyWrap=null;this.popupHistoryFilesItems=null;this.popupHistoryFilesBodyWrap=null;this.popupHistorySearchInput=null;this.historyUserId=0;this.historyChatId=0;this.historyDateSearch="";this.historySearch="";this.historyLastSearch={};this.historySearchBegin=false;this.historySearchTimeout=null;this.historyFilesSearch="";this.historyFilesLastSearch={};this.historyFilesSearchBegin=false;this.historyFilesSearchTimeout=null;this.historyWindowBlock=false;this.historyMessageSplit="------------------------------------------------------";this.historyOpenPage={};this.historyLoadFlag={};this.historyEndOfList={};this.historyFilesOpenPage={};this.historyFilesLoadFlag={};this.historyFilesEndOfList={};this.popupMessenger=null;this.popupMessengerWindow={};this.popupMessengerExtra=null;this.popupMessengerTopLine=null;this.popupMessengerDesktopTimeout=null;this.popupMessengerFullWidth=864;this.popupMessengerMinWidth=864;this.popupMessengerFullHeight=454;this.popupMessengerMinHeight=384;this.popupMessengerDialog=null;this.popupMessengerBody=null;this.popupMessengerBodyDialog=null;this.popupMessengerBodyAnimation=null;this.popupMessengerBodySize=316;this.popupMessengerBodySizeMin=246;this.popupMessengerBodyWrap=null;this.popupMessengerLikeBlock={};this.popupMessengerLikeBlockTimeout={};this.popupMessengerSendingTimeout={};this.popupMessengerConnectionStatusState="online";this.popupMessengerConnectionStatusStateText="";this.popupMessengerConnectionStatus=null;this.popupMessengerConnectionStatusText=null;this.popupMessengerConnectionStatusTimeout=null;this.popupMessengerEditForm=null;this.popupMessengerEditFormTimeout=null;this.popupMessengerEditTextarea=null;this.popupMessengerEditMessageId=0;this.popupMessengerPanel=null;this.popupMessengerPanelBotIcons=false;this.popupMessengerPanelAvatar=null;this.popupMessengerPanelButtonCall1=null;this.popupMessengerPanelButtonCall2=null;this.popupMessengerPanelButtonCall3=null;this.popupMessengerPanelTitle=null;this.popupMessengerPanelStatus=null;this.popupMessengerPanelChat=null;this.popupMessengerPanelCall=null;this.popupMessengerPanelChatTitle=null;this.popupMessengerPanelUsers=null;this.popupMessengerTextareaPlace=null;this.popupMessengerTextarea=null;this.popupMessengerTextareaSendType=null;this.popupMessengerTextareaResize={};this.popupMessengerTextareaSize=30;this.popupMessengerLastMessage=0;this.mentionList={};this.mentionListen=false;this.mentionDelimiter="";this.readedList={};this.linesWritingList={};this.linesWritingListTimeout={};this.writingList={};this.writingListTimeout={};this.writingSendList={};this.writingSendListTimeout={};this.contactListPanelStatus=null;this.contactListSearchText="";this.contactListSearchLastText="";this.popupPopupMenu=null;this.popupPopupMenuModifyFunction=[];this.popupPopupMenuDateCreate=0;this.popupSmileMenu=null;this.popupSmileMenuGallery=null;this.popupSmileMenuSet=null;this.openMessengerFlag=false;this.openChatFlag=false;this.openNetworkFlag=false;this.openBotFlag=false;this.openCallFlag=false;this.externalMenu=false;if(BX.MessengerCommon.isPage()){this.externalMenu=BX.MessengerWindow.withMenu;if(!this.externalMenu&&BX.MessengerCommon.isLinesOperator()){this.externalMenu=true}}if(this.externalMenu){BX.addClass(BX.MessengerWindow.content,"bx-desktop-appearance-show-menu")}this.contactListLoad=false;this.popupContactListSize=330;this.popupContactListSearchInput=null;this.popupContactListSearchClose=null;this.popupContactListWrap=null;this.popupContactListElements=null;this.popupContactListElementsSize=this.externalMenu?368:331;this.popupContactListElementsSizeMin=this.externalMenu?298:264;this.popupContactListElementsWrap=null;this.contactListPanelSettings=null;this.linesTransferUser=0;this.linesSilentMode={};this.linesLiveChatVote=false;this.enableGroupChat=this.BXIM.ppServerStatus?true:false;this.toggleDarkTheme();if(this.BXIM.init){if(BX.MessengerCommon.isPage()){BX.MessengerWindow.setUserInfo(BX.MessengerCommon.getUserParam());BX.MessengerWindow.addTab({id:"im",title:BX.message("IM_DESKTOP_OPEN_MESSENGER").replace("#COUNTER#",""),order:100,events:{open:BX.delegate((function(){if(BX.MessengerCommon.isPage()&&this.BXIM.context=="POPUP-FULLSCREEN"&&!this.popupMessenger){return false}if(this.BXIM.extraOpen){this.extraClose()}else if(!this.BXIM.dialogOpen){this.openMessenger(this.currentTab)}}),this)}});if(this.webrtc.phoneSupport()&&this.webrtc.phoneCanPerformCalls){BX.MessengerWindow.addTab({id:"im-phone",title:BX.message("IM_PHONE_DESC"),order:120,target:"im",events:{open:BX.delegate(this.webrtc.openKeyPad,this.webrtc),close:BX.delegate((function(){this.webrtc.closeKeyPad()}),this)}})}if(this.BXIM.bitrixIntranet){BX.MessengerWindow.addTab({id:"im-ol",title:BX.message("IM_CTL_CHAT_OL"),order:105,target:"im",events:{open:BX.delegate((function(){if(!this.BXIM.linesListLoad){this.linesGetList()}if(BX.MessengerCommon.isPage()&&this.BXIM.context=="POPUP-FULLSCREEN"&&!this.popupMessenger){return false}if(this.BXIM.extraOpen){this.extraClose()}else if(!this.BXIM.dialogOpen){this.openMessenger(this.currentTab)}BX.MessengerCommon.userListRedraw()}),this),close:BX.delegate((function(){BX.MessengerCommon.userListRedraw()}),this)}})}}BX.addCustomEvent("onPullError",BX.delegate((function(e,t){if(e=="AUTHORIZE_ERROR"){if(BX.MessengerCommon.isDesktop()){this.connectionStatus("connecting")}else{this.connectionStatus("offline")}}else if(e=="RECONNECT"&&(t==1008||t==1006)){this.connectionStatus("connecting")}}),this));BX.addCustomEvent("OnDesktopTabChange",BX.delegate((function(){if(this.BXIM.messenger.chatList){BX.MessengerCommon.contactListSearchClear()}this.closeMenuPopup()}),this));BX.addCustomEvent("OnMessengerWindowShowPopup",BX.delegate((function(e){this.openMessenger(e)}),this));BX.addCustomEvent("OnMessengerWindowClosePopup",BX.delegate((function(){this.closeMessenger()}),this));BX.addCustomEvent("onImError",BX.delegate((function(e,t){if(e=="AUTHORIZE_ERROR"||e=="SEND_ERROR"&&t=="AUTHORIZE_ERROR"){if(BX.MessengerCommon.isDesktop()){this.connectionStatus("connecting")}else{this.connectionStatus("offline")}}}),this));BX.addCustomEvent("onPullStatus",BX.delegate((function(e){this.connectionStatus(e=="offline"?"offline":"online")}),this));BX.bind(window,"online",BX.delegate((function(){this.connectionStatus("online")}),this));BX.bind(window,"offline",BX.delegate((function(){this.connectionStatus("offline")}),this));this.notify.panel.appendChild(this.BXIM.audio.newMessage1=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/new-message-1.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/new-message-1.mp3",type:"audio/mpeg"}})]}));this.notify.panel.appendChild(this.BXIM.audio.newMessage2=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/new-message-2.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/new-message-2.mp3",type:"audio/mpeg"}})]}));this.notify.panel.appendChild(this.BXIM.audio.send=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/send.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/send.mp3",type:"audio/mpeg"}})]}));if(typeof this.BXIM.audio.send.play=="undefined"){this.BXIM.settings.enableSound=false}for(var n in this.unreadMessage){if(typeof this.flashMessage[n]=="undefined")this.flashMessage[n]={};for(var a=this.unreadMessage[n].length-1;a>=0;a--){BX.localStorage.set("mum",{userId:n,message:this.message[this.unreadMessage[n][a]]},5)}}BX.localStorage.set("muum",this.unreadMessage,5);if(this.notify.panelButtonMessage){BX.bind(this.notify.panelButtonMessage,"click",BX.delegate((function(e){this.BXIM.openMessenger(true)}),this))}var o=this.BXIM.getLocalConfig("mcesh",null);if(o!==null){this.BXIM.options.chatExtendShowHistory=o}var r=this.BXIM.getLocalConfig("global_msz_v2",false);if(!r&&BX.MessengerCommon.isPage()){this.desktop.initHeight=BX.MessengerWindow.initHeight;if(BX.MessengerCommon.isDesktop()){if(!BX.browser.IsMac()&&!this.desktop.enableInVersion(37)){}this.tmpTextareaResize=BX.delegate((function(){var e=this.BXIM.getLocalConfig("global_tas",this.popupMessengerTextareaSize);this.setTextareaSize(e);BX.unbind(window,"resize",this.tmpTextareaResize)}),this);BX.bind(window,"resize",this.tmpTextareaResize)}var l=this.BXIM.getLocalConfig("global_tas",this.BXIM.context=="POPUP-FULLSCREEN"?60:this.popupMessengerTextareaSize);this.setTextareaSize(l)}else if(r&&(!BX.MessengerCommon.isPage()||BX.MessengerCommon.isDesktop())){this.popupMessengerFullWidth=parseInt(r.wz);this.popupMessengerTextareaSize=parseInt(r.ta2);this.popupMessengerBodySize=parseInt(r.b)>0?parseInt(r.b):this.popupMessengerBodySize;this.popupHistoryItemsSize=parseInt(r.hi);this.popupMessengerFullHeight=parseInt(r.fz);this.popupContactListElementsSize=parseInt(r.ez);this.notify.popupNotifySize=parseInt(r.nz);this.popupHistoryFilterVisible=r.hf;if(BX.MessengerCommon.isDesktop()){BX.desktop.setWindowSize({Width:parseInt(r.dw),Height:parseInt(r.dh)});this.desktop.initHeight=parseInt(r.dh)}}else{if(BX.MessengerCommon.isDesktop()){BX.desktop.setWindowSize({Width:BX.MessengerWindow.initWidth,Height:BX.MessengerWindow.initHeight});this.desktop.initHeight=BX.MessengerWindow.initHeight}else if(BX.MessengerCommon.isPage()){this.desktop.initHeight=BX.MessengerWindow.initHeight}var l=this.BXIM.getLocalConfig("global_tas",this.BXIM.context=="POPUP-FULLSCREEN"?60:this.popupMessengerTextareaSize);this.setTextareaSize(l)}if(BX.MessengerCommon.isPage()){this.desktop.adjustSize();BX.MessengerCommon.redrawDateMarks();BX.bind(window,"resize",BX.delegate((function(){this.adjustSize();BX.MessengerCommon.redrawDateMarks()}),this.desktop))}if(BX.browser.SupportLocalStorage()){BX.addCustomEvent(window,"onLocalStorageSet",BX.delegate(this.storageSet,this));this.textareaHistory=BX.localStorage.get("mtah")||{};this.mentionList=BX.localStorage.get("mtam")||{};this.currentTab=this.currentTab?this.currentTab:0;this.messageTmpIndex=BX.localStorage.get("mti")||0;var p=BX.localStorage.get("mfm");if(p){for(var n in this.flashMessage)for(var h in this.flashMessage[n])if(p[n]&&this.flashMessage[n][h]!=p[n][h]&&p[n][h]==false)this.flashMessage[n][h]=false}BX.garbage((function(){BX.localStorage.set("mti",this.messageTmpIndex,5);BX.localStorage.set("mtah",this.textareaHistory,5);BX.localStorage.set("mtam",this.mentionList,5);BX.localStorage.set("mct",this.currentTab,5);BX.localStorage.set("mfm",this.flashMessage,5);BX.localStorage.set("mcls",this.contactListSearchText+"",5);if(BX.MessengerCommon.isDesktop()&&(window.innerWidth<BX.desktop.minWidth||window.innerHeight<BX.desktop.minHeight))return false;this.BXIM.setLocalConfig("global_msz_v2",{wz:this.popupMessengerFullWidth,ta2:this.popupMessengerTextareaSize,b:this.popupMessengerBodySize,cl:this.popupContactListSize,hi:this.popupHistoryItemsSize,fz:this.popupMessengerFullHeight,ez:this.popupContactListElementsSize,nz:this.notify.popupNotifySize,hf:this.popupHistoryFilterVisible,dw:window.innerWidth,dh:window.innerHeight,place:"garbage"})}),this)}else{var c=this.BXIM.getLocalConfig("mtah",false);if(c){this.textareaHistory=c;this.BXIM.removeLocalConfig("mtah")}var u=this.BXIM.getLocalConfig("mtam",false);if(u){this.textareaHistory=u;this.BXIM.removeLocalConfig("mtam")}BX.garbage((function(){this.BXIM.setLocalConfig("mtah",this.textareaHistory);this.BXIM.setLocalConfig("mtam",this.mentionList);if(BX.MessengerCommon.isDesktop()&&(window.innerWidth<BX.desktop.minWidth||window.innerHeight<BX.desktop.minHeight))return false;this.BXIM.setLocalConfig("global_msz_v2",{wz:this.popupMessengerFullWidth,ta2:this.popupMessengerTextareaSize,b:this.popupMessengerBodySize,cl:this.popupContactListSize,hi:this.popupHistoryItemsSize,fz:this.popupMessengerFullHeight,ez:this.popupContactListElementsSize,nz:this.notify.popupNotifySize,hf:this.popupHistoryFilterVisible,dw:window.innerWidth,dh:window.innerHeight,place:"garbage"})}),this)}BX.MessengerCommon.pullEvent();BX.addCustomEvent("onPullError",BX.delegate((function(e){if(e=="AUTHORIZE_ERROR")this.sendAjaxTry++}),this));this.updateState();if(t.openMessenger!==false){this.openMessenger(t.openMessenger)}else if(this.openMessengerFlag){this.openMessenger(this.currentTab)}if(t.openHistory!==false){this.BXIM.openHistory(t.openHistory)}if(t.openNotify!==false)this.BXIM.openNotify();this.updateMessageCount();setInterval(BX.delegate((function(){BX.MessengerCommon.checkProgessMessage();this.expireFrameToken()}),this),1e3);BX.bind(window,"message",BX.delegate((function(e){if(e&&e.origin==this.openFrameDialogFrameSourceDomain){this.openFrameDialogPostMessage(e.data)}}),this))}else{if(t.openMessenger!==false)this.BXIM.openMessenger(t.openMessenger);if(t.openHistory!==false)this.BXIM.openHistory(t.openHistory)}};BX.MessengerChat.prototype.openMessengerSlider=function(e,t){t=t||{};requestParams={};requestParams.IFRAME="Y";requestParams.IM_DIALOG=e;requestParams.IM_RECENT=t.RECENT=="N"?"N":"Y";requestParams.IM_MENU=t.MENU=="N"?"N":"Y";var s={cacheable:false,allowChangeHistory:false,requestMethod:"post",requestParams:requestParams,loader:"/bitrix/js/im/images/im-loader-lines"+(BX.MessengerTheme.isDark()?".dark":"")+".min.svg"};if(t.RECENT=="N"||t.MENU=="N"){s.width=800+(t.RECENT=="N"?0:50)+(t.MENU=="N"?0:20)}BX.SidePanel.Instance.open("/desktop_app/",s)};BX.MessengerChat.prototype.openMessenger=function(e,t){var s=new BX.Promise;if(this.BXIM.bitrix24blocked&&typeof BX.UI.InfoHelper!=="undefined"){BX.UI.InfoHelper.show(this.BXIM.bitrix24blocked);this.BXIM.closeMessenger();s.reject();return s}if(this.BXIM.errorMessage!=""){this.BXIM.closeMessenger();var i=[];if(this.BXIM.errorButtons){i=this.BXIM.errorButtons}else{i=[new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),events:{click:BX.delegate((function(e){BX.proxy_context.popupWindow.close();if(BX.MessengerWindow){BX.MessengerWindow.closePopup()}BX.PreventDefault(e)}),this)}})]}this.BXIM.openConfirm(this.BXIM.errorMessage,i);s.reject();return s}if(this.BXIM.messenger.currentTab!=e){BX.MessengerProxy.updateTextareaHistory(this.BXIM.messenger.currentTab)}if(BX.MessengerCommon.isPopupPage()&&!BX.MessengerSlider.isFocus()){if(!BX.MessengerSlider.canOpen()){s.reject();return s}this.popupMessenger=null;BX.MessengerSlider.open().then(function(){this.openMessenger(e,t).then(function(){this.BXIM.desktop.adjustSize();setTimeout((function(){var t=e||this.BXIM.messenger.currentTab;if(t){BX.MessengerCommon.openDialog(t)}BX.MessengerSlider.getCurrent().closeLoader();if(BXIM.messenger.checkRecentNeedLoad()){BXIM.messenger.recentListLoadMore()}}),50);s.resolve()}.bind(this))}.bind(this));return s}if(BX.SidePanel&&BX.SidePanel.Instance.isOpen()&&BX.SidePanel.Instance.isOnTop()&&this.popupMessenger!==null){if(BX.SidePanel.Instance.getSlider("timeman:pwt-report")){s.reject();return s}else if(!BX.MessengerCommon.isPopupPage()){BX.SidePanel.Instance.closeAll()}else if(BX.MessengerCommon.isPage()){BX.MessengerWindow.setZIndex(BX.SidePanel.Instance.getTopSlider().getZindex()+1)}else{this.popupMessenger.close()}}if(this.popupImageUploader){this.popupImageUploader.close()}if(this.BXIM.popupSettings!=null&&!BX.MessengerCommon.isDesktop())this.BXIM.popupSettings.close();if(this.popupMessenger!=null&&this.dialogOpen&&this.currentTab==e&&e!=0){s.reject();return s}if(e!==false&&BX.MessengerCommon.isPage()&&BX.MessengerWindow.currentTab!="im"&&BX.MessengerWindow.currentTab!="im-ol"){BX.MessengerWindow.changeTab("im",false,true)}if(this.popupMessengerEditForm)this.editMessageCancel();if(e&&e.toString().toLowerCase()=="general"){this.currentTab="chat"+this.generalChatId;e=this.currentTab}BX.localStorage.set("mcam",true,5);if(typeof e=="undefined"||e==null){e=0}if(this.currentTab==null)this.currentTab=0;this.openChatFlag=false;this.openNetworkFlag=false;this.openBotFlag=false;this.openLinesFlag=false;this.openCallFlag=false;if(typeof e=="boolean"){e=0;this.currentTab=0}else if(e==0){if(e==0&&this.currentTab!=null){if(this.users[this.currentTab]&&this.users[this.currentTab].id)e=this.currentTab;else if(this.chat[this.getChatId()]&&this.chat[this.getChatId()].id)e=this.currentTab}if(e.toString().substr(0,4)=="chat"){BX.MessengerCommon.getUserParam(e);this.openChatFlag=true;if(this.chat[e.toString().substr(4)].type=="call")this.openCallFlag=true;else if(this.chat[e.toString().substr(4)].type=="lines")this.openLinesFlag=true}else{e=parseInt(e)}}else if(e.toString().substr(0,4)=="chat"||e.toString().substr(0,2)=="sg"||e.toString().substr(0,3)=="crm"){BX.MessengerCommon.getUserParam(e);this.openChatFlag=true;if(e.toString().substr(0,4)=="chat"){if(this.chat[e.toString().substr(4)].type=="call")this.openCallFlag=true;else if(this.chat[e.toString().substr(4)].type=="lines")this.openLinesFlag=true}}else if(e.toString().substr(0,7)=="network"){BX.MessengerCommon.getUserParam(e);this.openNetworkFlag=true}else if(this.users[e]&&this.users[e].id){e=parseInt(e)}else{e=parseInt(e);if(isNaN(e)){e=0}else{BX.MessengerCommon.getUserParam(e)}}if(this.openNetworkFlag){}else if(!this.openChatFlag&&typeof e!="number"){e=0}if(this.openChatFlag||e>0){this.currentTab=e;this.BXIM.notifyManager.closeByTag("im-message-"+e);BX.localStorage.set("mct",this.currentTab,15);if(!this.openChatFlag&&this.users[e]&&this.users[e].bot){this.openBotFlag=true}}if(this.popupMessenger!=null){var n=this.BXIM.callController.hasActiveCall()&&this.BXIM.callController.hasVisibleCall()&&this.BXIM.callController.currentCall.associatedEntity.id!=e;BX.MessengerCommon.openDialog(e,this.BXIM.dialogOpen?false:true,n);if(!(BX.browser.IsAndroid()||BX.browser.IsIOS()||window!=window.top)){if(this.popupMessengerTextarea)this.popupMessengerTextarea.focus()}s.resolve();return s}var a={};if(BX.MessengerCommon.isPage()){if(!(this.BXIM.context=="POPUP-FULLSCREEN"&&BX.MessengerCommon.isIntranet())){var o=BX.MessengerWindow.content.offsetHeight-this.popupMessengerFullHeight;this.popupContactListElementsSize=this.popupContactListElementsSize+o;this.popupMessengerBodySize=this.popupMessengerBodySize+o;this.popupMessengerFullHeight=this.popupMessengerFullHeight+o;this.notify.popupNotifySize=this.notify.popupNotifySize+o}}else{a={width:this.popupMessengerFullWidth+"px"}}if(BX.MessengerWindow&&BX.MessengerWindow.contentMenu){if(this.BXIM.options.showMenu){BX.removeClass(BX.MessengerWindow.contentBox,"bx-desktop-appearance-hide-menu")}else{BX.addClass(BX.MessengerWindow.contentBox,"bx-desktop-appearance-hide-menu")}}var r=BX.MessengerCommon.getUserStatus(this.users[this.BXIM.userId]);var l="";if(this.users[this.currentTab]){if(this.users[this.currentTab].extranet){l=" bx-messenger-user-extranet"}else if(this.users[this.currentTab].bot){if(!this.bot[this.currentTab]){l=" bx-messenger-user-bot"}else if(this.bot[this.currentTab].type=="network"){l=" bx-messenger-user-network"}else if(this.bot[this.currentTab].type=="support24"){l=" bx-messenger-user-support24"}}}this.popupMessengerContent=BX.create("div",{props:{className:"bx-messenger-box bx-messenger-mark bx-messenger-global-context-"+this.BXIM.context.toLowerCase()+" "+(this.BXIM.callController.hasActiveCall()?" bx-messenger-call"+(this.callOverlayMinimize?"":" bx-messenger-call-maxi"):"")+(BX.MessengerCommon.isPage()?" bx-messenger-box-desktop":"")+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")+(this.BXIM.options.showRecent?"":" bx-messenger-hide-recent")+(BX.MessengerTheme.isDark()?" bx-messenger-dark":"")},style:a,children:[this.popupContactListWrap=BX.create("div",{props:{className:"bx-messenger-box-contact bx-messenger-box-contact-normal"},style:{width:this.popupContactListSize+"px"},children:[BX.create("div",{props:{className:"bx-messenger-cl-search"},children:[BX.create("div",{props:{className:"bx-messenger-input-wrap bx-messenger-cl-search-wrap"},children:[this.popupContactListSearchIcon=BX.create("span",{props:{className:"bx-messenger-input-search-icon"}}),this.popupContactListSearchClose=BX.create("a",{attrs:{href:"javascript:void(0);"},props:{className:"bx-messenger-input-close"}}),this.popupContactListSearchInput=BX.create("input",{attrs:{type:"text",placeholder:BX.message("IM_M_SEARCH"),value:this.contactListSearchText},props:{className:"bx-messenger-input"}})]}),this.popupContactListCreateChat=BX.create("span",{props:{className:"bx-messenger-input-search-create"},text:BX.message("IM_M_CREATE_MENU")}),this.popupContactListCreateChatShort=BX.create("span",{props:{className:"bx-messenger-input-search-create-short"}})]}),this.popupContactListElements=BX.create("div",{props:{className:"bx-messenger-cl"},style:{height:this.popupContactListElementsSize+"px"},children:[this.popupContactListElementsWrap=BX.create("div",{props:{className:"bx-messenger-cl-wrap bx-messenger-recent-wrap"}}),this.popupNewRecentWrap=BX.create("div",{props:{className:"bx-messenger-cl-wrap bx-messenger-new-recent-wrap"}})]}),this.externalMenu?null:BX.create("div",{props:{className:"bx-messenger-cl-notify-wrap"},children:[this.notify.messengerNotifyButton=BX.create("div",{props:{className:"bx-messenger-cl-notify-button"},events:{click:BX.delegate(this.notify.openNotify,this.notify)},children:[BX.create("span",{props:{className:"bx-messenger-cl-notify-text"},html:BX.message("IM_NOTIFY_BUTTON_TITLE")}),this.notify.messengerNotifyButtonCount=BX.create("span",{props:{className:"bx-messenger-cl-count"},html:parseInt(this.notify.notifyCount)>0?'<span class="bx-messenger-cl-count-digit">'+this.notify.notifyCount+"</span>":""})]}),this.BXIM.design=="DESKTOP"?null:this.popupContactListSearchCall=!this.webrtc.phoneSupport()||!this.webrtc.phoneCanPerformCalls?null:BX.create("div",{props:{className:"bx-messenger-cl-phone-button"},children:[BX.create("span",{props:{className:"bx-messenger-cl-phone-text"},html:BX.message("IM_PHONE_BUTTON_TITLE")})]})]}),BX.create("div",{props:{className:"bx-messenger-cl-panel"},children:[BX.create("div",{props:{className:"bx-messenger-cl-panel-wrap"},children:[this.contactListPanelStatus=BX.create("span",{props:{className:"bx-messenger-cl-panel-status-wrap bx-messenger-cl-status-"+BX.MessengerCommon.getUserStatus(this.users[this.BXIM.userId])},html:'<span class="bx-messenger-cl-panel-status bx-messenger-cl-status"></span><span class="bx-messenger-cl-panel-status-text">'+BX.message("IM_STATUS_"+(r=="birthday"?"online":r).toUpperCase())+'</span><span class="bx-messenger-cl-panel-status-arrow"></span>'}),BX.create("span",{props:{className:"bx-messenger-cl-panel-right-wrap"},children:[this.contactListPanelSettings=this.externalMenu?null:BX.create("span",{props:{title:BX.message("IM_SETTINGS"),className:"bx-messenger-cl-panel-settings-wrap"}})]})]})]})]}),this.popupMessengerDialog=BX.create("div",{props:{className:"bx-messenger-box-dialog"+(this.BXIM.isAdmin?" bx-messenger-user-admin":"")},style:{marginLeft:this.popupContactListSize+"px"},children:[this.popupMessengerPanel=BX.create("div",{props:{className:"bx-messenger-panel bx-messenger-context-user "+(this.openChatFlag?" bx-messenger-hide":"")},children:[BX.create("a",{attrs:{href:this.users[this.currentTab]?this.users[this.currentTab].profile:BX.MessengerCommon.getUserParam().profile,target:"_blank"},props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-status-"+BX.MessengerCommon.getUserStatus(this.users[this.currentTab])},children:[this.popupMessengerPanelAvatar=BX.create("span",{props:{className:"bx-messenger-panel-avatar-img bx-messenger-panel-avatar-img-default"}}),BX.create("span",{props:{className:"bx-messenger-panel-avatar-status"}})],events:{mouseover:BX.delegate((function(e){if(this.users[this.currentTab]){BX.proxy_context.title=BX.MessengerCommon.getUserStatus(this.users[this.currentTab],false).statusText}}),this)}}),BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_M_OPEN_HISTORY_2")},props:{className:"bx-messenger-panel-button bx-messenger-panel-history"},events:{click:BX.delegate((function(e){this.openHistory(this.currentTab);BX.PreventDefault(e)}),this)}}),this.popupMessengerPanelMute=BX.create("a",{attrs:{href:"javascript:void(0);",title:this.muteButtonStatus(this.currentTab)?BX.message("IM_M_USER_BLOCK_ON"):BX.message("IM_M_USER_BLOCK_OFF")},props:{className:"bx-messenger-panel-button bx-messenger-panel-mute"},events:{click:BX.delegate((function(e){BX.MessengerCommon.muteMessageChat(this.currentTab);BX.PreventDefault(e)}),this)}}),this.enableGroupChat?BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_M_CHAT_TITLE")},props:{className:"bx-messenger-panel-button bx-messenger-panel-chat"},html:BX.message("IM_M_CHAT_BTN_JOIN"),events:{click:BX.delegate((function(e){this.openChatDialog({type:"CHAT_ADD",bind:BX.proxy_context});BX.PreventDefault(e)}),this)}}):null,this.popupMessengerPanelButtonCall1=this.callButton(),BX.create("span",{props:{className:"bx-messenger-panel-title"},children:[this.popupMessengerPanelTitle=BX.create("a",{props:{className:"bx-messenger-panel-title-link"+l},attrs:{href:this.users[this.currentTab]?this.users[this.currentTab].profile:BX.MessengerCommon.getUserParam().profile,target:"_blank"},html:this.users[this.currentTab]?this.users[this.currentTab].name:""}),this.popupMessengerPanelLastDate=BX.create("span",{props:{className:"bx-messenger-panel-title-position"},html:""})]}),this.popupMessengerPanelStatus=BX.create("span",{props:{className:"bx-messenger-panel-desc"},html:BX.MessengerCommon.getUserPosition(this.users[this.currentTab],false,true)})]}),this.popupMessengerPanelChat=BX.create("div",{props:{className:"bx-messenger-panel bx-messenger-context-chat "+(this.openChatFlag&&!this.openCallFlag?"":" bx-messenger-hide")},children:[this.popupMessengerPanelAvatarForm2=BX.create("form",{attrs:{action:this.BXIM.pathToFileAjax},props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-chat"},children:[BX.create("div",{props:{className:"bx-messenger-panel-avatar-progress"},html:'<div class="bx-messenger-panel-avatar-progress-image"></div>'}),BX.create("input",{attrs:{type:"hidden",name:"IM_AVATAR_UPDATE",value:"Y"}}),this.popupMessengerPanelAvatarId2=BX.create("input",{attrs:{type:"hidden",name:"CHAT_ID",value:this.getChatId()}}),BX.create("input",{attrs:{type:"hidden",name:"IM_AJAX_CALL",value:"Y"}}),this.popupMessengerPanelAvatarUpload2=this.disk.lightVersion||!this.BXIM.ppServerStatus?null:BX.create("input",{attrs:{type:"file",title:BX.message("IM_M_AVATAR_UPLOAD")},props:{className:"bx-messenger-panel-avatar-upload"}}),this.popupMessengerPanelAvatar2=BX.create("span",{props:{className:"bx-messenger-panel-avatar-img bx-messenger-panel-avatar-img-default"}}),this.popupMessengerPanelCrm=BX.create("span",{props:{className:"bx-messenger-panel-avatar-badge-crm"}}),this.popupMessengerPanelStatus2=BX.create("span",{props:{className:"bx-messenger-panel-avatar-status"}})]}),BX.create("span",{attrs:{title:BX.message("IM_P_MENU")},props:{className:"bx-messenger-panel-button bx-messenger-panel-menu"},events:{click:BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,this.chat[this.getChatId()].entity_type=="LINES"?"openLinesMenu":"pathMenu");BX.PreventDefault(e)}),this)}}),BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_M_OPEN_HISTORY_2")},props:{className:"bx-messenger-panel-button bx-messenger-panel-history"},events:{click:BX.delegate((function(e){this.openHistory(this.currentTab);BX.PreventDefault(e)}),this)}}),this.popupMessengerPanelMute2=BX.create("a",{attrs:{href:"javascript:void(0);",title:this.muteButtonStatus(this.currentTab)?BX.message("IM_M_CHAT_MUTE_ON_2"):BX.message("IM_M_CHAT_MUTE_OFF_2")},props:{className:"bx-messenger-panel-button bx-messenger-panel-mute "+(this.muteButtonStatus(this.currentTab)?" bx-messenger-panel-unmute":"")},events:{click:BX.delegate((function(e){BX.MessengerCommon.muteMessageChat(this.currentTab);BX.PreventDefault(e)}),this)}}),this.popupOpenLinesSpam=BX.create("span",{attrs:{title:BX.message("IM_M_OL_FORCE_CLOSE")?BX.message("IM_M_OL_FORCE_CLOSE").replace("<br>",""):BX.message("IM_M_OL_SPAM")},props:{className:"bx-messenger-panel-button bx-messenger-panel-spam"},events:{click:BX.delegate((function(e){this.linesMarkAsSpam();BX.PreventDefault(e)}),this)}}),this.popupOpenLinesClose=BX.create("span",{attrs:{title:BX.message("IM_M_OL_CLOSE")},props:{className:"bx-messenger-panel-button bx-messenger-panel-close"},events:{click:BX.delegate((function(e){this.linesCloseDialog();BX.PreventDefault(e)}),this)}}),this.popupOpenLinesTransfer=BX.create("span",{attrs:{title:BX.message("IM_P_TRANSFER")},props:{className:"bx-messenger-panel-button bx-messenger-panel-transfer"},events:{click:BX.delegate((function(e){this.linesOpenTransferDialog({bind:BX.proxy_context});BX.PreventDefault(e)}),this)}}),this.popupMessengerPanelButtonExtend=this.enableGroupChat?BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_M_CHAT_TITLE")},props:{className:"bx-messenger-panel-button bx-messenger-panel-chat"},html:BX.message("IM_M_CHAT_BTN_JOIN"),events:{click:BX.delegate((function(e){this.openChatDialog({chatId:this.getChatId(),type:"CHAT_EXTEND",bind:BX.proxy_context});BX.PreventDefault(e)}),this)}}):null,this.popupMessengerPanelButtonCall2=this.callButton(),BX.create("span",{props:{className:"bx-messenger-panel-title bx-messenger-panel-title-chat"},children:[this.popupMessengerPanelChatTitle=BX.create("span",{props:{className:""},html:this.chat[this.getChatId()]?this.chat[this.getChatId()].name:BX.message("IM_CL_LOAD")})]}),BX.create("span",{props:{className:"bx-messenger-panel-desc"},children:[this.popupMessengerPanelUsers=BX.create("div",{props:{className:"bx-messenger-panel-chat-users"},html:BX.message("IM_CL_LOAD")})]})]}),this.popupMessengerPanelCall=BX.create("div",{props:{className:"bx-messenger-panel bx-messenger-context-call "+(this.openChatFlag&&this.openCallFlag?"":" bx-messenger-hide")},children:[this.popupMessengerPanelAvatarForm3=BX.create("form",{attrs:{action:this.BXIM.pathToFileAjax},props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-call"},children:[BX.create("div",{props:{className:"bx-messenger-panel-avatar-progress"},html:'<div class="bx-messenger-panel-avatar-progress-image"></div>'}),BX.create("input",{attrs:{type:"hidden",name:"IM_AVATAR_UPDATE",value:"Y"}}),this.popupMessengerPanelAvatarId3=BX.create("input",{attrs:{type:"hidden",name:"CHAT_ID",value:this.getChatId()}}),BX.create("input",{attrs:{type:"hidden",name:"IM_AJAX_CALL",value:"Y"}}),this.popupMessengerPanelAvatarUpload3=this.disk.lightVersion||!this.BXIM.ppServerStatus?null:BX.create("input",{attrs:{type:"file",title:BX.message("IM_M_AVATAR_UPLOAD_2")},props:{className:"bx-messenger-panel-avatar-upload"}}),this.popupMessengerPanelAvatar3=BX.create("span",{props:{className:"bx-messenger-panel-avatar-img bx-messenger-panel-avatar-img-default"}}),this.popupMessengerPanelStatus3=BX.create("span",{props:{className:"bx-messenger-panel-avatar-status bx-messenger-panel-avatar-status-chat"}})]}),BX.create("span",{attrs:{title:BX.message("IM_P_MENU")},props:{className:"bx-messenger-panel-button bx-messenger-panel-menu"},events:{click:BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,"callContextMenu");BX.PreventDefault(e)}),this)}}),BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_M_OPEN_HISTORY_2")},props:{className:"bx-messenger-panel-button bx-messenger-panel-history"},events:{click:BX.delegate((function(e){this.openHistory(this.currentTab);BX.PreventDefault(e)}),this)}}),this.popupMessengerPanelMute3=BX.create("a",{attrs:{href:"javascript:void(0);",title:this.muteButtonStatus(this.currentTab)?BX.message("IM_M_CHAT_MUTE_ON_2"):BX.message("IM_M_CHAT_MUTE_OFF_2")},props:{className:"bx-messenger-panel-button bx-messenger-panel-mute "+(this.muteButtonStatus(this.currentTab)?" bx-messenger-panel-unmute":"")},events:{click:BX.delegate((function(e){BX.MessengerCommon.muteMessageChat(this.currentTab);BX.PreventDefault(e)}),this)}}),this.popupMessengerPanelButtonCall3=this.callButton("call"),this.popupMessengerPanelCallTitle=BX.create("span",{props:{className:"bx-messenger-panel-title"},html:this.chat[this.getChatId()]?this.chat[this.getChatId()].name:BX.message("IM_CL_LOAD")}),this.popupMessengerPanelCallDescription=BX.create("span",{props:{className:"bx-messenger-panel-desc"},text:this.chat[this.getChatId()]&&this.chat[this.getChatId()].entity_data_1&&this.chat[this.getChatId()].entity_data_1.toString().charAt(0)==="Y"?this.chat[this.getChatId()].call_number:BX.message("IM_PHONE_DESC")})]}),this.popupMessengerConnectionStatus=BX.create("div",{props:{className:"bx-messenger-connection-status "+(this.popupMessengerConnectionStatusState=="online"?"":"bx-messenger-connection-status-show bx-messenger-connection-status-"+this.popupMessengerConnectionStatusState)},children:[BX.create("div",{props:{className:"bx-messenger-connection-status-wrap"},children:[this.popupMessengerConnectionStatusText=BX.create("span",{props:{className:"bx-messenger-connection-status-text"},html:this.popupMessengerConnectionStatusStateText}),BX.create("span",{props:{className:"bx-messenger-connection-status-text-reload"},children:[BX.create("span",{props:{className:"bx-messenger-connection-status-text-reload-title"},html:BX.message("IM_CS_RELOAD")}),BX.create("span",{props:{className:"bx-messenger-connection-status-text-reload-hotkey"},html:BX.browser.IsMac()?"&#8984;+R":"Ctrl+R"})],events:{click:function(){location.reload()}}})]})]}),this.popupMessengerEditForm=BX.create("div",{props:{className:"bx-messenger-editform bx-messenger-editform-disable"},children:[BX.create("div",{props:{className:"bx-messenger-editform-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-editform-textarea"},children:[this.popupMessengerEditTextarea=BX.create("textarea",{props:{value:"",className:"bx-messenger-editform-textarea-input"},style:{height:"70px",resize:"vertical",maxHeight:"500px"}})]}),BX.create("div",{props:{className:"bx-messenger-editform-buttons"},children:[BX.create("span",{props:{className:"popup-window-button popup-window-button-accept"},children:[BX.create("span",{props:{className:"popup-window-button-left"}}),BX.create("span",{props:{className:"popup-window-button-text"},html:BX.message("IM_M_CHAT_BTN_EDIT")}),BX.create("span",{props:{className:"popup-window-button-right"}})],events:{click:BX.delegate((function(e){var t=this.popupMessengerEditMessageId;BX.MessengerCommon.editMessageAjax(this.popupMessengerEditMessageId,this.popupMessengerEditTextarea.value);if(this.message[t].quick_saved){BX.MessengerCommon.linesSaveToQuickAnswers(t,true)}}),this)}}),BX.create("span",{props:{className:"popup-window-button"},children:[BX.create("span",{props:{className:"popup-window-button-left"}}),BX.create("span",{props:{className:"popup-window-button-text"},html:BX.message("IM_M_CHAT_BTN_CANCEL")}),BX.create("span",{props:{className:"popup-window-button-right"}})],events:{click:BX.delegate((function(e){this.editMessageCancel()}),this)}}),BX.create("span",{props:{className:"bx-messenger-editform-progress"},html:BX.message("IM_MESSAGE_EDIT_TEXT")})]})]})]}),this.popupMessengerBodyDialog=BX.create("div",{props:{className:"bx-messenger-body-dialog bxu-file-input-over"},children:[this.popupMessengerFileDropZone=!this.disk.enable?null:BX.create("div",{props:{className:"bx-messenger-file-dropzone"},children:[BX.create("div",{props:{className:"bx-messenger-file-dropzone-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-file-dropzone-icon"}}),BX.create("div",{props:{className:"bx-messenger-file-dropzone-text"},html:BX.message("IM_F_DND_TEXT")})]})]}),this.popupMessengerBodyPanel=BX.create("div",{props:{className:"bx-messenger-body-panel"},style:{height:this.popupMessengerBodySize+"px"},children:[BX.create("div",{props:{className:"bx-messenger-body-panel-title"},children:[this.popupMessengerBodyPanelTitleName=BX.create("div",{props:{className:"bx-messenger-body-panel-title-name"}}),this.popupMessengerBodyPanelTitleDesc=BX.create("div",{props:{className:"bx-messenger-body-panel-title-desc"}}),BX.create("div",{props:{className:"bx-messenger-body-panel-title-close"},events:{click:BX.delegate((function(){this.closeMessengerPanel()}),this)}})]}),this.popupMessengerBodyPanelWrap=BX.create("div",{props:{className:"bx-messenger-body-panel-wrap"}})]}),this.popupMessengerBody=BX.create("div",{props:{className:"bx-messenger-body"},style:{height:this.popupMessengerBodySize+"px"},children:[BX.create("div",{props:{className:"bx-messenger-body-bg"},children:[this.popupMessengerBodyWrap=BX.create("div",{props:{className:"bx-messenger-body-wrap"}})]})]}),this.popupMessengerBodyLiveChatForm=BX.create("div",{props:{className:"bx-messenger-livechat-form"}}),this.popupMessengerTextareaPlace=BX.create("div",{props:{className:"bx-messenger-textarea-place"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-lines"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text-box"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text-box-element"},children:[this.popupMessengerTextareaOpenLinesText=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text"},html:BX.message("IM_OL_INVITE_TEXT")})]})]}),BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-join-box"},children:[this.popupMessengerTextareaOpenLinesAnswer=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-answer bx-notifier-item-button bx-notifier-item-button-confirm bx-notifier-item-button-accept"},html:BX.message("IM_OL_INVITE_ANSWER")}),this.popupMessengerTextareaOpenLinesSkip=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-skip bx-notifier-item-button bx-notifier-item-button-confirm bx-notifier-item-button-cancel"},html:BX.message("IM_OL_INVITE_SKIP")}),this.popupMessengerTextareaOpenLinesTransfer=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-transfer bx-notifier-item-button bx-notifier-item-button-confirm bx-notifier-item-button-transfer"},html:BX.message("IM_OL_INVITE_TRANSFER"),events:{click:BX.delegate((function(e){this.linesOpenTransferDialog({bind:BX.proxy_context});BX.PreventDefault(e)}),this)}})]})]}),BX.create("div",{props:{className:"bx-messenger-textarea-open-invite"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text-box"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text-box-element"},children:[this.popupMessengerTextareaOpenText=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text"},html:BX.message(this.BXIM.bitrixIntranet?"IM_O_INVITE_TEXT_NEW":"IM_O_INVITE_TEXT_SITE_NEW")})]})]}),this.popupMessengerTextareaOpenJoin=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-join bx-notifier-item-button bx-notifier-item-button-confirm bx-notifier-item-button-accept"},html:BX.message("IM_O_INVITE_JOIN")})]}),BX.create("div",{props:{className:"bx-messenger-textarea-general-invite"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text-box"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text-box-element"},children:[this.popupMessengerTextareaGeneralText=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-text"}})]})]}),this.popupMessengerTextareaGeneralJoin=BX.create("div",{props:{className:"bx-messenger-textarea-open-invite-join bx-notifier-item-button bx-notifier-item-button-confirm bx-notifier-item-button-accept"},html:BX.message("IM_G_JOIN_"+this.BXIM.userGender)})]}),BX.create("div",{props:{className:"bx-messenger-textarea-resize"},events:{mousedown:BX.delegate(this.resizeTextareaStart,this)}}),BX.create("div",{props:{className:"bx-messenger-textarea-send"},children:[BX.create("a",{attrs:{href:"javascript:void(0);"},props:{className:"bx-messenger-textarea-send-button"},events:{click:BX.delegate(this.sendMessage,this)}}),this.popupMessengerTextareaSendType=BX.browser.IsMobile()?BX.create("span"):BX.create("span",{attrs:{title:BX.message("IM_M_SEND_TYPE_TITLE")},props:{className:"bx-messenger-textarea-cntr-enter"},html:this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter",events:{click:BX.delegate((function(){if(this.popupMessengerTextareaPlace&&this.popupMessengerTextareaPlace.className.indexOf("bx-messenger-textarea-with-text")==-1){return false}this.BXIM.settings.sendByEnter=this.BXIM.settings.sendByEnter?false:true;this.BXIM.saveSettings({sendByEnter:this.BXIM.settings.sendByEnter});BX.proxy_context.innerHTML=this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter"}),this)}})]}),this.popupMessengerTextareaIcons=BX.create("div",{props:{className:"bx-messenger-textarea-icons"},children:[this.popupMessengerFileButton=this.disk.getFileMenuIcon(),this.BXIM.context=="LINES"?null:BX.create("div",{attrs:{title:BX.message("IM_MENTION_MENU_NEW")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-mention"},events:{click:BX.delegate((function(e){this.openMentionDialog({delay:0});return BX.PreventDefault(e)}),this)}}),this.BXIM.context=="LINES"?null:BX.create("div",{attrs:{title:BX.message("IM_COMMAND_MENU")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-command"},events:{click:BX.delegate((function(e){this.openCommandDialog();return BX.PreventDefault(e)}),this)}}),this.popupMessengerSmileButton=BX.create("div",{attrs:{title:BX.message("IM_SMILE_MENU")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-smile"},events:{click:BX.delegate((function(e){this.openSmileMenu();return BX.PreventDefault(e)}),this)}}),this.popupMessengerCrmButton=BX.create("div",{attrs:{title:BX.message("IM_FORMS_MENU")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-forms"},events:{click:BX.delegate((function(e){this.openFormsMenu();return BX.PreventDefault(e)}),this)}}),this.popupMessengerHiddenModeButton=BX.create("div",{attrs:{title:BX.message("IM_HIDDEN_MODE_MENU")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-hidden"},events:{click:BX.delegate((function(e){this.linesToggleSilentMode();return BX.PreventDefault(e)}),this)}}),this.popupMessengerTextareaIconBox=BX.create("div",{props:{className:"bx-messenger-textarea-icon-box"}})]}),BX.create("div",{props:{className:"bx-messenger-textarea"},children:[this.popupMessengerTextarea=BX.create("textarea",{props:{value:this.textareaHistory[e]?this.textareaHistory[e]:"",className:"bx-messenger-textarea-input"},style:{height:this.popupMessengerTextareaSize+"px"}}),this.popupMessengerTextareaPlaceholder=BX.create("div",{props:{className:"bx-messenger-textarea-placeholder"},html:BX.message("IM_M_TA_TEXT")})]}),BX.create("div",{props:{className:"bx-messenger-textarea-clear"}})]})]})]}),this.popupMessengerExtra=BX.create("div",{props:{className:"bx-messenger-box-extra"},style:{marginLeft:this.popupContactListSize+"px",height:this.popupMessengerFullHeight+"px"}})]});this.textareaCheckText();this.BXIM.dialogOpen=true;if(BX.MessengerCommon.isPage()){if(BX.MessengerCommon.isPopupPage()){this.popupMessenger=new BX.PopupWindowSlider(this.BXIM)}else{this.popupMessenger=new BX.PopupWindowDesktop(this.BXIM)}BX.MessengerWindow.setTabContent("im",this.popupMessengerContent);this.disk.chatDialogInit();this.disk.chatAvatarInit()}else{this.popupMessenger=new BX.PopupWindow("bx-messenger-popup-messenger",null,{lightShadow:true,autoHide:false,closeByEsc:true,overlay:{opacity:50,backgroundColor:"#000000"},draggable:{restrict:true},events:{onPopupShow:BX.delegate((function(){this.disk.chatDialogInit();this.disk.chatAvatarInit()}),this),onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.closeMessenger()}),this)},titleBar:{content:BX.create("div")},closeIcon:{top:"10px",right:"13px"},content:this.popupMessengerContent,noAllPaddings:true,contentColor:BX.MessengerTheme.isDark()?"":"white"});this.popupMessenger.show();BX.bind(this.popupMessenger.popupContainer,"click",BX.MessengerCommon.preventDefault);if(this.webrtc.ready()){BX.addCustomEvent(this.popupMessenger,"onPopupDragStart",BX.delegate((function(){if(this.webrtc.callDialogAllow!=null)this.webrtc.callDialogAllow.destroy()}),this))}BX.bind(document,"click",BX.proxy(this.BXIM.autoHide,this.BXIM));BX.addCustomEvent(this.popupMessenger,"onPopupFullscreenEnter",BX.delegate((function(){BX.addClass(this.popupMessengerContent,"bx-messenger-fullscreen");this.messengerFullscreenStatus=true;this.resizeMainWindow();if(BX.browser.IsChrome()){setTimeout(BX.delegate((function(){this.resizeMainWindow()}),this),100)}this.popupMessengerBody.scrollTop=this.popupMessengerBody.scrollHeight-this.popupMessengerBody.offsetHeight}),this));BX.addCustomEvent(this.popupMessenger,"onPopupFullscreenLeave",BX.delegate((function(){BX.removeClass(this.popupMessengerContent,"bx-messenger-fullscreen");if(BX.browser.IsChrome()){BX.addClass(this.popupMessengerContent,"bx-messenger-fullscreen-chrome-hack");setTimeout(BX.delegate((function(){BX.removeClass(this.popupMessengerContent,"bx-messenger-fullscreen-chrome-hack")}),this),100)}this.resizeMainWindow();this.popupMessengerBody.scrollTop=this.popupMessengerBody.scrollHeight-this.popupMessengerBody.offsetHeight}),this))}this.BXIM.setBackground();this.popupMessengerTopLine=BX.create("div",{props:{className:"bx-messenger-box-topline"}});this.popupMessengerContent.insertBefore(this.popupMessengerTopLine,this.popupMessengerContent.firstChild);if(!BX.MessengerCommon.isDesktop()&&this.BXIM.bitrixIntranet&&this.BXIM.platformName!=""&&this.BXIM.settings.bxdNotify){clearTimeout(this.popupMessengerDesktopTimeout);this.popupMessengerDesktopTimeout=setTimeout(BX.delegate((function(){var e=BX.delegate((function(){window.open(BX.browser.IsMac()?"http://dl.bitrix24.com/b24/bitrix24_desktop.dmg":"http://dl.bitrix24.com/b24/bitrix24_desktop.exe","desktopApp");this.BXIM.settings.bxdNotify=false;this.BXIM.saveSettings({bxdNotify:this.BXIM.settings.bxdNotify});this.hideTopLine()}),this);var t=BX.delegate((function(){this.BXIM.settings.bxdNotify=false;this.BXIM.saveSettings({bxdNotify:this.BXIM.settings.bxdNotify});this.hideTopLine()}),this);this.showTopLine(BX.message("IM_DESKTOP_INSTALL").replace("#WM_NAME#",BX.message("IM_WM")).replace("#OS#",this.BXIM.platformName),[{title:BX.message("IM_DESKTOP_INSTALL_Y"),callback:e},{title:BX.message("IM_DESKTOP_INSTALL_N"),callback:t}],false)}),this),15e3)}this.textareaIconPrepare();BX.MessengerCommon.userListRedraw();if(this.BXIM.quirksMode){this.popupContactListWrap.style.position="absolute";this.popupContactListWrap.style.display="block"}this.setUpdateStateStep();if(!(BX.browser.IsAndroid()||BX.browser.IsIOS()||window!=window.top)&&this.popupMessenger!=null){setTimeout(BX.delegate((function(){this.popupMessengerTextarea.focus()}),this),50)}this.BXIM.initLeftPanelApp().then(function(){this.BXIM.leftpanelApp.initComponent(this.BXIM.messenger.popupNewRecentWrap)}.bind(this));if(this.webrtc.phoneEnabled&&this.BXIM.design!="DESKTOP"){BX.bind(this.popupContactListSearchCall,"click",BX.delegate(this.webrtc.openKeyPad,this.webrtc))}BX.bind(this.popupContactListSearchIcon,"click",BX.delegate((function(e){this.BXIM.openContactList()}),this));BX.bind(this.popupContactListWrap,"mouseover",BX.delegate((function(e){if(this.popupContactListHovered||this.popupContactListActive)return false;clearTimeout(this.popupContactListWrapAnimation);this.popupContactListWrapAnimation=setTimeout(BX.delegate((function(){BX.addClass(this.popupContactListWrap,"bx-messenger-box-contact-hover");clearTimeout(this.popupContactListWrapAnimation);this.popupContactListWrapAnimation=setTimeout(BX.delegate((function(){BX.removeClass(this.popupContactListWrap,"bx-messenger-box-contact-normal")}),this),100)}),this),2e3);this.popupContactListHovered=true}),this));BX.bind(this.popupContactListWrap,"mouseout",BX.delegate((function(e){if(!this.popupContactListHovered||this.popupContactListActive)return false;clearTimeout(this.popupContactListWrapAnimation);this.popupContactListWrapAnimation=setTimeout(BX.delegate((function(){BX.addClass(this.popupContactListWrap,"bx-messenger-box-contact-normal");clearTimeout(this.popupContactListWrapAnimation);this.popupContactListWrapAnimation=setTimeout(BX.delegate((function(){BX.removeClass(this.popupContactListWrap,"bx-messenger-box-contact-hover")}),this),50)}),this),400);this.popupContactListHovered=false}),this));var p=BX.delegate((function(e){if(!this.recentList){this.recentList=true;BX.MessengerCommon.recentListRedraw()}this.openPopupMenu(e.currentTarget,"createChat");return BX.PreventDefault(e)}),this);BX.bind(this.popupContactListCreateChat,"click",p);BX.bind(this.popupContactListCreateChatShort,"click",p);if(!this.tooltipIsShowed("IM_CREATE_MENU")){setTimeout(function(){this.tooltip(this.popupContactListCreateChat,BX.message("IM_M_CREATE_MENU_TOOLTIP"),{offsetLeft:41,offsetTop:10,showOnce:"IM_CREATE_MENU"})}.bind(this),5e3)}BX.bind(this.popupContactListSearchClose.parentNode,"click",BX.delegate((function(){this.popupContactListSearchInput.focus()}),this));BX.bind(this.popupMessengerDialog,"click",BX.delegate((function(e){if(this.recentList&&!this.chatList&&!this.contactList){return false}BX.MessengerCommon.contactListSearchClear(e)}),this));BX.bind(this.popupContactListSearchClose,"click",BX.delegate((function(e){BX.MessengerCommon.contactListSearchClear(e);return BX.PreventDefault(e)}),BX.MessengerCommon));BX.bind(this.popupContactListSearchInput,"focus",BX.delegate((function(e){clearTimeout(this.BXIM.messenger.redrawChatListTimeout);this.BXIM.messenger.redrawChatListTimeout=setTimeout(BX.delegate((function(){if(this.contactListSearchText.length==0&&!this.chatList&&!this.contactList){BX.MessengerCommon.chatListRedraw()}}),this),100);this.setClosingByEsc(false)}),this));BX.bind(this.popupContactListSearchInput,"blur",BX.delegate((function(){if(this.contactListSearchText.length==0&&!this.popupContactListHovered&&!this.recentList){this.setClosingByEsc(true)}}),this));if(BX.MessengerCommon.isDesktop()){BX.bind(this.popupContactListSearchInput,"contextmenu",BX.delegate((function(e){this.openPopupMenu(e,"copypaste",false,{spell:true});return BX.PreventDefault(e)}),this))}BX.bind(this.popupContactListSearchInput,"keyup",BX.delegate(BX.MessengerCommon.contactListSearch,BX.MessengerCommon));BX.bind(this.popupContactListSearchInput,"input",BX.delegate(BX.MessengerCommon.handleInputEvent,BX.MessengerCommon));BX.bind(this.popupMessengerPanelChatTitle,"click",BX.delegate(this.renameChatDialog,this));BX.bindDelegate(this.popupMessengerPanelUsers,"click",{className:"bx-messenger-panel-chat-user"},BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,"chatUser");return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupMessengerPanelUsers,"click",{className:"bx-notifier-popup-user-more"},BX.delegate((function(e){if(this.popupChatUsers!=null){this.popupChatUsers.destroy();return false}var t=this.getChatId();var s=[];for(var i=0;i<this.userInChat[t].length;i++){var n=this.users[this.userInChat[t][i]];if(!n||!n.active){continue}if(this.chat[t].entity_type=="LINES"&&this.chat[t].owner==0&&n.id!=this.BXIM.userId&&!(n.bot||n.connector)){continue}s.push(this.userInChat[t][i])}var a='<span class="bx-notifier-item-help-popup">';for(var i=parseInt(BX.proxy_context.getAttribute("data-last-item"));i<s.length;i++){var n=this.users[s[i]];var o=BX.MessengerCommon.isBlankAvatar(n.avatar)?'style="background-color: '+n.color+'"':"";a+='<span class="bx-notifier-item-help-popup-img bx-messenger-panel-chat-user" data-userId="'+n.id+'">'+'<span class="bx-notifier-popup-avatar  bx-notifier-popup-avatar-status-'+BX.MessengerCommon.getUserStatus(n)+'">'+'<span class="bx-notifier-popup-avatar-img'+(BX.MessengerCommon.isBlankAvatar(n.avatar)?" bx-notifier-popup-avatar-img-default":"")+'" '+BX.MessengerCommon.getAvatarStyle(n)+"></span>"+"</span>"+'<span class="bx-notifier-item-help-popup-name  '+(n.extranet?" bx-notifier-popup-avatar-extranet":"")+'">'+n.name+"</span>"+"</span>"}a+="</span>";this.popupChatUsers=new BX.PopupWindow("bx-messenger-popup-chat-users",BX.proxy_context,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),zIndex:BX.MessengerCommon.getDefaultZIndex()+200,lightShadow:true,offsetTop:-2,offsetLeft:3,autoHide:true,closeByEsc:true,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.proxy((function(){this.popupChatUsers=null}),this)},content:BX.create("div",{props:{className:"bx-messenger-popup-menu"+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},html:a})});if(!BX.MessengerTheme.isDark())this.popupChatUsers.setAngle({offset:BX.proxy_context.offsetWidth});BX.addClass(this.popupChatUsers.popupContainer,"bx-messenger-mark");this.popupChatUsers.show();BX.bindDelegate(this.popupChatUsers.popupContainer,"click",{className:"bx-messenger-panel-chat-user"},BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,"chatUser");return BX.PreventDefault(e)}),this));return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupContactListElements,"contextmenu",{className:"bx-messenger-cl-item"},BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,"contactList");return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupContactListElements,"click",{className:"bx-messenger-cl-item"},BX.delegate(BX.MessengerCommon.contactListClickItem,BX.MessengerCommon));BX.bindDelegate(this.popupContactListElements,"click",{className:"bx-messenger-chatlist-group-add"},BX.delegate((function(e){if(!this.recentList){this.recentList=true;BX.MessengerCommon.recentListRedraw()}this.openChatCreateForm(BX.proxy_context.getAttribute("data-type"))}),this));BX.bindDelegate(this.popupContactListElements,"click",{className:"bx-messenger-chatlist-more"},BX.delegate(this.toggleChatListGroup,this));BX.bindDelegate(this.popupContactListElements,"click",{className:"bx-messenger-chatlist-search-button"},BX.delegate((function(){this.BXIM.messenger.chatListSearchAction(BX.proxy_context.parentNode)}),this));BX.bind(this.popupContactListElements,"scroll",BX.delegate((function(e){if(this.checkRecentNeedLoad()){this.recentListLoadMore()}if(this.popupPopupMenu!=null&&this.popupPopupMenuDateCreate+500<+new Date&&this.popupPopupMenu.uniquePopupId.replace("bx-messenger-popup-","")=="contactList"){this.popupPopupMenu.close()}}),this));BX.bind(this.contactListPanelStatus,"click",BX.delegate((function(e){this.openPopupMenu(this.contactListPanelStatus,"status");return BX.PreventDefault(e)}),this));if(this.contactListPanelSettings){BX.bind(this.contactListPanelSettings,"click",BX.delegate((function(e){this.BXIM.openSettings();BX.PreventDefault(e)}),this))}if(this.contactListPanelFull){BX.bind(this.contactListPanelFull,"click",BX.delegate((function(e){this.popupMessenger.enterFullScreen();BX.PreventDefault(e)}),this))}BX.bind(this.popupMessengerEditTextarea,"focus",BX.delegate((function(){this.setClosingByEsc(false)}),this));BX.bind(this.popupMessengerEditTextarea,"blur",BX.delegate((function(){this.setClosingByEsc(true)}),this));BX.bind(this.popupMessengerEditTextarea,"keydown",BX.delegate((function(e){this.textareaPrepareText(BX.proxy_context,e,BX.delegate((function(){BX.MessengerCommon.editMessageAjax(this.popupMessengerEditMessageId,this.popupMessengerEditTextarea.value)}),this),BX.delegate((function(){setTimeout(function(){this.editMessageCancel()}.bind(this),50)}),this))}),this));if(BX.MessengerCommon.isDesktop()){BX.bind(this.popupMessengerEditTextarea,"contextmenu",BX.delegate((function(e){this.openPopupMenu(e,"copypaste",false,{spell:true});return BX.PreventDefault(e)}),this));BX.bind(this.popupMessengerTextarea,"contextmenu",BX.delegate((function(e){this.openPopupMenu(e,"copypaste",false,{spell:true});return BX.PreventDefault(e)}),this));BX.bind(this.popupMessengerEditTextarea,"click",BX.delegate((function(e){if(!(e.metaKey||e.ctrlKey)||!this.desktop.enableInVersion(34))return false;var t=BX.desktop.clipboardSelected(this.popupMessengerEditTextarea,true);if(!t.text)return false;BXDesktopSystem.SpellCheckWord(t.text,BX.delegate((function(e,t){if(e||t.length<=0)return false;var s=BX.desktop.clipboardSelected(this.popupMessengerEditTextarea,true);BX.desktop.clipboardReplaceText(this.popupMessengerEditTextarea,s.selectionStart,s.selectionEnd,t[0])}),this))}),this));BX.bind(this.popupMessengerTextarea,"click",BX.delegate((function(e){if(!(e.metaKey||e.ctrlKey)||!this.desktop.enableInVersion(34))return false;var t=BX.desktop.clipboardSelected(this.popupMessengerTextarea,true);if(!t.text)return false;BXDesktopSystem.SpellCheckWord(t.text,BX.delegate((function(e,t){if(e||t.length<=0)return false;var s=BX.desktop.clipboardSelected(this.popupMessengerTextarea,true);BX.desktop.clipboardReplaceText(this.popupMessengerTextarea,s.selectionStart,s.selectionEnd,t[0])}),this))}),this))}BX.bind(this.popupMessengerTextarea,"paste",BX.delegate(this.onPaste,this));BX.bind(this.popupMessengerTextarea,"focus",BX.delegate((function(){this.textareaCheckText();this.setClosingByEsc(false);BX.addClass(this.popupMessengerTextarea.parentNode,"bx-messenger-textarea-focus");BX.onCustomEvent(window,"onImTextareaFocus",[true])}),this));BX.bind(this.popupMessengerTextarea,"blur",BX.delegate((function(){this.textareaCheckText();this.setClosingByEsc(true);BX.removeClass(this.popupMessengerTextarea.parentNode,"bx-messenger-textarea-focus");BX.onCustomEvent(window,"onImTextareaFocus",[false])}),this));BX.bind(this.popupMessengerTextarea,"keydown",BX.delegate((function(e){this.textareaPrepareText(BX.proxy_context,e,BX.delegate(this.sendMessage,this),(function(){}))}),this));BX.bind(this.popupMessengerTextarea,"keyup",BX.delegate(this.textareaCheckText,this));if(BX.MessengerCommon.isDesktop()){BX.bindDelegate(this.popupMessengerBodyWrap,"contextmenu",{className:"bx-messenger-content-item-content"},BX.delegate((function(e){this.openPopupMenu(e,"dialogContext",false);return BX.PreventDefault(e)}),this))}BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-content-item-avatar-button"},BX.delegate((function(e){var t=BX.proxy_context.parentNode.parentNode.getAttribute("data-senderId");if(!this.users[t]||this.users[t].fake){return false}if(!(e.metaKey||e.ctrlKey)&&!e.target.className.includes("bx-messenger-content-item-avatar-name")){this.openPopupMenu(e.target,"chatUser",true,{userId:t});return BX.PreventDefault(e)}var s=BX.util.htmlspecialcharsback(this.users[t].name);if(e.altKey){s="[USER="+t+"]"+s+"[/USER]"}else{BX.MessengerCommon.addMentionList(this.currentTab,s,t)}this.insertTextareaText(this.popupMessengerTextarea," "+s+" ",false);this.popupMessengerTextarea.focus();return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-attach-block-spoiler"},BX.delegate((function(e){var t=BX.findChildByClassName(BX.proxy_context,"bx-messenger-attach-block-value");if(BX.hasClass(BX.proxy_context,"bx-messenger-attach-block-spoiler-show")){height=t.getAttribute("data-min-height");BX.removeClass(BX.proxy_context,"bx-messenger-attach-block-spoiler-show")}else{BX.addClass(BX.proxy_context,"bx-messenger-attach-block-spoiler-show");height=t.getAttribute("data-max-height")}t.style.maxHeight=height+"px"}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-content-item-menu"},BX.delegate((function(e){if(e.metaKey||e.ctrlKey){var t=BX.proxy_context.parentNode.parentNode.getAttribute("data-blockmessageid");if(this.message[t]&&this.users[this.message[t].senderId].name){var s=[];if(this.message[t].text){s.push(this.message[t].textOriginal)}if(this.message[t].params&&this.message[t].params.FILE_ID){for(var i=0;i<this.message[t].params.FILE_ID.length;i++){var n=this.message[t].params.FILE_ID[i];var a=this.message[t].chatId;if(this.disk.files[a][n]){s.push("["+BX.message("IM_F_FILE")+": "+this.disk.files[a][n].name+"]")}}}if(s.length>0){this.insertQuoteText(this.users[this.message[t].senderId].name,this.message[t].date,s.join("\n"))}}}else{this.openPopupMenu(BX.proxy_context,"dialogMenu")}return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-content-like-digit"},BX.delegate((function(e){BX.localStorage.set("implc",true,1);var t=BX.proxy_context.parentNode.parentNode.parentNode.parentNode.parentNode.getAttribute("data-blockmessageid");if(t.substr(0,4)=="temp"||!this.message[t].params||!this.message[t].params["LIKE"]||this.message[t].params["LIKE"].length<=0)return false;if(this.popupChatUsers!=null){this.popupChatUsers.destroy();return false}var s='<span class="bx-notifier-item-help-popup">';for(var i=0;i<this.message[t].params["LIKE"].length;i++){if(this.users[this.message[t].params["LIKE"][i]]){var n=BX.MessengerCommon.isBlankAvatar(this.users[this.message[t].params["LIKE"][i]].avatar)?'style="background-color: '+this.users[this.message[t].params["LIKE"][i]].color+'"':"";s+='<span class="bx-notifier-item-help-popup-img bx-messenger-panel-chat-user" data-userId="'+this.message[t].params["LIKE"][i]+'">'+'<span class="bx-notifier-popup-avatar  bx-notifier-popup-avatar-status-'+BX.MessengerCommon.getUserStatus(this.users[this.message[t].params["LIKE"][i]])+'">'+'<span class="bx-notifier-popup-avatar-img'+(BX.MessengerCommon.isBlankAvatar(this.users[this.message[t].params["LIKE"][i]].avatar)?" bx-notifier-popup-avatar-img-default":"")+'" '+BX.MessengerCommon.getAvatarStyle(this.users[this.message[t].params["LIKE"][i]])+"></span>"+"</span>"+'<span class="bx-notifier-item-help-popup-name  '+(this.users[this.message[t].params["LIKE"][i]].extranet?" bx-notifier-popup-avatar-extranet":"")+'">'+this.users[this.message[t].params["LIKE"][i]].name+"</span>"+"</span>"}}s+="</span>";this.popupChatUsers=new BX.PopupWindow("bx-messenger-popup-like-users",BX.proxy_context,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),zIndex:BX.MessengerCommon.getDefaultZIndex()+200,lightShadow:true,offsetTop:5,offsetLeft:12,autoHide:true,closeByEsc:true,bindOptions:{position:"top"},events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.proxy((function(){this.popupChatUsers=null}),this)},content:BX.create("div",{props:{className:"bx-messenger-popup-menu"+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},html:s})});if(!BX.MessengerTheme.isDark())this.popupChatUsers.setAngle({offset:BX.proxy_context.offsetWidth});BX.addClass(this.popupChatUsers.popupContainer,"bx-messenger-mark");this.popupChatUsers.show();BX.bindDelegate(this.popupChatUsers.popupContainer,"click",{className:"bx-messenger-panel-chat-user"},BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,"chatUser");return BX.PreventDefault(e)}),this));return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-keyboard-button-text"},BX.delegate(BX.MessengerCommon.clickButtonKeyboard,BX.MessengerCommon));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-content-like-button"},BX.delegate((function(e){var t=this.getChatId();if(this.openChatFlag&&!BX.MessengerCommon.userInChat(t)){return false}if(BX.localStorage.get("implc",true,1)){return false}var s=BX.proxy_context.parentNode.parentNode.parentNode.parentNode.parentNode.getAttribute("data-blockmessageid");BX.MessengerCommon.messageLike(s);return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-attach-delete"},BX.delegate((function(e){var t=BX.proxy_context.getAttribute("data-messageId");var s=BX.proxy_context.getAttribute("data-attachId");var i=BX.proxy_context.getAttribute("data-action");if(i=="url"){BX.MessengerCommon.messageUrlAttachDelete(t,s)}return BX.PreventDefault(e)}),this));BX.bind(this.popupMessengerTextareaOpenJoin,"click",BX.delegate((function(){if(this.currentTab.substr(0,4)!="chat"){return false}if(this.BXIM.messenger.popupMessengerDialog&&BX.hasClass(this.BXIM.messenger.popupMessengerDialog,"bx-messenger-chat-load-last-message")){return false}var e=this.currentTab.substr(4);BX.MessengerCommon.joinToChat(e);return true}),this));BX.bind(this.popupMessengerTextareaGeneralJoin,"click",BX.delegate((function(){if(this.BXIM.messenger.popupMessengerDialog&&BX.hasClass(this.BXIM.messenger.popupMessengerDialog,"bx-messenger-chat-load-last-message")){return false}this.BXIM.settings.generalNotify=false;this.BXIM.saveSettings({generalNotify:this.BXIM.settings.generalNotify});this.redrawChatHeader({userRedraw:false});this.popupMessengerTextarea.focus();return true}),this));BX.bind(this.popupMessengerTextareaOpenLinesAnswer,"click",BX.delegate((function(){if(this.currentTab.substr(0,4)!="chat")return false;if(this.BXIM.messenger.popupMessengerDialog&&BX.hasClass(this.BXIM.messenger.popupMessengerDialog,"bx-messenger-chat-load-last-message")){return false}var e=this.currentTab.substr(4);if(!BX.MessengerCommon.userInChat(e)){var t=BX.MessengerCommon.linesGetSession(this.chat[e]);if(parseInt(t.id)<=0){BX.MessengerCommon.linesStartSession(e)}else if(parseInt(this.chat[e].owner)==0){BX.MessengerCommon.linesAnswer(e)}else{BX.MessengerCommon.linesJoinSession(e)}}else{BX.MessengerCommon.linesAnswer(e)}return true}),this));BX.bind(this.popupMessengerTextareaOpenLinesSkip,"click",BX.delegate((function(){if(this.currentTab.substr(0,4)!="chat")return false;if(this.BXIM.messenger.popupMessengerDialog&&BX.hasClass(this.BXIM.messenger.popupMessengerDialog,"bx-messenger-chat-load-last-message")){return false}var e=this.currentTab.substr(4);if(!BX.MessengerCommon.userInChat(e)){BX.MessengerCommon.dialogCloseCurrent(true)}else if(BX.MessengerCommon.isSessionBlocked(e)){BX.MessengerCommon.linesMarkAsSpam(e)}else{BX.MessengerCommon.linesSkip(e)}return true}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-ajax"},BX.delegate((function(){if(BX.proxy_context.getAttribute("data-entity")=="readedList"){this.openPopupExternalData(BX.proxy_context,"readedList",true,{TAB:this.BXIM.messenger.currentTab})}else if(BX.proxy_context.getAttribute("data-entity")=="user"){this.openPopupExternalData(BX.proxy_context,"user",true,{ID:BX.proxy_context.getAttribute("data-userId")})}else if(BX.proxy_context.getAttribute("data-entity")=="openlines"){this.linesOpenHistory(BX.proxy_context.getAttribute("data-sessionId"))}else if(BX.proxy_context.getAttribute("data-entity")=="chat"){this.openPopupExternalData(BX.proxy_context,"chat",true,{ID:BX.proxy_context.getAttribute("data-chatId")})}else if(BX.proxy_context.getAttribute("data-entity")=="network"){this.openMessenger("network"+BX.proxy_context.getAttribute("data-networkId"))}else if(BX.proxy_context.getAttribute("data-entity")=="date"){this.openPopupMenu(BX.proxy_context,"shareMenu")}else if(this.webrtc.phoneSupport()&&BX.proxy_context.getAttribute("data-entity")=="phoneCallHistory"){this.openPopupExternalData(BX.proxy_context,"phoneCallHistory",true,{ID:BX.proxy_context.getAttribute("data-historyID")})}}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-command"},BX.delegate((function(){if(BX.proxy_context.getAttribute("data-entity")=="send"){this.BXIM.sendMessage(this.currentTab,BX.proxy_context.nextSibling.innerHTML)}else if(BX.proxy_context.getAttribute("data-entity")=="put"){this.BXIM.putMessage(BX.proxy_context.nextSibling.innerHTML)}else if(BX.proxy_context.getAttribute("data-entity")=="call"){this.BXIM.phoneTo(BX.proxy_context.getAttribute("data-command"))}}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-content-item-date"},BX.delegate((function(e){if(this.openLinesFlag&&BX.hasClass(BX.proxy_context.parentNode.parentNode.parentNode.parentNode,"bx-messenger-content-item-system")){this.tooltip(BX.proxy_context,BX.message("IM_TIP_OL_SYSTEM"),{offsetLeft:48})}BX.PreventDefault(e)}),this));BX.bind(this.popupMessengerBody,"scroll",BX.delegate((function(e){if(BX.MessengerCommon.getCounter(this.currentTab)&&BX.MessengerCommon.isScrollMax(this.popupMessengerBody,200)&&this.BXIM.isFocus()){clearTimeout(this.readMessageTimeout);this.readMessageTimeout=setTimeout(BX.delegate((function(){BX.MessengerCommon.readMessage(this.currentTab)}),this),100)}BX.MessengerCommon.redrawDateMarks();if(!this.redrawTab[this.currentTab]){BX.MessengerCommon.loadHistory(this.currentTab,false)}if(this.popupPopupMenu!=null){if(this.popupPopupMenuDateCreate+500<+new Date&&BX.util.in_array(this.popupPopupMenu.uniquePopupId.replace("bx-messenger-popup-",""),["copypaste","copylink","dialogContext","dialogMenu","external-data"])){this.popupPopupMenu.close()}else if(false&&BX.util.in_array(this.popupPopupMenu.uniquePopupId.replace("bx-messenger-popup-",""),["dialogMenu","external-data"])){this.popupPopupMenu.adjustPosition()}}if(this.popupChatUsers!=null&&this.popupChatUsers.uniquePopupId.replace("bx-messenger-popup-","")=="like-users"){this.popupChatUsers.close()}if(this.popupTooltip!=null){this.popupTooltip.close()}}),this));BX.bindDelegate(this.popupMessengerBodyWrap,"click",{className:"bx-messenger-content-item-error"},BX.delegate(BX.MessengerCommon.sendMessageRetry,BX.MessengerCommon));if(e==0){this.extraOpen(BX.create("div",{props:{className:"bx-messenger-box-hello-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-box-hello"},html:BX.message("IM_M_EMPTY")})]}))}else if(!BX.MessengerCommon.isPopupPage()){BX.MessengerCommon.openDialog(e)}s.resolve();return s};BX.MessengerChat.prototype.closeMessenger=function(){if(!this.popupMessenger||this.BXIM.callController.hasActiveCall()||BX.MessengerCommon.isPopupPage()&&BX.MessengerSlider.count()>1){return false}if(this.BXIM.popupSettings!=null)this.BXIM.popupSettings.close();if(this.BXIM.leftpanelApp){this.BXIM.leftpanelApp.bitrixVue.unmount()}this.closeMenuPopup();this.popupMessenger=null;BX.remove(this.popupMessengerContent);this.popupMessengerContent=null;this.mentionListen=false;this.mentionDelimiter="";this.BXIM.extraOpen=false;this.BXIM.dialogOpen=false;this.BXIM.notifyOpen=false;this.linesList=false;this.popupContactListSearchInput.value="";this.contactListSearchText="";this.chatList=false;this.recentList=true;this.linesList=false;this.contactList=false;clearTimeout(this.popupMessengerDesktopTimeout);this.setUpdateStateStep();BX.unbind(document,"click",BX.proxy(this.BXIM.autoHide,this.BXIM));if(BX.MessengerCommon.isPage()){BX.MessengerWindow.currentTab="im"}return true};BX.MessengerChat.prototype.openMessengerPanel=function(){if(!this.popupMessengerBodyPanel)return false;this.popupMessengerPanelOpen=true;this.popupMessengerBody.style.width="calc(100% - 400px)";this.popupMessengerTextareaPlace.style.width="calc(100% - 400px)";this.popupMessengerBodyPanel.style.height=this.popupMessengerBodyDialog.offsetHeight+"px";this.popupMessengerBodyPanel.style.right="0";return true};BX.MessengerChat.prototype.closeMessengerPanel=function(){if(!this.popupMessengerBodyPanel)return false;this.popupMessengerPanelOpen=false;this.popupMessengerBody.style.removeProperty("width");this.popupMessengerTextareaPlace.style.removeProperty("width");this.popupMessengerBodyPanel.style.removeProperty("right");return true};BX.MessengerChat.prototype.enterFullScreen=function(){if(this.messengerFullscreenStatus){if(document.cancelFullScreen)document.cancelFullScreen();else if(document.mozCancelFullScreen)document.mozCancelFullScreen();else if(document.webkitCancelFullScreen)document.webkitCancelFullScreen()}else{if(BX.browser.IsChrome()||BX.browser.IsSafari()){this.popupMessengerContent.webkitRequestFullScreen(this.popupMessengerContent.ALLOW_KEYBOARD_INPUT);BX.bind(window,"webkitfullscreenchange",this.messengerFullscreenBind=BX.proxy(this.eventFullScreen,this))}else if(BX.browser.IsFirefox()){this.popupMessengerContent.mozRequestFullScreen(this.popupMessengerContent.ALLOW_KEYBOARD_INPUT);BX.bind(window,"mozfullscreenchange",this.messengerFullscreenBind=BX.proxy(this.eventFullScreen,this))}}};BX.MessengerChat.prototype.eventFullScreen=function(e){if(this.messengerFullscreenStatus){if(BX.browser.IsChrome()||BX.browser.IsSafari())BX.unbind(window,"webkitfullscreenchange",this.messengerFullscreenBind);else if(BX.browser.IsFirefox())BX.unbind(window,"mozfullscreenchange",this.messengerFullscreenBind);BX.removeClass(this.popupMessengerContent,"bx-messenger-fullscreen");if(BX.browser.IsChrome()){BX.addClass(this.popupMessengerContent,"bx-messenger-fullscreen-chrome-hack");setTimeout(BX.delegate((function(){BX.removeClass(this.popupMessengerContent,"bx-messenger-fullscreen-chrome-hack")}),this),100)}this.messengerFullscreenStatus=false;this.resizeMainWindow();this.popupMessenger.adjustPosition()}else{BX.addClass(this.popupMessengerContent,"bx-messenger-fullscreen");this.messengerFullscreenStatus=true;this.resizeMainWindow();if(BX.browser.IsChrome()){setTimeout(BX.delegate((function(){this.resizeMainWindow()}),this),100)}}this.popupMessengerBody.scrollTop=this.popupMessengerBody.scrollHeight-this.popupMessengerBody.offsetHeight};BX.MessengerChat.prototype.tooltip=function(e,t,s){if(this.tooltipIsOpen())this.popupTooltip.close();s=s||{};s.offsetLeft=s.offsetLeft||0;s.offsetTop=s.offsetTop||BX.MessengerCommon.isDesktop()?0:-10;s.width=s.width||0;s.autoHide=typeof s.autoHide=="undefined"?true:s.autoHide;s.angle=typeof s.angle=="undefined"?true:s.angle;s.angleDarkMode=typeof s.angleDarkMode=="undefined"?false:s.angleDarkMode;s.showOnce=typeof s.showOnce=="undefined"?false:s.showOnce;s.bindOptions=typeof s.bindOptions=="undefined"?{position:"top"}:s.bindOptions;s.closeIcon=typeof s.closeIcon=="undefined"?{}:s.closeIcon;if(s.showOnce){if(this.tooltipIsShowed(s.showOnce)){return true}else{BX.userOptions.save("im","tooltipShowed",s.showOnce,1);this.tooltipShowed[s.showOnce]=1}}var i=null;if(typeof t=="object"){i=BX.create("div",{props:{className:"bx-messenger-tooltip",style:"padding-right: 14px;"+(s.width>0?"width: "+s.width+"px;":"")},children:[t]})}else{i=BX.create("div",{props:{className:"bx-messenger-tooltip",style:"padding-right: 14px;"+(s.width>0?"width: "+s.width+"px;":"")},html:t})}this.popupTooltip=new BX.PopupWindow("bx-messenger-tooltip",e,{targetContainer:document.body,lightShadow:true,autoHide:s.autoHide,darkMode:true,offsetLeft:s.offsetLeft,offsetTop:s.offsetTop,closeIcon:s.closeIcon,bindOptions:s.bindOptions,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupTooltip=null}),this)},zIndex:BX.MessengerCommon.getDefaultZIndex()+200,content:i});if(s.angle&&(!BX.MessengerTheme.isDark()||s.angleDarkMode)){this.popupTooltip.setAngle({offset:23,position:s.bindOptions.position=="top"?"bottom":"top"})}this.popupTooltip.show();return true};BX.MessengerChat.prototype.tooltipIsOpen=function(){return this.popupTooltip!=null};BX.MessengerChat.prototype.tooltipIsShowed=function(e){return!!this.tooltipShowed[e]};BX.MessengerChat.prototype.tooltipClose=function(){if(this.tooltipIsOpen())this.popupTooltip.close()};BX.MessengerChat.prototype.dialogStatusRedraw=function(e){if(this.popupMessenger==null)return false;e=e||{};this.popupMessengerPanelButtonCall1.className=this.callButtonStatus(this.currentTab).class;this.popupMessengerPanelButtonCall1.firstElementChild.innerText=this.callButtonStatus(this.currentTab).name;this.popupMessengerPanelButtonCall2.className=this.callButtonStatus(this.currentTab).class;this.popupMessengerPanelButtonCall2.firstElementChild.innerText=this.callButtonStatus(this.currentTab).name;this.popupMessengerPanelButtonCall3.className=this.phoneButtonStatus();if(this.popupMessengerFileButton)BX.show(this.popupMessengerFileButton);this.popupMessengerPanel.className=this.openChatFlag?"bx-messenger-panel bx-messenger-context-user bx-messenger-hide":"bx-messenger-panel bx-messenger-context-user";clearInterval(this.popupMessengerPanelLastDateInterval);this.popupMessengerTextarea.disabled=false;if(this.openChatFlag){this.textareaIconToggle();this.redrawChatHeader(e)}else if(this.users[this.currentTab]){BX.style(this.popupOpenLinesSpam,"display","");if(this.popupMessengerFileFormChatId){this.popupMessengerFileFormChatId.value=this.userChat[this.currentTab]?this.userChat[this.currentTab]:0;if(parseInt(this.popupMessengerFileFormChatId.value)>0){this.popupMessengerFileFormInput.removeAttribute("disabled")}else{this.popupMessengerFileFormInput.setAttribute("disabled",true)}}if(this.openChatFlag){this.popupMessengerPanelMute.title=this.muteButtonStatus(this.currentTab)?BX.message("IM_M_CHAT_MUTE_ON_2"):BX.message("IM_M_CHAT_MUTE_OFF_2")}else{this.popupMessengerPanelMute.title=this.muteButtonStatus(this.currentTab)?BX.message("IM_M_USER_BLOCK_OFF"):BX.message("IM_M_USER_BLOCK_ON")}this.popupMessengerPanelMute.className="bx-messenger-panel-button bx-messenger-panel-mute "+(this.muteButtonStatus(this.currentTab)?" bx-messenger-panel-unmute":"");this.popupMessengerPanelAvatar.parentNode.href=this.users[this.currentTab].profile;this.popupMessengerPanelAvatar.parentNode.className="bx-messenger-panel-avatar bx-messenger-panel-avatar-status-"+BX.MessengerCommon.getUserStatus(this.users[this.currentTab]);this.popupMessengerPanelAvatar.parentNode.title=BX.MessengerCommon.getUserStatus(this.users[this.currentTab],false).title;if(!BX.MessengerCommon.isBlankAvatar(this.users[this.currentTab].avatar)){this.popupMessengerPanelAvatar.style="background: url('"+this.users[this.currentTab].avatar+"'); background-size: cover;"}else{this.popupMessengerPanelAvatar.style="background-color: "+this.users[this.currentTab].color}this.popupMessengerPanelAvatar.className="bx-messenger-panel-avatar-img"+(BX.MessengerCommon.isBlankAvatar(this.users[this.currentTab].avatar)?" bx-messenger-panel-avatar-img-default":"");BX.style(this.popupMessengerPanelAvatar,"background-color",BX.MessengerCommon.isBlankAvatar(this.users[this.currentTab].avatar)&&this.users[this.currentTab].color?this.users[this.currentTab].color:"");this.popupMessengerPanelTitle.href=this.users[this.currentTab].profile;this.popupMessengerPanelTitle.innerHTML=this.users[this.currentTab].name;if(this.BXIM.userId==this.currentTab){this.popupMessengerPanelTitle.innerHTML=this.popupMessengerPanelTitle.innerHTML+" (<b><i>"+BX.message("IM_YOU")+"</i></b>)"}var t=BX.delegate((function(){if(!this.popupMessengerPanelLastDate||this.currentTab&&this.currentTab.toString().substr(0,4)=="chat")return false;var e=BX.MessengerCommon.getUserLastDate(this.users[this.currentTab]);this.popupMessengerPanelLastDate.innerHTML=e?". "+e:"";return true}),this);t();this.popupMessengerPanelLastDateInterval=setInterval(t,6e4);this.popupMessengerPanelStatus.innerHTML=BX.MessengerCommon.getUserPosition(this.users[this.currentTab],false);var s=[];if(this.users[this.currentTab].extranet){if(this.users[this.currentTab].network){BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-network");BX.addClass(this.popupMessengerPanelTitle,"bx-messenger-user-network");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-extranet");s.push("bx-messenger-dialog-extranet")}else{BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-extranet");BX.addClass(this.popupMessengerPanelTitle,"bx-messenger-user-extranet");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-network");s.push("bx-messenger-dialog-network")}BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-support24");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-bot");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-lines-imessage");s.push("bx-messenger-dialog-bot");s.push("bx-messenger-dialog-self");s.push("bx-messenger-dialog-support24")}else if(this.users[this.currentTab].bot){if(this.bot[this.currentTab]&&this.bot[this.currentTab].type=="support24"){BX.addClass(this.popupMessengerPanelTitle,"bx-messenger-user-support24");BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-support24");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-bot");BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-bot");s.push("bx-messenger-dialog-bot");s.push("bx-messenger-dialog-network")}else if(this.bot[this.currentTab]&&this.bot[this.currentTab].type=="network"){BX.addClass(this.popupMessengerPanelTitle,"bx-messenger-user-network");BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-network");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-bot");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-support24");s.push("bx-messenger-dialog-bot");s.push("bx-messenger-dialog-support24")}else{BX.addClass(this.popupMessengerPanelTitle,"bx-messenger-user-bot");BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-bot");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-network");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-support24");s.push("bx-messenger-dialog-network");s.push("bx-messenger-dialog-support24")}BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-extranet");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-lines-imessage");s.push("bx-messenger-dialog-extranet");s.push("bx-messenger-dialog-self");this.popupMessengerPanelBotIcons=true}else{BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-extranet");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-bot");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-network");BX.removeClass(this.popupMessengerPanelTitle,"bx-messenger-user-support24");s.push("bx-messenger-dialog-bot");s.push("bx-messenger-dialog-network");s.push("bx-messenger-dialog-support24");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-lines-imessage");s.push("bx-messenger-dialog-extranet");if(this.BXIM.userId==this.currentTab){BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-self")}else{s.push("bx-messenger-dialog-self")}}this.popupMessengerTextarea.disabled=false;this.textareaIconToggle();s.push("bx-messenger-chat-guest");s.push("bx-messenger-chat-open");s.push("bx-messenger-chat-chat");s.push("bx-messenger-chat-call");s.push("bx-messenger-chat-general");s.push("bx-messenger-chat-general-first-open");s.push("bx-messenger-chat-general-access");s.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-announcement-access");BX.removeClass(this.popupMessengerDialog,s.join(" "))}return true};BX.MessengerChat.prototype.muteButtonStatus=function(e){var t=0;if(e.toString().substr(0,4)=="chat"){t=e.toString().substr(4)}else{t=this.userChat[e]}return this.userChatBlockStatus[t]&&this.userChatBlockStatus[t][this.BXIM.userId]};BX.MessengerChat.prototype.callButton=function(e){var t=null;if(e=="call"){t=BX.create("span",{props:{className:this.phoneButtonStatus()},children:[BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_PHONE_CALL")},props:{className:"bx-messenger-panel-button bx-messenger-panel-call-audio"},events:{click:BX.delegate((function(e){if(BX.MessengerCalls.hasActiveCall())return false;var t=this.chat[this.getChatId()];if(t.call_number){this.BXIM.phoneTo(t.call_number)}else{this.webrtc.openKeyPad()}BX.PreventDefault(e)}),this)},html:BX.message("IM_PHONE_CALL")})]})}else{var s=this.callButtonStatus(this.currentTab);t=BX.create("span",{props:{className:s.class},children:[BX.create("a",{attrs:{href:"javascript:void(0);",title:BX.message("IM_M_CALL_VIDEO_HD")},props:{className:"bx-messenger-panel-button bx-messenger-panel-call-video"},events:{click:BX.delegate((function(e){if(this.openChatFlag&&this.chat[this.currentTab.substr(4)].type==="videoconf"){var t=BX.MessengerCommon.getVideoconfLink(this.currentTab);if(t){BXIM.openVideoconfByUrl(t)}else{console.error("getVideoconfLink is empty for dialog",this.currentTab)}}else if(!BX.MessengerCalls.hasActiveCall()){if(this.BXIM.checkCallSupport(this.currentTab)){this.BXIM.callTo(this.currentTab,true)}else{this.openPopupMenu(BX.proxy_context,"callMenu")}}BX.PreventDefault(e)}),this)},html:s.name}),BX.create("a",{attrs:{href:"javascript:void(0);"},props:{className:"bx-messenger-panel-call-menu"},events:{click:BX.delegate((function(e){if(this.openChatFlag&&this.chat[this.currentTab.substr(4)].type==="videoconf"){this.openPopupMenu(BX.proxy_context,"videoConfMenu",true,{chatId:this.currentTab.substr(4)})}else if(!BX.MessengerCalls.hasActiveCall()){this.openPopupMenu(BX.proxy_context,"callMenu")}BX.PreventDefault(e)}),this)}})]})}return t};BX.MessengerChat.prototype.changeVideoconfCode=function(e){e=e.toString();BX.rest.callMethod("im.videoconf.share.change",{DIALOG_ID:e}).then((function(e){console.warn("rest-method result",e)}))};BX.MessengerChat.prototype.callButtonStatus=function(e){e=e.toString();var t="bx-messenger-panel-button-box bx-messenger-panel-call-hide";var s=BX.message("IM_M_CALL_VIDEO_HD");var i="private";if(e.startsWith("chat")&&this.chat[e.substr(4)]){i=this.chat[e.substr(4)].type}if(i!=="private"&&(this.chat[e.substr(4)].type=="lines"||this.chat[e.substr(4)].type=="livechat"||this.chat[e.substr(4)].type=="announcement"||BX.MessengerCommon.checkRestriction(e.substr(4),"CALL"))){}else if(this.BXIM.ppServerStatus&&(!this.users[e]||!this.users[e].network)){if(!this.BXIM.checkCallSupport(e)){if(this.BXIM.zoomStatus["active"]){t="bx-messenger-panel-button-box bx-messenger-panel-call-disabled bx-messenger-panel-call-services"}else{t="bx-messenger-panel-button-box bx-messenger-panel-call-blocked"}}else if(i!=="videoconf"&&BX.MessengerCalls.hasActiveCall()){t="bx-messenger-panel-button-box bx-messenger-panel-call-disabled"}else{t="bx-messenger-panel-button-box bx-messenger-panel-call-enabled"}}if(i==="videoconf"){s=BX.message("IM_M_CALL_VIDEOCONF")}return{class:t,name:s}};BX.MessengerChat.prototype.phoneButtonStatus=function(){var e="bx-messenger-panel-call-hide";if(this.BXIM.ppServerStatus)e=this.webrtc.phoneSupport()&&this.webrtc.phoneCanPerformCalls?"bx-messenger-panel-call-enabled":"bx-messenger-panel-call-disabled";return"bx-messenger-panel-call-phone "+e};BX.MessengerChat.prototype.chatListSearchAction=function(e){this.realSearch=true;this.popupContactListElementsWrap.appendChild(BX.create("div",{props:{className:"bx-messenger-cl-item-search"},html:BX.message("IM_M_CL_SEARCH")}));BX.remove(e);BX.MessengerCommon.contactListRealSearch(this.contactListSearchText)};BX.MessengerChat.prototype.toggleChatListGroup=function(){if(BX.hasClass(BX.proxy_context.parentNode.parentNode,"bx-messenger-chatlist-show-all")){this.contactListShowed[BX.proxy_context.getAttribute("data-id")]=false;BX.proxy_context.innerHTML=BX.proxy_context.getAttribute("data-text");BX.removeClass(BX.proxy_context.parentNode.parentNode,"bx-messenger-chatlist-show-all");if(this.popupContactListElements){var e=BX.pos(BX.proxy_context,true);this.popupContactListElements.scrollTop=e.top-100}}else{this.contactListShowed[BX.proxy_context.getAttribute("data-id")]=true;BX.proxy_context.innerHTML=BX.message("IM_CL_HIDE");BX.addClass(BX.proxy_context.parentNode.parentNode,"bx-messenger-chatlist-show-all")}};BX.MessengerChat.prototype.openVideoConfCreateForm=function(){this.videoconfCreateForm=BX.create("div",{props:{className:"bx-messenger-videoconf-create-box"},children:[BX.create("div",{props:{className:"bx-messenger-videoconf-create"}})]});this.extraOpen(this.videoconfCreateForm);var e=this;BX.Vue.create({el:".bx-messenger-videoconf-create",template:"<bx-im-component-conference-create :userId='userId' :darkTheme='darkTheme' :broadcastingEnabled='broadcastingEnabled'/>",data:function(){return{userId:e.BXIM.userId,darkTheme:BX.MessengerTheme.isDark(),broadcastingEnabled:e.BXIM.broadcastingEnabled}}})};BX.MessengerChat.prototype.openChatCreateForm=function(e){this.currentTab="create";var t=[];var s="";var i="";if(e=="chat"){s="#49afdf";t=[BX.create("div",{props:{className:"bx-messenger-box-create-icon bx-messenger-box-create-icon-"+e},children:[BX.create("div",{props:{className:"bx-messenger-box-create-icon-image"}})]}),BX.create("div",{props:{className:"bx-messenger-box-create-title"},html:BX.message("IM_CL_CHAT_NEW")}),BX.create("div",{props:{className:"bx-messenger-box-create-text"},html:BX.message(this.BXIM.bitrixIntranet?"IM_C_ABOUT_CHAT":"IM_C_ABOUT_CHAT_CHAT").split("#BR#").join("<br />").replace("#PROFILE_END#","</a>").replace("#PROFILE_START#",'<a href="'+BXIM.path.profile+'edit/">')})]}else if(e=="open"&&(!this.BXIM.userExtranet||this.openChatEnable)){s="#a7c131";t=[BX.create("div",{props:{className:"bx-messenger-box-create-icon bx-messenger-box-create-icon-"+e},children:[BX.create("div",{props:{className:"bx-messenger-box-create-icon-image"}})]}),BX.create("div",{props:{className:"bx-messenger-box-create-title"},html:BX.message("IM_CL_OPEN_CHAT_NEW")}),BX.create("div",{props:{className:"bx-messenger-box-create-text"},html:BX.message(this.BXIM.bitrixIntranet?"IM_C_ABOUT_OPEN_NEW":"IM_C_ABOUT_OPEN_SITE_NEW").split("#BR#").join("<br />").replace("#PROFILE_END#","</a>").replace("#PROFILE_START#",'<a href="'+BXIM.path.profile+'edit/">').replace("#CHAT_END#","</b>").replace("#CHAT_START#","<b>")})]}else{e="private";s=this.users[this.BXIM.userId].color;t=[BX.create("div",{props:{className:"bx-messenger-box-create-icon bx-messenger-box-create-icon-"+e},children:[BX.create("div",{props:{className:"bx-messenger-box-create-icon-image"}})]}),BX.create("div",{props:{className:"bx-messenger-box-create-title"},html:BX.message("IM_CL_PRIVATE_CHAT_NEW")}),BX.create("div",{props:{className:"bx-messenger-box-create-text"},html:BX.message(this.BXIM.bitrixIntranet?"IM_C_ABOUT_PRIVATE":"IM_C_ABOUT_PRIVATE_SITE").split("#BR#").join("<br />").replace("#PROFILE_END#","</a>").replace("#PROFILE_START#",'<a href="'+BXIM.path.profile+'edit/">')})]}if(this.chatCreateForm&&!BX.browser.IsIE11()){this.extraOpen(this.chatCreateForm);if(this.chatCreateFormAvatar.parentNode){this.chatCreateFormAvatar.parentNode.className="bx-messenger-panel-avatar bx-messenger-panel-avatar-"+e}BX.style(this.chatCreateFormAvatar,"background-color",s);this.chatCreateType=e;this.chatCreateUsers={};this.chatCreateFormDescription.innerHTML="";BX.adjust(this.chatCreateFormDescription,{children:t});BX.MessengerCommon.clearMentionList("create");this.chatCreateFormChatTitle.value="";this.chatCreateFormUsersInput.value="";this.chatCreateFormUsersDest.innerHTML="";this.popupCreateChatTextarea.value="";this.textareaCheckText({textarea:"createChat"});BX.style(this.chatCreateFormBody,"height",this.popupMessengerBodySize+"px");BX.style(this.popupCreateChatTextarea,"height",this.popupMessengerTextareaSize+"px");if(e=="open"){BX.addClass(this.chatCreateFormUsersInput.parentNode.parentNode,"bx-messenger-hide");BX.removeClass(this.chatCreateFormChatTitle.parentNode.parentNode,"bx-messenger-hide")}else{BX.addClass(this.chatCreateFormChatTitle.parentNode.parentNode,"bx-messenger-hide");BX.removeClass(this.chatCreateFormUsersInput.parentNode.parentNode,"bx-messenger-hide");BX.removeClass(this.chatCreateFormUsersInput,"bx-messenger-hide");BX.addClass(this.chatCreateFormUsersInput,"bx-messenger-input-dest-empty")}if(this.chatCreateUsers.length>0&&this.popupCreateChatTextarea.value.length>0){this.popupCreateChatTextarea.focus()}else{if(e=="open"){this.chatCreateFormChatTitle.focus()}else{this.chatCreateFormUsersInput.focus()}}}else{this.chatCreateType=e;this.chatCreateUsers={};BX.MessengerCommon.clearMentionList("create");this.chatCreateForm=BX.create("div",{props:{className:"bx-messenger-box-create"},children:[BX.create("div",{props:{className:"bx-messenger-panel"},children:[BX.create("div",{props:{className:"bx-messenger-panel-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-"+e},children:[this.chatCreateFormAvatar=BX.create("span",{attrs:{style:"background-color: "+s},props:{className:"bx-messenger-panel-avatar-img bx-messenger-panel-avatar-img-default"}})]}),BX.create("span",{props:{className:"bx-messenger-panel-title bx-messenger-panel-create-chat "+(e=="open"?"bx-messenger-hide":"")},children:[BX.create("div",{props:{className:"bx-messenger-input-wrap bx-messenger-panel-create-input"},children:[this.chatCreateFormUsersDest=BX.create("span",{props:{className:"bx-messenger-dest-items"}}),this.chatCreateFormUsersInput=BX.create("input",{props:{className:"bx-messenger-input bx-messenger-input-dest-empty"},attrs:{type:"text",value:"",placeholder:BX.message("IM_M_SEARCH_PLACEHOLDER")}})]})]}),BX.create("span",{props:{className:"bx-messenger-panel-title bx-messenger-panel-create-chat "+(e!="open"?"bx-messenger-hide":"")},children:[BX.create("div",{props:{className:"bx-messenger-input-wrap bx-messenger-panel-create-input"},children:[this.chatCreateFormChatTitle=BX.create("input",{props:{className:"bx-messenger-input bx-messenger-input-dest-empty"},attrs:{type:"text",value:"",placeholder:BX.message("IM_C_CHAT_TITLE_NEW")}})]})]})]})]}),BX.create("div",{props:{className:"bx-messenger-body-dialog"},children:[this.chatCreateFormBody=BX.create("div",{props:{className:"bx-messenger-body"},style:{height:this.popupMessengerBodySize+"px"},children:[BX.create("div",{props:{className:"bx-messenger-box-create-desc"},children:[this.chatCreateFormDescription=BX.create("div",{props:{className:"bx-messenger-box-create-desc-wrap"},children:t})]})]}),BX.create("div",{props:{className:"bx-messenger-textarea-place"},children:[BX.create("div",{props:{className:"bx-messenger-textarea-resize"}}),BX.create("div",{props:{className:"bx-messenger-textarea-send"},children:[BX.create("a",{attrs:{href:"javascript:void(0);"},props:{className:"bx-messenger-textarea-send-button"},events:{click:BX.delegate((function(){this.createChat(this.chatCreateType,this.chatCreateUsers,this.popupCreateChatTextarea.value)}),this)}}),BX.create("span",{attrs:{title:BX.message("IM_M_SEND_TYPE_TITLE")},props:{className:"bx-messenger-textarea-cntr-enter"},html:this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter",events:{click:BX.delegate((function(){this.BXIM.settings.sendByEnter=this.BXIM.settings.sendByEnter?false:true;this.BXIM.saveSettings({sendByEnter:this.BXIM.settings.sendByEnter});BX.proxy_context.innerHTML=this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter";this.popupMessengerTextareaSendType.innerHTML=BX.proxy_context.innerHTML}),this)}})]}),BX.create("div",{props:{className:"bx-messenger-textarea-icons"},children:[!this.disk.enable?null:BX.create("div",{attrs:{title:BX.message("IM_F_UPLOAD_MENU")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-file"},events:{click:BX.delegate((function(e){this.BXIM.openConfirm(BX.message("IM_F_ERR_NC"))}),this)}}),BX.create("div",{attrs:{title:BX.message("IM_MENTION_MENU_NEW")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-mention"},events:{click:BX.delegate((function(e){this.openMentionDialog({delay:0,textarea:"createChat"});return BX.PreventDefault(e)}),this)}}),BX.create("div",{attrs:{title:BX.message("IM_SMILE_MENU")},props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-smile"},events:{click:BX.delegate((function(e){this.openSmileMenu({textarea:"createChat",bind:e.currentTarget});return BX.PreventDefault(e)}),this)}})]}),BX.create("div",{props:{className:"bx-messenger-textarea"},children:[this.popupCreateChatTextarea=BX.create("textarea",{props:{value:"",className:"bx-messenger-textarea-input"},style:{height:this.popupMessengerTextareaSize+"px"}}),BX.create("div",{props:{className:"bx-messenger-textarea-placeholder"},html:BX.message("IM_M_TA_TEXT")})]}),BX.create("div",{props:{className:"bx-messenger-textarea-clear"}})]})]})]});if(BX.MessengerCommon.isDesktop()){BX.bind(this.popupCreateChatTextarea,"contextmenu",BX.delegate((function(e){this.openPopupMenu(e,"copypaste",false,{spell:true});return BX.PreventDefault(e)}),this))}BX.bind(this.popupCreateChatTextarea,"focus",BX.delegate((function(){this.textareaCheckText({textarea:"createChat"});this.setClosingByEsc(false);BX.addClass(this.popupCreateChatTextarea.parentNode,"bx-messenger-textarea-focus")}),this));BX.bind(this.popupCreateChatTextarea,"blur",BX.delegate((function(){this.textareaCheckText({textarea:"createChat"});this.setClosingByEsc(true);BX.removeClass(this.popupCreateChatTextarea.parentNode,"bx-messenger-textarea-focus")}),this));BX.bind(this.chatCreateFormChatTitle,"keydown",BX.delegate((function(e){this.textareaPrepareText(BX.proxy_context,e,BX.delegate((function(){this.createChat(this.chatCreateType,this.chatCreateUsers,this.popupCreateChatTextarea.value)}),this),(function(){}))}),this));BX.bind(this.chatCreateFormChatTitle,"keydown",BX.delegate((function(e){if(e.keyCode==9||e.keyCode==13){this.popupCreateChatTextarea.focus();return BX.PreventDefault(e)}}),this));BX.bind(this.popupCreateChatTextarea,"keydown",BX.delegate((function(e){this.textareaPrepareText(BX.proxy_context,e,BX.delegate((function(){this.createChat(this.chatCreateType,this.chatCreateUsers,this.popupCreateChatTextarea.value)}),this),(function(){}))}),this));BX.bind(this.popupCreateChatTextarea,"keyup",BX.delegate((function(){this.textareaCheckText({textarea:"createChat"})}),this));if(BX.MessengerCommon.isDesktop()){BX.bindDelegate(this.popupMessengerBodyWrap,"contextmenu",{className:"bx-messenger-content-item-content"},BX.delegate((function(e){this.openPopupMenu(e,"dialogContext",false);return BX.PreventDefault(e)}),this))}this.extraOpen(this.chatCreateForm);if(e=="open"){this.chatCreateFormChatTitle.focus()}else{this.chatCreateFormUsersInput.focus();BX.bind(this.chatCreateFormUsersInput,"keyup",BX.delegate((function(e){if(!this.popupChatDialog&&this.chatCreateFormUsersInput.value.length>0){this.openChatDialog({type:"CHAT_CREATE",bind:this.chatCreateFormUsersInput,bindResult:this.chatCreateFormUsersDest,bindSearch:this.chatCreateFormUsersInput,bindUsersList:this.chatCreateUsers,skipBind:this.chatCreateFormSkipDialogBind});this.chatCreateFormSkipDialogBind=true}}),this))}}};BX.MessengerChat.prototype.getChatId=function(){if(this.currentTab.toString().substr(0,4)==="chat"){return this.currentTab.toString().substr(4)}else{return this.userChat[this.currentTab]}};BX.MessengerChat.prototype.createChat=function(e,t,s){var i=new BX.Promise;if(this.BXIM.popupConfirm!=null){this.BXIM.popupConfirm.destroy();return false}if(e=="private"){var n=0;for(var a in t){n=t[a].id}if(n){this.openMessenger(n);this.popupMessengerTextarea.value=BX.MessengerCommon.prepareMention("create",s);this.sendMessage(n)}else{this.chatCreateFormUsersInput.focus();return false}}else{if(e=="open"){if(BX.util.trim(this.chatCreateFormChatTitle.value)==""){this.chatCreateFormChatTitle.focus();return false}this.sendRequestChatDialog({action:"CHAT_CREATE",type:"open",title:this.chatCreateFormChatTitle.value,message:BX.MessengerCommon.prepareMention("create",s)})}else if(e=="videoconf"){if(BX.MessengerCommon.countObject(t)<=0){this.chatCreateFormUsersInput.focus();return false}var o=[];for(var a in t){o.push(a)}var r={};var l=this.sendRequestChatDialog({action:"CHAT_CREATE",type:"videoconf",users:o,message:BX.MessengerCommon.prepareMention("create",s)});l.then((function(e){i.resolve(e)}))}else{if(BX.MessengerCommon.countObject(t)<=0){this.chatCreateFormUsersInput.focus();return false}var o=[];for(var a in t)o.push(a);this.sendRequestChatDialog({action:"CHAT_CREATE",type:"chat",users:o,message:BX.MessengerCommon.prepareMention("create",s)})}}return i};BX.MessengerChat.prototype.kickFromChat=function(e,t){if(!this.chat[e]&&this.chat[e].owner!=this.BXIM.userId&&!this.userId[t])return false;BX.ajax({url:this.BXIM.pathToAjax+"?CHAT_LEAVE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:60,data:{IM_CHAT_LEAVE:"Y",CHAT_ID:e,USER_ID:t,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e.ERROR==""){for(var s=0;s<this.userInChat[e.CHAT_ID].length;s++)if(this.userInChat[e.CHAT_ID][s]==t)delete this.userInChat[e.CHAT_ID][s];if(this.popupMessenger!=null)BX.MessengerCommon.userListRedraw();BX.localStorage.set("mclk",{chatId:e.CHAT_ID,userId:e.USER_ID},5)}}),this)})};BX.MessengerChat.prototype.redrawChatHeader=function(e){if(!this.openChatFlag)return false;var t=this.getChatId();if(!this.chat[t])return false;this.popupMessengerTextarea.disabled=false;e=e||{};e.userRedraw=e.userRedraw||true;if(this.popupMessengerFileFormChatId){this.popupMessengerFileFormChatId.value=t;if(parseInt(this.popupMessengerFileFormChatId.value)>0){this.popupMessengerFileFormInput.removeAttribute("disabled")}else{this.popupMessengerFileFormInput.setAttribute("disabled",true)}}if(this.popupMessengerFileFormChatId){this.popupMessengerFileFormChatId.value=t;if(parseInt(this.popupMessengerFileFormChatId.value)>0){this.popupMessengerFileFormInput.removeAttribute("disabled")}else{this.popupMessengerFileFormInput.setAttribute("disabled",true)}}this.renameChatDialogFlag=false;BX.style(this.popupOpenLinesSpam,"display","");BX.style(this.popupOpenLinesClose,"display","none");var s=[];var i=[];if(this.chat[t].type=="call"){if(!BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)){this.popupMessengerPanelAvatar3.style="background: url('"+this.chat[t].avatar+"'); background-size: cover;"}else{this.popupMessengerPanelAvatar3.style="background-color: "+this.chat[t].color}this.popupMessengerPanelAvatar3.className="bx-messenger-panel-avatar-img"+(BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)?" bx-messenger-panel-avatar-img-default":"");BX.style(this.popupMessengerPanelAvatar3,"background-color",BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)&&this.chat[t].color?this.chat[t].color:"");var n=BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar);if(n)BX.addClass(this.popupMessengerPanelStatus3,"bx-messenger-panel-avatar-status-hide");else BX.removeClass(this.popupMessengerPanelStatus3,"bx-messenger-panel-avatar-status-hide");if(this.popupMessengerPanelCallTitle)this.popupMessengerPanelCallTitle.innerHTML=this.chat[t].name;if(this.popupMessengerPanelCallDescription)this.popupMessengerPanelCallDescription.innerText=this.chat[t]&&this.chat[t].entity_data_1&&this.chat[t].entity_data_1.toString().charAt(0)==="Y"?this.chat[t].call_number:BX.message("IM_PHONE_DESC");this.popupMessengerPanelAvatarId3.value=t;this.disk.avatarFormIsBlocked(t,"popupMessengerPanelAvatarUpload3",this.popupMessengerPanelAvatarForm3);this.popupMessengerPanelMute3.title=this.muteButtonStatus(this.currentTab)?BX.message("IM_M_CHAT_MUTE_ON_2"):BX.message("IM_M_CHAT_MUTE_OFF_2");this.popupMessengerPanelMute3.className="bx-messenger-panel-button bx-messenger-panel-mute "+(this.muteButtonStatus(this.currentTab)?" bx-messenger-panel-unmute":"");s.push("bx-messenger-chat-guest");s.push("bx-messenger-chat-open");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-lines-imessage");s.push("bx-messenger-chat-crm");s.push("bx-messenger-chat-general");s.push("bx-messenger-chat-general-first-open");s.push("bx-messenger-chat-general-access");s.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-announcement-access");BX.style(this.popupOpenLinesTransfer,"display","none");BX.addClass(this.popupMessengerDialog,"bx-messenger-chat-call");BX.removeClass(this.popupMessengerDialog,s.join(" "));this.popupMessengerPanelChat.className="bx-messenger-panel bx-messenger-context-chat bx-messenger-hide";this.popupMessengerPanelCall.className="bx-messenger-panel bx-messenger-context-call"}else{this.popupMessengerPanelMute2.title=this.muteButtonStatus(this.currentTab)?BX.message("IM_M_CHAT_MUTE_ON_2"):BX.message("IM_M_CHAT_MUTE_OFF_2");var a=BX.MessengerCommon.checkRestriction(this.currentTab.substr(4),"MUTE");this.popupMessengerPanelMute2.className="bx-messenger-panel-button bx-messenger-panel-mute "+(this.muteButtonStatus(this.currentTab)?" bx-messenger-panel-unmute":"")+(a?" bx-messenger-panel-mute-hide":"");var n=BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar);if(!BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)){this.popupMessengerPanelAvatar2.style="background: url('"+this.chat[t].avatar+"'); background-size: cover;"}else{this.popupMessengerPanelAvatar2.style="background-color: "+this.chat[t].color}this.popupMessengerPanelAvatar2.className="bx-messenger-panel-avatar-img"+(n?" bx-messenger-panel-avatar-img-default":"");BX.style(this.popupMessengerPanelAvatar2,"background-color",BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)&&this.chat[t].color?this.chat[t].color:"");if(this.popupMessengerPanelChatTitle.className.indexOf("bx-messenger-chat-edit")==-1){this.popupMessengerPanelChatTitle.innerHTML=this.chat[t].name}this.popupMessengerPanelAvatarId2.value=t;this.disk.avatarFormIsBlocked(t,"popupMessengerPanelAvatarUpload2",this.popupMessengerPanelAvatarForm2);this.popupMessengerPanelAvatarForm2.className="bx-messenger-panel-avatar";if(this.chat[t].type=="open"||this.chat[t].type=="general"){BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-open");BX.style(this.popupOpenLinesTransfer,"display","none");i.push("bx-messenger-chat-open");s.push("bx-messenger-chat-chat");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-crm");s.push("bx-messenger-chat-lines-imessage");s.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-announcement-access");var o=false;if(t==this.generalChatId){i.push("bx-messenger-chat-general");if(!this.canSendMessageGeneralChat){i.push("bx-messenger-chat-general-access");this.popupMessengerTextareaGeneralText.innerHTML=BX.message("IM_G_ACCESS");o=true}else if(this.BXIM.settings.generalNotify){i.push("bx-messenger-chat-general-first-open");this.popupMessengerTextareaGeneralText.innerHTML=BX.message("IM_G_JOIN").replace("#LINK_START#",'<a href="'+BX.message("IM_G_JOIN_LINK")+'"" style="margin-left: 10px; text-decoration: underline;">').replace("#LINK_END#","</a>").replace("#ICON#",'<span class="bx-messenger-icon-notify-mute" onclick="BX.MessengerCommon.muteMessageChat(\'chat'+this.generalChatId+"');\"></span>");o=true}else{s.push("bx-messenger-chat-general-first-open");s.push("bx-messenger-chat-general-access")}}else{s.push("bx-messenger-chat-general");s.push("bx-messenger-chat-general-first-open");s.push("bx-messenger-chat-general-access")}if(o){this.popupMessengerTextarea.disabled=true}else if(BX.MessengerCommon.userInChat(t)){this.popupMessengerTextarea.disabled=false;s.push("bx-messenger-chat-guest")}else{this.popupMessengerTextarea.disabled=true;i.push("bx-messenger-chat-guest")}}else{var o=false;var r=false;if(this.chat[t].type=="livechat"){var l=BX.MessengerCommon.livechatGetSession(t);BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-lines");BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-livechat");i.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-chat");s.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-announcement-access");s.push("bx-messenger-chat-lines-imessage");s.push("bx-messenger-chat-crm");BX.style(this.popupOpenLinesTransfer,"display","none")}else if(this.chat[t].type=="lines"){this.openLinesFlag=true;var l=BX.MessengerCommon.linesGetSession(this.chat[t]);BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-lines");BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-"+BX.MessengerCommon.linesGetSource(this.chat[t]));i.push("bx-messenger-chat-lines");if(BX.MessengerCommon.linesGetSession(this.chat[t]).connector==="imessage"){i.push("bx-messenger-chat-lines-imessage")}else{s.push("bx-messenger-chat-lines-imessage")}s.push("bx-messenger-chat-chat");s.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-announcement-access");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-crm");if(BX.MessengerCommon.isSessionBlocked(t)){o=true;r=true;BX.style(this.popupMessengerTextareaOpenLinesTransfer,"display","none");BX.style(this.popupMessengerTextareaOpenLinesAnswer,"display","none");BX.style(this.popupMessengerTextareaOpenLinesSkip,"display","inline-block");BX.MessengerCommon.hideLinesKeyboard();this.popupMessengerTextareaOpenLinesSkip.innerHTML=BX.message("IM_M_OL_CLOSE");this.popupMessengerTextareaOpenLinesText.innerHTML=BX.message("IM_OL_CHAT_BLOCK_"+l.blockReason)}if(!BX.MessengerCommon.userInChat(t)){this.popupOpenLinesClose.title=BX.message("IM_M_OL_CLOSE_ON_OPERATOR");o=true;r=true;BX.style(this.popupOpenLinesTransfer,"display","none");BX.style(this.popupMessengerTextareaOpenLinesTransfer,"display",l.id?"inline-block":"none");this.popupMessengerTextareaOpenLinesAnswer.innerHTML=l.id?BX.message("IM_OL_INVITE_JOIN_2"):BX.message("IM_OL_INVITE_JOIN");this.popupMessengerTextareaOpenLinesSkip.innerHTML=BX.message("IM_OL_INVITE_CLOSE");this.popupMessengerTextareaOpenLinesText.innerHTML=l.id?BX.message("IM_OL_INVITE_TEXT_JOIN"):BX.message("IM_OL_INVITE_TEXT_OPEN");if(BX.MessengerCommon.isSessionBlocked(t)){this.popupMessengerTextareaOpenLinesText.innerHTML=BX.message("IM_OL_CHAT_BLOCK_"+l.blockReason)}}else if(this.chat[t].owner==0){this.popupOpenLinesClose.title=BX.message("IM_M_OL_ANSWER_AND_CLOSE");o=true;r=true;BX.style(this.popupOpenLinesTransfer,"display","none");BX.style(this.popupMessengerTextareaOpenLinesTransfer,"display",l.id?"inline-block":"none");BX.style(this.popupMessengerTextareaOpenLinesAnswer,"display",l.id?"inline-block":"none");this.popupMessengerTextareaOpenLinesAnswer.innerHTML=l.id?BX.message("IM_OL_INVITE_ANSWER"):BX.message("IM_OL_INVITE_JOIN");this.popupMessengerTextareaOpenLinesSkip.innerHTML=l.id?BX.message("IM_OL_INVITE_SKIP"):BX.message("IM_OL_INVITE_CLOSE");this.popupMessengerTextareaOpenLinesText.innerHTML=l.id?BX.message("IM_OL_INVITE_TEXT"):BX.message("IM_OL_INVITE_TEXT_OPEN")}else{this.popupOpenLinesClose.title=BX.message("IM_M_OL_CLOSE");if(this.chat[t].owner==this.BXIM.userId){BX.style(this.popupOpenLinesTransfer,"display","block")}else{BX.style(this.popupOpenLinesTransfer,"display","none")}}if(l.id){BX.style(this.popupOpenLinesClose,"display","block")}if(!l.id||l.id&&this.chat[t].owner==this.BXIM.userId){BX.style(this.popupOpenLinesSpam,"display","")}else{BX.style(this.popupOpenLinesSpam,"display","block")}if(this.linesSilentMode[t]){BX.addClass(this.popupMessengerHiddenModeButton,"bx-messenger-textarea-hidden-active")}else{BX.removeClass(this.popupMessengerHiddenModeButton,"bx-messenger-textarea-hidden-active")}}else if(this.chat[t].type=="announcement"){this.openLinesFlag=false;BX.style(this.popupOpenLinesTransfer,"display","none");BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-announcement");i.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-chat");s.push("bx-messenger-chat-crm");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-lines-imessage");if(BX.MessengerCommon.userInChat(t)){r=false;o=false;if(this.chat[t].manager_list&&!this.chat[t].manager_list.map((function(e){return parseInt(e)})).includes(parseInt(this.BXIM.userId))){i.push("bx-messenger-chat-announcement-access");this.popupMessengerTextareaGeneralText.innerHTML=BX.message("IM_G_ACCESS");o=true}else{s.push("bx-messenger-chat-announcement-access")}}else{r=true;o=true}}else if(this.chat[t].type==="videoconf"){this.openLinesFlag=false;BX.style(this.popupOpenLinesTransfer,"display","none");s.push("bx-messenger-chat-chat");s.push("bx-messenger-chat-crm");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-lines-imessage")}else{this.openLinesFlag=false;BX.style(this.popupOpenLinesTransfer,"display","none");BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-chat");BX.addClass(this.popupMessengerPanelAvatarForm2,"bx-messenger-panel-avatar-"+this.chat[t].type);i.push("bx-messenger-chat-chat");if(this.chat[t].entity_type=="CRM"){i.push("bx-messenger-chat-crm")}else{s.push("bx-messenger-chat-crm")}s.push("bx-messenger-chat-announcement");s.push("bx-messenger-chat-announcement-access");s.push("bx-messenger-chat-livechat");s.push("bx-messenger-chat-lines");s.push("bx-messenger-chat-crm");s.push("bx-messenger-chat-lines-imessage")}if(r){i.push("bx-messenger-chat-guest")}else{s.push("bx-messenger-chat-guest")}this.popupMessengerTextarea.disabled=o;s.push("bx-messenger-chat-open");s.push("bx-messenger-chat-general");s.push("bx-messenger-chat-general-first-open");s.push("bx-messenger-chat-general-access")}s.push("bx-messenger-chat-call");BX.addClass(this.popupMessengerDialog,i.join(" "));BX.removeClass(this.popupMessengerDialog,s.join(" "));if(n)BX.addClass(this.popupMessengerPanelStatus2,"bx-messenger-panel-avatar-status-hide");else BX.removeClass(this.popupMessengerPanelStatus2,"bx-messenger-panel-avatar-status-hide");var p="bx-messenger-context-chat-"+this.chat[t].type;if(this.chat[t].entity_type!=""&&BX.MessengerCommon.getEntityTypePath(t)){this.popupMessengerPanelChat.className="bx-messenger-panel bx-messenger-context-chat "+p+" bx-messenger-panel-with-menu"}else{this.popupMessengerPanelChat.className="bx-messenger-panel bx-messenger-context-chat "+p}if(this.chat[t].entity_type!=""&&BX.MessengerCommon.checkRestriction(t,"EXTEND")){BX.style(this.popupMessengerPanelButtonExtend,"display","none")}else{BX.style(this.popupMessengerPanelButtonExtend,"display","block")}this.popupMessengerPanelCall.className="bx-messenger-panel bx-messenger-context-call bx-messenger-hide"}this.popupMessengerPanel.className="bx-messenger-panel bx-messenger-context-user bx-messenger-hide";if(!this.userInChat[t]){this.popupMessengerPanelUsers.innerHTML=this.chat[t].fake?BX.message("IM_CL_LOAD"):BX.message("IM_C_EMPTY");return false}if(e.userRedraw){var h=false;this.popupMessengerPanelUsers.innerHTML="";if(this.userInChat[t]){this.userInChat[t].sort(BX.delegate((function(e,s){if(!this.users[e]||!this.users[s])return 0;u=0;if(this.users[e].status!="offline"){u+=20}if(this.chat[t].owner==e){u+=10}if(this.users[e].status=="online"){u+=5}if(this.users[e].status=="mobile"){u+=3}if(this.users[e].avatar!="/bitrix/js/im/images/blank.gif"){u+=5}if(e<s){u+=1}ii=0;if(this.users[s].status!="offline"){ii+=20}if(this.chat[t].owner==s){ii+=10}if(this.users[s].status=="online"){ii+=5}if(this.users[s].status=="mobile"){ii+=3}if(this.users[s].avatar!="/bitrix/js/im/images/blank.gif"){ii+=5}if(s<e){ii+=1}if(u<ii){return 1}else if(u>ii){return-1}else{return 0}}),this))}var c=this.chat[t].extranet;if(this.chat[t].extranet==""){c=false;for(var u=0;u<this.userInChat[t].length;u++){c=this.users[this.userInChat[t][u]]&&this.users[this.userInChat[t][u]].extranet}}if(this.chat[t].type=="livechat"){BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-extranet");BX.removeClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-extranet");BX.addClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-title-lines")}else if(this.chat[t].type=="lines"){BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-extranet");BX.removeClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-extranet");BX.addClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-title-lines");if(l.crm=="Y"){BX.style(this.popupMessengerPanelCrm,"display","inline-block")}else{BX.style(this.popupMessengerPanelCrm,"display","none")}}else if(this.chat[t].entity_type=="CRM"){BX.removeClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-extranet");BX.style(this.popupMessengerPanelCrm,"display","inline-block")}else if(this.chat[t].extranet){BX.addClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-extranet");BX.addClass(this.popupMessengerDialog,"bx-messenger-dialog-extranet");BX.style(this.popupMessengerPanelCrm,"display","none")}else{BX.removeClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-extranet");BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-extranet");BX.removeClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-title-lines");BX.style(this.popupMessengerPanelCrm,"display","none")}BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-self");BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-bot");BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-network");BX.removeClass(this.popupMessengerDialog,"bx-messenger-dialog-support24");var d=[];for(var u=0;u<this.userInChat[t].length;u++){var m=this.users[this.userInChat[t][u]];if(!m||!m.active){continue}if(this.chat[t].entity_type=="LINES"&&this.chat[t].owner==0&&m.id!=this.BXIM.userId&&!(m.bot||m.connector)){continue}d.push(this.userInChat[t][u])}var g=Math.floor(this.popupMessengerPanelUsers.offsetWidth/135);if(g>=d.length){for(var u=0;u<d.length&&u<g;u++){var m=this.users[d[u]];var f=BX.MessengerCommon.isBlankAvatar(m.avatar)?'style="background-color: '+m.color+'"':"";this.popupMessengerPanelUsers.innerHTML+='<span class="bx-messenger-panel-chat-user" data-userId="'+m.id+'">'+'<span class="bx-notifier-popup-avatar bx-notifier-popup-avatar-status-'+BX.MessengerCommon.getUserStatus(m)+(this.chat[t].owner==m.id?" bx-notifier-popup-avatar-owner":"")+(m.extranet&&!m.connector?" bx-notifier-popup-avatar-extranet":"")+'">'+'<span class="bx-notifier-popup-avatar-img'+(BX.MessengerCommon.isBlankAvatar(m.avatar)?" bx-notifier-popup-avatar-img-default":"")+'" title="'+m.name+'" '+BX.MessengerCommon.getAvatarStyle(m)+"></span>"+'<span class="bx-notifier-popup-avatar-status-icon" title="'+m.name+'"></span>'+"</span>"+'<span class="bx-notifier-popup-user-name'+(m.extranet&&!m.connector?" bx-messenger-panel-chat-user-name-extranet":"")+(m.connector?" bx-messenger-panel-chat-user-name-lines":"")+(m.bot?" bx-messenger-panel-chat-user-name-bot":"")+'">'+m.name+"</span>"+"</span>";h=true}}else{g=Math.floor((this.popupMessengerPanelUsers.offsetWidth-10)/32);for(var u=0;u<d.length&&u<g;u++){var m=this.users[d[u]];var f=BX.MessengerCommon.isBlankAvatar(m.avatar)?'style="background-color: '+m.color+'"':"";this.popupMessengerPanelUsers.innerHTML+='<span class="bx-messenger-panel-chat-user" data-userId="'+m.id+'">'+'<span class="bx-notifier-popup-avatar bx-notifier-popup-avatar-status-'+BX.MessengerCommon.getUserStatus(m)+(this.chat[t].owner==m.id?" bx-notifier-popup-avatar-owner":"")+(m.extranet?" bx-notifier-popup-avatar-extranet":"")+'">'+'<span class="bx-notifier-popup-avatar-img'+(BX.MessengerCommon.isBlankAvatar(m.avatar)?" bx-notifier-popup-avatar-img-default":"")+'" title="'+m.name+'" '+BX.MessengerCommon.getAvatarStyle(m)+"></span>"+'<span class="bx-notifier-popup-avatar-status-icon" title="'+m.name+'"></span>'+"</span>"+"</span>";h=true}if(h&&d.length>g){this.popupMessengerPanelUsers.innerHTML+='<span class="bx-notifier-popup-user-more" data-last-item="'+u+'">'+BX.message("IM_M_CHAT_MORE_USER").replace("#USER_COUNT#",d.length-g)+"</span>"}}if(!h){this.popupMessengerPanelUsers.innerHTML=BX.message("IM_CL_LOAD")}}};BX.MessengerChat.prototype.updateChatAvatar=function(e,t){if(this.chat[e]&&t&&t.length>0){this.chat[e].avatar=t;this.dialogStatusRedraw();BX.MessengerCommon.userListRedraw()}return true};BX.MessengerChat.prototype.renameChatDialog=function(){var e=this.getChatId();if(this.renameChatDialogFlag||!BX.MessengerCommon.userInChat(e)||BX.MessengerCommon.checkRestriction(e,"RENAME")){return false}if(this.chat[e]&&this.chat[e].type==="announcement"&&this.chat[e].manager_list&&!this.chat[e].manager_list.map((function(e){return parseInt(e)})).includes(parseInt(this.BXIM.userId))){return false}this.renameChatDialogFlag=true;BX.addClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-edit");this.popupMessengerPanelChatTitle.innerHTML="";BX.adjust(this.popupMessengerPanelChatTitle,{children:[BX.create("div",{props:{className:"bx-messenger-input-wrap bx-messenger-panel-title-chat-input"},children:[this.renameChatDialogInput=BX.create("input",{props:{className:"bx-messenger-input"},attrs:{type:"text",value:BX.util.htmlspecialcharsback(this.chat[e].name)}})]})]});this.renameChatDialogInput.focus();BX.bind(this.renameChatDialogInput,"blur",BX.delegate((function(){BX.removeClass(this.popupMessengerPanelChatTitle,"bx-messenger-chat-edit");BX.MessengerCommon.renameChat(e,this.renameChatDialogInput.value);BX.remove(this.renameChatDialogInput);this.renameChatDialogInput=null;this.popupMessengerPanelChatTitle.innerHTML=this.chat[e].name;this.renameChatDialogFlag=false}),this));BX.bind(this.renameChatDialogInput,"keydown",BX.delegate((function(t){if(t.keyCode==27&&!BX.MessengerCommon.isDesktop()){this.renameChatDialogInput.value=BX.util.htmlspecialcharsback(this.chat[e].name);this.popupMessengerTextarea.focus();return BX.PreventDefault(t)}else if(t.keyCode==9||t.keyCode==13){this.popupMessengerTextarea.focus();return BX.PreventDefault(t)}}),this))};BX.MessengerChat.prototype.openMentionDialog=function(e){if(this.popupSmileMenu!=null){this.popupSmileMenu.destroy()}BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();if(this.popupChatDialog!=null){this.popupChatDialog.close();return false}e=e||{};e.delay=e.delay||300;e.textarea=e.textarea||"default";var t=e.textarea=="createChat"?this.popupCreateChatTextarea:this.popupMessengerTextarea;t.focus();if(t.value.substr(-1)!="@"){this.insertTextareaText(t,"@")}this.mentionListen=true;this.mentionDelimiter="@";this.openChatDialog({type:"MENTION",bind:t,focus:false,delimiter:this.mentionDelimiter,delay:e.delay});this.setClosingByEsc(false)};BX.MessengerChat.prototype.openChatDialog=function(e){if(!this.enableGroupChat)return false;if(this.popupChatDialog!=null){this.popupChatDialog.close();return false}if(this.popupTransferDialog!=null){this.popupTransferDialog.close();return false}BX.MessengerCommon.contactListSearchClear();if(this.popupPopupMenu!=null)this.popupPopupMenu.destroy();if(this.popupSmileMenu!=null){this.popupSmileMenu.destroy()}if(this.commandPopup!=null){this.commandPopup.destroy()}if(this.popupIframeMenu!=null&&this.popupIframeBind){this.popupIframeMenu.destroy()}BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();if(e.type=="CHAT_EXTEND"){if(this.chat[e.chatId].type==="lines"&&!this.BXIM.messenger.openlines.canJoinChatUser){BX.UI.InfoHelper.show("limit_contact_center_ol_add_manager_to_chat");return false}else if(this.popupMessengerTextarea.disabled&&this.chat[e.chatId].type!=="announcement"){return false}}var t=null;if(e.type=="CHAT_ADD"||e.type=="CHAT_EXTEND"||e.type=="CALL_INVITE_USER"||e.type=="MENTION"||e.type=="CHAT_CREATE")this.popupChatDialogDestType=e.type;else return false;var s=5;var i={offset:BX.MessengerCommon.isPage()?39:210};var n=BX.MessengerCommon.isPage()?this.webrtc.callActive?5:0:this.webrtc.callActive?-162:-170;this.popupChatDialogEmptyCallback=function(){};this.popupChatDialogExceptUsers=[];if(typeof e.chatId!="undefined"&&this.userInChat[e.chatId]){this.popupChatDialogExceptUsers=this.userInChat[e.chatId]}if(e.type=="MENTION"){e.maxUsers=1;s=BX.MessengerCommon.isPage()?15:10;n=-10;i={offset:39}}else if(e.type=="CHAT_CREATE"){if(this.chatCreateType=="private"){e.maxUsers=1}this.popupChatDialogDestElements=e.bindResult;this.popupChatDialogContactListSearch=e.bindSearch;this.popupChatDialogUsers=e.bindUsersList;for(var a in this.popupChatDialogUsers){this.popupChatDialogExceptUsers.push(this.popupChatDialogUsers[a].id)}this.popupChatDialogEmptyCallback=BX.delegate((function(){if(this.popupChatDialog)this.popupChatDialog.close()}),this)}this.popupChatDialogMaxChatUsers=typeof e.maxUsers=="undefined"?1e6:parseInt(e.maxUsers);if(typeof e.chatId!="undefined"&&this.userInChat[e.chatId]){this.popupChatDialogMaxChatUsers=this.popupChatDialogMaxChatUsers-this.userInChat[e.chatId].length}e.skipBind=typeof e.skipBind=="undefined"?false:e.skipBind;var o=e.bind?e.bind:null;var r=e.type!="CHAT_EXTEND"||this.chat[e.chatId].entity_type=="LINES";this.popupChatDialog=new BX.PopupWindow("bx-messenger-popup-newchat",o,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:true,closeIcon:true,offsetTop:s,offsetLeft:n,autoHide:true,bindOptions:e.type=="MENTION"?{position:"top"}:{},buttons:e.type=="MENTION"||e.type=="CHAT_CREATE"?[]:[new BX.PopupWindowButton({text:BX.message("IM_M_CHAT_BTN_JOIN"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){if(this.popupChatDialogDestType=="CHAT_ADD"){var e=[this.currentTab];for(var t in this.popupChatDialogUsers)e.push(t);this.sendRequestChatDialog({action:this.popupChatDialogDestType,users:e})}else if(this.popupChatDialogDestType=="CHAT_EXTEND"){var e=[];for(var t in this.popupChatDialogUsers)e.push(t);this.sendRequestChatDialog({action:this.popupChatDialogDestType,chatId:this.getChatId(),users:e})}else if(this.popupChatDialogDestType=="CALL_INVITE_USER"){var e=[];for(var t in this.popupChatDialogUsers)e.push(t);this.webrtc.callInviteUserToChat(e)}}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_M_CHAT_BTN_CANCEL"),events:{click:BX.delegate((function(){this.popupChatDialog.close()}),this)}})],closeByEsc:true,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupChatDialog=null;this.mentionListen=false;this.mentionDelimiter="";this.popupChatDialogDestType="";if(e.type!="CHAT_CREATE"){this.popupChatDialogUsers={}}if(e.type=="MENTION"||e.type=="CHAT_CREATE"){BX.proxy_context.bindElement.focus()}else{this.popupChatDialogContactListElementsType="";this.popupChatDialogContactListElements=null}}),this)},content:BX.create("div",{props:{className:"bx-messenger-popup-newchat-wrap bx-messenger-popup-newchat-wrap-style-"+e.type+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},children:[BX.create("div",{props:{className:"bx-messenger-popup-newchat-caption"},html:e.type=="MENTION"?BX.message("IM_MENTION_MENU_NEW"):BX.message("IM_M_CHAT_TITLE")}),e.type=="CHAT_CREATE"?null:BX.create("div",{props:{className:"bx-messenger-popup-newchat-box bx-messenger-popup-newchat-dest bx-messenger-popup-newchat-dest-even"+(e.type=="MENTION"?" bx-messenger-hide":"")},children:[this.popupChatDialogDestElements=BX.create("span",{props:{className:"bx-messenger-dest-items"}}),this.popupChatDialogContactListSearch=BX.create("input",{props:{className:"bx-messenger-input"},attrs:{type:"text",placeholder:BX.message(this.BXIM.bitrixIntranet?"IM_M_SEARCH_PLACEHOLDER_CP":"IM_M_SEARCH_PLACEHOLDER"),value:""}})]}),this.popupChatDialogContactListElements=BX.create("div",{props:{className:"bx-messenger-popup-newchat-box bx-messenger-popup-newchat-cl bx-messenger-recent-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-cl-item-load"},children:[BX.create("div",{props:{className:"bx-messenger-content-item-progress"}}),BX.create("span",{props:{className:"bx-messenger-cl-item-load-text"},text:BX.message("IM_CL_LOAD")})]})]}),r?null:BX.create("div",{props:{className:"bx-messenger-popup-newchat-checkbox"},children:[this.popupChatDialogShowHistory=BX.create("input",{props:{className:"bx-messenger-checkbox"},attrs:{id:"popupChatDialogShowHistory",type:"checkbox",checked:this.BXIM.options.chatExtendShowHistory?"true":"",name:"popupChatDialogShowHistory"}}),BX.create("label",{attrs:{for:"popupChatDialogShowHistory"},props:{className:"bx-messenger-checkbox-label"},html:BX.message("IM_M_CHAT_SHOW_HISTORY")})]})]})});if(!BX.MessengerTheme.isDark()){this.popupChatDialog.setAngle(i)}this.popupChatDialog.show();BX.addClass(this.popupChatDialog.popupContainer,"bx-messenger-mark");this.popupChatDialogContactListElementsType=e.type;BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{showUserLastActivityDate:true,viewOffline:true,viewChat:false,viewOpenChat:this.popupChatDialogDestType=="MENTION",exceptUsers:this.popupChatDialogExceptUsers,timeout:0,callback:{empty:this.popupChatDialogEmptyCallback}});BX.bindDelegate(this.popupChatDialogContactListElements,"click",{className:"bx-messenger-chatlist-more"},BX.delegate(this.toggleChatListGroup,this));if(!e.skipBind&&e.type!="MENTION"){this.popupChatDialogContactListSearch.focus();BX.bind(this.popupChatDialogContactListSearch,"keyup",BX.delegate((function(e){if(e.keyCode==16||e.keyCode==18||e.keyCode==20||e.keyCode==244||e.keyCode==91)return false;if(e.keyCode==37||e.keyCode==39)return true;if(this.popupChatDialogContactListSearch.value!=this.popupChatDialogContactListSearchLastText||this.popupChatDialogContactListSearch.value==""){if(this.popupChatDialogContactListSearch.value==""&&this.popupChatDialog&&this.popupChatDialogDestType=="CHAT_CREATE"){this.popupChatDialog.close();return false}}else if(e.keyCode==224||e.keyCode==18||e.keyCode==17){return true}if(e.keyCode==8&&this.popupChatDialogContactListSearch.value==""){var t=null;var s=BX.util.objectSort(this.popupChatDialogUsers,"date","asc");for(var i=0;i<s.length;i++){t=s[i].id}if(t){delete this.popupChatDialogUsers[t];this.redrawChatDialogDest()}}if(e.keyCode==27&&this.popupChatDialogContactListSearch.value!="")BX.MessengerCommon.preventDefault(e);if(e.keyCode==27){if(this.BXIM.messenger.realSearch){this.BXIM.messenger.realSearchFound=true}this.popupChatDialogContactListSearch.value=""}if(e.keyCode==38||e.keyCode==40){return true}if(e.keyCode==13&&this.popupChatDialogContactListSearch.value!=""){var n=BX.findChildByClassName(this.popupChatDialogContactListElements,"bx-messenger-cl-item");if(n){if(this.popupChatDialogContactListSearch.value!=""){this.popupChatDialogContactListSearch.value=""}if(this.popupChatDialogUsers[n.getAttribute("data-userId")])delete this.popupChatDialogUsers[n.getAttribute("data-userId")];else this.popupChatDialogUsers[n.getAttribute("data-userId")]={id:n.getAttribute("data-userId"),date:new Date};this.redrawChatDialogDest();if(this.popupChatDialogDestType=="CHAT_CREATE"){if(this.popupChatDialog)this.popupChatDialog.close()}}else{var n=BX.findChildByClassName(this.popupChatDialogContactListElements,"bx-messenger-chatlist-search-button");if(n){this.popupChatDialogContactListElements.appendChild(BX.create("div",{props:{className:"bx-messenger-cl-item-search"},html:BX.message("IM_M_CL_SEARCH")}));BX.remove(n);this.BXIM.messenger.realSearch=true;BX.MessengerCommon.contactListRealSearch(this.popupChatDialogContactListSearch.value,BX.delegate((function(){BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{showUserLastActivityDate:true,viewOffline:true,viewChat:false,viewOpenChat:this.popupChatDialogDestType=="MENTION",exceptUsers:this.popupChatDialogExceptUsers,timeout:100,callback:{empty:this.popupChatDialogEmptyCallback}})}),this));return true}}if(this.BXIM.messenger.realSearch){this.BXIM.messenger.realSearchFound=true}}this.popupChatDialogContactListSearchLastText=this.popupChatDialogContactListSearch.value;if(this.BXIM.messenger.realSearch){this.BXIM.messenger.realSearchFound=this.popupChatDialogContactListSearch.value.length<3}BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{viewOffline:true,viewChat:false,viewOpenChat:this.popupChatDialogDestType=="MENTION",exceptUsers:this.popupChatDialogExceptUsers,timeout:100,callback:{empty:this.popupChatDialogEmptyCallback}});BX.MessengerCommon.contactListRealSearch(this.popupChatDialogContactListSearch.value,BX.delegate((function(){BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{viewOffline:true,viewChat:false,viewOpenChat:this.popupChatDialogDestType=="MENTION",exceptUsers:this.popupChatDialogExceptUsers,timeout:100,callback:{empty:this.popupChatDialogEmptyCallback}})}),this));if(this.popupChatDialog)this.popupChatDialog.adjustPosition()}),this));BX.bindDelegate(this.popupChatDialogDestElements,"click",{className:"bx-messenger-dest-del"},BX.delegate((function(){delete this.popupChatDialogUsers[BX.proxy_context.getAttribute("data-userId")];if(BX.MessengerCommon.countObject(this.popupChatDialogUsers)<this.popupChatDialogMaxChatUsers)BX.show(this.popupChatDialogContactListSearch);this.redrawChatDialogDest()}),this));BX.bindDelegate(this.popupChatDialogContactListElements,"click",{className:"bx-messenger-chatlist-search-button"},BX.delegate((function(){this.popupChatDialogContactListElements.appendChild(BX.create("div",{props:{className:"bx-messenger-cl-item-search"},html:BX.message("IM_M_CL_SEARCH")}));BX.remove(BX.proxy_context.parentNode);this.BXIM.messenger.realSearch=true;BX.MessengerCommon.contactListRealSearch(this.popupChatDialogContactListSearch.value,BX.delegate((function(){BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{viewOffline:true,viewChat:false,viewOpenChat:this.popupChatDialogDestType=="MENTION",exceptUsers:this.popupChatDialogExceptUsers,timeout:100,callback:{empty:this.popupChatDialogEmptyCallback}})}),this))}),this))}BX.bindDelegate(this.popupChatDialogContactListElements,"click",{className:"bx-messenger-cl-item"},BX.delegate((function(t){if(this.popupChatDialogContactListSearch.value!=""){this.popupChatDialogContactListSearch.value="";if(this.popupChatDialogDestType!="MENTION"&&this.popupChatDialogDestType!="CHAT_CREATE"){BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{viewOffline:true,viewChat:false,viewOpenChat:false,exceptUsers:this.popupChatDialogExceptUsers})}}if(this.popupChatDialogUsers[BX.proxy_context.getAttribute("data-userId")]){delete this.popupChatDialogUsers[BX.proxy_context.getAttribute("data-userId")]}else{if(BX.MessengerCommon.countObject(this.popupChatDialogUsers)==this.popupChatDialogMaxChatUsers)return false;this.popupChatDialogUsers[BX.proxy_context.getAttribute("data-userId")]={id:BX.proxy_context.getAttribute("data-userId"),date:new Date}}if(this.popupChatDialogDestType=="MENTION"){var s=o.value.substr(0,o.selectionEnd);s=s.substr(s.lastIndexOf(e.delimiter),o.selectionEnd-s.lastIndexOf(e.delimiter));o.value=o.value.replace(s,BX.proxy_context.getAttribute("data-name")+" ");BX.MessengerCommon.addMentionList(this.currentTab,BX.proxy_context.getAttribute("data-name"),BX.proxy_context.getAttribute("data-userId"));if(this.popupChatDialog)this.popupChatDialog.close()}else{this.redrawChatDialogDest()}if(this.popupChatDialogDestType=="CHAT_CREATE"){if(this.popupChatDialog)this.popupChatDialog.close()}return BX.PreventDefault(t)}),this))};BX.MessengerChat.prototype.redrawChatDialogDest=function(){var e="";var t=0;var s=0;var i=BX.util.objectSort(this.popupChatDialogUsers,"date","asc");for(var n=0;n<i.length;n++){s=i[n].id.toString();var a=s.substr(0,9)=="structure";var o=false;var r="";if(a){var l=s.substr(9);r=this.groups[l].name.split(" / ")[0]}else{r=this.users[s].name;o=this.users[s].extranet}t++;e+='<span class="bx-messenger-dest-block'+(o?" bx-messenger-dest-block-extranet":"")+(a?" bx-messenger-dest-block-structure":"")+'">'+'<span class="bx-messenger-dest-text">'+r+"</span>"+'<span class="bx-messenger-dest-del" data-userId="'+s+'"></span></span>'}this.popupChatDialogDestElements.innerHTML=e;this.popupChatDialogDestElements.parentNode.scrollTop=this.popupChatDialogDestElements.parentNode.offsetHeight;if(this.popupChatDialogDestType!="CHAT_CREATE"){if(BX.util.even(t))BX.addClass(this.popupChatDialogDestElements.parentNode,"bx-messenger-popup-newchat-dest-even");else BX.removeClass(this.popupChatDialogDestElements.parentNode,"bx-messenger-popup-newchat-dest-even")}var p=BX.MessengerCommon.countObject(this.popupChatDialogUsers);if(p>=this.popupChatDialogMaxChatUsers){BX.addClass(this.popupChatDialogContactListSearch,"bx-messenger-hide");if(this.popupChatDialogDestType=="CHAT_CREATE"){if(this.popupChatDialog)this.popupChatDialog.close();this.popupCreateChatTextarea.focus()}}else{BX.removeClass(this.popupChatDialogContactListSearch,"bx-messenger-hide");if(this.popupChatDialog)this.popupChatDialog.adjustPosition();this.popupChatDialogContactListSearch.focus()}if(p){BX.removeClass(this.popupChatDialogContactListSearch,"bx-messenger-input-dest-empty")}else{BX.addClass(this.popupChatDialogContactListSearch,"bx-messenger-input-dest-empty")}};BX.MessengerChat.prototype.sendRequestChatDialog=function(e){var t=new BX.Promise;if(this.popupChatDialogSendBlock){t.reject();return t}if(typeof e!="object"){t.reject();return t}e.type=e.type=="open"?"open":e.type=="videoconf"?"videoconf":"chat";e.users=e.users||[];e.message=e.message||"";e.title=e.title||"";var s=[];for(var i=0;i<e.users.length;i++){if(e.users[i].toString().substr(0,9)=="structure"){e.users[i]=parseInt(e.users[i].toString().substr(9));if(e.users[i]<0)continue;e.users[i]="structure"+e.users[i]}else if(e.users[i].toString().substr(0,7)=="network"){}else{e.users[i]=parseInt(e.users[i]);if(e.users[i]<0)continue}if(s.indexOf&&s.indexOf(e.users[i])>=0)continue;if(e.users[i]==this.BXIM.userId)continue;if(e.chatId&&this.userInChat[e.chatId].indexOf&&this.userInChat[e.chatId].indexOf(e.users[i].toString())>=0)continue;s.push(e.users[i])}e.users=s;var n="";if(e.action=="CHAT_CREATE"&&e.type=="chat"&&e.users.length<1){n=BX.message("IM_M_CHAT_ERROR_1")}if(e.action=="CHAT_ADD"&&e.type=="chat"&&e.users.length<=1){if(e.users[0]&&this.users[e.users[0]]){this.openMessenger(e.users[0]);if(this.popupChatDialog!=null)this.popupChatDialog.close();t.reject();return t}else{n=BX.message("IM_M_CHAT_ERROR_1")}}else if(e.action=="CHAT_EXTEND"&&e.users.length==0){if(this.popupChatDialog!=null)this.popupChatDialog.close();t.reject();return t}var a=e.action;if(e.action=="CHAT_CREATE"){e.action="CHAT_ADD"}if(n!=""){this.BXIM.openConfirm(n);t.reject();return t}this.popupChatDialogSendBlock=true;if(this.popupChatDialog!=null)this.popupChatDialog.buttons[0].setClassName("popup-window-button-disable");var o=false;var r="";if(e.action=="CHAT_ADD"){o={IM_CHAT_ADD:"Y",TYPE:e.type,TITLE:e.title,MESSAGE:e.message,USERS:JSON.stringify(e.users),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()};r="&logTag="+BX.MessengerCommon.getLogTrackingParams({name:"im.chat.add",data:{timType:e.type=="open"?"open":"chat",timCreateFrom:a=="CHAT_CREATE"?"form":"dialog"}})}else if(e.action=="CHAT_EXTEND"){o={IM_CHAT_EXTEND:"Y",CHAT_ID:e.chatId,HISTORY:this.popupChatDialogShowHistory&&this.popupChatDialogShowHistory.checked?"Y":"N",USERS:JSON.stringify(e.users),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()};this.BXIM.options.chatExtendShowHistory=this.popupChatDialogShowHistory&&this.popupChatDialogShowHistory.checked;BXIM.setLocalConfig("mcesh",this.BXIM.options.chatExtendShowHistory)}if(!o){t.reject();return t}BX.ajax({url:this.BXIM.pathToAjax+"?"+e.action+"&V="+this.BXIM.revision+r,method:"POST",dataType:"json",timeout:60,data:o,onsuccess:BX.delegate((function(s){this.popupChatDialogSendBlock=false;if(this.popupChatDialog!=null)this.popupChatDialog.buttons[0].setClassName("popup-window-button-accept");if(s.ERROR==""){if(s.CHAT_ID&&e.type!=="videoconf"){if(this.BXIM.ppServerStatus&&this.currentTab!="chat"+s.CHAT_ID){this.openMessenger("chat"+s.CHAT_ID)}else if(!this.BXIM.ppServerStatus&&this.currentTab!="chat"+s.CHAT_ID){setTimeout(BX.delegate((function(){this.openMessenger("chat"+s.CHAT_ID)}),this),500)}}this.popupChatDialogSendBlock=false;if(this.popupChatDialog!=null)this.popupChatDialog.close()}else{this.BXIM.openConfirm(s.ERROR)}t.resolve(s)}),this)});return t};BX.MessengerChat.prototype.openContactList=function(){return this.openMessenger()};BX.MessengerChat.prototype.openPopupMenu=function(t,s,i,n){n=n?n:{};var a=n.closeSmiles===false?false:true;if(a&&this.popupSmileMenu!=null)this.popupSmileMenu.destroy();BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();if(this.popupPopupMenu!=null){this.popupPopupMenu.destroy();return false}var o=0;var r=13;var l=[];var p={};var h={offset:4};this.popupPopupMenuStyle="";if(n.offsetTop)o=n.offsetTop;if(n.offsetLeft)r=n.offsetLeft;if(n.anglePosition)h.position=n.anglePosition;if(s=="createChat"){h=false;p={position:"bottom"};if(n.openDesktop){l=[{icon:"bx-messenger-cc-private",text:BX.message("IM_CL_PRIVATE_CHAT_NEW"),onclick:BX.delegate((function(){BX.desktopUtils.goToBx("bx://chat/create/private");this.closeMenuPopup()}),this)},{icon:"bx-messenger-cc-chat",text:BX.message("IM_CL_CHAT_NEW"),onclick:BX.delegate((function(){BX.desktopUtils.goToBx("bx://chat/create/chat");this.closeMenuPopup()}),this)},this.BXIM.userExtranet||!this.openChatEnable?null:{icon:"bx-messenger-cc-open",text:BX.message("IM_CL_OPEN_CHAT_NEW"),onclick:BX.delegate((function(){BX.desktopUtils.goToBx("bx://chat/create/open");this.closeMenuPopup()}),this)},this.BXIM.userExtranet||!this.openChatEnable?null:{icon:"bx-messenger-cc-videoconf",text:BX.message("IM_CL_VIDEOCONF"),onclick:BX.delegate((function(){BX.desktopUtils.goToBx("bx://chat/create/videoconf");this.closeMenuPopup()}),this)}]}else if(n.openMessenger){l=[{icon:"bx-messenger-cc-private",text:BX.message("IM_CL_PRIVATE_CHAT_NEW"),onclick:BX.delegate((function(){this.openMessenger();this.openChatCreateForm("private");this.closeMenuPopup()}),this)},{icon:"bx-messenger-cc-chat",text:BX.message("IM_CL_CHAT_NEW"),onclick:BX.delegate((function(){this.openMessenger();this.openChatCreateForm("chat");this.closeMenuPopup()}),this)},this.BXIM.userExtranet||!this.openChatEnable?null:{icon:"bx-messenger-cc-open",text:BX.message("IM_CL_OPEN_CHAT_NEW"),onclick:BX.delegate((function(){this.openMessenger();this.openChatCreateForm("open");this.closeMenuPopup()}),this)},this.BXIM.userExtranet||!this.BXIM.bitrixIntranet?null:{icon:"bx-messenger-cc-videoconf",text:BX.message("IM_CL_VIDEOCONF"),onclick:BX.delegate((function(){this.openVideoConfCreateForm("videoconf");this.closeMenuPopup()}),this)}]}else{l=[{icon:"bx-messenger-cc-private",text:BX.message("IM_CL_PRIVATE_CHAT_NEW"),onclick:BX.delegate((function(){this.openChatCreateForm("private");this.closeMenuPopup()}),this)},{icon:"bx-messenger-cc-chat",text:BX.message("IM_CL_CHAT_NEW"),onclick:BX.delegate((function(){this.openChatCreateForm("chat");this.closeMenuPopup()}),this)},this.BXIM.userExtranet||!this.openChatEnable?null:{icon:"bx-messenger-cc-open",text:BX.message("IM_CL_OPEN_CHAT_NEW"),onclick:BX.delegate((function(){this.openChatCreateForm("open");this.closeMenuPopup()}),this)},this.BXIM.userExtranet||!this.BXIM.bitrixIntranet?null:{icon:"bx-messenger-cc-videoconf",text:BX.message("IM_CL_VIDEOCONF"),onclick:BX.delegate((function(){this.openVideoConfCreateForm("videoconf");this.closeMenuPopup()}),this)}]}}else if(s=="pathMenu"){var c=this.getChatId();var u=BX.MessengerCommon.getEntityTypePath(c);o=5;r=14;l=[];if(this.BXIM.checkCallSupport(this.currentTab)){l.push({icon:"bx-messenger-menu-call-video",text:BX.message("IM_M_CALL_VIDEO_HD"),onclick:BX.delegate((function(){this.BXIM.callTo(this.currentTab,true);this.closeMenuPopup()}),this)});l.push({icon:"bx-messenger-menu-call-voice",text:BX.message("IM_M_CALL_VOICE"),onclick:BX.delegate((function(){this.BXIM.callTo(this.currentTab,false);this.closeMenuPopup()}),this)});l.push({separator:true})}if(u){l.push({icon:"bx-messenger-menu-crm",text:u["TITLE"],href:u["PATH"],target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)})}l.push({icon:"bx-messenger-menu-history-2",text:BX.message("IM_M_HISTORY"),onclick:BX.delegate((function(){this.openHistory(this.currentTab);this.closeMenuPopup()}),this)})}else if(s=="openLinesMenu"){var c=this.getChatId();var d=this.chat[c].owner==this.BXIM.userId;var m=BX.MessengerCommon.linesGetSession(this.chat[c]);var g=this.BXIM.bitrixCrm;o=5;r=14;l=[d?{icon:"bx-messenger-menu-pause",text:BX.message(m.pin=="Y"?"IM_M_OL_ASSIGN_OFF":"IM_M_OL_ASSIGN_ON"),onclick:BX.delegate((function(){this.linesTogglePinMode();this.closeMenuPopup()}),this)}:null,g&&d&&m.crm!="Y"?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_ADD_LEAD"),onclick:BX.delegate((function(){this.linesCreateLead();this.closeMenuPopup()}),this)}:null,g&&m.crmLink&&m.crmLinkLead=="undefined"&&m.crmLinkCompany=="undefined"&&m.crmLinkContact=="undefined"&&m.crmLinkDeal=="undefined"?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_GOTO_CRM"),href:m.crmLink,target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null,g&&m.crmLinkLead?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_GOTO_CRM_LEAD"),href:m.crmLinkLead,target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null,g&&m.crmLinkCompany?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_GOTO_CRM_COMPANY"),href:m.crmLinkCompany,target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null,g&&m.crmLinkContact?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_GOTO_CRM_CONTACT"),href:m.crmLinkContact,target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null,g&&m.crmLinkDeal?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_GOTO_CRM_DEAL"),href:m.crmLinkDeal,target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null,{icon:"bx-messenger-menu-history-2",text:BX.message("IM_M_HISTORY"),onclick:BX.delegate((function(){this.openHistory(this.currentTab);this.closeMenuPopup()}),this)},m.id?{separator:true}:null,!d&&m.id?{icon:"bx-messenger-menu-intercept",text:BX.message("IM_M_OL_INTERCEPT"),onclick:BX.delegate((function(){this.linesInterceptSession();this.closeMenuPopup()}),this)}:null,d&&m.id?{icon:"bx-messenger-menu-spam",text:BX.message("IM_M_OL_FORCE_CLOSE"),onclick:BX.delegate((function(){this.linesMarkAsSpam();this.closeMenuPopup()}),this)}:null]}else if(s=="textareaAppsMenu"){l=[];for(var f=0;f<this.textareaIcon.length;f++){if(!this.textareaIcon[f]||this.BXIM.userExtranet&&!this.textareaIcon[f]["extranet"]||this.textareaIcon[f].hidden){continue}if(this.desktop.ready()&&!this.desktop.enableInVersion(39)&&this.textareaIcon[f]["iframe"]){if(BXDesktopSystem.GetProperty("versionParts").join(".")!="5.0.32.38"){continue}}if(!this.textareaIcon[f]["title"]&&!this.textareaIcon[f]["url"]){continue}if(this.textareaIcon[f]["url"]){continue}var B=this.textareaIcon[f]["description"]?this.textareaIcon[f]["description"]:this.textareaIcon[f]["title"];l.push({text:BX.util.htmlspecialchars(this.textareaIcon[f]["title"]),onclick:BX.delegate((function(e){this.textareaIconClick();return BX.PreventDefault(e)}),this),attrs:{title:B,"data-context":this.textareaIcon[f]["context"],"data-code":this.textareaIcon[f]["code"],"data-id":this.textareaIcon[f]["id"]}})}if(this.BXIM.bitrixIntranet){if(l.length>0){l.push({separator:true})}l.push({text:BX.message("IM_MARKET_BOTS"),href:"/marketplace/category/chat_bots/",target:"_blank",attrs:{title:BX.message("IM_MARKET_BOTS"),"data-context":"all","data-code":"market-bots","data-id":0}});l.push({text:BX.message("IM_MARKET_IM"),href:"/marketplace/category/im/",target:"_blank",attrs:{title:BX.message("IM_MARKET_IM"),"data-context":"all","data-code":"market-im","data-id":0}})}o=5;r=14}else if(s=="status"){r=9;p={position:"top"};l=[{icon:"bx-messenger-popup-status bx-messenger-popup-status-online",text:BX.message("IM_STATUS_ONLINE"),onclick:BX.delegate((function(){this.setStatus("online");this.closeMenuPopup()}),this)},{icon:"bx-messenger-popup-status bx-messenger-popup-status-break",text:BX.message("IM_STATUS_BREAK"),onclick:BX.delegate((function(){this.setStatus("break");this.closeMenuPopup()}),this)},{icon:"bx-messenger-popup-status bx-messenger-popup-status-away",text:BX.message("IM_STATUS_AWAY"),onclick:BX.delegate((function(){this.setStatus("away");this.closeMenuPopup()}),this)},{icon:"bx-messenger-popup-status bx-messenger-popup-status-dnd",text:BX.message("IM_STATUS_DND"),onclick:BX.delegate((function(){this.setStatus("dnd");this.closeMenuPopup()}),this)}]}else if(s=="iconMenu"){var X=t.getAttribute("data-id");l=[{text:BX.message("IM_MENU_DELETE"),onclick:BX.delegate((function(e){this.removeRecentSmile(X);BX.remove(t);this.popupPopupMenu.close();return BX.PreventDefault(e)}),this)}]}else if(s=="notifyDelete"){var M=t.getAttribute("data-notifyId");var C=this.notify.notify[M].settingName;var I=typeof this.BXIM.settingsNotifyBlocked[C]=="undefined"?BX.message("IM_NOTIFY_DELETE_2"):BX.message("IM_NOTIFY_DELETE_3");if(typeof n.applyToDom!="undefined"){t=n.applyToDom}l=[this.notify.unreadNotify[M]?{text:BX.message("IM_MENU_READ"),onclick:BX.delegate((function(){this.notify.viewNotify(M,true);this.closeMenuPopup()}),this)}:null,!this.notify.unreadNotify[M]?{text:BX.message("IM_MENU_UNREAD"),onclick:BX.delegate((function(){this.notify.viewNotify(M,false);this.closeMenuPopup()}),this)}:null,{text:BX.message("IM_NOTIFY_DELETE_1"),onclick:BX.delegate((function(){this.notify.deleteNotify(M);this.closeMenuPopup()}),this)},{text:I,onclick:BX.delegate((function(){this.notify.blockNotifyType(C);this.closeMenuPopup()}),this)}]}else if(s=="callJoin"){o=2;r=20;l=[{icon:"bx-messenger-menu-call-video",text:BX.message("IM_M_CALL_BTN_JOIN_MENU_VIDEO"),onclick:BX.delegate((function(){this.BXIM.callController.joinCall(n.currentCall.call.id,true);this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-call-voice",text:BX.message("IM_M_CALL_BTN_JOIN_MENU_AUDIO"),onclick:BX.delegate((function(){this.BXIM.callController.joinCall(n.currentCall.call.id,false);this.closeMenuPopup()}),this)}]}else if(s=="callMenu"){o=2;r=20;if(this.BXIM.checkCallSupport(this.currentTab)){l=[{icon:"bx-messenger-menu-call-video",text:BX.message("IM_M_CALL_VIDEO_HD"),onclick:BX.delegate((function(){this.BXIM.callTo(this.currentTab,true);this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-call-voice",text:BX.message("IM_M_CALL_VOICE"),onclick:BX.delegate((function(){this.BXIM.callTo(this.currentTab,false);this.closeMenuPopup()}),this)}]}if(this.BXIM.zoomStatus["active"]){l.push({icon:"bx-messenger-menu-call-video",text:BX.message("IM_M_CREATE_ZOOM"),onclick:BX.delegate((function(){this.BXIM.createZoom(this.currentTab);this.closeMenuPopup()}),this),restricted:!this.BXIM.zoomStatus["enabled"]})}if(BX.message("jitsi_server")!=""&&this.currentTab.toString().startsWith("chat")){l.push({icon:"bx-messenger-menu-call-video",text:BX.message("IM_M_CREATE_JITSI"),onclick:function(){this.BXIM.createJitsi(this.currentTab);this.closeMenuPopup()}.bind(this)})}if(!this.openChatFlag&&this.users[this.currentTab].services){l.push({separator:true});if(this.users[this.currentTab].services.zoom){l.push({text:"Zoom",href:this.users[this.currentTab].services.zoom})}if(this.users[this.currentTab].services.skype){l.push({text:"Skype",href:this.users[this.currentTab].services.skype})}}if(this.BXIM.webrtc.phoneCanCallUserNumber&&!this.openChatFlag&&this.phones[this.currentTab]){l.push({separator:true});if(this.phones[this.currentTab].PERSONAL_MOBILE){l.push({type:"call",text:BX.message("IM_PHONE_PERSONAL_MOBILE"),phone:BX.util.htmlspecialchars(this.phones[this.currentTab].PERSONAL_MOBILE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[this.currentTab].PERSONAL_MOBILE);this.closeMenuPopup()}),this)})}if(this.phones[this.currentTab].PERSONAL_PHONE){l.push({type:"call",text:BX.message("IM_PHONE_PERSONAL_PHONE"),phone:BX.util.htmlspecialchars(this.phones[this.currentTab].PERSONAL_PHONE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[this.currentTab].PERSONAL_PHONE);this.closeMenuPopup()}),this)})}if(this.phones[this.currentTab].WORK_PHONE){l.push({type:"call",text:BX.message("IM_PHONE_WORK_PHONE"),phone:BX.util.htmlspecialchars(this.phones[this.currentTab].WORK_PHONE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[this.currentTab].WORK_PHONE);this.closeMenuPopup()}),this)})}if(this.phones[this.currentTab].INNER_PHONE){l.push({type:"call",text:BX.message("IM_PHONE_INNER_PHONE"),phone:BX.util.htmlspecialchars(this.phones[this.currentTab].INNER_PHONE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[this.currentTab].INNER_PHONE);this.closeMenuPopup()}),this)})}}}else if(s=="videoConfMenu"){o=2;r=20;if(this.chat[n.chatId].public){l=[{text:BX.message("IM_VIDEOCONF_MENU_COPY"),onclick:BX.delegate((function(){BX.UI.Notification.Center.notify({content:BX.message("IM_VIDEOCONF_MENU_COPY_DONE"),autoHideDelay:2e3});BX.MessengerCommon.clipboardCopy(this.chat[n.chatId].public.link);this.closeMenuPopup()}),this)}];if(this.chat[n.chatId].owner==this.BXIM.userId){l.push({text:BX.message("IM_VIDEOCONF_MENU_CHANGE_LINK"),onclick:BX.delegate((function(){this.BXIM.openConfirm(BX.message("IM_VIDEOCONF_MENU_CONFIRM_CHANGE_TEXT"),[new BX.PopupWindowButton({text:BX.message("IM_VIDEOCONF_MENU_CONFIRM_CHANGE"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){this.changeVideoconfCode(this.currentTab);BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_VIDEOCONF_MENU_CONFIRM_CHANGE_CANCEL"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true);this.closeMenuPopup()}),this)})}}}else if(s=="callPhoneMenu"){o=2;r=25;l=[{icon:"bx-messenger-menu-call-"+(n.video?"video":"voice"),text:"<b>"+BX.message("IM_M_CALL_BTN_RECALL_3")+"</b>",onclick:BX.delegate((function(){this.webrtc.callInvite(n.userId,n.video)}),this)}];l.push({separator:true});if(this.phones[n.userId]&&this.BXIM.webrtc.phoneCanCallUserNumber){l.push({separator:true});if(this.phones[n.userId].PERSONAL_MOBILE){l.push({type:"call",text:BX.message("IM_PHONE_PERSONAL_MOBILE"),phone:BX.util.htmlspecialchars(this.phones[n.userId].PERSONAL_MOBILE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[n.userId].PERSONAL_MOBILE);this.closeMenuPopup()}),this)})}if(this.phones[n.userId].PERSONAL_PHONE){l.push({type:"call",text:BX.message("IM_PHONE_PERSONAL_PHONE"),phone:BX.util.htmlspecialchars(this.phones[n.userId].PERSONAL_PHONE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[n.userId].PERSONAL_PHONE);this.closeMenuPopup()}),this)})}if(this.phones[n.userId].WORK_PHONE){l.push({type:"call",text:BX.message("IM_PHONE_WORK_PHONE"),phone:BX.util.htmlspecialchars(this.phones[n.userId].WORK_PHONE),onclick:BX.delegate((function(){this.BXIM.phoneTo(this.phones[n.userId].WORK_PHONE);this.closeMenuPopup()}),this)})}}}else if(s=="callContextMenu"){var b=BX.MessengerCommon.phoneGetCallFields(this.getChatId());l=[{icon:"bx-messenger-menu-history-2",text:BX.message("IM_M_HISTORY"),onclick:BX.delegate((function(){this.openHistory(this.currentTab);this.closeMenuPopup()}),this)},b.crm?{icon:"bx-messenger-menu-crm",text:BX.message("IM_M_OL_GOTO_CRM"),href:b.crmShowUrl,target:"_blank",onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null]}else if(s=="chatUser"){if(this.currentTab.toString().substr(0,4)!=="chat"){return false}var y=n.userId||t.getAttribute("data-userId");var c=this.getChatId();var d=this.chat[c].owner==this.BXIM.userId;if(this.users[this.BXIM.userId].connector){return false}if(y==this.BXIM.userId){var x=false;if(BX.MessengerCommon.checkRestriction(c,d?"LEAVE_OWNER":"LEAVE")){x=true}else{x=this.chat[c].type=="lines"&&(this.chat[c].owner==0||this.chat[c].owner==this.BXIM.userId)}l=[{icon:"bx-messenger-menu-profile",text:BX.message("IM_M_OPEN_PROFILE"),href:this.BXIM.path.profile,onclick:BX.delegate((function(){this.closeMenuPopup()}),this)},x?null:{icon:"bx-messenger-menu-chat-exit",text:BX.message("IM_M_CHAT_EXIT"),onclick:BX.delegate((function(){BX.MessengerCommon.leaveFromChat(c);this.closeMenuPopup()}),this)}]}else if(this.chat[c].type=="lines"&&this.users[y].connector){l=[{icon:"bx-messenger-menu-chat-put",text:BX.message("IM_M_CHAT_PUT"),onclick:BX.delegate((function(){this.insertTextareaText(this.popupMessengerTextarea," "+BX.util.htmlspecialcharsback(this.users[y].name)+" ",false);BX.MessengerCommon.addMentionList(this.currentTab,BX.util.htmlspecialcharsback(this.users[y].name),y);this.popupMessengerTextarea.focus();this.closeMenuPopup()}),this)}]}else if(this.chat[c].type=="videoconf"&&this.users[y].external_auth_id=="call"){var v=!BX.MessengerCommon.checkRestriction(c,"LEAVE")&&!this.BXIM.userExtranet;l=[{icon:"bx-messenger-menu-chat-put",text:BX.message("IM_M_CHAT_PUT"),onclick:BX.delegate((function(){this.insertTextareaText(this.popupMessengerTextarea," "+BX.util.htmlspecialcharsback(this.users[y].name)+" ",false);BX.MessengerCommon.addMentionList(this.currentTab,BX.util.htmlspecialcharsback(this.users[y].name),y);this.popupMessengerTextarea.focus();this.closeMenuPopup()}),this)},v?{icon:"bx-messenger-menu-chat-exit",text:BX.message("IM_M_CHAT_KICK"),onclick:BX.delegate((function(){this.kickFromChat(c,y);this.closeMenuPopup()}),this)}:{}]}else{var v=!BX.MessengerCommon.checkRestriction(c,"LEAVE")&&this.chat[c].owner==this.BXIM.userId;var T=this.chat[c].type==="announcement";var S=true;if(c!=this.generalChatId){S=BX.MessengerCommon.userInChat(c)}else if(!this.canSendMessageGeneralChat||this.BXIM.settings.generalNotify){S=false}l=[!S||T?null:{icon:"bx-messenger-menu-chat-put",text:BX.message("IM_M_CHAT_PUT"),onclick:BX.delegate((function(){this.insertTextareaText(this.popupMessengerTextarea," "+BX.util.htmlspecialcharsback(this.users[y].name)+" ",false);BX.MessengerCommon.addMentionList(this.currentTab,BX.util.htmlspecialcharsback(this.users[y].name),y);this.popupMessengerTextarea.focus();this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-write",text:BX.message("IM_M_WRITE_MESSAGE"),onclick:BX.delegate((function(){this.openMessenger(y);this.closeMenuPopup()}),this)},!this.BXIM.checkCallSupport(y)||BX.MessengerCalls.hasActiveCall()?null:{icon:"bx-messenger-menu-video",text:BX.message("IM_M_CALL_VIDEO_HD"),onclick:BX.delegate((function(){this.BXIM.callTo(y,true);this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-history",text:BX.message("IM_M_OPEN_HISTORY"),onclick:BX.delegate((function(){this.openHistory(y);this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-profile",text:BX.message("IM_M_OPEN_PROFILE"),href:this.users[y].profile,onclick:BX.delegate((function(){this.closeMenuPopup()}),this)},v?{icon:"bx-messenger-menu-chat-exit",text:BX.message("IM_M_CHAT_KICK"),onclick:BX.delegate((function(){this.kickFromChat(c,y);this.closeMenuPopup()}),this)}:{}]}}else if(s=="contactList"){o=2;r=25;var y=n.userId?n.userId:t.getAttribute("data-userId");var _=n.userIsChat?n.userIsChat:t.getAttribute("data-userIsChat")===true||t.getAttribute("data-userIsChat")=="true";var E=n.dialogIsPinned?n.dialogIsPinned:t.getAttribute("data-isPinned")===true||t.getAttribute("data-isPinned")=="true";var d=_&&this.chat[y.toString().substr(4)].owner==this.BXIM.userId;var N=BX.MessengerCommon.recentListGetItem(y);if(!_&&N&&N.invited){var w=this.BXIM.canInvite||N.invited.originator_id==this.BXIM.userId;l=[{icon:"bx-messenger-menu-write",text:BX.message("IM_M_WRITE_MESSAGE"),onclick:BX.delegate((function(e){if(e.altKey){this.openMessenger(y)}else{this.BXIM.openMessenger(y)}this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-profile",text:BX.message("IM_M_OPEN_PROFILE"),href:this.users[y].profile,onclick:BX.delegate((function(){this.closeMenuPopup()}),this)},w?{separator:true}:null,w&&(!N||N&&N.invited&&N.invited.can_resend)?{icon:"bx-messenger-menu-invite-resend",text:BX.message("IM_M_INVITE_RESEND"),onclick:BX.delegate((function(){BX.MessengerCommon.userInviteResend(y);this.closeMenuPopup()}),this)}:null,w?{icon:"bx-messenger-menu-invite-cancel",text:BX.message("IM_M_INVITE_CANCEL"),onclick:BX.delegate((function(){this.BXIM.openConfirm(BX.message("IM_USER_INVITE_CANCEL_CONFIRM"),[new BX.PopupWindowButton({text:BX.message("IM_USER_INVITE_CANCEL_CONFIRM_YES"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){BX.MessengerCommon.userInviteCancel(y);BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true);this.closeMenuPopup()}),this)}:null]}else if(this.recentList||_){var k=_&&this.chat[y.toString().substr(4)]&&this.chat[y.toString().substr(4)].type=="lines";var T=_&&this.chat[y.toString().substr(4)].type==="announcement";var A=!BX.MessengerCommon.checkRestriction(y.toString().substr(4),"MUTE");var D=!BX.MessengerCommon.checkRestriction(y.toString().substr(4),"CALL");var L=BX.message("IM_M_CHAT_MUTE_OFF");var P=false;if(typeof A==="boolean"){P=A}else if(_){P=true}else if(this.users[y].extranet){P=true}else if(T){P=false}if(P&&this.muteButtonStatus(y)){L=BX.message("IM_M_CHAT_MUTE_ON")}var O=true;if(!this.recentList){O=false}var R=BX.message(!E?"IM_M_OL_PIN_ON":"IM_M_OL_PIN_OFF");var H=!BX.MessengerCommon.userInChat(y.toString().substr(4));var U;if(!N||!this.recentList||_&&k||N.invited||N.options.default_user_record){U=false}else{U=true}l=[k?null:{icon:"bx-messenger-menu-write",text:BX.message("IM_M_WRITE_MESSAGE"),onclick:BX.delegate((function(e){if(e.altKey){this.openMessenger(y)}else{this.BXIM.openMessenger(y)}this.closeMenuPopup()}),this)},k||!O?null:{icon:"bx-messenger-menu-pin",text:R,onclick:BX.delegate((function(){BX.MessengerCommon.pinDialog(y,!E);this.closeMenuPopup()}),this)},!T&&!k&&!H&&P?{icon:"bx-messenger-menu-chat-mute",text:L,onclick:BX.delegate((function(){BX.MessengerCommon.muteMessageChat(y);this.closeMenuPopup()}),this)}:{},!D||T||k||(!this.BXIM.checkCallSupport(y)||BX.MessengerCalls.hasActiveCall())||_&&(this.chat[y.toString().substr(4)].type=="call"||this.chat[y.toString().substr(4)].type=="lines")?null:{icon:"bx-messenger-menu-video",text:BX.message("IM_M_CALL_VIDEO_HD"),onclick:BX.delegate((function(){this.BXIM.callTo(y,true);this.closeMenuPopup()}),this)},H&&!_?null:{icon:"bx-messenger-menu-history",text:BX.message("IM_M_OPEN_HISTORY"),onclick:BX.delegate((function(){this.openHistory(y);this.closeMenuPopup()}),this)},!_?{icon:"bx-messenger-menu-profile",text:BX.message("IM_M_OPEN_PROFILE"),href:this.users[y].profile,onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:{},!H&&!T&&_&&this.chat[y.toString().substr(4)].type!="call"&&!BX.MessengerCommon.checkRestriction(y.toString().substr(4),"RENAME")?{icon:"bx-messenger-menu-chat-rename",text:BX.message("IM_M_CHAT_RENAME"),onclick:BX.delegate((function(){if(this.currentTab!=y){this.openMessenger(y)}else{this.renameChatDialog()}this.closeMenuPopup()}),this)}:{},U?{icon:"bx-messenger-menu-hide-"+(_?"chat":"dialog"),text:BX.message("IM_M_HIDE_"+(_?this.chat[y.toString().substr(4)].type=="call"?"CALL":"CHAT":"DIALOG")),onclick:BX.delegate((function(){BX.MessengerCommon.recentListHide(y);this.closeMenuPopup()}),this)}:null,!H&&_&&this.chat[y.toString().substr(4)].type!="call"&&this.chat[y.toString().substr(4)].type!="lines"&&!BX.MessengerCommon.checkRestriction(y.toString().substr(4),d?"LEAVE_OWNER":"LEAVE")?{icon:"bx-messenger-menu-chat-exit",text:BX.message("IM_M_CHAT_EXIT"),onclick:BX.delegate((function(){BX.MessengerCommon.leaveFromChat(y.toString().substr(4));this.closeMenuPopup()}),this)}:{}]}else{l=[{icon:"bx-messenger-menu-write",text:BX.message("IM_M_WRITE_MESSAGE"),onclick:BX.delegate((function(){this.openMessenger(y);this.closeMenuPopup()}),this)},!_&&(!this.BXIM.checkCallSupport(y)||BX.MessengerCalls.hasActiveCall())?null:{icon:"bx-messenger-menu-video",text:BX.message("IM_M_CALL_VIDEO_HD"),onclick:BX.delegate((function(){this.BXIM.callTo(y,true);this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-history",text:BX.message("IM_M_OPEN_HISTORY"),onclick:BX.delegate((function(){this.openHistory(y);this.closeMenuPopup()}),this)},{icon:"bx-messenger-menu-profile",text:BX.message("IM_M_OPEN_PROFILE"),href:this.users[y].profile,onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}]}}else if(s=="dialogContext"||s=="dialogMenu"){var F=[];if(s=="dialogMenu"){this.popupPopupMenuStyle="bx-messenger-content-item-menu-hover";h={offset:12};if(t.parentNode.parentNode){F=[BX("im-message-"+t.parentNode.parentNode.getAttribute("data-blockmessageid"))]}}else{var W=false;if(t.target.className.indexOf("bx-messenger-file")>=0||t.target.className.indexOf("bx-bxu-proper-canvas")>=0){var V=BX.findParent(t.target,{className:"bx-messenger-file-box"});if(V&&V.previousSibling){W=true;F=[V.previousSibling]}}if(!W){if(BX.hasClass(t.target,"bx-messenger-message")){F=[t.target]}else if(t.target.className.indexOf("bx-messenger-content-quote")>=0){F=BX.findParent(t.target,{className:"bx-messenger-message"});F=[F]}else{F=BX.findChildrenByClassName(t.target,"bx-messenger-message")}if(F.length<=0){F=BX.findParent(t.target,{className:"bx-messenger-message"});if(!F){if(t.target.className.substr(0,19)=="bx-messenger-attach"||t.target.tagName=="A"){var G=BX.findParent(t.target,{className:"bx-messenger-attach-box"});F=G.previousSibling}}F=[F]}}}if(F.length<=0||!F[F.length-1])return false;var Y=BX.message("IM_M_SYSTEM_USER");var j=F[F.length-1].id.replace("im-message-","");if(this.message[j].senderId&&this.users[this.message[j].senderId])Y=this.users[this.message[j].senderId].name;if(j.substr(0,4)=="temp")return false;var z=this.message[j].date;var K=s=="dialogContext"?BX.desktop.clipboardSelected():{text:"",selectionStart:0,selectionEnd:0};var J=false;var q="";var y=this.message[j].senderId;var T=this.chat[this.message[j].chatId]&&this.chat[this.message[j].chatId].type==="announcement";if(this.openChatFlag&&this.message[j].senderId!=this.BXIM.userId&&this.users[this.message[j].senderId]){q=this.users[this.message[j].senderId].name}var Z=null;var Q="";if(s=="dialogContext"&&(t.target.tagName=="SPAN"&&t.target.parentNode.parentNode.tagName=="A"||t.target.tagName=="CANVAS"&&t.target.parentNode.tagName=="A"||t.target.tagName=="IMG"&&t.target.parentNode.tagName=="A"||t.target.tagName=="IMG"&&t.target.parentNode.parentNode.parentNode.tagName=="A"||t.target.tagName=="A")){if(t.target.tagName=="A")Q=t.target.href;else if(t.target.parentNode.tagName=="A")Q=t.target.parentNode.href;else if(t.target.parentNode.parentNode.tagName=="A")Q=t.target.parentNode.parentNode.href;else if(t.target.parentNode.parentNode.parentNode.tagName=="A")Q=t.target.parentNode.parentNode.parentNode.href;if(Q.indexOf("/desktop_app/")<0)J=true}else if(s=="dialogContext"&&t.target.tagName=="IMG"&&t.target.classList.contains("bx-icon")){Z=t.target.src}var $=this.message[j].params&&this.message[j].params.IS_DELETED!="Y"&&this.message[j].params.FILE_ID&&this.message[j].params.FILE_ID.length>0&&BX.clipboard.isCopySupported();var ee=false;if(s=="dialogContext"&&BX.desktop){ee=true}var te=false;var se=false;if(BX.MessengerCommon.checkEditMessage(j,"edit")){te=true}if(BX.MessengerCommon.checkEditMessage(j,"delete")){se=true}if(this.openChatFlag&&this.message[j].chatId&&!BX.MessengerCommon.userInChat(this.message[j].chatId)){return false}var ie=false;if(this.openChatFlag&&this.message[j].chatId&&this.generalChatId==this.message[j].chatId){if(this.BXIM.isAdmin&&!this.message[j].isNowDeleted){se=true}if(!this.canSendMessageGeneralChat){ie=true}}var ne=T||K.text.length>0||this.users[this.BXIM.userId].extranet;var ae=this.chat[this.message[j].chatId]&&this.chat[this.message[j].chatId].entity_type=="LINES";var oe=ne||!ae||(!this.message[j].text||this.message[j].text.length<=0);var re={text:BX.message("IM_MENU_TO_OL_QA"),onclick:BX.delegate((function(){BX.MessengerCommon.linesSaveToQuickAnswers(j);this.closeMenuPopup()}),this)};if(this.message[j].quick_saved){re.text=BX.message("IM_MENU_TO_OL_QA_ADDED");re.onclick=null}l=[q.length<=0||ie||T?null:{text:BX.message("IM_MENU_ANSWER"),onclick:BX.delegate((function(e){this.insertTextareaText(this.popupMessengerTextarea," "+BX.util.htmlspecialcharsback(q)+" ",false);BX.MessengerCommon.addMentionList(this.currentTab,BX.util.htmlspecialcharsback(q),y);setTimeout(BX.delegate((function(){this.popupMessengerTextarea.focus()}),this),200);this.closeMenuPopup()}),this)},q.length<=0||ie||T?null:{separator:true},J?{text:BX.message("IM_MENU_COPY3"),onclick:BX.delegate((function(){BX.clipboard.copy(Q);this.closeMenuPopup()}),this)}:null,$?{text:BX.message("IM_MENU_COPY_FILE"),onclick:BX.delegate((function(){var e="";for(var t=0;t<this.message[j].params.FILE_ID.length;t++){e=e+"[DISK="+this.message[j].params.FILE_ID[t]+"]"}BX.clipboard.copy(e);this.closeMenuPopup()}),this)}:null,Z?{text:BX.message("IM_SETTINGS_SAVE"),onclick:BX.delegate((function(){this.addRecentSmile(this.message[j].text,Z);this.closeMenuPopup()}),this)}:null,Z||$||J&&this.message[j].text?{separator:true}:null,y==this.BXIM.userId||K.text.length>0?null:{text:BX.message("IM_MENU_UNREAD"),onclick:BX.delegate((function(){BX.MessengerCommon.unreadMessage(j);this.closeMenuPopup()}),this)},y==this.BXIM.userId?null:{separator:true},K.text.length<=0||ie||T?null:{text:BX.message("IM_MENU_QUOTE"),onclick:BX.delegate((function(){var e=BX.desktop.clipboardSelected();this.insertQuoteText(Y,z,e.text);this.closeMenuPopup()}),this)},ie||T||K.text.length>0||!this.message[j].text&&(!this.message[j].params||!this.message[j].params.FILE_ID||this.message[j].params.FILE_ID.length<=0)?null:{text:BX.message("IM_MENU_QUOTE2"),onclick:BX.delegate((function(){var e=[];for(var t=0;t<F.length;t++){var s=F[t].id.replace("im-message-","");if(this.message[s]){if(this.message[s].textOriginal){e.push(this.message[s].textOriginal)}if(this.message[s].params&&this.message[s].params.FILE_ID){for(var i=0;i<this.message[s].params.FILE_ID.length;i++){var n=this.message[s].params.FILE_ID[i];var a=this.message[s].chatId;if(this.disk.files[a][n]){e.push("["+BX.message("IM_F_FILE")+": "+this.disk.files[a][n].name+"]")}}}}}if(e.length>0){this.insertQuoteText(Y,z,e.join("\n"))}this.closeMenuPopup()}),this)},!ee||K.text.length<=0?null:{text:BX.message("IM_MENU_COPY"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy();this.closeMenuPopup()}),this)},!ee||!this.message[j].text||K.text.length>0?null:{text:BX.message("IM_MENU_COPY2"),onclick:BX.delegate((function(){var e=[];for(var t=0;t<F.length;t++){var s=F[t].id.replace("im-message-","");if(this.message[s]){if(this.message[s].textOriginal){e.push(this.message[s].textOriginal)}if(this.message[s].params&&this.message[s].params.FILE_ID){for(var i=0;i<this.message[s].params.FILE_ID.length;i++){var n=this.message[s].params.FILE_ID[i];var a=this.message[s].chatId;if(this.disk.files[a][n]){e.push("["+BX.message("IM_F_FILE")+": "+this.disk.files[a][n].name+"]")}}}}}if(e.length>0){BX.desktop.clipboardCopy(BX.delegate((function(t){return this.insertQuoteText(Y,z,e.join("\n"),false)}),this))}this.closeMenuPopup()}),this)},ne?null:{separator:true},ne?null:{text:BX.message("IM_MENU_TO_TASK"),onclick:BX.delegate((function(){this.shareMessage(j,"TASK");this.closeMenuPopup()}),this)},ne?null:{text:BX.message("IM_MENU_TO_CALEND"),onclick:BX.delegate((function(){this.shareMessage(j,"CALEND");this.closeMenuPopup()}),this)},ne?null:{text:BX.message("IM_MENU_TO_CHAT"),onclick:BX.delegate((function(){this.shareMessage(j,"CHAT");this.closeMenuPopup()}),this)},ne?null:{text:BX.message("IM_MENU_TO_POST_2"),onclick:BX.delegate((function(){this.shareMessage(j,"POST");this.closeMenuPopup()}),this)},ne||!ae?null:{separator:true},ne||!ae?null:{text:BX.message("IM_MENU_TO_OL_START"),onclick:BX.delegate((function(){BX.MessengerCommon.linesStartSessionByMessage(j);this.closeMenuPopup()}),this)},oe?null:re,!(!te||this.message[j].senderId!=this.BXIM.userId)||se?{separator:true}:null,!te||this.message[j].senderId!=this.BXIM.userId?null:{text:BX.message("IM_MENU_EDIT"),onclick:BX.delegate((function(){this.editMessage(j);this.closeMenuPopup()}),this)},!se?null:{text:BX.message("IM_M_HISTORY_DELETE"),onclick:BX.delegate((function(){this.deleteMessage(j,false);this.closeMenuPopup()}),this)}];if(this.message[j].params&&this.message[j].params.MENU&&this.message[j].params.MENU!="N"){var le=true;for(var f=0;f<this.message[j].params.MENU.length;f++){var pe=this.message[j].params.MENU[f];if(pe.CONTEXT&&(BX.MessengerCommon.isMobile()&&pe.CONTEXT=="DESKTOP"||!BX.MessengerCommon.isMobile()&&pe.CONTEXT=="MOBILE")){continue}if(le){l.push({separator:true});le=false}var he=pe.DISABLED=="Y";var ce={};if(pe.ACTION){ce={ACTION:f}}else{ce=pe}l.push({text:pe.TEXT,disabled:he,className:"bx-messenger-popup-menu-item-custom",dataParams:ce,href:pe.LINK?pe.LINK:"",onclick:he?null:BX.delegate((function(){var e=JSON.parse(BX.proxy_context.getAttribute("data-params"));if(typeof e.ACTION!=="undefined"){BX.MessengerCommon.executeParamsButton("MENU",j,e.ACTION)}else if(e.FUNCTION){var t=e.FUNCTION.toString().replace("#MESSAGE_ID#",j).replace("#DIALOG_ID#",this.currentTab).replace("#USER_ID#",this.BXIM.userId);t()}else if(e.APP_ID){e.APP_PARAMS=e.APP_PARAMS?e.APP_PARAMS:"";this.textareaIconDialogClick(parseInt(e.APP_ID),j,BX.util.htmlspecialchars(e.APP_PARAMS))}else if(e.COMMAND&&e.COMMAND_PARAMS){BX.ajax({url:this.BXIM.pathToCallAjax+"?BOT_COMMAND&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_BOT_COMMAND:"Y",BOT_ID:e.BOT_ID,COMMAND:e.COMMAND,COMMAND_PARAMS:e.COMMAND_PARAMS,COMMAND_CONTEXT:"MENU",DIALOG_ID:this.currentTab,MESSAGE_ID:j,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}this.closeMenuPopup()}),this)})}}}else if(s=="shareMenu"){var j=t.getAttribute("data-messageId");var ue=t.getAttribute("data-ts");var ne=this.users[this.BXIM.userId].extranet;l=[ne?null:{text:BX.message("IM_MENU_TO_TASK"),onclick:BX.delegate((function(){this.shareMessage(j,"TASK",ue);this.closeMenuPopup()}),this)},ne?null:{text:BX.message("IM_MENU_TO_CALEND"),onclick:BX.delegate((function(){this.shareMessage(j,"CALEND",ue);this.closeMenuPopup()}),this)},ne?null:{text:BX.message("IM_MENU_TO_CHAT"),onclick:BX.delegate((function(){this.shareMessage(j,"CHAT",ue);this.closeMenuPopup()}),this)}]}else if(s=="history"){var F=[];if(t.target.className=="bx-messenger-history-item"){F=[t.target]}else if(t.target.className.indexOf("bx-messenger-content-quote")>=0){F=BX.findParent(t.target,{className:"bx-messenger-history-item"});F=[F]}else{F=BX.findChildrenByClassName(t.target,"bx-messenger-history-item")}if(F.length<=0){F=BX.findParent(t.target,{className:"bx-messenger-history-item"});F=[F]}if(F.length<=0||!F[F.length-1])return false;var Y=BX.message("IM_M_SYSTEM_USER");var j=F[F.length-1].getAttribute("data-messageId");if(this.message[j].senderId&&this.users[this.message[j].senderId])Y=this.users[this.message[j].senderId].name;var z=this.message[j].date;if(BX.desktop){var K=BX.desktop.clipboardSelected();var J=false;var Q="";if(t.target.tagName=="IMG"&&t.target.parentNode.tagName=="A"||t.target.tagName=="A"){if(t.target.tagName=="A")Q=t.target.href;else Q=t.target.parentNode.href;if(Q.indexOf("/desktop_app/")<0||Q.indexOf("/desktop_app/show.file.php")>=0)J=true}var de=this.BXIM.messenger.historySearch?true:false;l=[de?{text:BX.message("IM_HISTORY_RELATED"),onclick:BX.delegate((function(){this.showContext(j);this.closeMenuPopup()}),this)}:null,de?{separator:true}:null,J?{text:BX.message("IM_MENU_COPY3"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy(BX.delegate((function(){return Q}),this));this.closeMenuPopup()}),this)}:null,J?{separator:true}:null,K.text.length<=0?null:{text:BX.message("IM_MENU_QUOTE"),onclick:BX.delegate((function(){var e=BX.IM.getSelectionText();this.insertQuoteText(Y,z,e);this.closeMenuPopup()}),this)},{text:BX.message("IM_MENU_QUOTE2"),onclick:BX.delegate((function(){var e=[];for(var t=0;t<F.length;t++){var s=F[t].getAttribute("data-messageId");if(this.message[s]){if(this.message[s].textOriginal){e.push(this.message[s].textOriginal)}if(this.message[s].params&&this.message[s].params.FILE_ID){for(var i=0;i<this.message[s].params.FILE_ID.length;i++){var n=this.message[s].params.FILE_ID[t];var a=this.message[s].chatId;if(this.disk.files[a][n]){e.push("["+BX.message("IM_F_FILE")+": "+this.disk.files[a][n].name+"]")}}}}}if(e.length>0){this.insertQuoteText(Y,z,e.join("\n"))}this.closeMenuPopup()}),this)},{separator:true},K.text.length<=0?null:{text:BX.message("IM_MENU_COPY"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy();this.closeMenuPopup()}),this)},{text:BX.message("IM_MENU_COPY2"),onclick:BX.delegate((function(){var e=[];for(var t=0;t<F.length;t++){var s=F[t].getAttribute("data-messageId");if(this.message[s]){if(this.message[s].textOriginal){e.push(this.message[s].textOriginal)}if(this.message[s].params&&this.message[s].params.FILE_ID){for(var i=0;i<this.message[s].params.FILE_ID.length;i++){var n=this.message[s].params.FILE_ID[i];var a=this.message[s].chatId;if(this.disk.files[a][n]){e.push("["+BX.message("IM_F_FILE")+": "+this.disk.files[a][n].name+"]")}}}}}if(e.length>0){BX.desktop.clipboardCopy(BX.delegate((function(t){return this.insertQuoteText(Y,z,e.join("\n"),false)}),this))}this.closeMenuPopup()}),this)}]}else{var me=this.popupMessengerTextarea||opener;var de=this.BXIM.messenger.historySearch?true:false;l=[de?{text:BX.message("IM_HISTORY_RELATED"),onclick:BX.delegate((function(){this.showContext(j);this.closeMenuPopup()}),this)}:null,me?{separator:true}:null,me?{text:BX.message("IM_MENU_QUOTE2"),onclick:BX.delegate((function(){var e=[];for(var t=0;t<F.length;t++){var s=F[t].getAttribute("data-messageId");if(this.message[s]){if(this.message[s].textOriginal){e.push(this.message[s].textOriginal)}if(this.message[s].params&&this.message[s].params.FILE_ID){for(var i=0;i<this.message[s].params.FILE_ID.length;i++){var n=this.message[s].params.FILE_ID[t];var a=this.message[s].chatId;if(this.disk.files[a][n]){e.push("["+BX.message("IM_F_FILE")+": "+this.disk.files[a][n].name+"]")}}}}}if(e.length>0){this.insertQuoteText(Y,z,e.join("\n"))}this.closeMenuPopup()}),this)}:null,!de&&!me?{text:BX.message("IM_P_CLOSE"),onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}:null]}}else if(s=="historyFileMenu"){o=4;r=8;this.popupPopupMenuStyle="bx-messenger-file-active";var ge=n.fileId;var c=n.chatId;if(!this.disk.files[c][ge])return false;var fe=this.disk.files[c][ge].authorId==this.BXIM.userId;var Be;if(BX.desktopUtils.canDownload()){Be={text:BX.message("IM_F_DOWNLOAD"),onclick:BX.delegate((function(){var t=this.disk.files[c][ge];BX.desktopUtils.downloadFile(t.urlDownload,t.name);BX.MessengerCommon.preventDefault(e);this.closeMenuPopup()}),this)}}else{Be={text:BX.message("IM_F_DOWNLOAD"),href:this.disk.files[c][ge].urlDownload,target:"_blank",onclick:BX.delegate((function(e){this.closeMenuPopup()}),this)}}l=[Be,{text:BX.message("IM_F_DOWNLOAD_DISK"),onclick:BX.delegate((function(){this.disk.saveToDisk(c,ge,{boxId:"im-file-history-panel"});this.closeMenuPopup()}),this)},fe?{text:BX.message("IM_F_DELETE"),onclick:BX.delegate((function(){this.BXIM.openConfirm(BX.message("IM_F_DELETE_CONFIRM"),[new BX.PopupWindowButton({text:BX.message("IM_F_DELETE_CONFIRM_YES"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){this.disk.deleteFile(c,ge,{boxId:"im-file-history-panel"});BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true);this.closeMenuPopup()}),this)}:null]}else if(s=="notify"){if(t.target.className=="bx-notifier-item-delete"){t.target.setAttribute("id","bx-notifier-item-delete-"+t.target.getAttribute("data-notifyId"));this.openPopupMenu(t.target,"notifyDelete");return false}var K=BX.desktop.clipboardSelected();var J=false;if(t.target.tagName=="A"&&(t.target.href.indexOf("/desktop_app/")<0||Q.indexOf("/desktop_app/show.file.php")>=0)){J=true;var Q=t.target.href}else if(t.target.parentNode.tagName=="A"&&(t.target.parentNode.href.indexOf("/desktop_app/")<0||Q.indexOf("/desktop_app/show.file.php")>=0)){J=true;var Q=t.target.parentNode.href}if(!J&&K.text.length<=0){var M=t.target.getAttribute("data-notifyId");if(!M){M=t.target.parentNode.parentNode.getAttribute("data-notifyId");if(!M){M=t.target.parentNode.getAttribute("data-notifyId")}}if(M){t.target.setAttribute("data-notifyId",M);this.openPopupMenu(t.target,"notifyDelete",false,{applyToDom:t})}return false}l=[J?{text:BX.message("IM_MENU_COPY3"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy(BX.delegate((function(){return Q}),this));this.closeMenuPopup()}),this)}:null,J?{separator:true}:null,K.text.length<=0?null:{text:BX.message("IM_MENU_COPY"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy();this.closeMenuPopup()}),this)}]}else if(s=="copylink"){if(t.target.tagName!="A"||t.target.href.indexOf("/desktop_app/")>=0&&t.target.href.indexOf("/desktop_app/show.file.php")<0)return false;l=[{text:BX.message("IM_MENU_COPY3"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy(BX.delegate((function(e){return t.target.href}),this));this.closeMenuPopup()}),this)}]}else if(s=="copypaste"){if(n.spell&&!this.desktop.enableInVersion(34)){n.spell=false}l=[];var K=BX.desktop.clipboardSelected(t.target,n.spell);if(!K.text){n.spell=false}if(n.spell){if(n.spellReady){for(var f=0;f<n.suggest.length;f++){ce={suggest:n.suggest[f],selectionStart:K.selectionStart,selectionEnd:K.selectionEnd};l.push({text:n.suggest[f],slim:true,bold:true,dataParams:ce,onclick:BX.delegate((function(){var e=JSON.parse(BX.proxy_context.getAttribute("data-params"));setTimeout((function(){BX.desktop.clipboardReplaceText(t.target,e.selectionStart,e.selectionEnd,e.suggest)}),50);this.closeMenuPopup()}),this)});if(f==5)break}if(l.length<=0){l.push({text:BX.message("IM_MENU_SUGGEST_EMPTY"),bold:true,slim:true})}l.push({separator:true})}else{BXDesktopSystem.SpellCheckWord(K.text,BX.delegate((function(e,s){this.openPopupMenu(t,"copypaste",false,{spell:!e,spellReady:true,suggest:s})}),this))}}if(!n.spell||n.spellReady){if(K.text.length){l.push({text:BX.message("IM_MENU_CUT"),onclick:BX.delegate((function(){BX.desktop.clipboardCut();this.closeMenuPopup()}),this)}),l.push({text:BX.message("IM_MENU_COPY"),onclick:BX.delegate((function(){BX.desktop.clipboardCopy();this.closeMenuPopup()}),this)}),l.push({text:BX.message("IM_MENU_PASTE"),onclick:BX.delegate((function(){BX.desktop.clipboardPaste();this.closeMenuPopup()}),this)});l.push({text:BX.message("IM_MENU_DELETE"),onclick:BX.delegate((function(){BX.desktop.clipboardDelete();this.closeMenuPopup()}),this)})}else{l.push({text:BX.message("IM_MENU_PASTE"),onclick:BX.delegate((function(){BX.desktop.clipboardPaste();this.closeMenuPopup()}),this)})}p={position:"top"}}}else{l=[]}if(l.length<=0){return false}var Xe=true;for(var f=0;f<l.length;f++){if(l[f]){Xe=false}}if(Xe){l=[{text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),onclick:BX.delegate((function(){this.closeMenuPopup()}),this)}]}else{var Me=false;for(var f=0;f<l.length;f++){if(l[f]){if(l[f].separator){l[f]=null}else{break}}}}l=this.modifierPopupMenu(s,l);this.popupPopupMenuDateCreate=+new Date;this.popupPopupMenu=new BX.PopupWindow("bx-messenger-popup-"+s,t,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:true,offsetTop:o,offsetLeft:r,autoHide:true,closeByEsc:true,zIndex:n.zIndex?n.zIndex:BX.MessengerCommon.getDefaultZIndex()+200,bindOptions:p,events:{onPopupClose:BX.delegate((function(){if(this.popupPopupMenuStyle&&this.popupPopupMenu){if(this.popupPopupMenuStyle=="bx-messenger-file-active")BX.removeClass(this.popupPopupMenu.bindElement.parentNode,this.popupPopupMenuStyle);else if(this.popupPopupMenuStyle=="bx-messenger-content-item-menu-hover")BX.removeClass(this.popupPopupMenu.bindElement.parentNode,this.popupPopupMenuStyle);else BX.removeClass(this.popupPopupMenu.bindElement,this.popupPopupMenuStyle)}if(this.popupPopupMenuDateCreate+500<+new Date)BX.proxy_context.destroy()}),this),onPopupDestroy:BX.delegate((function(){if(this.popupPopupMenuStyle&&this.popupPopupMenu){if(this.popupPopupMenuStyle=="bx-messenger-file-active")BX.removeClass(this.popupPopupMenu.bindElement.parentNode,this.popupPopupMenuStyle);else if(this.popupPopupMenuStyle=="bx-messenger-content-item-menu-hover")BX.removeClass(this.popupPopupMenu.bindElement.parentNode,this.popupPopupMenuStyle);else BX.removeClass(this.popupPopupMenu.bindElement,this.popupPopupMenuStyle)}this.popupPopupMenu=null}),this)},content:BX.create("div",{props:{className:"bx-messenger-popup-menu"},children:[BX.create("div",{props:{className:"bx-messenger-popup-menu-items"},children:BX.MessengerChat.MenuPrepareList(l)})]})});if(i!==false&&!BX.MessengerTheme.isDark())this.popupPopupMenu.setAngle(h);BX.addClass(this.popupPopupMenu.popupContainer,"bx-messenger-mark");this.popupPopupMenu.show();if(this.popupPopupMenuStyle){if(this.popupPopupMenuStyle=="bx-messenger-file-active")BX.addClass(t.parentNode,this.popupPopupMenuStyle);else if(this.popupPopupMenuStyle=="bx-messenger-content-item-menu-hover")BX.addClass(t.parentNode,this.popupPopupMenuStyle);else BX.addClass(t,this.popupPopupMenuStyle)}BX.bind(this.popupPopupMenu.popupContainer,"click",BX.MessengerCommon.preventDefault);if(s=="dialogContext"||s=="notify"||s=="history"||s=="copypaste"){BX.bind(this.popupPopupMenu.popupContainer,"mousedown",(function(e){e.target.click()}))}return false};BX.MessengerChat.prototype.modifierPopupMenu=function(e,t){var s=null;for(var i=0;i<this.popupPopupMenuModifyFunction.length;i++){s=this.popupPopupMenuModifyFunction[i](e,t);if(s){t=s}}return t};BX.MessengerChat.prototype.openPopupExternalData=function(e,t,s,i){if(this.popupSmileMenu!=null)this.popupSmileMenu.destroy();BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();if(this.popupPopupMenu!=null){this.popupPopupMenu.destroy();return false}this.popupPopupMenuDateCreate=+new Date;var n=0;var a=10;var o={position:"top"};var r={width:"272px",height:"100px"};var l={IM_GET_EXTERNAL_DATA:"Y",TYPE:t,TS:this.popupPopupMenuDateCreate,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()};var p=BX.create("div",{attrs:{id:"bx-messenger-external-data"},props:{className:"bx-messenger-external-data"},style:r,children:[BX.create("div",{props:{className:"bx-messenger-external-data-load"},html:BX.message("IM_CL_LOAD")})]});if(t=="user"){r={width:"272px",height:"100px"};l["USER_ID"]=parseInt(i["ID"]);if(this.users[l["USER_ID"]]&&!this.users[l["USER_ID"]].fake){l=false}}else if(t=="chat"){r={width:"272px",height:"100px"};if(i["ID"].toString().substr(0,4)==="chat"){i["ID"]=i["ID"].toString().substr(4)}l["CHAT_ID"]=i["ID"];if(this.chat[l["CHAT_ID"]]&&!this.chat[l["CHAT_ID"]].fake){l=false}}else if(t=="phoneCallHistory"){r={width:"239px",height:"122px"};l["HISTORY_ID"]=parseInt(i["ID"])}else if(t=="readedList"){l=false;var h=[];var c=0;var u=0;for(var d in this.BXIM.messenger.readedList[this.BXIM.messenger.currentTab]){if(d==this.BXIM.userId)continue;if(!u||u>this.BXIM.messenger.readedList[this.BXIM.messenger.currentTab][d].date){c=d;u=this.BXIM.messenger.readedList[this.BXIM.messenger.currentTab][d].date}h.push({userId:d,date:this.BXIM.messenger.readedList[this.BXIM.messenger.currentTab][d].date})}var m='<span class="bx-notifier-item-help-popup">';for(var g=0;g<h.length;g++){if(h[g].userId==c)continue;var f=BX.MessengerCommon.isBlankAvatar(this.BXIM.messenger.users[h[g].userId].avatar)?'style="background-color: '+this.BXIM.messenger.users[h[g].userId].color+'"':"";m+='<span class="bx-notifier-item-help-popup-img bx-messenger-panel-chat-user" data-userId="'+h[g].userId+'" title="'+BX.MessengerCommon.formatDate(h[g].date)+'">'+'<span class="bx-notifier-popup-avatar  bx-notifier-popup-avatar-status-'+BX.MessengerCommon.getUserStatus(this.users[h[g].userId])+'">'+'<span class="bx-notifier-popup-avatar-img'+(BX.MessengerCommon.isBlankAvatar(this.BXIM.messenger.users[h[g].userId].avatar)?" bx-notifier-popup-avatar-img-default":"")+'" '+BX.MessengerCommon.getAvatarStyle(this.BXIM.messenger.users[h[g].userId])+"></span>"+"</span>"+'<span class="bx-notifier-item-help-popup-name  '+(this.BXIM.messenger.users[h[g].userId].extranet?" bx-notifier-popup-avatar-extranet":"")+'">'+this.BXIM.messenger.users[h[g].userId].name+"</span>"+"</span>"}m+="</span>";p=BX.create("div",{props:{className:"bx-messenger-popup-menu"},html:m})}else{return false}this.popupPopupMenu=new BX.PopupWindow("bx-messenger-popup-external-data",e,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:true,offsetTop:n,offsetLeft:a,autoHide:true,closeByEsc:true,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,bindOptions:o,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupPopupMenu=null}),this)},content:p});BX.addClass(this.popupPopupMenu.popupContainer,"bx-messenger-mark");if(s!==false&&!BX.MessengerTheme.isDark())this.popupPopupMenu.setAngle({offset:4});this.popupPopupMenu.show();if(l){BX.ajax({url:this.BXIM.pathToAjax+"?GET_EXTERNAL_DATA&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:l,onsuccess:BX.delegate((function(e){if(e.ERROR){e.TYPE="noAccess"}else if(e.TYPE=="chat"){for(var t in e.CHAT){e.CHAT[t].date_create=new Date(e.CHAT[t].date_create);this.chat[t]=e.CHAT[t]}for(var t in e.USER_IN_CHAT){this.userInChat[t]=e.USER_IN_CHAT[t]}for(var t in e.USER_BLOCK_CHAT){this.userChatBlockStatus[t]=e.USER_BLOCK_CHAT[t]}}else if(e.TYPE=="user"){for(var t in e.USERS){e.USERS[t].last_activity_date=e.USERS[t].last_activity_date?new Date(e.USERS[t].last_activity_date):false;e.USERS[t].mobile_last_date=e.USERS[t].mobile_last_date?new Date(e.USERS[t].mobile_last_date):false;e.USERS[t].idle=e.USERS[t].idle?new Date(e.USERS[t].idle):false;e.USERS[t].absent=e.USERS[t].absent?new Date(e.USERS[t].absent):false;this.users[t]=e.USERS[t]}for(var t in e.PHONES){this.phones[t]={};for(var s in e.PHONES[t]){this.phones[t][s]=BX.util.htmlspecialcharsback(e.PHONES[t][s])}}for(var t in e.USER_IN_GROUP){if(typeof this.userInGroup[t]=="undefined"){this.userInGroup[t]=e.USER_IN_GROUP[t]}else{for(var s=0;s<e.USER_IN_GROUP[t].users.length;s++)this.userInGroup[t].users.push(e.USER_IN_GROUP[t].users[s]);this.userInGroup[t].users=BX.util.array_unique(this.userInGroup[t].users)}}}e.TS=parseInt(e.TS);if(e.TS>0&&e.TS!=this.popupPopupMenuDateCreate||!this.popupPopupMenu)return false;this.drawExternalData(e.TYPE,e)}),this),onfailure:BX.delegate((function(){if(this.popupPopupMenu)this.popupPopupMenu.destroy()}),this)})}else{if(t=="user")this.drawExternalData("user",{USER_ID:i["ID"]});else if(t=="chat")this.drawExternalData("chat",{CHAT_ID:i["ID"]})}if(this.popupPopupMenu)BX.bind(this.popupPopupMenu.popupContainer,"click",BX.PreventDefault);return false};BX.MessengerChat.prototype.drawExternalData=function(e,t){if(!BX("bx-messenger-external-data"))return false;if(e=="noAccess"){BX("bx-messenger-external-data").innerHTML=BX.message("IM_M_USER_NO_ACCESS")}else if(e=="user"){if(!this.users[t["USER_ID"]]){if(this.popupPopupMenu)this.popupPopupMenu.destroy();return false}var s=false;BX("bx-messenger-external-data").innerHTML="";var i="";if(this.users[t["USER_ID"]].bot){if(this.bot[t["USER_ID"]]&&this.bot[t["USER_ID"]].type=="network"){i="bx-messenger-user-network"}else if(this.bot[t["USER_ID"]]&&this.bot[t["USER_ID"]].type=="support24"){i="bx-messenger-user-support24"}else{i="bx-messenger-user-bot"}}BX.adjust(BX("bx-messenger-external-data"),{children:[BX.create("div",{props:{className:"bx-messenger-external-avatar"},children:[BX.create("div",{props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-status-"+BX.MessengerCommon.getUserStatus(this.users[t["USER_ID"]])},children:[BX.create("span",{attrs:{style:BX.MessengerCommon.isBlankAvatar(this.users[t["USER_ID"]].avatar)?"background-color: "+this.users[t["USER_ID"]].color:"background: url('"+this.users[t["USER_ID"]].avatar+"'); background-size: cover"},props:{className:"bx-messenger-panel-avatar-img"+(BX.MessengerCommon.isBlankAvatar(this.users[t["USER_ID"]].avatar)?" bx-messenger-panel-avatar-img-default":"")}}),BX.create("span",{attrs:{title:BX.MessengerCommon.getUserStatus(this.users[t["USER_ID"]],false).statusText},props:{className:"bx-messenger-panel-avatar-status"}})]}),BX.create("span",{props:{className:"bx-messenger-panel-title"},html:this.users[t["USER_ID"]].extranet?'<div class="bx-messenger-user-extranet">'+this.users[t["USER_ID"]].name+"</div>":this.users[t["USER_ID"]].bot?'<div class="'+i+'">'+this.users[t["USER_ID"]].name+"</div>":this.users[t["USER_ID"]].name}),BX.create("span",{props:{className:"bx-messenger-panel-desc"},html:BX.MessengerCommon.getUserPosition(this.users[t["USER_ID"]])})]}),s?[]:BX.create("div",{props:{className:"bx-messenger-external-data-buttons"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_M_WRITE_MESSAGE"),events:{click:BX.delegate((function(e){this.popupPopupMenu.destroy();this.openMessenger(t["USER_ID"])}),this)}}),BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_M_CALL_BTN_HISTORY"),events:{click:BX.delegate((function(){this.popupPopupMenu.destroy();this.openHistory(t["USER_ID"])}),this)}})]})]})}else if(e=="chat"){if(!this.chat[t["CHAT_ID"]]){if(this.popupPopupMenu)this.popupPopupMenu.destroy();return false}var n=BX.message("IM_CL_CHAT_NEW");if(this.chat[t["CHAT_ID"]].type=="call"){n=BX.message("IM_CL_PHONE")}else if(this.chat[t["CHAT_ID"]].type=="lines"){n=BX.message("IM_CL_LINES")}else if(this.chat[t["CHAT_ID"]].type=="livechat"){n=BX.message("IM_CL_LINES")}else if(this.chat[t["CHAT_ID"]].type=="open"){n=BX.message("IM_CL_OPEN_CHAT_NEW")}else if(this.chat[t["CHAT_ID"]].type=="crm"){n=BX.message("IM_CL_CHAT_CRM")}else if(this.chat[t["CHAT_ID"]].type=="calendar"){n=BX.message("IM_CL_CHAT_CALENDAR")}else if(this.chat[t["CHAT_ID"]].type=="tasks"){n=BX.message("IM_CL_CHAT_TASKS")}else if(this.chat[t["CHAT_ID"]].type=="videoconf"){n=BX.message("IM_CL_VIDEOCONF")}else if(this.chat[t["CHAT_ID"]].type=="sonetGroup"){n=BX.message("IM_CL_CHAT_SONET_GROUP")}BX("bx-messenger-external-data").innerHTML="";BX.adjust(BX("bx-messenger-external-data"),{children:[BX.create("div",{props:{className:"bx-messenger-external-avatar"},children:[BX.create("div",{props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-"+this.chat[t["CHAT_ID"]].type},children:[BX.create("span",{attrs:{style:BX.MessengerCommon.isBlankAvatar(this.chat[t["CHAT_ID"]].avatar)?"background-color: "+this.chat[t["CHAT_ID"]].color:"background: url('"+this.chat[t["CHAT_ID"]].avatar+"'); background-size: cover;"},props:{className:"bx-messenger-panel-avatar-img"+(BX.MessengerCommon.isBlankAvatar(this.chat[t["CHAT_ID"]].avatar)?" bx-messenger-panel-avatar-img-default":"")}})]}),BX.create("span",{props:{className:"bx-messenger-panel-title"},html:this.chat[t["CHAT_ID"]].extranet?'<div class="bx-messenger-user-extranet">'+this.chat[t["CHAT_ID"]].name+"</div>":this.chat[t["CHAT_ID"]].name}),BX.create("span",{props:{className:"bx-messenger-panel-desc"},html:n})]}),BX.create("div",{props:{className:"bx-messenger-external-data-buttons"},children:[BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_M_OPEN_CHAT"),events:{click:BX.delegate((function(e){this.popupPopupMenu.destroy();this.openMessenger("chat"+t["CHAT_ID"])}),this)}}),BX.create("span",{props:{className:"bx-notifier-item-button bx-notifier-item-button-white"},html:BX.message("IM_M_CALL_BTN_HISTORY"),events:{click:BX.delegate((function(){this.popupPopupMenu.destroy();this.openHistory("chat"+t["CHAT_ID"])}),this)}})]})]})}else if(e=="phoneCallHistory"){var a=false;if(t["CALL_RECORD_HTML"]){var a={HTML:BX.message("CALL_RECORD_ERROR"),SCRIPT:[]};if(!BX.MessengerCommon.isDesktop()||this.BXIM.desktop.enableInVersion(43))a=BX.processHTML(t["CALL_RECORD_HTML"],false)}BX("bx-messenger-external-data").innerHTML="";BX.adjust(BX("bx-messenger-external-data"),{children:[BX.create("div",{props:{className:"bx-messenger-record"},children:[BX.create("div",{props:{className:"bx-messenger-record-phone-box"},children:[BX.create("span",{props:{className:"bx-messenger-record-icon bx-messenger-record-icon-"+t["CALL_ICON"]},attrs:{title:t["INCOMING_TEXT"]}}),BX.create("span",{props:{className:"bx-messenger-record-phone"},html:t["PHONE_NUMBER_FORMATTED"]?t["PHONE_NUMBER_FORMATTED"]:(t["PHONE_NUMBER"]&&t["PHONE_NUMBER"].toString().length>=10?"+":"")+t["PHONE_NUMBER"]})]}),BX.create("div",{props:{className:"bx-messenger-record-reason"},html:t["CALL_FAILED_REASON"]}),BX.create("div",{props:{className:"bx-messenger-record-stats"},children:[BX.create("span",{props:{className:"bx-messenger-record-time"},html:t["CALL_DURATION_TEXT"]}),BX.create("span",{props:{className:"bx-messenger-record-cost"},html:t["COST_TEXT"]})]}),a?BX.create("div",{props:{className:"bx-messenger-record-box"},children:[BX.create("span",{props:{className:"bx-messenger-record-player"},html:a.HTML})]}):null]})]});if(a){for(var o=0;o<a.SCRIPT.length;o++){BX.evalGlobal(a.SCRIPT[o].JS)}}}};BX.MessengerChat.prototype.openHistory=function(e){if(this.popupMessengerConnectionStatusState!="online")return false;if(this.historyWindowBlock)return false;this.historyLastSearch[e]="";if(!this.historyEndOfList[e])this.historyEndOfList[e]={};if(!this.historyLoadFlag[e])this.historyLoadFlag[e]={};if(this.popupHistory!=null)this.popupHistory.destroy();var t=0;var s=0;var i=this.BXIM.disk.enable;var n=false;if(e.toString().substr(0,4)=="chat"){n=true;t=parseInt(e.toString().substr(4));if(t<=0)return false}else{e=parseInt(e);if(e<=0)return false;t=this.userChat[e]?this.userChat[e]:0}this.historyFilesEndOfList[t]=false;this.historyFilesLoadFlag[t]=false;this.historyUserId=e;this.historyChatId=t;if(!BX.MessengerCommon.isPage())this.setClosingByEsc(false);this.popupHistoryPanel=null;var a=this.redrawHistoryPanel(e,t);this.popupHistoryElements=BX.create("div",{props:{className:"bx-messenger-history"+(i?" bx-messenger-history-with-disk":"")+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},children:[this.popupHistoryPanel=BX.create("div",{props:{className:"bx-messenger-panel-wrap"},children:a}),BX.create("div",{props:{className:"bx-messenger-history-types"},children:[BX.create("span",{props:{className:"bx-messenger-history-type bx-messenger-history-type-message"},children:[this.popupHistoryButtonFilterBox=BX.create("div",{props:{className:"bx-messenger-panel-filter-box"},style:{display:"block"},children:[this.popupHistorySearchDateWrap=BX.create("div",{props:{className:"bx-messenger-filter-date bx-messenger-input-wrap"},html:'<span class="bx-messenger-input-date"></span><a class="bx-messenger-input-close" href="javascript:void(0);"></a><input type="text" class="bx-messenger-input" value="" tabindex="1003" placeholder="'+BX.message("IM_PANEL_FILTER_DATE")+'" />'}),this.popupHistorySearchWrap=BX.create("div",{props:{className:"bx-messenger-filter-text bx-messenger-history-filter-text bx-messenger-input-wrap"},html:'<a class="bx-messenger-input-close" href="javascript:void(0);"></a><input type="text" class="bx-messenger-input" tabindex="1000" placeholder="'+BX.message("IM_PANEL_FILTER_TEXT")+'" value="" />'})]}),this.popupHistoryItems=BX.create("div",{props:{className:"bx-messenger-history-items"},style:{height:this.popupHistoryItemsSize+"px"},children:[this.popupHistoryBodyWrap=BX.create("div",{props:{className:"bx-messenger-history-items-wrap"}})]})]}),BX.create("span",{props:{className:"bx-messenger-history-type bx-messenger-history-type-disk"},children:[this.popupHistoryFilesButtonFilterBox=BX.create("div",{props:{className:"bx-messenger-panel-filter-box"},style:{display:"block"},children:[this.popupHistoryFilesSearchWrap=BX.create("div",{props:{className:"bx-messenger-filter-text bx-messenger-input-wrap"},html:'<a class="bx-messenger-input-close" href="javascript:void(0);"></a><input type="text"  tabindex="1002" class="bx-messenger-input" placeholder="'+BX.message("IM_F_FILE_SEARCH")+'" value="" />'})]}),this.popupHistoryFilesItems=BX.create("div",{props:{className:"bx-messenger-history-items"},style:{height:this.popupHistoryItemsSize+"px"},children:[this.popupHistoryFilesBodyWrap=BX.create("div",{props:{className:"bx-messenger-history-items-wrap"}})]})]})]})]});if(this.BXIM.init&&BX.MessengerCommon.isDesktop()){this.desktop.openHistory(e,this.popupHistoryElements,"BXIM.openHistory('"+e+"');");return false}else if(BX.MessengerCommon.isDesktop()){this.popupHistory=new BX.PopupWindowDesktop;this.desktop.drawOnPlaceholder(this.popupHistoryElements);BX.bind(window,"keydown",BX.proxy((function(e){if(e.keyCode==27){if(this.popupHistorySearchInput.value==""){this.popupHistory.destroy()}else{this.popupHistorySearchInput.value="";this.popupHistorySearchInput.focus()}}}),this))}else{this.popupHistory=new BX.PopupWindow("bx-messenger-popup-history",null,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),autoHide:false,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,draggable:{restrict:true},closeByEsc:true,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupHistory=null;this.historySearch="";this.setClosingByEsc(true);this.closeMenuPopup();var e=BX.calendar.get();if(e){e.Close()}}),this)},titleBar:{content:BX.create("span",{props:{className:"bx-messenger-title"},html:BX.message("IM_M_HISTORY")})},closeIcon:{right:"13px"},content:this.popupHistoryElements,contentColor:BX.MessengerTheme.isDark()?"":"white",noAllPaddings:true});BX.addClass(this.popupHistory.popupContainer,"bx-messenger-mark");this.popupHistory.show();BX.bind(this.popupHistory.popupContainer,"click",BX.MessengerCommon.preventDefault)}this.drawHistory(this.historyUserId);if(i){this.drawHistoryFiles(this.historyChatId)}if(BX.MessengerCommon.isDesktop()){BX.bind(this.popupHistorySearchInput,"contextmenu",BX.delegate((function(e){this.openPopupMenu(e,"copypaste",false);return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupHistoryElements,"contextmenu",{className:"bx-messenger-history-item"},BX.delegate((function(e){this.openPopupMenu(e,"history",false);return BX.PreventDefault(e)}),this))}BX.bindDelegate(this.popupHistoryElements,"click",{className:"bx-messenger-ajax"},BX.delegate((function(){if(BX.proxy_context.getAttribute("data-entity")=="user"){this.openPopupExternalData(BX.proxy_context,"user",true,{ID:BX.proxy_context.getAttribute("data-userId")})}else if(BX.proxy_context.getAttribute("data-entity")=="chat"){this.openPopupExternalData(BX.proxy_context,"chat",true,{ID:BX.proxy_context.getAttribute("data-chatId")})}else if(BX.proxy_context.getAttribute("data-entity")=="openlines"){this.linesOpenHistory(BX.proxy_context.getAttribute("data-sessionId"))}else if(BX.proxy_context.getAttribute("data-entity")=="network"){this.openMessenger("network"+BX.proxy_context.getAttribute("data-networkId"))}else if(BX.proxy_context.getAttribute("data-entity")=="date"){this.openPopupMenu(BX.proxy_context,"shareMenu")}else if(BX.proxy_context.getAttribute("data-entity")=="phoneCallHistory"){this.openPopupExternalData(BX.proxy_context,"phoneCallHistory",true,{ID:BX.proxy_context.getAttribute("data-historyID")})}}),this));BX.bindDelegate(this.popupHistoryElements,"click",{className:"bx-messenger-history-item-menu"},BX.delegate((function(e){this.openPopupMenu(e,"history",false);return BX.PreventDefault(e)}),this));BX.bindDelegate(this.popupHistoryPanel,"click",{className:"bx-messenger-panel-basket"},BX.delegate((function(){this.BXIM.openConfirm(BX.message("IM_M_HISTORY_DELETE_ALL_CONFIRM"),[new BX.PopupWindowButton({text:BX.message("IM_M_HISTORY_DELETE_ALL"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){this.deleteAllHistory(e);BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true)}),this));this.popupHistorySearchInput=BX.findChildByClassName(this.popupHistorySearchWrap,"bx-messenger-input");this.popupHistorySearchInputClose=BX.findChildByClassName(this.popupHistorySearchInput.parentNode,"bx-messenger-input-close");this.popupHistorySearchDateInput=BX.findChildByClassName(this.popupHistorySearchDateWrap,"bx-messenger-input");this.popupHistorySearchDateInputClose=BX.findChildByClassName(this.popupHistorySearchDateInput.parentNode,"bx-messenger-input-close");BX.bind(this.popupHistorySearchDateInput,"focus",BX.delegate((function(e){BX.calendar({node:BX.proxy_context,field:BX.proxy_context,bTime:false,callback_after:BX.delegate(this.newHistoryDateSearch,this)});return BX.PreventDefault(e)}),this));BX.bind(this.popupHistorySearchDateInput,"click",BX.delegate((function(e){BX.calendar({node:BX.proxy_context,field:BX.proxy_context,bTime:false,callback_after:BX.delegate(this.newHistoryDateSearch,this)});return BX.PreventDefault(e)}),this));BX.bind(this.popupHistorySearchDateInputClose,"click",BX.delegate((function(e){this.popupHistorySearchDateInput.value="";this.historyDateSearch="";this.historyLastSearch[this.historyUserId]="";this.drawHistory(this.historyUserId,false,false)}),this));if(this.popupHistoryFilterVisible&&!BX.browser.IsAndroid()&&!BX.browser.IsIOS())BX.focus(this.popupHistorySearchInput);BX.bind(this.popupHistorySearchInputClose,"click",BX.delegate((function(e){this.popupHistorySearchInput.value="";this.historySearch="";this.historyLastSearch[this.historyUserId]="";this.drawHistory(this.historyUserId,false,false);return BX.PreventDefault(e)}),this));BX.bind(this.popupHistorySearchInput,"keyup",BX.delegate(this.newHistorySearch,this));BX.bind(this.popupHistoryItems,"scroll",BX.delegate((function(){BX.MessengerCommon.loadHistory(e)}),this));if(this.disk.enable){BX.bindDelegate(this.popupHistoryFilesBodyWrap,"click",{className:"bx-messenger-file-menu"},BX.delegate((function(e){var t=BX.proxy_context.parentNode.parentNode.getAttribute("data-fileId");var s=BX.proxy_context.parentNode.parentNode.getAttribute("data-chatId");this.openPopupMenu(BX.proxy_context,"historyFileMenu",true,{fileId:t,chatId:s});return BX.PreventDefault(e)}),this));this.popupHistoryFilesSearchInput=BX.findChildByClassName(this.popupHistoryFilesSearchWrap,"bx-messenger-input");this.popupHistoryFilesSearchInputClose=BX.findChildByClassName(this.popupHistoryFilesSearchInput.parentNode,"bx-messenger-input-close");BX.bind(this.popupHistoryFilesSearchInputClose,"click",BX.delegate((function(e){this.popupHistoryFilesSearchInput.value="";this.historyFilesSearch="";this.historyFilesLastSearch[this.historyChatId]="";this.drawHistoryFiles(this.historyChatId,false,false);return BX.PreventDefault(e)}),this));BX.bind(this.popupHistoryFilesSearchInput,"keyup",BX.delegate(this.newHistoryFilesSearch,this));BX.bind(this.popupHistoryFilesItems,"scroll",BX.delegate((function(){this.loadHistoryFiles(this.historyChatId)}),this))}};BX.MessengerChat.prototype.loadHistoryFiles=function(e,t){if(this.historyFilesLoadFlag[e])return;if(this.historyFilesSearch!="")return;if(t&&this.popupHistoryFilesItems.offsetHeight>this.popupHistoryFilesBodyWrap.offsetHeight-100){}else if(!(this.popupHistoryFilesItems.scrollTop>this.popupHistoryFilesItems.scrollHeight-this.popupHistoryFilesItems.offsetHeight-100)){return}if(!this.historyFilesEndOfList[e]){this.historyFilesLoadFlag[e]=true;if(this.popupHistoryFilesBodyWrap.childNodes.length>0)this.historyFilesOpenPage[e]=Math.floor(this.popupHistoryFilesBodyWrap.childNodes.length/15)+1;else this.historyFilesOpenPage[e]=1;var s=null;this.popupHistoryFilesBodyWrap.appendChild(s=BX.create("div",{props:{className:"bx-messenger-content-load-more-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_F_LOAD_FILES")})]}));BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_FILES_LOAD_MORE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_HISTORY_FILES_LOAD:"Y",CHAT_ID:e,PAGE_ID:this.historyFilesOpenPage[e],IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(s)BX.remove(s);this.historyFilesLoadFlag[e.CHAT_ID]=false;if(e.FILE_LIST.length==0){this.historyFilesEndOfList[e.CHAT_ID]=true;return}var t=0;e.FILE_LIST.forEach(function(s){if(!this.disk.files[e.CHAT_ID])this.disk.files[e.CHAT_ID]={};if(!this.disk.files[e.CHAT_ID][s.id]){s.date=new Date(s.date);this.disk.files[e.CHAT_ID][s.id]=s}t++}.bind(this));if(t<15){this.historyFilesEndOfList[e.CHAT_ID]=true}e.FILE_LIST.forEach(function(t){var t=this.disk.files[e.CHAT_ID][t.id];if(t&&!BX("im-file-history-panel-"+t.id)){var s=this.disk.drawHistoryFiles(e.CHAT_ID,t.id,{getElement:"Y"});if(s)this.popupHistoryFilesBodyWrap.appendChild(s)}}.bind(this))}),this),onfailure:function(){if(s)BX.remove(s)}})}};BX.MessengerChat.prototype.showContext=function(e){BX.ajax({url:this.BXIM.pathToAjax+"?LOAD_CONTEXT_MESSAGE&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,data:{IM_LOAD_CONTEXT_MESSAGE:"Y",MESSAGE_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(t){if(t&&t.BITRIX_SESSID){BX.message({bitrix_sessid:t.BITRIX_SESSID})}if(t.ERROR==""){var s=t.DIALOG_ID;this.showMessage[s]=[];this.sendAjaxTry=0;for(var i in t.MESSAGE){t.MESSAGE[i].date=new Date(t.MESSAGE[i].date);t.MESSAGE[i].textOriginal=t.MESSAGE[i].text;t.MESSAGE[i].text=BX.MessengerCommon.prepareText(t.MESSAGE[i].text,true,true,true);if(!this.message[i]){this.message[i]=t.MESSAGE[i]}}for(var i in t.FILES){if(!this.disk.files[t.CHAT_ID])this.disk.files[t.CHAT_ID]={};if(this.disk.files[t.CHAT_ID][i])continue;t.FILES[i].date=new Date(t.FILES[i].date);this.disk.files[t.CHAT_ID][i]=t.FILES[i]}for(var i in t.USERS){t.USERS[i].last_activity_date=t.USERS[i].last_activity_date?new Date(t.USERS[i].last_activity_date):false;t.USERS[i].mobile_last_date=t.USERS[i].mobile_last_date?new Date(t.USERS[i].mobile_last_date):false;t.USERS[i].idle=t.USERS[i].idle?new Date(t.USERS[i].idle):false;t.USERS[i].absent=t.USERS[i].absent?new Date(t.USERS[i].absent):false;this.users[i]=t.USERS[i]}for(var i in t.USER_IN_GROUP){if(typeof this.userInGroup[i]=="undefined"){this.userInGroup[i]=t.USER_IN_GROUP[i]}else{for(var n=0;n<t.USER_IN_GROUP[i].users.length;n++)this.userInGroup[i].users.push(t.USER_IN_GROUP[i].users[n]);this.userInGroup[i].users=BX.util.array_unique(this.userInGroup[i].users)}}for(var i in t.PHONES){this.phones[i]={};for(var n in t.PHONES[i]){this.phones[i][n]=BX.util.htmlspecialcharsback(t.PHONES[i][n])}}var a=this.historySearch;this.historySearch="";this.drawHistory(t.DIALOG_ID,t.USERS_MESSAGE,false);this.historySearch=a;if(BX("im-message-history-"+e)){var o=BX("im-message-history-"+e).parentNode.offsetTop;this.popupHistoryItems.scrollTop=o-this.popupHistoryItems.offsetHeight/2+BX("im-message-history-"+e).parentNode.offsetHeight/2;BX.addClass(BX("im-message-history-"+e).parentNode,"bx-messenger-history-item-context");BX.addClass(this.popupHistoryBodyWrap,"bx-messenger-history-items-wrap-show-context")}}else{if(t.ERROR=="SESSION_ERROR"&&this.sendAjaxTry<2){this.sendAjaxTry++;setTimeout(BX.delegate((function(){this.showContext(e)}),this),1e3);BX.onCustomEvent(window,"onImError",[t.ERROR,t.BITRIX_SESSID])}else if(t.ERROR=="AUTHORIZE_ERROR"){this.sendAjaxTry++;if(BX.MessengerCommon.isDesktop()){setTimeout(BX.delegate((function(){this.showContext(e)}),this),1e4)}BX.onCustomEvent(window,"onImError",[t.ERROR])}}}),this),onfailure:BX.delegate((function(){this.sendAjaxTry=0}),this)})};BX.MessengerChat.prototype.jumpToMessage=function(e){};BX.MessengerChat.prototype.deleteAllHistory=function(e){BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_REMOVE_ALL&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_HISTORY_REMOVE_ALL:"Y",USER_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}});BX.localStorage.set("mhra",e,5);BX.MessengerProxy.sendClearHistoryEvent(e);this.history[e]=[];this.showMessage[e]=[];this.popupHistoryBodyWrap.innerHTML="";this.popupHistoryBodyWrap.appendChild(BX.create("div",{props:{className:"bx-messenger-content-history-empty"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_NO_MESSAGE")})]}));if(BX.MessengerCommon.isDesktop())BX.desktop.onCustomEvent("main","bxImClearHistory",[e]);else if(this.BXIM.init)BX.MessengerCommon.drawTab(e)};BX.MessengerChat.prototype.drawMessageHistory=function(e){if(typeof e!="object")return null;if(typeof e.params!="object"){e.params={}}e=BX.MessengerCommon.convertMessage(e);var t=e.text;var s=e.senderId==0;if(e.system&&e.system=="Y"){s=true;e.senderId=0}var i=e.params&&e.params.IS_EDITED=="Y";var n=e.params&&e.params.IS_DELETED=="Y";var a=BX.MessengerCommon.diskDrawFiles(e.chatId,e.params.FILE_ID,{status:["done","error"],boxId:"im-file-history"});if(a.length>0){a=BX.create("div",{props:{className:"bx-messenger-file-box"},children:a})}else{a=null}var o=null;var r=[];if(e.params.ATTACH){for(var l=0;l<e.params.ATTACH.length;l++){r[l]=e.params.ATTACH[l]}var p=/\[ATTACH=([0-9]{1,})\]/gm;var h=[];while((h=p.exec(t))!==null){for(var l=0;l<r.length;l++){if(e.params.ATTACH[l].ID==h[1]){o=BX.create("div",{props:{className:"bx-messenger-attach-box"},children:BX.MessengerCommon.drawAttach(e.id,e.chatId,[r[l]])});t=t.replace("[ATTACH="+h[1]+"]",o.innerHTML);delete r[l]}}}}if(e.params.LINK_ACTIVE&&e.params.LINK_ACTIVE.length>0&&!e.params.LINK_ACTIVE.map((function(e){return parseInt(e)})).includes(this.BXIM.userId)){t=t.replace(/<a.*?href="([^"]*)".*?>(.*?)<\/a>/gi,"$2")}var c="";if(e.params.CLASS){c=e.params.CLASS}o=BX.MessengerCommon.drawAttach(e.id,e.chatId,r);if(o.length>0){o=BX.create("div",{props:{className:"bx-messenger-attach-box"},children:o})}else{o=null}var u=this.BXIM.messenger.users[e.senderId];if(e.params&&u&&u.id>0&&(e.params.AVATAR||e.params.NAME||e.params.USER_ID)){u=BX.clone(u);if(e.params.AVATAR){u.avatar=e.params.AVATAR}if(e.params.NAME){u.name=e.params.NAME;u.first_name=e.params.NAME.split(" ")[0]}e=BX.clone(e);if(parseInt(e.params.USER_ID)){e.senderId="network"+e.params.USER_ID}}var d=BX.MessengerCommon.linesVoteDraw(e.id);if(d){t=d;e.system="Y"}else{c=c.replace("bx-messenger-content-item-vote","");var m=BX.MessengerCommon.linesVoteResultDraw(e.id,t);if(m){t=m}}var g=null;if(typeof t=="string"){g=BX.create("span",{props:{className:"bx-messenger-history-item-text"+(n?" bx-messenger-message-deleted":" ")+(n||i?" bx-messenger-message-edited":"")},attrs:{id:"im-message-history-"+e.id},html:t})}else{g=BX.create("span",{props:{className:"bx-messenger-history-item-text"+(n?" bx-messenger-message-deleted":" ")+(n||i?" bx-messenger-message-edited":"")},attrs:{id:"im-message-history-"+e.id},children:[t]})}if(a==null&&e.text.length<=0&&!e.params["ATTACH"]){resultNode=BX.create("div",{attrs:{"data-messageId":e.id},props:{className:"bx-messenger-history-item-text bx-messenger-item-skipped"}})}else{var f="";var B="";if(e.senderId>0&&u){f=u.avatar;B=u.color}resultNode=BX.create("div",{attrs:{"data-messageId":e.id},props:{className:"bx-messenger-history-item"+(e.senderId==0?" bx-messenger-history-item-3":e.senderId==this.BXIM.userId?"":" bx-messenger-history-item-2")+" "+c},children:[BX.create("div",{props:{className:"bx-messenger-history-hide"},html:this.historyMessageSplit}),BX.create("span",{props:{className:"bx-messenger-history-item-avatar"},children:[BX.create("span",{props:{className:"bx-messenger-content-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(f)?" bx-messenger-content-item-avatar-img-default":"")},attrs:{style:e.senderId>0&&BX.MessengerCommon.isBlankAvatar(f)&&B?"background-color: "+B:"background: url('"+f+"'); background-size:cover;"}})]}),BX.create("div",{props:{className:"bx-messenger-history-item-name"},html:(this.users[e.senderId]?this.users[e.senderId].name:BX.message("IM_M_SYSTEM_USER"))+' <span class="bx-messenger-history-hide">[</span><span class="bx-messenger-history-item-date">'+BX.MessengerCommon.formatDate(e.date,BX.MessengerCommon.getDateFormatType("MESSAGE"))+'</span><span class="bx-messenger-history-hide">]</span>'}),BX.create("div",{props:{className:"bx-messenger-history-item-menu"}}),e.text.length>0?g:"",a,o,BX.create("div",{props:{className:"bx-messenger-history-hide"},html:"<br />"}),BX.create("div",{props:{className:"bx-messenger-history-hide"},html:this.historyMessageSplit})]})}return resultNode};BX.MessengerChat.prototype.drawHistory=function(e,t,s,i){if(this.popupHistory==null)return false;i=typeof i=="undefined"?true:i;s=typeof s=="undefined"?true:s;var n=false;var a=0;if(e.toString().substr(0,4)=="chat"){n=true;a=e.toString().substr(4)}var o=[];var r=false;BX.removeClass(this.popupHistoryBodyWrap,"bx-messenger-history-items-wrap-show-context");this.popupHistoryBodyWrap.innerHTML="";var l=this.historySearch.length>0;var t=!t?this.history:t;if(t[e]&&(!n&&this.users[e]||n&&this.chat[a])){var p=BX.util.array_unique(t[e]);var h={};if(i){p.sort(BX.delegate((function(e,t){e=parseInt(e);t=parseInt(t);if(!this.message[e]||!this.message[t]){return 0}var s=this.message[e].date.getTime();var i=this.message[t].date.getTime();if(s>i){return-1}else if(s<i){return 1}else{if(e>t){return-1}else if(e<t){return 1}else{return 0}}}),this))}for(var c=0;c<p.length;c++){if(!this.message[t[e][c]]){continue}var u="";if(this.historyOptions.fullTextEnabled){var d=function(e,t){if(Array.isArray(e)){e.forEach((function(e){d(e,t)}))}else if(BX.type.isObject(e)){for(var s in e){d(e[s],t)}}else if(e){u+=" "+e.toString().toLowerCase()}};if(this.message[t[e][c]].params){var m=this.message[t[e][c]].params.ATTACH;if(m&&m[0]["BLOCKS"]){d(m[0]["BLOCKS"],this.historySearch)}}if(this.message[t[e][c]].senderId>0){if(this.users[this.message[t[e][c]].senderId]){u+=" "+this.users[this.message[t[e][c]].senderId].name}}if(this.message[t[e][c]].params&&this.message[t[e][c]].params.FILE_ID){var g=this.message[t[e][c]].chatId;this.message[t[e][c]].params.FILE_ID.forEach((function(e){if(this.disk.files[g]&&this.disk.files[g][e]){u+=" "+this.disk.files[g][e].name}}),this)}}var f=function(e,t){for(var s=0;s<e.length;s++){if(t.toLowerCase().indexOf(e[s].toLowerCase())<0){return false}}return true};u+=" "+this.message[t[e][c]].text;var B=this.historySearch.trim().split(" ");var X=f(B,BX.util.htmlspecialcharsback(u));if(l&&!X){continue}var M=BX.MessengerCommon.formatDate(this.message[t[e][c]].date,BX.MessengerCommon.getDateFormatType("MESSAGE_TITLE"));if(!BX("bx-im-history-"+M)&&!h[M]){h[M]=true;o.push(BX.create("div",{props:{className:"bx-messenger-content-group bx-messenger-content-group-history"},children:[BX.create("div",{attrs:{id:"bx-im-history-"+M},props:{className:"bx-messenger-content-group-title"+(this.BXIM.language=="ru"?" bx-messenger-lowercase":"")},html:M})]}))}var C=this.drawMessageHistory(this.message[t[e][c]]);if(C)o.push(C)}if(o.length<=0){if(!this.historySearchBegin){r=true;o=[BX.create("div",{props:{className:"bx-messenger-content-history-empty"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_NO_MESSAGE")})]})]}}}else if(this.showMessage[e]&&this.showMessage[e].length<=0){r=true;o=[BX.create("div",{props:{className:"bx-messenger-content-history-empty"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_NO_MESSAGE")})]})]}if(o.length>0){BX.adjust(this.popupHistoryBodyWrap,{children:o});this.popupHistoryItems.scrollTop=0}if(s&&(!this.showMessage[e]||this.showMessage[e]&&this.showMessage[e].length<20)){if(r)this.popupHistoryFilesBodyWrap.innerHTML="";this.popupHistoryBodyWrap.appendChild(BX.create("div",{props:{className:BX.findChildrenByClassName(this.popupHistoryBodyWrap,"bx-messenger-history-item-text").length>0?"bx-messenger-content-load-more-history":"bx-messenger-content-load-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_LOAD_MESSAGE")})]}));BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_LOAD&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,data:{IM_HISTORY_LOAD:"Y",USER_ID:e,USER_LOAD:n?this.chat[e.toString().substr(4)]&&this.chat[e.toString().substr(4)].fake?"Y":"N":this.users[e]&&this.users[e].fake?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(i){if(i&&i.BITRIX_SESSID){BX.message({bitrix_sessid:i.BITRIX_SESSID})}if(i.ERROR==""){if(!n){if(!this.userChat[e]){this.userChat[e]=i.CHAT_ID}}for(var a in i.FILES){if(!this.disk.files[i.CHAT_ID])this.disk.files[i.CHAT_ID]={};if(this.disk.files[i.CHAT_ID][a])continue;i.FILES[a].date=new Date(i.FILES[a].date);this.disk.files[i.CHAT_ID][a]=i.FILES[a]}this.showMessage[e]=[];this.sendAjaxTry=0;for(var a in i.MESSAGE){i.MESSAGE[a].date=new Date(i.MESSAGE[a].date);i.MESSAGE[a].textOriginal=i.MESSAGE[a].text;i.MESSAGE[a].text=BX.MessengerCommon.prepareText(i.MESSAGE[a].text,true,true,true);this.message[a]=i.MESSAGE[a];this.showMessage[e].push(a)}for(var a in i.USERS_MESSAGE){if(this.history[a])this.history[a]=BX.util.array_merge(this.history[a],i.USERS_MESSAGE[a]);else this.history[a]=i.USERS_MESSAGE[a]}if(!n&&this.users[e]&&!this.users[e].fake||n&&this.chat[i.CHAT_ID]&&!this.chat[i.CHAT_ID].fake){BX.cleanNode(this.popupHistoryBodyWrap);if(!i.USERS_MESSAGE[e]||i.USERS_MESSAGE[e].length<=0){this.popupHistoryBodyWrap.appendChild(BX.create("div",{props:{className:"bx-messenger-content-history-empty"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_NO_MESSAGE")})]}))}else{for(var a=0;a<i.USERS_MESSAGE[e].length;a++){var o=BX.MessengerCommon.formatDate(this.message[i.USERS_MESSAGE[e][a]].date,BX.MessengerCommon.getDateFormatType("MESSAGE_TITLE"));var r=typeof BX.translit!="undefined"?BX.translit(o):o;if(!BX("bx-im-history-"+r)){this.popupHistoryBodyWrap.appendChild(BX.create("div",{props:{className:"bx-messenger-content-group bx-messenger-content-group-history"},children:[BX.create("div",{attrs:{id:"bx-im-history-"+r},props:{className:"bx-messenger-content-group-title"+(this.BXIM.language=="ru"?" bx-messenger-lowercase":"")},html:o})]}))}var l=this.drawMessageHistory(this.message[i.USERS_MESSAGE[e][a]]);if(l)this.popupHistoryBodyWrap.appendChild(l)}}if(this.currentTab==e)BX.MessengerCommon.drawTab(this.currentTab,true)}else{if(n&&this.chat[i.USER_ID.substr(4)].fake)this.chat[i.USER_ID.toString().substr(4)].name=BX.message("IM_M_USER_NO_ACCESS");if(!n){BX.MessengerCommon.getUserParam(e,true);this.users[e].name=BX.message("IM_M_USER_NO_ACCESS")}for(var a in i.USERS){i.USERS[a].last_activity_date=i.USERS[a].last_activity_date?new Date(i.USERS[a].last_activity_date):false;i.USERS[a].mobile_last_date=i.USERS[a].mobile_last_date?new Date(i.USERS[a].mobile_last_date):false;i.USERS[a].idle=i.USERS[a].idle?new Date(i.USERS[a].idle):false;i.USERS[a].absent=i.USERS[a].absent?new Date(i.USERS[a].absent):false;this.users[a]=i.USERS[a]}for(var a in i.USER_IN_GROUP){if(typeof this.userInGroup[a]=="undefined"){this.userInGroup[a]=i.USER_IN_GROUP[a]}else{for(var p=0;p<i.USER_IN_GROUP[a].users.length;p++)this.userInGroup[a].users.push(i.USER_IN_GROUP[a].users[p]);this.userInGroup[a].users=BX.util.array_unique(this.userInGroup[a].users)}}for(var a in i.CHAT){i.CHAT[a].date_create=new Date(i.CHAT[a].date_create);this.chat[a]=i.CHAT[a]}for(var a in i.USER_IN_CHAT){this.userInChat[a]=i.USER_IN_CHAT[a]}for(var a in i.USER_BLOCK_CHAT){this.userChatBlockStatus[a]=i.USER_BLOCK_CHAT[a]}if(!n)BX.MessengerCommon.userListRedraw();this.dialogStatusRedraw();this.drawHistory(e,false,false)}if(this.historyChatId==0){this.historyChatId=i.CHAT_ID;this.drawHistoryFiles(this.historyChatId)}this.redrawHistoryPanel(e,n?i.USER_ID.substr(4):0)}else{if(i.ERROR=="SESSION_ERROR"&&this.sendAjaxTry<2){this.sendAjaxTry++;setTimeout(BX.delegate((function(){this.drawHistory(e,t,s)}),this),1e3);BX.onCustomEvent(window,"onImError",[i.ERROR,i.BITRIX_SESSID])}else if(i.ERROR=="AUTHORIZE_ERROR"){this.sendAjaxTry++;if(BX.MessengerCommon.isDesktop()){setTimeout(BX.delegate((function(){this.drawHistory(e,t,s)}),this),1e4)}BX.onCustomEvent(window,"onImError",[i.ERROR])}}}),this),onfailure:BX.delegate((function(){this.sendAjaxTry=0}),this)})}};BX.MessengerChat.prototype.redrawHistoryPanel=function(e,t,s){var i=e.toString().substr(0,4)=="chat"?true:false;var n=null;s=s||{};BX.MessengerCommon.getUserParam(e);if(i){n=BX.create("div",{props:{className:"bx-messenger-panel bx-messenger-panel-bg2"},children:[BX.create("span",{props:{className:"bx-messenger-panel-avatar bx-messenger-panel-avatar-"+this.chat[t].type},children:[BX.create("span",{attrs:{style:BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)?"background-color: "+this.chat[t].color:"background: url('"+this.chat[t].avatar+"'); background-size: cover;"},props:{className:"bx-messenger-panel-avatar-img"+(BX.MessengerCommon.isBlankAvatar(this.chat[t].avatar)?" bx-messenger-panel-avatar-img-default":"")}})]}),s.drawLinesVote=="Y"?BX.create("a",{attrs:{"data-sessionId":s.sessionId,"data-rating":s.sessionVoteHead,"data-context":"history",title:BX.message("IM_M_HISTORY_LINES_VOTE_AND_COMMENT")},props:{className:"bx-messenger-panel-history-vote"},events:{click:BX.delegate((function(){this.linesVoteAndCommentHeadDialog(BX.proxy_context,s.sessionId,s.sessionVoteHead,s.sessionCommentHead);return BX.PreventDefault()}),this)}}):null,s.drawLinesJoin=="Y"?BX.create("a",{attrs:{title:BX.message("IM_M_HISTORY_LINES_JOIN")},props:{className:"bx-messenger-panel-history-join"},events:{click:BX.delegate((function(){this.popupHistory.close();this.linesOpenMessenger(this.chat[t].entity_id)}),this)}}):null,this.popupHistoryButtonDeleteAll=this.chat[t].type=="open"||this.chat[t].type=="lines"?null:BX.create("a",{attrs:{title:BX.message("IM_M_HISTORY_DELETE_ALL")},props:{className:"bx-messenger-panel-basket"}}),BX.create("span",{props:{className:"bx-messenger-panel-title bx-messenger-panel-title-middle"},html:this.chat[t].name})]})}else{var a="";if(this.users[e].bot){if(this.bot[e]&&this.bot[e].type=="network"){a="bx-messenger-user-network"}else if(this.bot[e]&&this.bot[e].type=="support24"){a="bx-messenger-user-support24"}else{a="bx-messenger-user-bot"}}n=BX.create("div",{props:{className:"bx-messenger-panel bx-messenger-panel-bg2"},children:[BX.create("a",{attrs:{href:this.users[e].profile,target:"_blank"},props:{className:"bx-messenger-panel-avatar bx-messenger-context-user bx-messenger-panel-avatar-status-"+BX.MessengerCommon.getUserStatus(this.users[e])},children:[BX.create("span",{attrs:{style:BX.MessengerCommon.isBlankAvatar(this.users[e].avatar)?"background-color: "+this.users[e].color:"background: url('"+this.users[e].avatar+"'); background-size: cover;"},props:{className:"bx-messenger-panel-avatar-img"+(BX.MessengerCommon.isBlankAvatar(this.users[e].avatar)?" bx-messenger-panel-avatar-img-default":"")}}),BX.create("span",{attrs:{title:BX.MessengerCommon.getUserStatus(this.users[e],false).title},props:{className:"bx-messenger-panel-avatar-status"}})]}),this.popupHistoryButtonDeleteAll=e==this.BXIM.userId?null:BX.create("a",{props:{className:"bx-messenger-panel-basket"}}),BX.create("span",{props:{className:"bx-messenger-panel-title"},html:this.users[e].extranet?'<div class="bx-messenger-user-extranet">'+this.users[e].name+"</div>":this.users[e].bot&&this.bot[e]?'<div class="'+a+'">'+this.users[e].name+"</div>":this.users[e].name}),BX.create("span",{props:{className:"bx-messenger-panel-desc"},html:BX.MessengerCommon.getUserPosition(this.users[e])})]})}if(this.popupHistoryPanel){this.popupHistoryPanel.innerHTML="";BX.adjust(this.popupHistoryPanel,{children:[n]})}else{return[n]}};BX.MessengerChat.prototype.drawHistoryFiles=function(e,t,s){if(this.popupHistory==null)return false;s=typeof s=="undefined"?true:s;var i=this.historyFilesSearch.length>0;var t=!t?this.disk.files[e]:t;var n=[];var a=false;if(t){var o={};for(var r in t){if(r.toString().indexOf("file")===0&&this.disk.files[e][t[r].id]){continue}o[r]=t[r]}o=BX.util.objectSort(o,"date","desc");for(var l=0;l<o.length;l++){if(i&&o[l].name.toLowerCase().indexOf((this.historyFilesSearch+"").toLowerCase())<0)continue;var p=this.disk.drawHistoryFiles(e,o[l].id,{getElement:"Y"});if(p)n.push(p)}if(n.length<=0){if(!this.historyFilesSearchBegin){a=true;n=[BX.create("div",{props:{className:"bx-messenger-content-history-empty"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_F_NO_FILES_2")})]})]}}if(n.length>=15){s=false}}else if(e==0){a=true;n=[BX.create("div",{props:{className:this.popupHistoryFilesBodyWrap.childNodes.length>0?"bx-messenger-content-load-more-history":"bx-messenger-content-load-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_F_LOAD_FILES")})]})]}else{a=true;n=[BX.create("div",{props:{className:"bx-messenger-content-history-empty"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_F_NO_FILES_2")})]})]}this.popupHistoryFilesBodyWrap.innerHTML="";if(n.length>0){BX.adjust(this.popupHistoryFilesBodyWrap,{children:n});this.popupHistoryFilesItems.scrollTop=0}if(s&&e>0){if(a)this.popupHistoryFilesBodyWrap.innerHTML="";this.popupHistoryFilesBodyWrap.appendChild(BX.create("div",{props:{className:this.popupHistoryFilesBodyWrap.childNodes.length>0?"bx-messenger-content-load-more-history":"bx-messenger-content-load-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_F_LOAD_FILES")})]}));BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_FILES_LOAD&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,data:{IM_HISTORY_FILES_LOAD:"Y",CHAT_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(i){if(i&&i.BITRIX_SESSID){BX.message({bitrix_sessid:i.BITRIX_SESSID})}if(i.ERROR==""){for(var n in i.FILES){if(!this.disk.files[i.CHAT_ID])this.disk.files[i.CHAT_ID]={};i.FILES[n].date=new Date(i.FILES[n].date);this.disk.files[i.CHAT_ID][n]=i.FILES[n]}this.drawHistoryFiles(i.CHAT_ID,false,false)}else{if(i.ERROR=="SESSION_ERROR"&&this.sendAjaxTry<2){this.sendAjaxTry++;BX.message({bitrix_sessid:i.BITRIX_SESSID});setTimeout(BX.delegate((function(){this.drawHistoryFiles(e,t,s)}),this),1e3);BX.onCustomEvent(window,"onImError",[i.ERROR,i.BITRIX_SESSID])}else if(i.ERROR=="AUTHORIZE_ERROR"){this.sendAjaxTry++;if(BX.MessengerCommon.isDesktop()){setTimeout(BX.delegate((function(){this.drawHistoryFiles(e,t,s)}),this),1e4)}BX.onCustomEvent(window,"onImError",[i.ERROR])}}}),this),onfailure:BX.delegate((function(){this.sendAjaxTry=0}),this)})}};BX.MessengerChat.prototype.newHistorySearch=function(e){e=e||window.event;if(e.keyCode==27&&this.historySearch!="")BX.MessengerCommon.preventDefault(e);if(e.keyCode==27)this.popupHistorySearchInput.value="";this.historySearch=this.popupHistorySearchInput.value;if(this.historyLastSearch[this.historyUserId]==this.historySearch){return false}this.historyLastSearch[this.historyUserId]=this.historySearch;var t=3;if(this.historyOptions.fullTextEnabled){t=this.historyOptions.ftMinSizeToken}if(this.popupHistorySearchInput.value.length<t){this.historySearch="";this.drawHistory(this.historyUserId,false,false);return false}this.popupHistorySearchDateInput.value="";this.historyDateSearch="";this.historySearchBegin=true;this.drawHistory(this.historyUserId,false,false);var s=BX.findChildByClassName(this.popupHistoryBodyWrap,"bx-messenger-content-load-history");if(s)BX.remove(s);var s=BX.findChildByClassName(this.popupHistoryBodyWrap,"bx-messenger-content-history-empty");if(s)BX.remove(s);var i=null;this.popupHistoryBodyWrap.appendChild(i=BX.create("div",{props:{className:this.popupHistoryBodyWrap.childNodes.length>0?"bx-messenger-content-load-more-history":"bx-messenger-content-load-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_LOAD_MESSAGE")})]}));clearTimeout(this.historySearchTimeout);if(this.popupHistorySearchInput.value!=""){this.historySearchTimeout=setTimeout(BX.delegate((function(){BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_SEARCH&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_HISTORY_SEARCH:"Y",USER_ID:this.historyUserId,SEARCH:this.popupHistorySearchInput.value,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(i)BX.remove(i);this.historySearchBegin=false;if(e.ERROR!="")return false;if(e.MESSAGE.length==0){var t={};t[e.USER_ID]=[];this.drawHistory(e.USER_ID,t,false);return}for(var s in e.MESSAGE){e.MESSAGE[s].date=new Date(e.MESSAGE[s].date);e.MESSAGE[s].textOriginal=e.MESSAGE[s].text;e.MESSAGE[s].text=BX.MessengerCommon.prepareText(e.MESSAGE[s].text,true,true,true);this.message[s]=e.MESSAGE[s]}for(var s in e.FILES){if(!this.disk.files[e.CHAT_ID])this.disk.files[e.CHAT_ID]={};e.FILES[s].date=new Date(e.FILES[s].date);this.disk.files[e.CHAT_ID][s]=e.FILES[s]}this.drawHistory(e.USER_ID,e.USERS_MESSAGE,false)}),this),onfailure:BX.delegate((function(){if(i)BX.remove(i);this.historySearchBegin=false}),this)})}),this),1500)}return BX.PreventDefault(e)};BX.MessengerChat.prototype.newHistoryDateSearch=function(e){this.historyDateSearch=this.popupHistorySearchDateInput.value;if(this.historyLastSearch[this.historyUserId]==this.historyDateSearch){return false}this.historyLastSearch[this.historyUserId]=this.historyDateSearch;if(this.historyDateSearch.length<=3){this.historyDateSearch="";this.drawHistory(this.historyUserId,false,false);return false}this.popupHistorySearchInput.value="";this.historySearch="";this.historySearchBegin=true;var t=null;this.popupHistoryBodyWrap.innerHTML="";this.popupHistoryBodyWrap.appendChild(t=BX.create("div",{props:{className:this.popupHistoryBodyWrap.childNodes.length>0?"bx-messenger-content-load-more-history":"bx-messenger-content-load-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_M_LOAD_MESSAGE")})]}));clearTimeout(this.historySearchTimeout);if(this.historyDateSearch!=""){this.historySearchTimeout=setTimeout(BX.delegate((function(){BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_DATE_SEARCH&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_HISTORY_DATE_SEARCH:"Y",USER_ID:this.historyUserId,DATE:this.historyDateSearch,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(t)BX.remove(t);this.historySearchBegin=false;if(e.ERROR!="")return false;if(e.MESSAGE.length==0){var s={};s[e.USER_ID]=[];this.drawHistory(e.USER_ID,s,false);return}for(var i in e.MESSAGE){e.MESSAGE[i].date=new Date(e.MESSAGE[i].date);e.MESSAGE[i].textOriginal=e.MESSAGE[i].text;e.MESSAGE[i].text=BX.MessengerCommon.prepareText(e.MESSAGE[i].text,true,true,true);this.message[i]=e.MESSAGE[i]}for(var i in e.FILES){if(!this.disk.files[e.CHAT_ID])this.disk.files[e.CHAT_ID]={};e.FILES[i].date=new Date(e.FILES[i].date);this.disk.files[e.CHAT_ID][i]=e.FILES[i]}this.drawHistory(e.USER_ID,e.USERS_MESSAGE,false)}),this),onfailure:BX.delegate((function(){if(t)BX.remove(t);this.historySearchBegin=false}),this)})}),this),1500)}};BX.MessengerChat.prototype.newHistoryFilesSearch=function(e){e=e||window.event;if(e.keyCode==27&&this.historyFilesSearch!="")BX.MessengerCommon.preventDefault(e);if(e.keyCode==27)this.popupHistoryFilesSearchInput.value="";this.historyFilesSearch=this.popupHistoryFilesSearchInput.value;if(this.historyFilesLastSearch[this.historyChatId]==this.historyFilesSearch){return false}this.historyFilesLastSearch[this.historyChatId]=this.historyFilesSearch;if(this.popupHistoryFilesSearchInput.value.length<=3){this.historyFilesSearch="";this.drawHistoryFiles(this.historyChatId,false,false);return false}this.historyFilesSearchBegin=true;this.historySearch=this.popupHistorySearchInput.value;this.drawHistoryFiles(this.historyChatId,false,false);var t=BX.findChildByClassName(this.popupHistoryFilesBodyWrap,"bx-messenger-content-load-history");if(t)BX.remove(t);var t=BX.findChildByClassName(this.popupHistoryFilesBodyWrap,"bx-messenger-content-history-empty");if(t)BX.remove(t);var s=null;this.popupHistoryFilesBodyWrap.appendChild(s=BX.create("div",{props:{className:this.popupHistoryFilesBodyWrap.childNodes.length>0?"bx-messenger-content-load-more-history":"bx-messenger-content-load-history"},children:[BX.create("span",{props:{className:"bx-messenger-content-load-img"}}),BX.create("span",{props:{className:"bx-messenger-content-load-text"},html:BX.message("IM_F_LOAD_FILES")})]}));clearTimeout(this.historyFilesSearchTimeout);if(this.popupHistoryFilesSearchInput.value!=""){this.historyFilesSearchTimeout=setTimeout(BX.delegate((function(){BX.ajax({url:this.BXIM.pathToAjax+"?HISTORY_FILES_SEARCH&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_HISTORY_FILES_SEARCH:"Y",CHAT_ID:this.historyChatId,SEARCH:this.popupHistoryFilesSearchInput.value,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(s)BX.remove(s);this.historyFilesSearchBegin=false;if(e.ERROR!="")return false;if(e.FILES.length==0){this.drawHistoryFiles(e.CHAT_ID,false,false);return}var t=false;for(var i in e.FILES){if(!this.disk.files[e.CHAT_ID])this.disk.files[e.CHAT_ID]={};if(!this.disk.files[e.CHAT_ID][i])e.FILES[i].fromSearch=true;e.FILES[i].date=new Date(e.FILES[i].date);this.disk.files[e.CHAT_ID][i]=e.FILES[i];t=true}this.drawHistoryFiles(e.CHAT_ID,t?e.FILES:false,false)}),this),onfailure:BX.delegate((function(){if(s)BX.remove(s);this.historyFilesSearchBegin=false}),this)})}),this),1500)}return BX.PreventDefault(e)};BX.MessengerChat.prototype.setUpdateStateStep=function(e){this.updateState()};BX.MessengerChat.prototype.updateState=function(e,t,s){var i=new BX.Promise;if(!this.BXIM.init||!this.BXIM.ppServerStatus||!this.BXIM.tryConnect||this.popupMessengerConnectionStatusState=="offline"){i.reject("disabled");return i}e=e==true;t=t!=false;s=s||"UPDATE_STATE";clearTimeout(this.updateStateTimeout);this.updateStateTimeout=setTimeout(BX.delegate((function(){if(BX.MessengerCommon.isDesktop()){var e="IM UPDATE STATE: sending ajax"+(s=="UPDATE_STATE"?"":" ("+s+")")+" ["+this.updateStateCount+"]";BX.desktop.log("phone."+this.BXIM.userEmail+".log",e);console.log(e)}BX.localStorage.set("im-us-check",true,10);var n=BX.ajax({url:this.BXIM.pathToAjax+"?"+s+"&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,lsId:"IM_UPDATE_STATE",lsTimeout:8,timeout:60,data:{IM_UPDATE_STATE:"Y",IM_AJAX_CALL:"Y",IS_OPERATOR:BX.MessengerCommon.isLinesOperator()?"Y":"N",IS_DESKTOP:BX.MessengerCommon.isDesktop()?"Y":"N",RECENT_LAST_UPDATE:this.recentLastUpdate?this.recentLastUpdate:"N",LINES_LAST_UPDATE:this.linesLastUpdate?this.linesLastUpdate:"N",TAB:this.currentTab,SITE_ID:BX.message("SITE_ID"),sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(t&&BX.localStorage.get("im-us-check"))BX.localStorage.set("mus2",true,1);if(t){BX.onCustomEvent(window,"onImUpdateUstatOnline",[e.INTRANET_USTAT_ONLINE_DATA])}if(BX.MessengerCommon.isDesktop()){var n="";if(e.ERROR==""){n="IM UPDATE STATE: success request ["+this.updateStateCount+"]"}else{n="IM UPDATE STATE: bad request ("+e.ERROR+") ["+this.updateStateCount+"]"}BX.desktop.log("phone."+this.BXIM.userEmail+".log",n);console.log(n)}this.updateStateCount++;if(e&&e.BITRIX_SESSID){BX.message({bitrix_sessid:e.BITRIX_SESSID})}if(e&&e.ERROR==""){this.BXIM.checkRevision(e.REVISION);if(this.BXIM.desktopDisk){this.BXIM.desktopDisk.checkRevision(e.DISK_REVISION)}BX.message({SERVER_TIME:e.SERVER_TIME});if(this.notify.notifyCount!=e.CHAT_COUNTERS.type.notify){this.notify.unreadNotifyLoad=true;this.notify.initNotifyCount=e.CHAT_COUNTERS.type.notify;this.notify.updateNotifyCount(true);if(this.BXIM.notifyOpen){this.notify.openNotify(true,true)}}if(e.NOTIFY_LAST_ID>0){BX.Event.EventEmitter.emit("IM.Notifications:restoreConnection",{lastId:e.NOTIFY_LAST_ID})}this.notify.updateNotifyCounters(e.COUNTERS,t);this.notify.updateNotifyMailCount(e.CHAT_COUNTERS.type.mail,t);if(!this.BXIM.xmppStatus&&e.XMPP_STATUS&&e.XMPP_STATUS=="Y"){this.BXIM.xmppStatus=true}if(!this.BXIM.desktopStatus&&e.DESKTOP_STATUS&&e.DESKTOP_STATUS=="Y"){this.BXIM.desktopStatus=true}var a=false;if(!(e.ONLINE.length<=0))for(var o in e.ONLINE){if(this.users[o]){this.users[o].status=e.ONLINE[o].status;this.users[o].color=e.ONLINE[o].color;this.users[o].idle=e.ONLINE[o].idle?new Date(e.ONLINE[o].idle):false;this.users[o].last_activity_date=e.ONLINE[o].last_activity_date?new Date(e.ONLINE[o].last_activity_date):false;this.users[o].mobile_last_date=e.ONLINE[o].mobile_last_date?new Date(e.ONLINE[o].mobile_last_date):false}}this.recentLastUpdate=e.LAST_UPDATE;if(this.linesLastUpdate){this.linesLastUpdate=e.LAST_UPDATE}BX.MessengerProxy.updateRecent([].concat(e.RECENT));var r=[].concat(e.RECENT).concat(e.LINES_LIST);BX.MessengerCommon.recentListUpdate(r,e.CHAT_COUNTERS);BX.MessengerCommon.recentListRedraw();this.setUpdateStateStep(false);i.resolve()}else if(e.ERROR=="SESSION_ERROR"&&this.sendAjaxTry<=2){i.reject(e.ERROR,this.sendAjaxTry);this.sendAjaxTry++;setTimeout(BX.delegate((function(){this.updateState(true,t,s)}),this),2e3);BX.onCustomEvent(window,"onImError",[e.ERROR,e.BITRIX_SESSID])}else if(s!="UPDATE_STATE_RECONNECT"){i.reject(e.ERROR,this.sendAjaxTry);if(e.ERROR=="AUTHORIZE_ERROR"){this.sendAjaxTry++;if(BX.MessengerCommon.isDesktop()){setTimeout(BX.delegate((function(){this.updateState(true,t,s)}),this),1e4)}BX.onCustomEvent(window,"onImError",[e.ERROR])}else if(this.sendAjaxTry<5){this.sendAjaxTry++;if(this.sendAjaxTry>=2&&!BX.MessengerCommon.isDesktop()){BX.onCustomEvent(window,"onImError",[e.ERROR]);return false}setTimeout(BX.delegate((function(){this.updateState(true,t,s)}),this),6e4);BX.onCustomEvent(window,"onImError",[e.ERROR])}}}),this),onfailure:BX.delegate((function(){i.reject("failure",this.sendAjaxTry);if(BX.MessengerCommon.isDesktop()){var e="IM UPDATE STATE: failure request (code: "+n.status+") ["+this.updateStateCount+"]";BX.desktop.log("phone."+this.BXIM.userEmail+".log",e);console.log(e)}this.updateStateCount++;this.sendAjaxTry=0;this.setUpdateStateStep(false);try{if(typeof n=="object"&&n.status==0&&s!="UPDATE_STATE_RECONNECT")BX.onCustomEvent(window,"onImError",["CONNECT_ERROR"])}catch(e){}}),this)})}),this),e?150:this.updateStateStep*1e3);return i};BX.MessengerChat.prototype.updateStateLight=function(e,t){this.updateState(e,t)};BX.MessengerChat.prototype.setClosingByEsc=function(e){if(this.popupMessenger==null)return false;if(e){if(!this.BXIM.callController.hasActiveCall()){this.popupMessenger.setClosingByEsc(true)}}else{this.popupMessenger.setClosingByEsc(false)}};BX.MessengerChat.prototype.extraOpen=function(e){if(!this.popupMessengerExtra)return false;this.setClosingByEsc(false);this.BXIM.extraOpen=true;this.BXIM.dialogOpen=false;BX.style(this.popupMessengerDialog,"display","none");BX.style(this.popupMessengerExtra,"display","block");this.popupMessengerExtra.innerHTML="";BX.adjust(this.popupMessengerExtra,{children:[e]});this.resizeMainWindow()};BX.MessengerChat.prototype.extraClose=function(e,t){if(!this.popupMessengerExtra)return true;setTimeout(BX.delegate((function(){this.setClosingByEsc(true)}),this),200);this.BXIM.extraOpen=false;this.BXIM.dialogOpen=true;e=e==true;t=t!=false;if(this.BXIM.notifyOpen)this.notify.closeNotify();this.closeMenuPopup();this.popupChatDialogUsers={};if(this.currentTab==0||this.currentTab==="create"){this.extraOpen(BX.create("div",{props:{className:"bx-messenger-box-hello-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-box-hello"},html:BX.message("IM_M_EMPTY")})]}));if(BX.MessengerWindow.getCurrentTab()==="notify"){BX.MessengerWindow.closeTab()}this.BXIM.extraOpen=false}else{BX.style(this.popupMessengerDialog,"display","block");BX.style(this.popupMessengerExtra,"display","none");this.popupMessengerExtra.innerHTML="";if(e){this.openChatFlag=this.currentTab.toString().substr(0,4)=="chat";BX.MessengerCommon.openDialog(this.currentTab,false,t)}}if(this.BXIM.notifyOpen){this.notify.closeNotify()}this.resizeMainWindow()};BX.MessengerChat.prototype.sendMessage=function(e){if(this.popupMessengerConnectionStatusState!="online")return false;e=typeof e=="string"||typeof e=="number"?e:this.currentTab;BX.MessengerCommon.endSendWriting(e);this.popupMessengerTextarea.value=this.popupMessengerTextarea.value.replace("    ","\t");this.popupMessengerTextarea.value=BX.util.trim(this.popupMessengerTextarea.value);if(this.popupMessengerTextarea.value.length==0)return false;if(this.popupMessengerTextarea.value.length>20006){this.popupMessengerTextarea.value=this.popupMessengerTextarea.value.substr(0,2e4)+" (...)"}if(this.BXIM.language=="ru"&&BX.correctText&&this.BXIM.settings.correctText){this.popupMessengerTextarea.value=BX.correctText(this.popupMessengerTextarea.value)}this.addRecentSmile(this.popupMessengerTextarea.value);this.popupMessengerTextarea.value=this.popupMessengerTextarea.value.replace(/\[icon\=(\d+)([^\]]*)\]/gi,BX.delegate((function(e,t){t="icon"+t;var s="";if(this.smile[t].WIDTH==this.smile[t].HEIGHT){s=s+" size="+this.smile[t].WIDTH}else{if(this.smile[t].WIDTH){s=s+" width="+this.smile[t].WIDTH}if(this.smile[t].HEIGHT){s=s+" height="+this.smile[t].NAME}}if(this.smile[t].NAME){s=s+" title="+this.smile[t].NAME}return"[icon="+this.smile[t].IMAGE+s+"]"}),this));if(this.popupMessengerTextarea.value=="/clear"){this.popupMessengerTextarea.value="";this.textareaCheckText();this.textareaHistory[this.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.showMessage[this.currentTab]=[];BX.MessengerCommon.drawTab(this.currentTab,true);if(BX.MessengerCommon.isDesktop())console.log("NOTICE: User use /clear");return false}else if(this.popupMessengerTextarea.value=="/webrtcDebug"||this.popupMessengerTextarea.value=="/webrtcDebug on"||this.popupMessengerTextarea.value=="/webrtcDebug off"){if(this.popupMessengerTextarea.value=="/webrtcDebug")this.webrtc.debug=this.webrtc.debug?false:true;else if(this.popupMessengerTextarea.value=="/webrtcDebug on")this.webrtc.debug=true;else if(this.popupMessengerTextarea.value=="/webrtcDebug off")this.webrtc.debug=false;if(this.webrtc.debug){this.tooltip(this.popupMessengerTextareaSendType.previousSibling,BX.message("IM_TIP_WEBRTC_ON"))}else{this.tooltip(this.popupMessengerTextareaSendType.previousSibling,BX.message("IM_TIP_WEBRTC_OFF"))}BX.PULL.capturePullEvent(this.webrtc.debug);this.textareaHistory[this.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.popupMessengerTextarea.value="";this.textareaCheckText();if(console&&console.log)console.log("NOTICE: User use /webrtcDebug and TURN "+(this.webrtc.debug?"ON":"OFF")+" debug");if(BX.MessengerCommon.isDesktop()&&!this.webrtc.debug){BX.MessengerWindow.windowReload()}return false}else if(this.popupMessengerTextarea.value=="/windowReload"){this.textareaHistory[this.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.popupMessengerTextarea.value="";this.textareaCheckText();location.reload();if(BX.MessengerCommon.isDesktop())console.log("NOTICE: User use /windowReload");return false}else if(this.popupMessengerTextarea.value=="/correctText on"||this.popupMessengerTextarea.value=="/correctText off"){if(this.popupMessengerTextarea.value=="/correctText on"){this.BXIM.settings.correctText=true;this.tooltip(this.popupMessengerTextareaSendType.previousSibling,BX.message("IM_TIP_AC_ON"))}else{this.BXIM.settings.correctText=false;this.tooltip(this.popupMessengerTextareaSendType.previousSibling,BX.message("IM_TIP_AC_OFF"))}this.BXIM.saveSettings({correctText:this.BXIM.settings.correctText});console.log("NOTICE: User use /correctText");return false}else if(this.popupMessengerTextarea.value=="/getDialogId"||this.popupMessengerTextarea.value=="/getChatId"){BX.UI.Notification.Center.notify({content:BX.message("IM_DIALOG_ID_COPY_DONE").replace("#DIALOG_ID#","<b>"+this.currentTab+"</b>"),autoHideDelay:5e3});this.popupMessengerTextarea.value="";this.textareaCheckText();BX.MessengerCommon.clipboardCopy(this.currentTab.toString());return false}else if(this.popupMessengerTextarea.value.indexOf("/background")==0){var t=BX.util.trim(this.popupMessengerTextarea.value).split(" ")[1];if(!t){t=this.BXIM.settings.backgroundImage?false:true}this.BXIM.setBackground(t);this.popupMessengerTextarea.value="";this.textareaCheckText();return false}else if(this.popupMessengerTextarea.value.indexOf("/color")==0){var t=this.popupMessengerTextarea.value.split(" ")[1];if(t&&this.openChatFlag){BX.MessengerCommon.setColor(t,this.getChatId())}this.popupMessengerTextarea.value="";this.textareaCheckText();return false}else if(this.popupMessengerTextarea.value.indexOf("/rename")==0){var s=this.popupMessengerTextarea.value.substr(8);if(s&&this.openChatFlag){BX.MessengerCommon.renameChat(this.getChatId(),s)}this.popupMessengerTextarea.value="";this.textareaCheckText();return false}if(BX.MessengerCommon.isDesktop()){if(this.popupMessengerTextarea.value=="/openDeveloperTools"){this.textareaHistory[this.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.popupMessengerTextarea.value="";this.textareaCheckText();BX.desktop.openDeveloperTools();console.log("NOTICE: User use /openDeveloperTools");return false}else if(this.popupMessengerTextarea.value=="/clearWindowSize"){BX.desktop.setWindowSize({Width:BX.MessengerWindow.initWidth,Height:BX.MessengerWindow.initHeight});this.BXIM.setLocalConfig("global_msz_v2",false);BX.desktop.apiReady=false;location.reload();if(BX.MessengerCommon.isDesktop())console.log("NOTICE: User use /clearWindowSize");return false}}if(this.popupMessengerTextarea.value=="/showOnlyChat"){BX.MessengerCommon.recentListRedraw({showOnlyChat:true});this.textareaHistory[this.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.popupMessengerTextarea.value="";this.textareaCheckText();return false}var i=e.toString().substr(0,4)=="chat"?e.toString().substr(4):this.userChat[e]?this.userChat[e]:0;if(this.errorMessage[e]){BX.MessengerCommon.sendMessageRetry();this.errorMessage[e]=false}this.popupMessengerTextarea.value=BX.MessengerCommon.prepareMention(e,this.popupMessengerTextarea.value);var n=this.messageTmpIndex;this.message["temp"+n]={id:"temp"+n,chatId:i,senderId:this.BXIM.userId,recipientId:e,date:new Date,text:BX.MessengerCommon.prepareText(this.popupMessengerTextarea.value,true,true,true),textOriginal:this.popupMessengerTextarea.value};if(!this.showMessage[e])this.showMessage[e]=[];this.showMessage[e].push("temp"+n);this.messageTmpIndex++;BX.localStorage.set("mti",this.messageTmpIndex,5);if(this.popupMessengerTextarea==null||e!=this.currentTab)return false;clearTimeout(this.textareaHistoryTimeout);if(!BX.browser.IsAndroid()&&!BX.browser.IsIOS())BX.focus(this.popupMessengerTextarea);var a=BX.findChildByClassName(this.popupMessengerBodyWrap,"bx-messenger-content-load");if(a)BX.remove(a);var o=BX.findChildByClassName(this.popupMessengerBodyWrap,"bx-messenger-content-empty");if(o)BX.remove(o);if(e.toString().substr(0,4)=="chat"&&this.linesSilentMode&&this.linesSilentMode[e.toString().substr(4)]){if(!this.message["temp"+n].params){this.message["temp"+n].params={}}this.message["temp"+n].params.CLASS="bx-messenger-content-item-system"}BX.MessengerCommon.drawMessage(e,this.message["temp"+n]);BX.MessengerCommon.sendMessageAjax(n,e,this.popupMessengerTextarea.value,e.toString().substr(0,4)=="chat");if(this.BXIM.settings.status!="dnd"){this.BXIM.playSound("send")}this.textareaHistory[this.currentTab]="";this.popupMessengerTextarea.value="";this.textareaCheckText();BX.MessengerProxy.clearTextareaHistory(this.currentTab);setTimeout(BX.delegate((function(){this.popupMessengerTextarea.value="";this.textareaCheckText();BX.MessengerProxy.clearTextareaHistory(this.currentTab)}),this),0);return true};BX.MessengerChat.prototype.textareaCheckText=function(e){e=e||{};e.textarea=e.textarea||"default";var t;if(BX.type.isDomNode(e.textarea)){t=e.textarea}else{t=e.textarea==="createChat"?this.popupCreateChatTextarea:this.popupMessengerTextarea}if(t.value.length>0){if(t.parentNode&&t.parentNode.parentNode&&t.parentNode.parentNode.className.indexOf("bx-messenger-textarea-with-text")==-1){BX.addClass(t.parentNode.parentNode,"bx-messenger-textarea-with-text")}}else{if(t.parentNode&&t.parentNode.parentNode&&t.parentNode.parentNode.className.indexOf("bx-messenger-textarea-with-text")>=0){BX.removeClass(t.parentNode.parentNode,"bx-messenger-textarea-with-text")}}};BX.MessengerChat.prototype.openCommandDialog=function(){this.closeMenuPopup();var e=this.popupMessengerTextarea;if(e.selectionStart==0||e.value.charCodeAt(e.selectionStart-1)==10||e.value.charCodeAt(e.selectionStart-1)==13){if(e.value.substr(-1)!="/"){this.insertTextareaText(e,"/")}}else{if(e.value.substr(-1)!="/"){this.insertTextareaText(e,"\n");this.insertTextareaText(e,"/")}}e.focus();this.textareaCommandListUpdate("")};BX.MessengerChat.prototype.textareaCommandListUpdate=function(e){if(this.currentTab==this.BXIM.userId){return false}if(e===false){this.commandListen=false;this.commandSelect="";this.commandSelectIndex=1;if(this.commandPopup)this.commandPopup.close()}else{this.commandListen=true;this.commandList=BX.MessengerCommon.prepareCommandList(e);if(this.commandList.length>0){this.commandSelectIndex=1;var e=this.commandList[this.commandSelectIndex].command||"";this.commandSelect=e==">>"?e:e.substr(1);var t=false;if(!this.commandPopup){this.commandPopup=new BX.PopupWindow("bx-messenger-command",this.popupMessengerTextareaPlace,{darkMode:BX.MessengerTheme.isDark(),targetContainer:document.body,lightShadow:true,autoHide:true,offsetLeft:5,bindOptions:{position:"top"},zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){if(this.commandPopup){this.commandPopup=null;this.textareaCommandListUpdate(false)}}),this)},content:BX.create("div",{props:{className:"bx-messenger-command-popup "+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},children:[BX.create("div",{props:{className:"bx-messenger-command-popup-header"},children:[BX.create("span",{props:{className:"bx-messenger-command-popup-title"},html:BX.message("IM_COMMAND_TITLE")}),BX.create("span",{props:{className:"bx-messenger-command-popup-help"},children:[BX.create("span",{props:{className:"bx-messenger-command-popup-help-item"},html:BX.message("IM_COMMAND_H_1")}),BX.create("span",{props:{className:"bx-messenger-command-popup-help-item"},html:BX.message("IM_COMMAND_H_2")}),BX.create("span",{props:{className:"bx-messenger-command-popup-help-item"},html:BX.message("IM_COMMAND_H_3")})]})]}),this.commandPopupList=BX.create("div",{props:{className:"bx-messenger-command-popup-list"},html:this.textareaCommandListItems()})]})});BX.addClass(this.commandPopup.popupContainer,"bx-messenger-mark");if(!BX.MessengerTheme.isDark())this.commandPopup.setAngle({offset:5});t=true}if(t){this.commandPopup.show();BX.bindDelegate(this.commandPopupList,"click",{className:"bx-messenger-command-popup-item"},BX.delegate((function(){var e=BX.proxy_context.getAttribute("data-id");var t="";for(var s=0;s<this.command.length;s++){if(this.command[s].id==e){t=this.command[s].command.substr(1)}}this.commandSelect=t;this.textareaCommandClick()}),this));BX.bindDelegate(this.commandPopupList,"mouseover",{className:"bx-messenger-command-popup-item"},BX.delegate((function(){var e=BX.proxy_context.getAttribute("data-id");if(!e){return true}var t="";for(var s=0;s<this.command.length;s++){if(this.command[s].id==e){t=this.command[s].command.substr(1)}}this.commandSelectIndex=parseInt(BX.proxy_context.getAttribute("data-index"));this.commandSelect=t;var i=BX.findChildByClassName(this.commandPopupList,"bx-messenger-command-popup-item-selected");if(i){BX.removeClass(i,"bx-messenger-command-popup-item-selected")}BX.addClass(BX.proxy_context,"bx-messenger-command-popup-item-selected");t="/"+this.commandSelect;var n=this.popupMessengerTextarea;var a=n.value.substr(0,n.selectionStart).lastIndexOf("/");var o=n.value.substr(n.selectionStart);var r=n.value.substr(0,a);n.value=r+t+""+o;n.selectionStart=a+t.length;n.selectionEnd=n.selectionStart}),this))}else if(this.commandList.length>0){this.commandPopupList.innerHTML=this.textareaCommandListItems();this.commandPopup.adjustPosition({forceBindPosition:true,position:"top"})}}else{this.commandSelectIndex=0;this.commandSelect=e;if(this.commandPopup){var s=this.commandPopup;this.commandPopup=null;s.close()}}}};BX.MessengerChat.prototype.textareaCommandListItems=function(){var e="";var t=false;for(var s=0;s<this.commandList.length;s++){if(this.commandList[s].type=="category"){e+='<div class="bx-messenger-command-popup-item-category">'+this.commandList[s].title+"</div>"}else{e+='<div class="bx-messenger-command-popup-item bx-messenger-command-popup-item-'+s+" "+(this.commandSelectIndex==s?"bx-messenger-command-popup-item-selected":"")+'" data-id="'+this.commandList[s].id+'" data-index="'+s+'">'+'<span class="bx-messenger-command-popup-item-text">'+'<span class="bx-messenger-command-popup-item-command">'+this.commandList[s].command+"</span>"+'<span class="bx-messenger-command-popup-item-params">'+this.commandList[s].params+"</span>"+"</span>"+'<span class="bx-messenger-command-popup-item-title">'+this.commandList[s].title+"</span>"+"</div>"}}return e};BX.MessengerChat.prototype.textareaCommandClick=function(){var e="";if(this.commandSelect){e=this.commandSelect==">>"?">> ":"/"+this.commandSelect+" "}var t=this.popupMessengerTextarea;var s=t.value.substr(0,t.selectionStart).lastIndexOf("/");var i=t.value.substr(t.selectionStart);var n=t.value.substr(0,s);t.value=n+e+i;t.selectionStart=s+e.length;t.selectionEnd=t.selectionStart;this.textareaCommandListUpdate(false);t.focus()};BX.MessengerChat.prototype.textareaCommandSelect=function(e){if(this.commandList.length<=0||this.commandList.length==2){return this.commandSelect}if(e=="up"){if(this.commandSelectIndex==1){this.commandSelectIndex=this.commandList.length-1}else{this.commandSelectIndex-=1;if(this.commandList[this.commandSelectIndex].type=="category"){this.commandSelectIndex-=1}}}else{if(this.commandSelectIndex==this.commandList.length-1){this.commandSelectIndex=1}else{this.commandSelectIndex+=1;if(this.commandList[this.commandSelectIndex].type=="category"){this.commandSelectIndex+=1}}}this.commandSelect=this.commandList[this.commandSelectIndex].command==">>"?this.commandList[this.commandSelectIndex].command:this.commandList[this.commandSelectIndex].command.substr(1);var t=BX.findChildByClassName(this.commandPopupList,"bx-messenger-command-popup-item-selected");if(t){BX.removeClass(t,"bx-messenger-command-popup-item-selected")}t=BX.findChildByClassName(this.commandPopupList,"bx-messenger-command-popup-item-"+this.commandSelectIndex);if(t){BX.addClass(t,"bx-messenger-command-popup-item-selected");var s=BX.MessengerCommon.isElementVisibleOnScreen(t,this.commandPopupList,true);if(!s.top||!s.bottom){var i=0;if(this.commandSelectIndex==this.commandList.length-1){i=this.commandPopupList.scrollHeight}else if(this.commandSelectIndex>1){if(e=="up"){i=this.commandPopupList.scrollTop-s.coords.top*-1}else{i=this.commandPopupList.scrollTop+s.coords.top-this.commandPopupList.offsetHeight+t.offsetHeight}}if(this.commandPopupListAnimation!=null){this.commandPopupListAnimation.stop()}(this.commandPopupListAnimation=new BX.easing({duration:400,start:{scroll:this.commandPopupList.scrollTop},finish:{scroll:i},transition:BX.easing.makeEaseInOut(BX.easing.transitions.quart),step:BX.delegate((function(e){this.commandPopupList.scrollTop=e.scroll}),this)})).animate()}}return this.commandSelect};BX.MessengerChat.prototype.textareaPrepareText=function(e,t,s,i){var n=true;if(this.commandListen){if(t.altKey==true||t.ctrlKey==true||t.metaKey==true){return BX.PreventDefault(t)}else if(t.keyCode==8){var a=e.value.substr(e.selectionStart-1,1);if(a=="/"){this.textareaCommandListUpdate(false)}else{setTimeout(BX.delegate((function(){var t=e.value.substr(0,e.selectionStart).lastIndexOf("/")+1;var s=e.value.substr(t,e.selectionStart-t);this.textareaCommandListUpdate(s)}),this),10)}}else if(t.keyCode==27){this.commandListen=false;var o=e.value.substr(0,e.selectionStart).lastIndexOf("/");var r=e.value.substr(e.selectionStart);var l=e.value.substr(0,o+1);e.value=l+r;e.selectionStart=o+1;e.selectionEnd=e.selectionStart;this.textareaCommandListUpdate(false);return BX.PreventDefault(t)}else if(t.keyCode==9){this.textareaCommandSelect("down");command="/"+this.commandSelect;var o=e.value.substr(0,e.selectionStart).lastIndexOf("/");var r=e.value.substr(e.selectionStart);var l=e.value.substr(0,o);e.value=l+command+""+r;e.selectionStart=o+command.length;e.selectionEnd=e.selectionStart;return BX.PreventDefault(t)}else if(t.keyCode==39||t.keyCode==37){return BX.PreventDefault(t)}else if(t.keyCode==38||t.keyCode==40){if(t.keyCode==38){this.textareaCommandSelect("up")}else if(t.keyCode==40){this.textareaCommandSelect("down")}command="/"+this.commandSelect;var o=e.value.substr(0,e.selectionStart).lastIndexOf("/");var r=e.value.substr(e.selectionStart);var l=e.value.substr(0,o);e.value=l+command+r;e.selectionStart=o+command.length;e.selectionEnd=e.selectionStart;return BX.PreventDefault(t)}else if(t.keyCode==13||t.keyCode==32){this.textareaCommandClick();return BX.PreventDefault(t)}else{setTimeout(BX.delegate((function(){var t=e.value.substr(0,e.selectionStart).lastIndexOf("/")+1;var s=e.value.substr(e.value.substr(0,e.selectionStart).lastIndexOf("/")+1,e.selectionStart-t);this.textareaCommandListUpdate(s)}),this),10)}}else if(this.mentionListen){if(t.keyCode==27){this.mentionListen=false;this.mentionDelimiter="";return BX.PreventDefault(t)}else if(t.keyCode==13){this.popupContactListSearchInput.value="";var p=BX.findChildByClassName(this.popupChatDialogContactListElements,"bx-messenger-cl-item");if(p){p.getAttribute("data-userId");var h=e.value.substr(0,e.selectionEnd);h=h.substr(h.lastIndexOf(this.mentionDelimiter),e.selectionEnd-h.lastIndexOf(this.mentionDelimiter));e.value=e.value.replace(h,p.getAttribute("data-name")+" ");BX.MessengerCommon.addMentionList(this.currentTab,p.getAttribute("data-name"),p.getAttribute("data-userId"));this.popupChatDialog.close()}return BX.PreventDefault(t)}else{setTimeout(BX.delegate((function(){var t=e.value.substr(0,e.selectionEnd);var s=t.lastIndexOf(this.mentionDelimiter);var i=e.selectionEnd-t.lastIndexOf(this.mentionDelimiter);t=t.substr(s,i);if(t.length<=0||s<0){if(this.popupChatDialog)this.popupChatDialog.close();return false}t=t.substr(1);if(t.substr(0,1)==" "){if(this.popupChatDialog)this.popupChatDialog.close();return false}else if(t.length<=3&&t.substr(0,1).substr(0,1).match(/\d$/)){if(this.popupChatDialog)this.popupChatDialog.close();return false}this.popupChatDialogContactListSearch.value=t;BX.MessengerCommon.contactListPrepareSearch("popupChatDialogContactListElements",this.popupChatDialogContactListElements,this.popupChatDialogContactListSearch.value,{viewOffline:true,viewChat:false,viewOpenChat:true,exceptUsers:[],timeout:100,callback:{empty:BX.delegate((function(){this.popupChatDialog.close();return false}),this)}})}),this),10)}}else if(t.altKey==true&&t.ctrlKey==true){}else if(t.shiftKey==true&&(t.keyCode==61||t.keyCode==50||t.keyCode==187)||t.keyCode==107){var c=this.BXIM.messenger.openChatFlag&&this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)]&&this.BXIM.messenger.chat[this.BXIM.messenger.currentTab.toString().substr(4)].type=="livechat";if(!this.mentionListen&&!c){setTimeout(BX.delegate((function(){var t=e.value.substr(e.selectionEnd-2,2);t=t.replace(" ","").trim();if(!(t=="@"||t=="+"))return false;this.mentionListen=true;this.mentionDelimiter=t;this.openChatDialog({type:"MENTION",bind:e,focus:false,delimiter:t});this.setClosingByEsc(false)}),this),300)}}else if(t.metaKey==true||t.ctrlKey==true){var u={66:"b",83:"s",73:"i",85:"u"};if(u[t.keyCode]||BX.MessengerCommon.isDesktop()&&t.keyCode==84||!BX.MessengerCommon.isDesktop()&&t.keyCode==69){var o=e.selectionStart;var d=e.selectionEnd;resultText=e.value.substring(o,d);if(BX.MessengerCommon.isDesktop()&&t.keyCode==84||!BX.MessengerCommon.isDesktop()&&t.keyCode==69){if(o==d){o=0;d=e.value.length;resultText=e.value}e.value=e.value.substring(0,o)+BX.correctText(resultText,{replace_way:"AUTO",mixed:true})+e.value.substring(d,e.value.length);e.selectionStart=o;e.selectionEnd=d}else{if(o==d){return BX.PreventDefault(t)}resultTagStart=e.value.substring(o,o+3);resultTagEnd=e.value.substring(d-4,d);if(resultTagStart.toLowerCase()=="["+u[t.keyCode]+"]"&&resultTagEnd.toLowerCase()=="[/"+u[t.keyCode]+"]"){e.value=e.value.substring(0,o)+e.value.substring(o+3,d-4)+e.value.substring(d,e.value.length);e.selectionStart=o;e.selectionEnd=d-7}else{e.value=e.value.substring(0,o)+"["+u[t.keyCode]+"]"+resultText+"[/"+u[t.keyCode]+"]"+e.value.substring(d,e.value.length);e.selectionStart=o;e.selectionEnd=d+7}}return BX.PreventDefault(t)}}else if((t.keyCode==191||t.keyCode==111||t.keyCode==220)&&e==this.popupMessengerTextarea){if(e.selectionStart==0||e.value.charCodeAt(e.selectionStart-1)==10||e.value.charCodeAt(e.selectionStart-1)==13){setTimeout(BX.delegate((function(){var t=e.value.substr(e.selectionEnd-1,1);if(t=="/"){this.textareaCommandListUpdate("")}}),this),300)}}if(t.keyCode==9){this.insertTextareaText(e,"\t");return BX.PreventDefault(t)}if(t.keyCode==27&&!BX.MessengerCommon.isDesktop()){if(t.shiftKey){i()}else if(e==this.popupCreateChatTextarea){if(this.popupCreateChatTextarea.value==""){i()}else{return BX.PreventDefault(t)}}else if(e!=this.popupMessengerTextarea||this.popupMessengerTextarea.value==""){i()}}else if(t.keyCode==38&&this.popupMessengerLastMessage>0&&BX.util.trim(e.value).length<=0){this.editMessage(this.popupMessengerLastMessage)}else if(this.BXIM.settings.sendByEnter==true&&(t.ctrlKey==true||t.altKey==true)&&t.keyCode==13){this.insertTextareaText(e,"\n")}else if(this.BXIM.settings.sendByEnter==true&&t.shiftKey==false&&t.keyCode==13){n=s()}else if(this.BXIM.settings.sendByEnter==false&&t.ctrlKey==true&&t.keyCode==13){n=s()}else if(this.BXIM.settings.sendByEnter==false&&(t.metaKey==true||t.altKey==true)&&t.keyCode==13&&BX.browser.IsMac()){n=s()}clearTimeout(this.textareaHistoryTimeout);this.textareaHistoryTimeout=setTimeout(BX.delegate((function(){this.textareaHistory[this.currentTab]=this.popupMessengerTextarea.value}),this),200);if(BX.util.trim(e.value).length>2)BX.MessengerCommon.sendWriting(this.currentTab);if(!n)return BX.PreventDefault(t)};BX.MessengerChat.prototype.openAnswersMenu=function(e){this.BXIM.openConfirm(BX.message("IM_OL_ANSWERS_SOON"),[new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true)};BX.MessengerChat.prototype.openFormsMenu=function(e){BX.Runtime.loadExtension("ui.entity-selector").then(function(e){this.selectFormDialog=new e.Dialog({targetNode:this.popupMessengerCrmButton,enableSearch:true,context:"IMOPENLINES_CRM_FORMS",entities:[{id:"imopenlines-crm-form"}],events:{"Item:onSelect":this.sendFormToChat.bind(this)},multiple:false});this.selectFormDialog.show()}.bind(this))};BX.MessengerChat.prototype.sendFormToChat=function(e){var t=this.getChatId();var s=BX.MessengerCommon.linesGetSession(this.chat[t]);var i=e.getData();BX.rest.callMethod("imopenlines.dialog.form.send",{SESSION_ID:s.id,CRM_FORM:{ID:i.item.customData.get("ID"),CODE:i.item.customData.get("CODE"),SEC:i.item.customData.get("SEC"),NAME:i.item.customData.get("NAME")}}).catch(function(e){console.error("Error sending crm-form",e)}.bind(this))};BX.MessengerChat.prototype.addRecentSmile=function(e,t){t=t||"";if(BX.MessengerCommon.isDesktop()&&BX.browser.IsMac()&&!this.desktop.enableInVersion(36))return false;var s=e.match(/\[icon\=([^\]]*)\]/gi);var i=false;if(s&&s.length){var n=[];var a=this.BXIM.getLocalConfig("smiles-recent",[])||[];for(var o=0;o<a.length;o++){n.push(a[o].IMAGE)}for(var o=0;o<s.length;o++){var r=s[o];var l=r.match(/icon\=(\S+[^\s.,> )\];\'\"!?])/i);if(l&&l[1]){l=l[1];if(n&&n.indexOf(l)>-1||l.match(/^(\d+)$/)){continue}}else{continue}if(t&&t.indexOf(l)<0){continue}i=true;var p={IMAGE:l,HEIGHT:20,WIDTH:20,NAME:""};var h=r.match(/size\=(\d+)/i);if(h&&h[1]){p["WIDTH"]=h[1];p["HEIGHT"]=h[1]}else{var c=r.match(/width\=(\d+)/i);if(c&&c[1]){p["WIDTH"]=c[1]}var u=r.match(/height\=(\d+)/i);if(u&&u[1]){p["HEIGHT"]=u[1]}if(p["WIDTH"]&&!p["HEIGHT"]){p["HEIGHT"]=p["WIDTH"]}else if(p["HEIGHT"]&&!p["WIDTH"]){p["WIDTH"]=p["HEIGHT"]}else{p["WIDTH"]=20;p["HEIGHT"]=20}}var d=r.match(/title\=(.*[^\s\]])/i);if(d&&d[1]){d=d[1];if(d.indexOf("width=")>-1){d=d.substr(0,d.indexOf("width="))}if(d.indexOf("height=")>-1){d=d.substr(0,d.indexOf("height="))}if(d.indexOf("size=")>-1){d=d.substr(0,d.indexOf("size="))}if(d){d=BX.util.trim(d);p["NAME"]=d}}a.push(p);this.injectRecentSmile(p)}if(i){this.BXIM.setLocalConfig("smiles-recent",a,26e5)}}return s?s.length:0};BX.MessengerChat.prototype.removeRecentSmile=function(e){if(BX.MessengerCommon.isDesktop()&&BX.browser.IsMac()&&!this.desktop.enableInVersion(36))return false;var t="";if(this.smile[e]){t=this.smile[e].IMAGE}if(t){var s=[];var i=this.BXIM.getLocalConfig("smiles-recent",[])||[];for(var n=0;n<i.length;n++){if(t!=i[n].IMAGE){s.push(i[n])}}this.BXIM.setLocalConfig("smiles-recent",s,26e5);delete this.smile[e]}return true};BX.MessengerChat.prototype.getRecentSmiles=function(){if(BX.MessengerCommon.isDesktop()&&BX.browser.IsMac()&&!this.desktop.enableInVersion(36))return false;if(!this.smileSet)return false;this.smileSet.push({ID:"icons",NAME:BX.message("IM_ICON_SET"),PARENT_ID:0,TYPE:"G"});var e=this.BXIM.getLocalConfig("smiles-recent",[])||[];if(e.length<=0){return true}this.smileRecentId=e.length+1;for(var t=0;t<e.length;t++){this.injectRecentSmile(e[t])}};BX.MessengerChat.prototype.injectRecentSmile=function(e){var t=BX.clone(e);if(typeof t!="object")return false;t.TITLE=t.NAME;if(!t.TITLE){t.TITLE=t.IMAGE.substring(t.IMAGE.lastIndexOf("/")+1);t.TITLE=t.TITLE.substring(0,t.TITLE.lastIndexOf("."))}this.smile["icon"+this.smileRecentId]={NAME:t.NAME,HEIGHT:t.HEIGHT>100?100:t.HEIGHT,WIDTH:t.WIDTH>100?100:t.WIDTH,IMAGE:t.IMAGE,TYPING:"[icon="+this.smileRecentId+" title="+t.TITLE+"]",SET_ID:"icons"};this.smileRecentId++};BX.MessengerChat.prototype.openSmileMenu=function(e){e=e||{};e.textarea=e.textarea||"default";e.bind=e.bind||this.popupMessengerSmileButton;if(this.popupPopupMenu!=null)this.popupPopupMenu.destroy();if(this.popupChatDialog!=null){this.popupChatDialog.destroy()}if(this.popupSmileMenu!=null){this.popupSmileMenu.destroy()}if(this.commandPopup!=null){this.commandPopup.destroy()}if(this.popupIframeMenu!=null&&this.popupIframeBind){this.popupIframeMenu.destroy()}BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();if(this.smile==false){this.tooltip(this.popupMessengerSmileButton,BX.message("IM_SMILE_NA"),{offsetLeft:-20});return false}var t={};for(var s in this.smile){if(!t[this.smile[s].SET_ID])t[this.smile[s].SET_ID]=[];var i=BX.util.htmlspecialcharsback(this.smile[s].TYPING);t[this.smile[s].SET_ID].push(BX.create("img",{props:{className:"bx-messenger-smile-gallery-image"},attrs:{"data-id":s,"data-code":i,"data-textarea":e.textarea,style:"width: "+this.smile[s].WIDTH+"px; height: "+this.smile[s].HEIGHT+"px",src:this.smile[s].IMAGE,alt:this.smile[s].TYPING,title:BX.util.htmlspecialcharsback(this.smile[s].NAME)}}))}var n=0;var a=[];var o=[BX.create("span",{props:{className:"bx-messenger-smile-nav-name"},html:BX.message("IM_SMILE_SET")})];if(!this.smileSet[this.smileCurrentSet]||typeof t[this.smileSet[this.smileCurrentSet]["ID"]]=="undefined"){this.smileCurrentSet=0}var s=0;var r="";for(var l=0;l<this.smileSet.length;l++){if(typeof t[this.smileSet[l]["ID"]]=="undefined")continue;s=this.smileSet[l]["ID"];r=this.smileSet[l]["NAME"];a.push(BX.create("span",{attrs:{"data-set-id":s},props:{className:"bx-messenger-smile-gallery-set"+(n!=this.smileCurrentSet?" bx-messenger-smile-gallery-set-hide":"")},children:t[s]}));o.push(BX.create("span",{attrs:{"data-set-id":s,title:BX.util.htmlspecialcharsback(r)},props:{className:"bx-messenger-smile-nav-item"+(n==this.smileCurrentSet?" bx-messenger-smile-nav-item-active":"")}}));n++}this.popupSmileMenu=new BX.PopupWindow("bx-messenger-popup-smile",e.bind,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:false,offsetTop:0,offsetLeft:-38,autoHide:true,closeByEsc:true,bindOptions:{position:"top"},zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupSmileMenu=null}),this)},content:BX.create("div",{props:{className:"bx-messenger-smile"+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},children:[this.popupSmileMenuGallery=BX.create("div",{props:{className:"bx-messenger-smile-gallery"},children:a}),this.popupSmileMenuSet=BX.create("div",{props:{className:"bx-messenger-smile-nav"+(n<=1?" bx-messenger-smile-nav-disabled":"")},children:o})]})});BX.addClass(this.popupSmileMenu.popupContainer,"bx-messenger-mark");if(!BX.MessengerTheme.isDark())this.popupSmileMenu.setAngle({offset:74});this.popupSmileMenu.show();BX.bindDelegate(this.popupSmileMenuGallery,"click",{className:"bx-messenger-smile-gallery-image"},BX.delegate((function(){var e=BX.proxy_context.getAttribute("data-textarea")=="createChat"?this.popupCreateChatTextarea:this.popupMessengerTextarea;this.insertTextareaText(e," "+BX.proxy_context.getAttribute("data-code")+" ",false);this.textareaHistory[this.currentTab]=e.value;this.popupSmileMenu.close();e.focus()}),this));BX.bindDelegate(this.popupSmileMenuGallery,"contextmenu",{className:"bx-messenger-smile-gallery-image"},BX.delegate((function(e){var t=BX.proxy_context.getAttribute("data-code").match(/\[icon\=([^\]]*)\]/gi);if(t){this.openPopupMenu(BX.proxy_context,"iconMenu",true,{closeSmiles:false});return BX.PreventDefault(e)}}),this));BX.bindDelegate(this.popupSmileMenuSet,"click",{className:"bx-messenger-smile-nav-item"},BX.delegate((function(){if(BX.hasClass(BX.proxy_context,"bx-messenger-smile-nav-item-active"))return false;var e=BX.findChildrenByClassName(this.popupSmileMenuGallery,"bx-messenger-smile-gallery-set",false);var t=BX.findChildrenByClassName(this.popupSmileMenuSet,"bx-messenger-smile-nav-item",false);for(var s=0;s<t.length;s++){if(BX.proxy_context==t[s]){BX.removeClass(e[s],"bx-messenger-smile-gallery-set-hide");BX.addClass(t[s],"bx-messenger-smile-nav-item-active");this.smileCurrentSet=s;this.BXIM.setLocalConfig("smiles-current-set",s)}else{BX.addClass(e[s],"bx-messenger-smile-gallery-set-hide");BX.removeClass(t[s],"bx-messenger-smile-nav-item-active")}}}),this));BX.onCustomEvent("onImOpenSmileMenu",[]);return false};BX.MessengerChat.prototype.textareaIconToggle=function(){if(!this.popupMessengerPanelBotIcons){return true}var e=BX.findChildrenByClassName(this.popupMessengerTextareaIconBox,"bx-messenger-textarea-icon-bot",true);if(!e){this.popupMessengerPanelBotIcons=false;return false}for(var t=0;t<e.length;t++){BX.removeClass(e[t],"bx-messenger-textarea-icon-bot-show")}this.popupMessengerPanelBotIcons=false;if(this.openBotFlag){var e=BX.findChildrenByClassName(this.popupMessengerTextareaIconBox,"bx-messenger-textarea-icon-bot-"+this.currentTab,true);if(e){for(var t=0;t<e.length;t++){BX.addClass(e[t],"bx-messenger-textarea-icon-bot-show")}this.popupMessengerPanelBotIcons=true}}return true};BX.MessengerChat.prototype.textareaIconCheckContext=function(e){var t=e.substr(-6)=="-admin";if(t&&!this.BXIM.isAdmin){return false}if(t){e=e.substr(0,e.length-6)}if(e=="chat"){if(!this.openChatFlag){return false}}else if(e=="bot"){if(!this.openBotFlag){return false}}else if(e=="call"){if(!this.openCallFlag){return false}}else if(e=="user"){if(this.openCallFlag||this.openChatFlag||this.openLinesFlag){return false}}else if(e.startsWith("lines")){if(!this.openLinesFlag){return false}if(e!=="lines"){var s=e.substr(6);var i=BX.MessengerCommon.linesGetSession(this.chat[this.currentTab.substr(4)]).connector;if(i!==s){return false}}}return true};BX.MessengerChat.prototype.textareaIconPrepare=function(){if(!this.popupMessengerTextareaIconBox)return false;this.popupMessengerTextareaIconBox.innerHTML="";if(!this.textareaIcon.length){return false}var e=null;var t=[];var s=null;for(var i=0;i<this.textareaIcon.length;i++){if(!this.textareaIcon[i]||this.textareaIcon[i].hidden){continue}if(this.desktop.ready()&&!this.desktop.enableInVersion(39)&&this.textareaIcon[i]["iframe"]){if(BXDesktopSystem.GetProperty("versionParts").join(".")!="5.0.32.38"){continue}}var n=this.textareaIcon[i]["description"]?this.textareaIcon[i]["description"]:this.textareaIcon[i]["title"];if(!this.textareaIcon[i]["title"]&&!this.textareaIcon[i]["url"]){continue}var a="bx-messenger-textarea-icon-marketplace"+" bx-messenger-textarea-icon-marketplace-"+this.textareaIcon[i]["id"]+" bx-messenger-textarea-icon-marketplace-app"+(this.textareaIcon[i]["botCode"]&&!this.textareaIcon[i]["botCode"].startsWith("network_")?"-"+this.textareaIcon[i]["botCode"]:"")+(this.textareaIcon[i]["code"]?"-"+this.textareaIcon[i]["code"]:"")+" bx-messenger-textarea-icon-context-"+this.textareaIcon[i]["context"]+(this.textareaIcon[i]["context"]=="bot"||this.textareaIcon[i]["context"]=="bot-admin"?" bx-messenger-textarea-icon-bot bx-messenger-textarea-icon-bot-"+this.textareaIcon[i]["botId"]:"");if(!this.textareaIcon[i]["url"]){t.push(this.textareaIcon[i]);continue}if(this.textareaIcon[i]["code"]==="salescenter"){s=BX.create("div",{props:{className:"bx-messenger-textarea-icon-marketplace "+a+" bx-messenger-textarea-icon-salescenter"},attrs:{title:n,"data-context":this.textareaIcon[i]["context"],"data-code":this.textareaIcon[i]["code"],"data-id":this.textareaIcon[i]["id"]},events:{click:BX.delegate(this.textareaIconClick,this)},html:BX.message("IM_APPS_SALESCENTER_BUTTON")});continue}else{e=BX.create("div",{props:{className:"bx-messenger-textarea-icon-marketplace "+a},attrs:{title:n,style:"background-image: url('"+this.textareaIcon[i]["url"]+"')","data-context":this.textareaIcon[i]["context"],"data-code":this.textareaIcon[i]["code"],"data-id":this.textareaIcon[i]["id"]},events:{click:BX.delegate(this.textareaIconClick,this)}})}this.popupMessengerTextareaIconBox.appendChild(e)}if(s){this.popupMessengerTextareaIconBox.appendChild(s)}if(t.length||this.BXIM.bitrixIntranet){this.popupMessengerTextareaIconApps=BX.create("div",{props:{className:"bx-messenger-textarea-icon bx-messenger-textarea-icon-marketplace-default bx-messenger-textarea-icon-marketplace-more"},attrs:{title:BX.message("IM_APPS_LIST")},events:{click:BX.delegate((function(e){this.openPopupMenu(BX.proxy_context,"textareaAppsMenu")}),this)}});this.popupMessengerTextareaIconBox.appendChild(this.popupMessengerTextareaIconApps)}return true};BX.MessengerChat.prototype.textareaIconDialogClick=function(id,messageId,params){params=params||{};var icon=null;for(var i=0;i<this.textareaIcon.length;i++){if(!this.textareaIcon[i]||this.textareaIcon[i].id!=id){continue}icon=this.textareaIcon[i];break}if(!icon&&!params.___ajaxSkip){BX.ajax({url:this.BXIM.pathToAjax+"?GET_TEXTAREA_ICONS&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:60,data:{IM_GET_TEXTAREA_ICONS:"Y",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){this.textareaIcon=e.TEXTAREA_ICON?e.TEXTAREA_ICON:[];this.textareaIconPrepare();params.___ajaxSkip=true;this.textareaIconDialogClick(id,messageId,params)}),this)});return false}delete params.___ajaxSkip;if(this.textareaIconCheckContext(icon.context)){if(icon.iframe){var dialogContext="user";var dialogEntityId="";var dialogEntityData1="";if(this.currentTab.toString().substr(0,4)=="chat"){dialogContext=this.chat[this.currentTab.substr(4)].entity_type.toLowerCase();dialogEntityId=this.chat[this.currentTab.substr(4)].entity_id;dialogEntityData1=this.chat[this.currentTab.substr(4)].entity_data_1}this.openFrameDialog({bind:null,title:icon.title,copyright:icon.copyright,iframe:{src:icon.iframe,width:icon.iframeWidth,height:icon.iframeHeight,popup:true},params:{BOT_ID:icon.botId,BOT_CODE:icon.botCode,APP_ID:icon.id,APP_CODE:icon.code,DOMAIN:location.origin,DOMAIN_HASH:icon.domainHash,USER_ID:this.BXIM.userId,USER_HASH:icon.userHash,DIALOG_ID:this.currentTab,DIALOG_CONTEXT:dialogContext,DIALOG_ENTITY_ID:dialogEntityId,DIALOG_ENTITY_DATA_1:dialogEntityData1,LANG:BX.message.LANGUAGE_ID,IS_CHROME:BX.browser.IsChrome()?"Y":"N",CONTEXT:"button",DARK_MODE:BX.MessengerTheme.isDark()?"Y":"N",MESSAGE_ID:messageId,BUTTON_PARAMS:params}})}else if(icon.js){var button=BX.proxy_context;eval(icon.js)}}};BX.MessengerChat.prototype.textareaIconClick=function(event){if(this.popupPopupMenu!=null){this.popupPopupMenu.destroy()}var icon=null;for(var i=0;i<this.textareaIcon.length;i++){if(!this.textareaIcon[i]||this.textareaIcon[i].id!=BX.proxy_context.getAttribute("data-id")||this.textareaIcon[i].hidden){continue}icon=this.textareaIcon[i];break}if(!icon){return false}if(this.textareaIconCheckContext(icon.context)){if(icon.iframe){var dialogContext="user";var dialogEntityId="";var dialogEntityData1="";if(this.currentTab.toString().substr(0,4)=="chat"){dialogContext=this.chat[this.currentTab.substr(4)].entity_type.toLowerCase();dialogEntityId=this.chat[this.currentTab.substr(4)].entity_id;dialogEntityData1=this.chat[this.currentTab.substr(4)].entity_data_1}this.openFrameDialog({bind:event?BX.proxy_context:this.popupMessengerTextareaIconApps,title:icon.title,copyright:icon.copyright,iframe:{src:icon.iframe,width:icon.iframeWidth,height:icon.iframeHeight,popup:icon.iframePopup},params:{BOT_ID:icon.botId,BOT_CODE:icon.botCode,APP_ID:icon.id,APP_CODE:icon.code,DOMAIN:location.origin,DOMAIN_HASH:icon.domainHash,USER_ID:this.BXIM.userId,USER_HASH:icon.userHash,DIALOG_ID:this.currentTab,DIALOG_CONTEXT:dialogContext,DIALOG_ENTITY_ID:dialogEntityId,DIALOG_ENTITY_DATA_1:dialogEntityData1,LANG:BX.message.LANGUAGE_ID,IS_CHROME:BX.browser.IsChrome()?"Y":"N",CONTEXT:"textarea",DARK_MODE:BX.MessengerTheme.isDark()?"Y":"N",CONTEXT:"textarea"}})}else if(icon.js){var button=BX.proxy_context;eval(icon.js)}}return event?BX.PreventDefault(event):true};BX.MessengerChat.prototype.openFrameDialog=function(e){e=e||{};if(e.iframe&&e.iframe.popup){e.bind=null}else{e.bind=e.bind||null}if(this.popupPopupMenu!=null){this.popupPopupMenu.destroy()}if(this.popupChatDialog!=null){this.popupChatDialog.destroy()}if(this.popupSmileMenu!=null){this.popupSmileMenu.destroy()}if(this.commandPopup!=null){this.commandPopup.destroy()}if(this.popupIframeMenu!=null){this.popupIframeMenu.destroy()}BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();this.openFrameDialogBid=e.params.BOT_ID;this.openFrameDialogDid=this.currentTab;if(this.sendFrameTokenCollection[this.openFrameDialogBid]){if(this.sendFrameTokenCollection[this.openFrameDialogBid]+this.sendFrameTokenTimeout*1e3<+new Date){this.sendFrameToken(this.openFrameDialogBid,this.openFrameDialogDid)}}else{this.sendFrameToken(this.openFrameDialogBid,this.openFrameDialogDid)}var t="";for(var s in e.params){t=t+s+"="+encodeURIComponent(e.params[s])+"&"}t=e.iframe.src+t;e.iframe.height=parseInt(e.iframe.height);if(e.iframe.height>this.popupMessengerBody.offsetHeight){e.iframe.height=this.popupMessengerBody.offsetHeight}this.popupIframeBind=!!e.bind;this.popupIframeMenu=new BX.PopupWindow("bx-messenger-iframe",e.bind,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:false,offsetTop:0,offsetLeft:-38,autoHide:this.popupIframeBind,closeByEsc:true,bindOptions:{position:"top"},closeIcon:e.bind?null:{right:"13px"},draggable:e.bind?null:{restrict:true},zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.openFrameDialogBid=null;this.openFrameDialogDid=null;this.popupIframeMenu=null;this.popupIframeBind=true;this.openFrameDialogFrame=null;this.openFrameDialogFrameSourceDomain=null}),this)},content:BX.create("div",{props:{className:"bx-messenger-iframe-title-box"},children:[this.openFrameDialogTitle=BX.create("div",{props:{className:"bx-messenger-command-popup-header"},children:[BX.create("span",{props:{className:"bx-messenger-command-popup-title"},text:e.title}),BX.create("span",{props:{className:"bx-messenger-command-popup-help"},children:[BX.create("span",{props:{className:"bx-messenger-command-popup-help-item"},text:e.copyright})]})]}),this.openFrameDialogFrame=BX.create("iframe",{attrs:{frameborder:0,src:t,style:"min-width: "+parseInt(e.iframe.width)+"px; min-height: "+parseInt(e.iframe.height)+"px; max-height: 100%; max-width: 100%;",sandbox:"allow-same-origin allow-forms allow-scripts allow-popups allow-modals",allow:"geolocation *; microphone *; camera *"},props:{className:"bx-messenger-iframe-element"+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")}})]})});BX.addClass(this.popupIframeMenu.popupContainer,"bx-messenger-mark");if(e.bind&&!BX.MessengerTheme.isDark()){this.popupIframeMenu.setAngle({offset:74})}else{this.openFrameDialogTitle.style.cursor="move";BX.bind(this.openFrameDialogTitle,"mousedown",BX.proxy(this.popupIframeMenu.onTitleMouseDown,this.popupIframeMenu))}this.popupIframeMenu.show();BX.bind(this.openFrameDialogFrame,"load",BX.delegate(this.openFrameDialogLoad,this));if(t.indexOf("http")===0){var i=document.createElement("a");i.href=t;this.openFrameDialogFrameSourceDomain=i.protocol+"//"+i.hostname+(i.port&&i.port!="80"&&i.port!="443"?":"+i.port:"")}else{this.openFrameDialogFrameSourceDomain=location.protocol+"//"+location.hostname+(location.port&&location.port!="80"&&location.port!="443"?":"+location.port:"")}BX.onCustomEvent("onImOpenFrameDialog",[]);return false};BX.MessengerChat.prototype.openFrameDialogLoad=function(e){var t=0/*@cc_on + @_jscript_version @*/;if(typeof window.postMessage==="function"&&!t){this.openFrameDialogFrameUid=Math.random().toString().substr(2);this.openFrameDialogFrame.contentWindow.postMessage(JSON.stringify({action:"init",domain:location.origin,uniqueLoadId:this.openFrameDialogFrameUid}),this.openFrameDialogFrameSourceDomain)}};BX.MessengerChat.prototype.openFrameDialogPostMessage=function(e){var t={};try{t=JSON.parse(e)}catch(e){}if(!t.action)return;if(this.openFrameDialogFrameUid!=t.uniqueLoadId)return;if(t.action=="send"){this.BXIM.sendMessage(t.message)}else if(t.action=="put"){this.BXIM.putMessage(t.message);this.BXIM.messenger.textareaCheckText()}else if(t.action=="call"){this.BXIM.phoneTo(t.number)}else if(t.action=="support"){this.BXIM.openMessenger("networkLines"+t.code,null,true)}else if(t.action=="openDialog"){this.BXIM.openMessenger(t.dialogId,null,true)}else if(t.action=="close"){if(this.popupIframeMenu!=null){this.popupIframeMenu.destroy()}}else if(t.action=="restriction"){BX.UI.InfoHelper.show(t.code)}else if(t.action=="helpdesk"){top.BX.Helper.show("redirect=detail&code="+t.code)}return true};BX.MessengerChat.prototype.expireFrameToken=function(){if(!this.openFrameDialogBid){return false}for(var e in this.sendFrameTokenCollection){if(this.sendFrameTokenCollection[e]+this.sendFrameTokenTimeout*1e3<+new Date){delete this.sendFrameTokenCollection[e];if(this.openFrameDialogBid){this.sendFrameToken(this.openFrameDialogBid,this.openFrameDialogDid)}}}return true};BX.MessengerChat.prototype.sendFrameToken=function(e,t){this.sendFrameTokenCollection[e]=+new Date;BX.ajax({url:this.BXIM.pathToAjax+"?SEND_FRAME_TOKEN&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:60,data:{IM_OPEN_REST_TOKEN:"Y",BOT_ID:e,DIALOG_ID:t,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})};BX.MessengerChat.prototype.connectionStatus=function(e,t){t=typeof t=="undefined"?true:t;if(!(e=="online"||e=="connecting"||e=="offline"))return false;if(this.popupMessengerConnectionStatusState==e)return false;this.popupMessengerConnectionStatusState=e;var s="";if(e=="offline"){this.popupMessengerConnectionStatusStateText=BX.message("IM_CS_OFFLINE");s="bx-messenger-connection-status-offline"}else if(e=="connecting"){this.popupMessengerConnectionStatusStateText=BX.message("IM_CS_CONNECTING");s="bx-messenger-connection-status-connecting"}else if(e=="online"){this.popupMessengerConnectionStatusStateText=BX.message("IM_CS_ONLINE");s="bx-messenger-connection-status-online"}clearTimeout(this.popupMessengerConnectionStatusTimeout);if(!this.popupMessengerConnectionStatus)return false;if(e=="online"){if(t){if(this.redrawTab[this.currentTab]){BX.MessengerCommon.openDialog(this.currentTab)}else{this.updateState(true,false,"UPDATE_STATE_RECONNECT")}}clearTimeout(this.popupMessengerConnectionStatusTimeout);this.popupMessengerConnectionStatusTimeout=setTimeout(BX.delegate((function(){BX.removeClass(this.popupMessengerConnectionStatus,"bx-messenger-connection-status-show");BX.addClass(this.popupMessengerConnectionStatus,"bx-messenger-connection-status-hide")}),this),4e3)}this.popupMessengerConnectionStatus.className="bx-messenger-connection-status bx-messenger-connection-status-show "+s;this.popupMessengerConnectionStatusText.innerHTML=this.popupMessengerConnectionStatusStateText;return true};BX.MessengerChat.prototype.editMessage=function(e){if(!BX.MessengerCommon.checkEditMessage(e,"edit"))return false;BX.removeClass(this.popupMessengerEditForm,"bx-messenger-editform-disable");BX.removeClass(this.popupMessengerEditForm,"bx-messenger-editform-hide");BX.addClass(this.popupMessengerEditForm,"bx-messenger-editform-show");this.popupMessengerEditMessageId=e;if(this.popupMessengerEditTextarea.value.length>20006){this.popupMessengerEditTextarea.value=this.popupMessengerEditTextarea.value.substr(0,2e4)+" (...)"}if(this.message[e].textOriginal){this.popupMessengerEditTextarea.value=this.message[e].textOriginal}else{this.popupMessengerEditTextarea.value=BX.MessengerCommon.prepareTextBack(this.message[e].text,true)}this.popupMessengerEditTextarea.value=this.popupMessengerEditTextarea.value.replace(/\[USER=([0-9]{1,})\](.*?)\[\/USER\]/gi,BX.delegate((function(e,t,s){BX.MessengerCommon.addMentionList(this.currentTab,s,parseInt(t));return s}),this));this.popupMessengerEditTextarea.value=this.popupMessengerEditTextarea.value.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi,BX.delegate((function(e,t,s,i){BX.MessengerCommon.addMentionList(this.currentTab,i,"chat"+parseInt(s));return i}),this));clearTimeout(this.popupMessengerEditFormTimeout);this.popupMessengerEditFormTimeout=setTimeout(BX.delegate((function(){if(!this.popupMessengerEditTextarea)return false;this.popupMessengerEditTextarea.focus();this.popupMessengerEditTextarea.selectionStart=this.popupMessengerEditTextarea.value.length;this.popupMessengerEditTextarea.selectionEnd=this.popupMessengerEditTextarea.value.length}),this),200)};BX.MessengerChat.prototype.editMessageCancel=function(){this.popupMessengerEditTextarea.value="";if(BX.hasClass(this.popupMessengerEditForm,"bx-messenger-editform-disable"))return false;this.popupMessengerEditMessageId=0;BX.removeClass(this.popupMessengerEditForm,"bx-messenger-editform-show");BX.addClass(this.popupMessengerEditForm,"bx-messenger-editform-hide");clearTimeout(this.popupMessengerEditFormTimeout);this.popupMessengerEditFormTimeout=setTimeout(BX.delegate((function(){BX.removeClass(this.popupMessengerEditForm,"bx-messenger-editform-hide");BX.addClass(this.popupMessengerEditForm,"bx-messenger-editform-disable")}),this),500);this.popupMessengerTextarea.focus();this.popupMessengerTextarea.selectionStart=this.popupMessengerTextarea.value.length;this.popupMessengerTextarea.selectionEnd=this.popupMessengerTextarea.value.length};BX.MessengerChat.prototype.deleteMessage=function(e,t){if(t!==false&&!BX.MessengerCommon.checkEditMessage(e,"delete"))return false;if(t!==false){this.BXIM.openConfirm(BX.message("IM_M_HISTORY_DELETE_CONFIRM"),[new BX.PopupWindowButton({text:BX.message("IM_M_HISTORY_DELETE"),className:"popup-window-button-decline",events:{click:BX.delegate((function(){this.deleteMessage(e,false);BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true)}else{BX.MessengerCommon.deleteMessageAjax(e)}};BX.MessengerChat.prototype.shareMessage=function(e,t,s){if(t==="TASK"||t==="CALEND"){const s=t==="TASK"?"im.chat.task.prepare":"im.chat.calendar.prepare";BX.rest.callMethod(s,{MESSAGE_ID:e}).then((s=>{const i=s.data();if(t==="CALEND"){new(window.top.BX||window.BX).Calendar.SliderLoader(0,i.params).show();BX.Event.EventEmitter.subscribe("BX.Calendar:onEntrySave",(t=>{if(t instanceof BX.Event.BaseEvent){const s=t.getData();if(s.sliderId===i.params.sliderId){BX.rest.callMethod("im.chat.calendar.add",{MESSAGE_ID:e,CALENDAR_ID:s.responseData.entryId})}}}))}if(t==="TASK"){BX.SidePanel.Instance.open(i.link,{requestMethod:"post",requestParams:i.params,cacheable:false})}}));return true}BX.MessengerCommon.shareMessageAjax(e,t,s)};BX.MessengerChat.prototype.toggleDarkTheme=function(e){var t=!!e;if(this.BXIM.desktop.ready()&&this.BXIM.desktop.getApiVersion()>=59&&BXDesktopSystem.IsActiveTab()){if(!t&&(this.BXIM.settings.isCurrentThemeDark&&BX.MessengerTheme.isDark()||!this.BXIM.settings.isCurrentThemeDark&&!BX.MessengerTheme.isDark())){return}if(BX.MessengerTheme.isDark()){document.body.classList.add("bx-theme-dark")}else{document.body.classList.remove("bx-theme-dark")}BXDesktopSystem.SetAccountTheme(BX.MessengerTheme.theme)}if(t&&BX.MessengerTheme.theme!=="auto"){return}var s="bx-messenger-dark";var i=BX.MessengerTheme.isDark();if(this.BXIM.settings.isCurrentThemeDark!==i){this.BXIM.settings.isCurrentThemeDark=i;if(this.BXIM.init){this.BXIM.saveSettings({isCurrentThemeDark:this.BXIM.settings.isCurrentThemeDark})}}if(i){document.body.classList.add("bx-theme-dark");if(this.popupMessengerContent){this.popupMessengerContent.classList.add(s)}if(BX.MessengerCommon.isDesktop()){document.body.classList.add(s)}}else{document.body.classList.remove("bx-theme-dark");if(this.popupMessengerContent){this.popupMessengerContent.classList.remove(s)}if(BX.MessengerCommon.isDesktop()){document.body.classList.remove(s)}}var n=document.querySelector(".im-desktop-popup");if(n){if(i){n.classList.add(s)}else{n.classList.remove(s)}}if(BX.MessengerCommon.isPage()&&BX.MessengerWindow.contentBox){if(i){BX.MessengerWindow.contentBox.classList.add(s)}else{BX.MessengerWindow.contentBox.classList.remove(s)}}if(BX.MessengerSlider.isFocus()){if(i){BX.MessengerSlider.getCurrent().getContentContainer().classList.add("bx-messenger-dark")}else{BX.MessengerSlider.getCurrent().getContentContainer().classList.remove("bx-messenger-dark")}}var a=document.getElementsByClassName("popup-window bx-messenger-mark");if(i){for(var o=0;o<a.length;o++){a[o].classList.add("popup-window-dark")}}else{for(var o=0;o<a.length;o++){a[o].classList.remove("popup-window-dark")}}this.BXIM.setBackground();return true};BX.MessengerChat.prototype.onPaste=function(e){if(!e.clipboardData||!e.clipboardData.files||!this.BXIM.disk.enable){return true}var t=e.clipboardData.getData("Text");if(t&&!t.match(/\.(jpg|jpeg|png|gif|webp)$/i)){return true}this.imageUploaderFiles=[];var s=false;var i=e.clipboardData.files.length;for(var n=0;n<e.clipboardData.files.length;++n){var a=e.clipboardData.files[n];if(!a||!a.type.match(/(jpg|jpeg|png|gif|webp)/i)){continue}s=true;if(BX.browser.IsSafari()){r=a.name}else{var o=a.name.replace(/^(.*)\.(jpg|jpeg|png|gif|webp)$/im,(function(e,t,s){return s}));var r=t?t.replace(/^(.*)\.(jpg|jpeg|png|gif|webp)$/im,(function(e,t){return t+"."+o})):"image_"+BX.Main.Date.format("Y-m-d_H:i:s")+"."+o}if(a.size>1*1024*1024){this.imageUploader()}var l=new FileReader;l.onerror=function(e){console.error("BX.Messenger.onPaste -> fileReader.onerror:",e);if(this.popupImageUploader){this.popupImageUploader.close()}}.bind(this);l.onabort=function(e){console.error("BX.Messenger.onPaste -> fileReader.onabort:",e);if(this.popupImageUploader){this.popupImageUploader.close()}}.bind(this);l.onloadend=function(e){this.imageUploaderFiles.push({name:r,source:e.target.result});if(i==1){if(this.popupImageUploader){this.imageUploaderUpdateImage()}else{this.imageUploader()}}else{i--}}.bind(this);l.readAsDataURL(a)}if(s){e.preventDefault();e.stopPropagation()}return true};BX.MessengerChat.prototype.imageUploader=function(){if(this.popupImageUploader)this.popupImageUploader.close();var e=BX.message("IM_UPLOAD_IMAGE_TITLE");if(this.imageUploaderFiles.length>1&&BX.message("IM_UPLOAD_IMAGE_TITLE_2")){e=BX.message("IM_UPLOAD_IMAGE_TITLE_2").replace("#NUMBER#",this.imageUploaderFiles.length)}this.popupImageUploader=new BX.PopupWindow("bx-messenger-image-uploader",null,{darkMode:BX.MessengerTheme.isDark(),targetContainer:document.body,lightShadow:true,closeByEsc:true,closeIcon:{},contentNoPaddings:true,contentColor:BX.MessengerTheme.isDark()?"":"white",events:{onPopupClose:function(){this.destroy()},onPopupDestroy:function(){this.popupImageUploader=null;this.imageUploaderTextarea=null;this.imageUploaderFiles=[]}.bind(this)},buttons:[new BX.PopupWindowButton({text:BX.message("IM_UPLOAD_IMAGE_BUTTON_UPLOAD"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){this.disk.uploadFromClipboard(this.imageUploaderFiles,this.imageUploaderTextarea.value);this.textareaHistory[this.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_UPLOAD_IMAGE_BUTTON_CLOSE"),className:"popup-window-button",events:{click:BX.delegate((function(){this.insertTextareaText(this.popupMessengerTextarea,this.imageUploaderTextarea.value,false);this.textareaHistory[this.currentTab]=this.imageUploaderTextarea.value;this.popupMessengerTextarea.focus();BX.proxy_context.popupWindow.close()}),this)}})],zIndex:BX.MessengerCommon.getDefaultZIndex()+200,titleBar:e,content:'<div class="im-messenger-image-uploader">'+'<div class="im-messenger-image-uploader-preview bx-messenger-custom-scroll">'+this.imageUploaderPreperaImageNode()+"</div>"+'<div class="im-messenger-image-uploader-textarea">'+'<textarea class="im-messenger-image-uploader-textarea-input" placeholder="'+BX.message("IM_UPLOAD_IMAGE_COMMENT")+'"></textarea>'+"</div>"+"</div>"});this.popupImageUploader.show();BX.addClass(this.popupImageUploader.popupContainer,"bx-messenger-mark");this.imageUploaderButtonUpload=BX.findChildByClassName(this.popupImageUploader.buttonsContainer,"popup-window-button-accept");if(this.imageUploaderButtonUpload&&this.imageUploaderButtonUpload.innerHTML==BX.message("IM_UPLOAD_IMAGE_BUTTON_UPLOAD")){this.imageUploaderButtonUpload.innerHTML=BX.message("IM_UPLOAD_IMAGE_BUTTON_UPLOAD")+" ("+(BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter")+")"}this.imageUploaderTextarea=BX.findChildByClassName(this.popupImageUploader.contentContainer,"im-messenger-image-uploader-textarea-input");if(this.popupMessengerTextarea.value.length>0){this.insertTextareaText(this.imageUploaderTextarea,this.popupMessengerTextarea.value,false);this.popupMessengerTextarea.value="";this.textareaHistory[this.currentTab]=""}this.imageUploaderTextarea.focus();BX.bind(this.imageUploaderTextarea,"keydown",function(e){if((e.metaKey==true||e.ctrlKey==true)&&(e.keyCode==13||e.keyCode==32)){this.disk.uploadFromClipboard(this.imageUploaderFiles,this.imageUploaderTextarea.value);this.popupImageUploader.close()}}.bind(this));if(this.imageUploaderFiles.length<=0){var t=BX.findChildByClassName(this.popupImageUploader.contentContainer,"im-messenger-image-uploader-preview");this.imageUploaderLoader=new BX.Loader({size:42});this.imageUploaderLoader.show(t)}return true};BX.MessengerChat.prototype.imageUploaderPreperaImageNode=function(){if(this.imageUploaderFiles.length<=0){return""}var e="";if(this.imageUploaderFiles.length==1){return'<div class="im-messenger-image-uploader-preview-box">'+'<img src="'+this.imageUploaderFiles[0].source+'" class="im-messenger-image-uploader-preview-image">'+"</div>"}else if(this.imageUploaderFiles.length==2){e="im-messenger-image-uploader-preview-group-box-twin"}else if(this.imageUploaderFiles.length==3){e="im-messenger-image-uploader-preview-group-box-one-line"}else if(this.imageUploaderFiles.length<=6){e="im-messenger-image-uploader-preview-group-box-two-line"}else{e="im-messenger-image-uploader-preview-group-box"}var t="";this.imageUploaderFiles.forEach((function(e){t+='<div class="im-messenger-image-uploader-preview-group-image">'+'<img src="'+e.source+'" class="im-messenger-image-uploader-preview-group-image-source">'+"</div>"}));return'<div class="im-messenger-image-uploader-preview-box '+e+'">'+t+"</div>"};BX.MessengerChat.prototype.imageUploaderUpdateImage=function(){if(!this.popupImageUploader||this.imageUploaderFiles.length<=0){return false}var e=BX.findChildByClassName(this.popupImageUploader.contentContainer,"im-messenger-image-uploader-preview");if(!e){return false}if(this.imageUploaderLoader){this.imageUploaderLoader.destroy();this.imageUploaderLoader=null}e.innerHTML=this.imageUploaderPreperaImageNode();return true};BX.MessengerChat.prototype.insertQuoteMessage=function(e){var t=[];var s=true;var i="";var n="";var a=BX.findChildren(e.parentNode.nextSibling.firstChild,{tagName:"span"},false);for(var o=0;o<a.length;o++){var r=a[o].id.replace("im-message-","");if(this.message[r]){if(s){if(this.users[this.message[r].senderId]){i=this.users[this.message[r].senderId].name;n=this.message[r].date}s=false}t.push(this.message[r].textOriginal)}}this.insertQuoteText(i,n,t.join("\n"))};BX.MessengerChat.prototype.insertQuoteText=function(e,t,s,i){s=s.replace(/\[USER=([0-9]{1,})\](.*?)\[\/USER\]/gi,BX.delegate((function(e,t,s){return s}),this));s=s.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi,BX.delegate((function(e,t,s,i){return i}),this));s=s.replace(/\[CALL(?:=(.+?))?\](.+?)?\[\/CALL\]/gi,BX.delegate((function(e,t,s){return s?s:t}),this));s=s.replace(/\[ATTACH=([0-9]{1,})\]/gi,BX.delegate((function(e,t,s){return t==1e4?"":"["+BX.message("IM_F_ATTACH")+"] "}),this));s=s.replace(/\[RATING\=([1-5]{1})\]/gi,BX.delegate((function(e,t){return"["+BX.message("IM_F_RATING")+"] "}),this));s=s.replace(/&nbsp;/gi," ");s=s.replace(/-{54}(.*?)-{54}/gs,"["+BX.message("IM_M_QUOTE_BLOCK")+"]");var n=[];n.push((this.popupMessengerTextarea&&this.popupMessengerTextarea.value.length>0?"\n":"")+this.historyMessageSplit);n.push(BX.util.htmlspecialcharsback(e)+" ["+BX.MessengerCommon.formatDate(t)+"]");n.push(s);n.push(this.historyMessageSplit+"\n");if(i!==false){var a=n.join("\n");if(!BX.browser.IsChrome()&&navigator.userAgent.toLowerCase().includes("safari")){a+="\n"}var o=this.popupMessengerTextarea||opener.BXIM.messenger.popupMessengerTextarea;if(o){this.insertTextareaText(o,a,false);setTimeout((function(){o.scrollTop=o.scrollHeight;o.focus()}),100)}}else{return n.join("\n")}};BX.MessengerChat.prototype.insertTextareaText=function(e,t,s){if(!e&&opener.BXIM.messenger.popupMessengerTextarea)e=opener.BXIM.messenger.popupMessengerTextarea;if(e.selectionStart||e.selectionStart=="0"){var i=e.selectionStart;var n=e.selectionEnd;e.value=e.value.substring(0,i)+t+e.value.substring(n,e.value.length);s=s!=false;if(s){e.selectionStart=i+1;e.selectionEnd=i+1}else if(BX.browser.IsChrome()||BX.browser.IsSafari()||BX.MessengerCommon.isDesktop()){e.selectionStart=e.value.length+1;e.selectionEnd=e.value.length+1}}if(document.selection&&document.documentMode&&document.documentMode<=8){e.focus();var a=document.selection.createRange();a.text=t}this.textareaCheckText({textarea:e})};BX.MessengerChat.prototype.resizeTextareaStart=function(e){if(this.webrtc.callOverlayFullScreen)return false;if(!e)e=window.event;this.popupMessengerTextareaResize.wndSize=BX.GetWindowScrollPos();this.popupMessengerTextareaResize.pos=BX.pos(this.popupMessengerTextarea);this.popupMessengerTextareaResize.y=e.clientY+this.popupMessengerTextareaResize.wndSize.scrollTop;this.popupMessengerTextareaResize.textOffset=this.popupMessengerTextarea.offsetHeight;this.popupMessengerTextareaResize.bodyOffset=this.popupMessengerBody.offsetHeight;BX.bind(document,"mousemove",BX.proxy(this.resizeTextareaMove,this));BX.bind(document,"mouseup",BX.proxy(this.resizeTextareaStop,this));if(document.body.setCapture)document.body.setCapture();document.onmousedown=BX.False;var t=document.body;t.ondrag=t.onselectstart=BX.False;t.style.MozUserSelect="none";t.style.cursor="move";BX.onCustomEvent("onImResizeTextarea",[]);this.closeMenuPopup()};BX.MessengerChat.prototype.resizeTextareaMove=function(e){if(!e)e=window.event;var t=BX.GetWindowScrollPos();var s=e.clientX+t.scrollLeft;var i=e.clientY+t.scrollTop;if(this.popupMessengerTextareaResize.y==i)return;var n=Math.max(Math.min(-(i-this.popupMessengerTextareaResize.pos.top)+this.popupMessengerTextareaResize.textOffset,143),30);this.popupMessengerTextareaSize=n;this.popupMessengerTextarea.style.height=n+"px";this.popupMessengerBodySize=this.popupMessengerTextareaResize.textOffset-n+this.popupMessengerTextareaResize.bodyOffset;this.popupMessengerBody.style.height=this.popupMessengerBodySize+"px";this.popupMessengerBodyPanel.style.height=this.popupMessengerBodyDialog.offsetHeight+"px";this.resizeMainWindow();this.popupMessengerTextareaResize.x=s;this.popupMessengerTextareaResize.y=i};BX.MessengerChat.prototype.resizeTextareaStop=function(){if(document.body.releaseCapture)document.body.releaseCapture();BX.unbind(document,"mousemove",BX.proxy(this.resizeTextareaMove,this));BX.unbind(document,"mouseup",BX.proxy(this.resizeTextareaStop,this));document.onmousedown=null;this.popupMessengerBody.scrollTop=this.popupMessengerBody.scrollHeight-this.popupMessengerBody.offsetHeight;var e=document.body;e.ondrag=e.onselectstart=null;e.style.MozUserSelect="";e.style.cursor="";clearTimeout(this.BXIM.adjustSizeTimeout);this.BXIM.adjustSizeTimeout=setTimeout(BX.delegate((function(){this.BXIM.setLocalConfig("global_tas",this.popupMessengerTextareaSize);this.BXIM.setLocalConfig("global_msz_v2",{wz:this.popupMessengerFullWidth,ta2:this.popupMessengerTextareaSize,b:this.popupMessengerBodySize,cl:this.popupContactListSize,hi:this.popupHistoryItemsSize,fz:this.popupMessengerFullHeight,ez:this.popupContactListElementsSize,nz:this.notify.popupNotifySize,hf:this.popupHistoryFilterVisible,dw:window.innerWidth,dh:window.innerHeight,place:"taMove"})}),this),500)};BX.MessengerChat.prototype.setTextareaSize=function(e){e=Math.max(Math.min(e,143),30);if(this.popupMessengerTextareaSize==e)return true;var t=e-this.popupMessengerTextareaSize;this.popupMessengerBodySize=this.popupMessengerBodySize+t*-1;if(this.popupMessengerBody){this.popupMessengerBody.style.height=this.popupMessengerBodySize+"px";this.popupMessengerBodyPanel.style.height=this.popupMessengerBodyDialog.offsetHeight+"px"}this.popupMessengerTextareaSize=e;if(this.popupMessengerTextarea){this.popupMessengerTextarea.style.height=e+"px"}return true};BX.MessengerChat.prototype.resizeWindowStart=function(){if(this.webrtc.callOverlayFullScreen)return false;if(this.popupMessengerTopLine)BX.remove(this.popupMessengerTopLine);this.popupMessengerWindow.pos=BX.pos(this.popupMessengerContent);this.popupMessengerWindow.mb=this.popupMessengerBodySize;this.popupMessengerWindow.nb=this.notify.popupNotifySize;BX.bind(document,"mousemove",BX.proxy(this.resizeWindowMove,this));BX.bind(document,"mouseup",BX.proxy(this.resizeWindowStop,this));if(document.body.setCapture)document.body.setCapture();document.onmousedown=BX.False;var e=document.body;e.ondrag=e.onselectstart=BX.False;e.style.MozUserSelect="none";e.style.cursor="move";this.closeMenuPopup();this.BXIM.autoHideDisable=true};BX.MessengerChat.prototype.resizeWindowMove=function(e){if(!e)e=window.event;var t=BX.GetWindowScrollPos();var s=e.clientX+t.scrollLeft;var i=e.clientY+t.scrollTop;this.popupMessengerFullHeight=Math.max(Math.min(i-this.popupMessengerWindow.pos.top,1e3),this.popupMessengerMinHeight);this.popupMessengerFullWidth=Math.max(Math.min(s-this.popupMessengerWindow.pos.left,1200),this.popupMessengerMinWidth);this.popupMessengerContent.style.height=this.popupMessengerFullHeight+"px";this.popupMessengerContent.style.width=this.popupMessengerFullWidth+"px";var n=this.popupMessengerFullHeight-Math.max(Math.min(this.popupMessengerWindow.pos.height,1e3),this.popupMessengerMinHeight);this.popupMessengerBodySize=this.popupMessengerWindow.mb+n;if(this.popupMessengerBody!=null)this.popupMessengerBody.style.height=this.popupMessengerBodySize+"px";if(this.popupMessengerBodyPanel!=null)this.popupMessengerBody.style.height=this.popupMessengerBodyDialog.offsetHeight+"px";if(this.popupMessengerExtra!=null)this.popupMessengerExtra.style.height=this.popupMessengerFullHeight+"px";this.notify.popupNotifySize=Math.max(this.popupMessengerWindow.nb+(this.popupMessengerBodySize-this.popupMessengerWindow.mb),this.notify.popupNotifySizeMin);if(this.notify.popupNotifyItem!=null)this.notify.popupNotifyItem.style.height=this.notify.popupNotifySize+"px";this.BXIM.messenger.redrawChatHeader();this.resizeMainWindow()};BX.MessengerChat.prototype.resizeWindowStop=function(){if(document.body.releaseCapture)document.body.releaseCapture();BX.unbind(document,"mousemove",BX.proxy(this.resizeWindowMove,this));BX.unbind(document,"mouseup",BX.proxy(this.resizeWindowStop,this));document.onmousedown=null;this.popupMessengerBody.scrollTop=this.popupMessengerBody.scrollHeight-this.popupMessengerBody.offsetHeight;var e=document.body;e.ondrag=e.onselectstart=null;e.style.MozUserSelect="";e.style.cursor="";clearTimeout(this.BXIM.adjustSizeTimeout);this.BXIM.adjustSizeTimeout=setTimeout(BX.delegate((function(){this.BXIM.setLocalConfig("global_msz_v2",{wz:this.popupMessengerFullWidth,ta2:this.popupMessengerTextareaSize,b:this.popupMessengerBodySize,cl:this.popupContactListSize,hi:this.popupHistoryItemsSize,fz:this.popupMessengerFullHeight,ez:this.popupContactListElementsSize,nz:this.notify.popupNotifySize,hf:this.popupHistoryFilterVisible,dw:window.innerWidth,dh:window.innerHeight,place:"winMove"});this.BXIM.autoHideDisable=false}),this),500)};BX.MessengerChat.prototype.newMessage=function(e){e=e!=false;var t=[];var s=[];var i=0;var n={};var a=0;for(var o in this.flashMessage){var r=false;var l=false;if(this.BXIM.isFocus()&&this.popupMessenger!=null&&o==this.currentTab){r=true;a++}else if(o.toString().substr(0,4)=="chat"||this.users[o]&&this.users[o].extranet){if(this.muteButtonStatus(o)){l=true}}if(r||l){for(var p in this.flashMessage[o]){if(this.flashMessage[o][p]!==false){this.flashMessage[o][p]=false;i++}}continue}var h={};for(var p in this.flashMessage[o]){if(this.flashMessage[o][p]===false||h[o]){this.flashMessage[o][p]=false;continue}h[o]=true;var c=this.message[p].recipientId.toString().substr(0,4)=="chat";var u=this.message[p].recipientId;var d=!c&&this.message[p].senderId==0?o:this.message[p].senderId;if(c&&!this.chat[u.substr(4)]||!c&&!this.users[d]){continue}var m=c&&this.chat[u.substr(4)].type=="call";var g=c&&this.chat[u.substr(4)].type=="lines";var f=this.message[p].system=="Y";var B=BX.MessengerCommon.purifyText(this.message[p].textOriginal,this.message[p].params);if(o!=this.BXIM.userId){n[o]=c?this.chat[u.substr(4)].name:this.users[d].name}if(B.length>150){B=B.substr(0,150);var X=B.lastIndexOf(" ");if(X<140)B=B.substr(0,X)+"...";else B=B.substr(0,140)+"..."}if(c){var M=u.substr(4);var C=BX.MessengerCommon.isBlankAvatar(this.chat[M].avatar)?"background-color: "+this.chat[M].color:"background: url('"+this.chat[M].avatar+"'); background-size: cover;";var I=3;if(m){I=4}else if(g){I=7}else if(this.generalChatId==M){I=6}else if(this.chat[M].entity_type=="SUPPORT24_QUESTION"){I="support24Question"}else if(this.chat[M].type=="open"){I=5}}else{var C=BX.MessengerCommon.isBlankAvatar(this.users[d].avatar)?"background-color: "+this.users[d].color:"background: url('"+encodeURI(this.users[d].avatar)+"'); background-size: cover;"}var b=BX.create("div",{attrs:{"data-userId":c?u:d,"data-messageId":p},props:{className:"bx-notifier-item bx-notifier-item-"+p+" "},children:[BX.create("span",{props:{className:"bx-notifier-item-content"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(c?this.chat[u.substr(4)].avatar:this.users[d].avatar)?c?" bx-notifier-item-avatar-img-default-"+I:" bx-notifier-item-avatar-img-default":"")},attrs:{style:C}})]}),BX.create("a",{attrs:{href:"#","data-messageId":p},props:{className:"bx-notifier-item-delete"}}),BX.create("span",{props:{className:"bx-notifier-item-date"},html:BX.MessengerCommon.formatDate(this.message[p].date)}),BX.create("span",{props:{className:"bx-notifier-item-name"},html:c?this.chat[u.substr(4)].name:this.users[d].name}),BX.create("span",{props:{className:"bx-notifier-item-text"},html:(c&&d>0?"<i>"+this.users[d].name+"</i>: ":"")+B})]})]});if(!this.BXIM.xmppStatus||this.BXIM.xmppStatus&&c){t.push(b);B=BX.util.htmlspecialcharsback(B);B=B.split("<br />").join("\n");B=B.replace(/\[USER=([0-9]{1,})\](.*?)\[\/USER\]/gi,(function(e,t,s){return s}));B=B.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi,(function(e,t,s,i){return i}));B=B.replace(/\[PCH=([0-9]{1,})\](.*?)\[\/PCH\]/gi,(function(e,t,s){return s}));B=B.replace(/\[SEND(.+?)?\[\/SEND]/gi,"["+BX.message("IM_MESSAGE_LINK")+"]");B=B.replace(/\[PUT(.+?)?\[\/PUT]/gi,"["+BX.message("IM_MESSAGE_LINK")+"]");B=B.replace(/\[CALL(?:=(.+?))?\](.+?)?\[\/CALL\]/gi,(function(e,t,s){return s?s:t}));B=B.replace(/\[ATTACH=([0-9]{1,})\]/gi,(function(e,t,s){return""}));s.push({id:c?u:d,title:BX.util.htmlspecialcharsback(c?this.chat[u.substr(4)].name:this.users[d].name),text:(c&&d>0?this.users[d].name+": ":"")+B,icon:c?this.chat[u.substr(4)].avatar:this.users[d].avatar,tag:"im-messenger-"+(c?u:d)})}this.flashMessage[o][p]=false}}if(this.BXIM.context=="LINES"||this.BXIM.context=="DIALOG"){return false}if(BX.MessengerCommon.isSlider())return false;if(!BX.MessengerCommon.isDesktop()&&this.BXIM.desktopStatus)return false;if(t.length>5){var y="";for(var o in n)y+=", <i>"+n[o]+"</i>";var x={id:0,type:4,date:new Date,title:BX.message("IM_NM_MESSAGE_1").replace("#COUNT#",t.length),text:BX.message("IM_NM_MESSAGE_2").replace("#USERS#",y.substr(2))};t=[];t.push(this.notify.createNotify(x,true));s=[];s.push({id:"",title:BX.message("IM_NM_MESSAGE_1").replace("#COUNT#",t.length),text:BX.message("IM_NM_MESSAGE_2").replace("#USERS#",BX.util.htmlspecialcharsback(y.substr(2))).replace(/<\/?[^>]+>/gi,"")})}else if(t.length==0){if(a>0&&BX.MessengerCommon.isDesktop())BX.desktop.flashIcon();if(e&&a>0&&this.BXIM.settings.status!="dnd"){this.BXIM.playSound("newMessage2")}return false}if(BX.MessengerCommon.isDesktop())BX.desktop.flashIcon();if(BX.MessengerCommon.isDesktop()&&!this.BXIM.callController.isFullScreen()){if(!document.hasFocus()&&BX.desktop.getLocalConfig("nativeNotify",false)&&BX.browser.IsMac()){for(var o=0;o<s.length;o++){var v=s[o].title;var T=s[o].text;var S="";if(s[o].icon){S=s[o].icon.toString().startsWith("http")?s[o].icon:location.origin+"/"+s[o].icon}if(BX.MessengerCommon.isBlankAvatar(S)){S=""}BXDesktopSystem.Notify(v,"",T,encodeURI(S))}}else{for(var o=0;o<t.length;o++){var _=t[o].getAttribute("data-messageId");var E='var notify = BX.findChildByClassName(document.body, "bx-notifier-item");'+'notify.style.cursor = "pointer";'+'BX.bind(notify, "click", function(){BX.desktop.onCustomEvent("main", "bxImClickNewMessage", [notify.getAttribute("data-userId")]); BX.desktop.windowCommand("close")});'+'BX.bind(BX.findChildByClassName(notify, "bx-notifier-item-delete"), "click", function(event){ /*BX.desktop.onCustomEvent("main", "bxImClickCloseMessage", [notify.getAttribute("data-userId")]);*/ BX.desktop.windowCommand("close"); BX.MessengerCommon.preventDefault(event); });'+'BX.bind(notify, "contextmenu", function(){ BX.desktop.windowCommand("close")});';this.desktop.openNewMessage(_,t[o],E)}}}else if(e&&!this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){for(var o=0;o<s.length;o++){var x=s[o];x.onshow=function(){var e=this;setTimeout((function(){e.close()}),5e3)};x.onclick=function(){window.focus();top.BXIM.openMessenger(x.id);this.close()};this.BXIM.notifyManager.nativeNotify(x)}}else{if(this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){BX.localStorage.set("mnnb",true,1)}for(var o=0;o<t.length;o++){this.BXIM.notifyManager.add({html:t[o],tag:"im-message-"+t[o].getAttribute("data-userId"),userId:t[o].getAttribute("data-userId"),click:BX.delegate((function(e){this.openMessenger(e.notifyParams.userId);e.close()}),this),close:BX.delegate((function(e){e.close()}),this)})}}if(BX.MessengerCommon.isDesktop())BX.desktop.flashIcon();if(e){this.BXIM.playSound("newMessage1")}};BX.MessengerChat.prototype.showNotifyBlock=function(e){var t=e.recipientId.toString().substr(0,4)=="chat";var s=e.recipientId;var n=t&&this.chat[s.substr(4)]&&this.chat[s.substr(4)].type=="call";var a=t&&this.chat[s.substr(4)]&&this.chat[s.substr(4)].type=="lines";var o=!t&&e.senderId==0?i:e.senderId;var r=e.text_mobile?e.text_mobile:e.text;if(!e.id)e.id="custom-"+ +new Date;if(e.date)e.date=new Date;r=r.replace(/------------------------------------------------------(.*?)------------------------------------------------------/gim,"["+BX.message("IM_M_QUOTE_BLOCK")+"]");if(r.length>150){r=r.substr(0,150);var l=r.lastIndexOf(" ");if(l<140)r=r.substr(0,l)+"...";else r=r.substr(0,140)+"..."}if(r==""&&e.params["FILE_ID"].length>0){r="["+BX.message("IM_F_FILE")+"]"}if(t){var p=s.substr(4);var h=BX.MessengerCommon.isBlankAvatar(this.chat[p].avatar)?"background-color: "+this.chat[p].color:"background: url('"+this.chat[p].color+"'); background-size: cover;";var c=3;if(n){c=4}else if(a){c=7}else if(this.generalChatId==p){c=6}else if(this.chat[s.substr(4)].type=="open"){c=5}}else{var h=BX.MessengerCommon.isBlankAvatar(this.users[o].avatar)?"background-color: "+this.users[o].color:"background: url('"+encodeURI(this.users[o].avatar)+"'); background-size: cover;"}var u=BX.create("div",{attrs:{"data-userId":t?s:o,"data-messageId":e.id},props:{className:"bx-notifier-item bx-notifier-item-"+e.id+" "},children:[BX.create("span",{props:{className:"bx-notifier-item-content"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar"},children:[BX.create("span",{props:{className:"bx-notifier-item-avatar-img"+(BX.MessengerCommon.isBlankAvatar(t?this.chat[s.substr(4)].avatar:this.users[o].avatar)?t?" bx-notifier-item-avatar-img-default-"+c:" bx-notifier-item-avatar-img-default":"")},attrs:{style:h}})]}),BX.create("a",{attrs:{href:"#","data-messageId":e.id},props:{className:"bx-notifier-item-delete"}}),e.date?BX.create("span",{props:{className:"bx-notifier-item-date"},html:BX.MessengerCommon.formatDate(e.date)}):BX.create("span"),BX.create("span",{props:{className:"bx-notifier-item-name"},html:t?this.chat[s.substr(4)].name:this.users[o].name}),BX.create("span",{props:{className:"bx-notifier-item-text"},html:(t&&o>0?"<i>"+this.users[o].name+"</i>: ":"")+BX.MessengerCommon.prepareText(r,true,true)})]})]});if(!this.BXIM.xmppStatus||this.BXIM.xmppStatus&&t){r=BX.util.htmlspecialcharsback(r);r=r.split("<br />").join("\n");r=r.replace(/\[USER=([0-9]{1,})\](.*?)\[\/USER\]/gi,(function(e,t,s){return s}));r=r.replace(/\[CHAT=(imol\|)?([0-9]{1,})\](.*?)\[\/CHAT\]/gi,(function(e,t,s,i){return i}));r=r.replace(/\[PCH=([0-9]{1,})\](.*?)\[\/PCH\]/gi,(function(e,t,s){return s}));r=r.replace(/\[SEND(.+?)?\[\/SEND]/gi,"["+BX.message("IM_MESSAGE_LINK")+"]");r=r.replace(/\[PUT(.+?)?\[\/PUT]/gi,"["+BX.message("IM_MESSAGE_LINK")+"]");r=r.replace(/\[CALL(?:=(.+?))?\](.+?)?\[\/CALL\]/gi,(function(e,t,s){return s?s:t}));r=r.replace(/\[ATTACH=([0-9]{1,})\]/gi,(function(e,t,s){return""}));notifyTextObject={id:t?s:o,title:BX.util.htmlspecialcharsback(t?this.chat[s.substr(4)].name:this.users[o].name),text:(t&&o>0?this.users[o].name+": ":"")+r,icon:t?this.chat[s.substr(4)].avatar:this.users[o].avatar,tag:"im-messenger-"+(t?s:o)}}else{return false}if(!(!BX.MessengerCommon.isDesktop()&&BX.MessengerCommon.isPage())&&!BX.MessengerCommon.isDesktop()&&this.BXIM.desktopStatus)return false;if(BX.MessengerCommon.isDesktop()){var d='var notify = BX.findChildByClassName(document.body, "bx-notifier-item");'+'notify.style.cursor = "pointer";'+'BX.bind(notify, "click", function(){BX.desktop.onCustomEvent("main", "bxImClickNewMessage", [notify.getAttribute("data-userId")]); BX.desktop.windowCommand("close")});'+'BX.bind(BX.findChildByClassName(notify, "bx-notifier-item-delete"), "click", function(event){ /*BX.desktop.onCustomEvent("main", "bxImClickCloseMessage", [notify.getAttribute("data-userId")]);*/ BX.desktop.windowCommand("close"); BX.MessengerCommon.preventDefault(event); });'+'BX.bind(notify, "contextmenu", function(){ BX.desktop.windowCommand("close")});';this.desktop.openNewMessage(u.getAttribute("data-messageId"),u,d)}else if(!this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){var m=notifyTextObject;m.onshow=function(){var e=this;setTimeout((function(){e.close()}),5e3)};m.onclick=function(){window.focus();top.BXIM.openMessenger(m.id);this.close()};this.BXIM.notifyManager.nativeNotify(m)}else{this.BXIM.notifyManager.add({html:u,tag:"im-message-"+u.getAttribute("data-userId"),userId:u.getAttribute("data-userId"),click:BX.delegate((function(e){this.openMessenger(e.notifyParams.userId);e.close()}),this),close:BX.delegate((function(e){BX.MessengerCommon.readMessage(e.notifyParams.userId)}),this)})}return true};BX.MessengerChat.prototype.updateMessageCount=function(e){e=e!=false;var t=0;var s=0;var i=0;var n=0;this.recent.forEach(function(e){if(e.lines){delete this.BXIM.linesDetailCounter[e.id];n=parseInt(e.counter);if(n&&n>0){if(BX.MessengerCommon.isLinesOperator()){i+=n}else{t+=n}}}else if(e.type==="user"){delete this.BXIM.dialogDetailCounter[e.id];n=parseInt(e.counter);if(n&&n>0){t+=n}else if(!e.counter&&e.unread){t+=1}}else if(e.type==="chat"){delete this.BXIM.dialogDetailCounter[e.id];if(!this.chat[e.id.substr(4)]||this.chat[e.id.substr(4)].mute_list&&!this.chat[e.id.substr(4)].mute_list[this.BXIM.userId]){n=parseInt(e.counter);if(n&&n>0){t+=n}else if(!e.counter&&e.unread){t+=1}}}}.bind(this));for(var a in this.BXIM.dialogDetailCounter){if(this.BXIM.dialogDetailCounter.hasOwnProperty(a)){t+=this.BXIM.dialogDetailCounter[a]}}if(!this.linesListLoad){for(var a in this.BXIM.linesDetailCounter){if(this.BXIM.linesDetailCounter.hasOwnProperty(a)){i+=this.BXIM.linesDetailCounter[a]}}}this.messageCount=t;this.BXIM.messageCount=t;this.BXIM.linesCount=i;var o="";if(this.messageCount>99)o="99+";else if(this.messageCount>0)o=this.messageCount;if(this.notify.panelButtonMessageCount){this.notify.panelButtonMessageCount.innerHTML=o;this.notify.adjustPosition({resize:true,timeout:500})}if(BX.MessengerCommon.isPage()){BX.MessengerWindow.setTabBadge("im",t);BX.MessengerWindow.setTabBadge("im-ol",i)}if(BX.MessengerCommon.isLinesOperator()){BX.onCustomEvent(window,"onImUpdateCounterLines",[i,"LINES"])}BX.onCustomEvent(window,"onImUpdateCounterMessage",[t,"MESSAGE"]);this.desktop.onCustomEvent("bxImUpdateCounterMessage",[t,"MESSAGE"]);return this.messageCount};BX.MessengerChat.prototype.setStatus=function(e,t){t=t!=false;if(!e)return false;e=e.toLowerCase();this.users[this.BXIM.userId].status=e;this.BXIM.updateCounter();if(this.contactListPanelStatus!=null&&!BX.hasClass(this.contactListPanelStatus,"bx-messenger-cl-panel-status-"+e)){this.contactListPanelStatus.className="bx-messenger-cl-panel-status-wrap bx-messenger-cl-status-"+e;var s=BX.findChildByClassName(this.contactListPanelStatus,"bx-messenger-cl-panel-status-text");e=e=="birthday"?"online":e;s.innerHTML=BX.message("IM_STATUS_"+e.toUpperCase());if(t){this.BXIM.saveSettings({status:e});BX.onCustomEvent(this,"onStatusChange",[e]);BX.localStorage.set("mms",e,5)}}if(BX.MessengerCommon.isDesktop())BX.desktop.setIconStatus(e)};BX.MessengerChat.prototype.resizeMainWindow=function(){if(BX.MessengerCommon.isPage())return false;if(this.popupMessengerExtra.style.display=="block")this.popupContactListElementsSize=this.popupMessengerExtra.offsetHeight-120;else this.popupContactListElementsSize=this.popupMessengerDialog.offsetHeight-120;this.popupContactListElements.style.height=this.popupContactListElementsSize+"px"};BX.MessengerChat.prototype.showTopLine=function(e,t,s){if(typeof e!="string")return false;if(typeof s!="function"){s=BX.delegate((function(){this.hideTopLine()}),this)}var i=[];i.push(BX.create("span",{props:{className:"bx-messenger-box-topline-close"},events:{click:s}}));if(typeof t=="object"){var n=[];for(var a=0;a<t.length;a++){n.push(BX.create("span",{props:{className:"bx-messenger-box-topline-button"},html:t[a].title,events:{click:t[a].callback}}))}i.push(BX.create("span",{props:{className:"bx-messenger-box-topline-buttons"},children:n}))}i.push(BX.create("span",{props:{className:"bx-messenger-box-topline-text"},children:[BX.create("span",{props:{className:"bx-messenger-box-topline-text-inner"},html:e})]}));this.popupMessengerTopLine.innerHTML="";BX.adjust(this.popupMessengerTopLine,{children:i});BX.addClass(this.popupMessengerTopLine,"bx-messenger-box-topline-show");return true};BX.MessengerChat.prototype.hideTopLine=function(e){BX.removeClass(this.popupMessengerTopLine,"bx-messenger-box-topline-show");if(e!==false){BX.localStorage.set("mhtl",true,1)}};BX.MessengerChat.prototype.closeMenuPopup=function(){if(this.popupPopupMenu!=null&&this.popupPopupMenuDateCreate+100<+new Date)this.popupPopupMenu.close();if(this.popupSmileMenu!=null)this.popupSmileMenu.close();if(this.notify.popupNotifyMore!=null)this.notify.popupNotifyMore.destroy();if(this.popupChatUsers!=null)this.popupChatUsers.close();if(this.popupChatDialog!=null)this.popupChatDialog.destroy();if(this.popupTransferDialog!=null)this.popupTransferDialog.destroy();if(this.popupTooltip!=null)this.popupTooltip.destroy();if(this.commandPopup!=null)this.commandPopup.close();if(this.popupIframeMenu!=null&&this.popupIframeBind)this.popupIframeMenu.destroy();this.webrtc.closeKeyPad();BX.MessengerSupport24.closePopup();this.disk.closeFilePopup();if(this.videoConfCreateLinkPopup!=null){this.videoConfCreateLinkPopup.close()}if(this.BXIM.callController.feedbackPopup){this.BXIM.callController.feedbackPopup.destroy()}if(window.obCrm&&window.obCrm.olCrmSelector&&window.obCrm.olCrmSelector.popup){window.obCrm.olCrmSelector.popup.close()}BX.MessengerProxy.sendClosePopupEvent()};BX.MessengerChat.MenuPrepareList=function(e){var t=[];for(var s=0;s<e.length;s++){var i=e[s];if(i==null)continue;if(!i.separator&&(!i.text||!BX.type.isNotEmptyString(i.text)))continue;if(i.separator){t.push(BX.create("div",{props:{className:"bx-messenger-menu-hr"}}))}else if(i.type=="call"){var n=BX.create("a",{props:{className:"bx-messenger-popup-menu-item"},attrs:{title:i.title?i.title:"",href:i.href?i.href:"",target:i.target?i.target:"_blank","data-params":i.dataParams?JSON.stringify(i.dataParams):""},events:i.onclick&&BX.type.isFunction(i.onclick)?{click:i.onclick}:null,dataset:i.dataset?i.dataset:null,html:'<div class="bx-messenger-popup-menu-item-call"><span class="bx-messenger-popup-menu-item-left"></span><span class="bx-messenger-popup-menu-item-title">'+i.text+'</span><span class="bx-messenger-popup-menu-right"></span></div>'+'<div><span class="bx-messenger-popup-menu-item-left"></span><span class="bx-messenger-popup-menu-item-text">'+i.phone+'</span><span class="bx-messenger-popup-menu-right"></span></div>'});if(i.href)n.href=i.href;t.push(n)}else{var a=i.attrs?i.attrs:{};a.title=i.title?i.title:"";a.href=i.href?i.href:"";a.target=i.target?i.target:a.href.startsWith("http")?"_blank":"";a["data-params"]=i.dataParams?JSON.stringify(i.dataParams):"";var n=BX.create("a",{props:{className:"bx-messenger-popup-menu-item"+(i.bold?" bx-messenger-popup-menu-item-bold":"")+(i.slim?" bx-messenger-popup-menu-item-slim":"")+(i.disabled?" bx-messenger-popup-menu-item-disabled":"")+(i.restricted?" bx-messenger-popup-menu-item-restricted":"")+(BX.type.isNotEmptyString(i.className)?" "+i.className:"")},attrs:a,events:i.onclick&&BX.type.isFunction(i.onclick)?{click:i.onclick}:null,dataset:i.dataset?i.dataset:null,html:'<span class="bx-messenger-popup-menu-item-left"></span>'+(i.icon?'<span class="bx-messenger-popup-menu-item-icon '+i.icon+'"></span>':"")+(i.restricted?'<span class="tariff-lock"></span>':"")+'<span class="bx-messenger-popup-menu-item-text">'+i.text+'</span><span class="bx-messenger-popup-menu-right"></span>'});if(i.href)n.href=i.href;t.push(n)}}return t};BX.MessengerChat.prototype.storageSet=function(e){if(e.key=="ims"){if(this.BXIM.settings.sendByEnter!=e.value.sendByEnter&&this.popupMessengerTextareaSendType)this.popupMessengerTextareaSendType.innerHTML=this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter";if(this.BXIM.settings.sendByEnter!=e.value.sendByEnter&&this.popupMessengerTextareaSendType)this.popupMessengerTextareaSendType.innerHTML=this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter";BX.MessengerCommon.drawTab(this.currentTab,true);this.BXIM.settings=e.value}else if(e.key=="mus2"){this.updateState(true,false)}else if(e.key=="musl"){this.updateStateLight(true,false)}else if(e.key=="mms"){this.setStatus(e.value,false)}else if(e.key=="mhtl"){this.hideTopLine(false)}else if(e.key=="mct"){}else if(e.key=="mrlr"){BX.MessengerCommon.recentListHide(e.value.userId,false)}else if(e.key=="mrd"){}else if(e.key=="mrm"){BX.MessengerCommon.readMessage(e.value,false,false)}else if(e.key=="mcl"){BX.MessengerCommon.leaveFromChat(e.value,false)}else if(e.key=="mclk"){this.kickFromChat(e.value.chatId,e.value.userId)}else if(e.key=="mes"){this.BXIM.settings.enableSound=e.value}else if(e.key=="mti"){if(e.value>this.messageTmpIndex)this.messageTmpIndex=e.value}else if(e.key=="msm2"){if(this.message[e.value.id])return;e.value.date=new Date(e.value.date);e.value.textOriginal=e.value.text;e.value.text=BX.MessengerCommon.prepareText(e.value.text,true,true,true);this.message[e.value.id]=e.value;if(this.history[e.value.recipientId])this.history[e.value.recipientId].push(e.value.id);else this.history[e.value.recipientId]=[e.value.id];if(this.showMessage[e.value.recipientId])this.showMessage[e.value.recipientId].push(e.value.id);else this.showMessage[e.value.recipientId]=[e.value.id];BX.MessengerCommon.drawTab(e.value.recipientId,true)}else if(e.key=="mru2"&&!this.desktop.ready()){BX.MessengerCommon.recentListUpdate(e.value.recent,e.value.counters,"close");BX.MessengerCommon.recentListRedraw()}else if(e.key=="uss"){this.updateStateStep=parseInt(e.value)}else if(e.key=="mum"){e.value.message.date=new Date(e.value.message.date);this.message[e.value.message.id]=e.value.message;if(this.showMessage[e.value.userId]){this.showMessage[e.value.userId].push(e.value.message.id);this.showMessage[e.value.userId]=BX.util.array_unique(this.showMessage[e.value.userId])}else this.showMessage[e.value.userId]=[e.value.message.id];BX.MessengerCommon.drawMessage(e.value.userId,e.value.message,this.currentTab==e.value.userId)}else if(e.key=="muum"){BX.MessengerCommon.changeUnreadMessage(e.value,false)}else if(e.key=="mcam"&&!this.BXIM.ppServerStatus){if(this.popupMessenger!=null&&!this.BXIM.callController.hasActiveCall())this.popupMessenger.close()}};BX.MessengerChat.prototype.checkRecentNeedLoad=function(e,t){if(typeof e==="undefined"){e=this.popupContactListElements}if(typeof t==="undefined"){t=this.recentList}if(!t||this.linesList||!this.recentLoadMore||this.recentLoadWait||!e||!e.scrollHeight){return false}if(e.scrollTop>=e.scrollHeight-e.offsetHeight*2){return true}return false};BX.MessengerChat.prototype.recentListLoadMore=function(){if(this.recentLoadWait){return true}this.recentLoadWait=true;BX.rest.callMethod("im.recent.list",{SKIP_NOTIFICATION:"Y",SKIP_OPENLINES:BX.MessengerCommon.isLinesOperator()?"Y":"N",LAST_MESSAGE_DATE:this.recentLastMessageUpdateDate}).then(function(e){var t=e.data();this.recentLoadMore=!!t.hasMore;this.recentLastMessageUpdateDate=t.items.length>0?t.items.slice(-1)[0].message.date:"";this.recentLoadWait=false;if(t.items.length>0){t.items.forEach(function(e){e=BX.MessengerCommon.recentListElementFormat(e)}.bind(this));var s=this.BXIM.messenger.recent.map((function(e){return e.id}));this.BXIM.messenger.recent=this.BXIM.messenger.recent.concat(t.items.filter((function(e){return s.indexOf(e.id)==-1})));BX.MessengerCommon.recentListBirthdayApply();this.updateMessageCount()}BX.MessengerCommon.recentListRedraw();return true}.bind(this)).catch(function(e){setTimeout(function(){this.recentLoadWait=false}.bind(this),4e3);BX.UI.Notification.Center.notify({content:BX.message("IM_M_LIST_ERROR"),autoHideDelay:4e3})}.bind(this));return true};BX.MessengerChat.prototype.linesShowPromo=function(){clearTimeout(this.linesShowPromoTimeout);this.linesShowPromoTimeout=null;if(!this.BXIM.messenger.openLinesFlag){return false}if(this.popupMessengerTextarea.disabled){this.linesShowPromoTimeout=setTimeout(this.linesShowPromo.bind(this),5e3);return true}BX.MessengerPromo.show("ol:crmform:17092021:web",this.BXIM.messenger.popupMessengerCrmButton,{offsetLeft:15})};BX.MessengerChat.prototype.linesGetList=function(){if(this.linesListWait){return true}this.linesListWait=true;BX.rest.callMethod("im.recent.get",{ONLY_OPENLINES:"Y"}).then(function(e){this.linesListWait=false;this.linesListLoad=true;this.linesLastUpdate=e.time().date_start;var t=e.data();if(t.length<=0){BX.MessengerCommon.recentListRedraw();return true}this.recent=this.recent.filter((function(e){return!e.lines}));e.data().forEach(function(e){this.recent.push(BX.MessengerCommon.recentListElementFormat(e))}.bind(this));BX.MessengerCommon.recentListRedraw()}.bind(this)).catch(function(e){this.linesListWait=false;BX.MessengerWindow.changeTab("im",true);BX.UI.Notification.Center.notify({content:BX.message("IM_M_LIST_ERROR"),autoHideDelay:4e3})}.bind(this));return true};BX.MessengerChat.prototype.linesVoteHeadDialog=function(e,t,s){s=s||false;var i=e.getAttribute("data-rating")||0;var n=BX.MessengerCommon.linesVoteHeadNodes(t,i,true,s?null:e);if(s)return n;this.tooltip(e,n,{offsetTop:10,offsetLeft:12,bindOptions:{position:"bottom"}});return true};BX.MessengerChat.prototype.linesVoteAndCommentHeadDialog=function(e,t,s,i){if(!s){s=null}if(!i){i=null}if(this.linesCommentHeadAdd)this.linesCommentHeadAdd(s,i,e);return true};BX.MessengerChat.prototype.linesOpenHistory=function(e){BX.MessengerCommon.linesGetSessionHistory(e)};BX.MessengerChat.prototype.linesShowHistory=function(e,t){if(this.popupMessengerConnectionStatusState!="online")return false;if(this.historyWindowBlock)return false;if(this.popupHistory!=null)this.popupHistory.destroy();if(!e)return false;var s=this.BXIM.disk.enable;s=false;this.popupHistoryPanel=null;var i=this.redrawHistoryPanel("chat"+e,e,{drawLinesJoin:t.CAN_JOIN,drawLinesVote:t.CAN_VOTE_HEAD,sessionVoteHead:t.SESSION_VOTE_HEAD,sessionCommentHead:t.SESSION_COMMENT_HEAD,sessionId:t.SESSION_ID});this.popupHistoryElements=BX.create("div",{props:{className:"bx-messenger-history"+(s?" bx-messenger-history-with-disk":"")+(BX.browser.IsMac()?"":" bx-messenger-custom-scroll")},children:[this.popupHistoryPanel=BX.create("div",{props:{className:"bx-messenger-panel-wrap"},children:i}),BX.create("div",{props:{className:"bx-messenger-history-types"},children:[BX.create("span",{props:{className:"bx-messenger-history-type bx-messenger-history-type-message"},children:[this.popupHistoryItems=BX.create("div",{props:{className:"bx-messenger-history-items"},style:{height:this.popupHistoryItemsSize+"px"},children:[this.popupHistoryBodyWrap=BX.create("div",{props:{className:"bx-messenger-history-items-wrap"}})]})]}),BX.create("span",{props:{className:"bx-messenger-history-type bx-messenger-history-type-disk"},children:[this.popupHistoryFilesItems=BX.create("div",{props:{className:"bx-messenger-history-items"},style:{height:this.popupHistoryItemsSize+"px"},children:[this.popupHistoryFilesBodyWrap=BX.create("div",{props:{className:"bx-messenger-history-items-wrap"}})]})]})]})]});this.popupHistory=new BX.PopupWindow("bx-messenger-popup-history",null,{className:"bx-messenger-history-lines",targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),autoHide:false,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,draggable:{restrict:true},closeByEsc:true,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupHistory=null;this.historySearch="";this.setClosingByEsc(true);this.closeMenuPopup();var e=BX.calendar.get();if(e){e.Close()}}),this)},titleBar:{content:BX.create("span",{props:{className:"bx-messenger-title"},html:BX.message("IM_M_HISTORY")})},closeIcon:{right:"13px"},content:this.popupHistoryElements,contentColor:BX.MessengerTheme.isDark()?"":"white",noAllPaddings:true});BX.addClass(this.popupHistory.popupContainer,"bx-messenger-mark");this.popupHistory.show();BX.bind(this.popupHistory.popupContainer,"click",BX.MessengerCommon.preventDefault);if(t.HISTORY["chat"+e]){t.HISTORY["chat"+e].sort(BX.delegate((function(e,t){e=parseInt(e);t=parseInt(t);if(e>t){return 1}else if(e<t){return-1}else{return 0}}),this))}this.drawHistory("chat"+e,t.HISTORY,false,false);if(s){this.drawHistoryFiles(e,t.FILES,false)}BX.bindDelegate(this.popupHistoryElements,"click",{className:"bx-messenger-ajax"},BX.delegate((function(){if(BX.proxy_context.getAttribute("data-entity")=="user"){this.openPopupExternalData(BX.proxy_context,"user",true,{ID:BX.proxy_context.getAttribute("data-userId")})}else if(BX.proxy_context.getAttribute("data-entity")=="chat"){this.openPopupExternalData(BX.proxy_context,"chat",true,{ID:BX.proxy_context.getAttribute("data-chatId")})}else if(BX.proxy_context.getAttribute("data-entity")=="openlines"){this.linesOpenHistory(BX.proxy_context.getAttribute("data-sessionId"))}else if(BX.proxy_context.getAttribute("data-entity")=="network"){this.openMessenger("network"+BX.proxy_context.getAttribute("data-networkId"))}else if(BX.proxy_context.getAttribute("data-entity")=="date"){this.openPopupMenu(BX.proxy_context,"shareMenu")}else if(BX.proxy_context.getAttribute("data-entity")=="phoneCallHistory"){this.openPopupExternalData(BX.proxy_context,"phoneCallHistory",true,{ID:BX.proxy_context.getAttribute("data-historyID")})}}),this));if(this.disk.enable){BX.bindDelegate(this.popupHistoryFilesBodyWrap,"click",{className:"bx-messenger-file-menu"},BX.delegate((function(e){var t=BX.proxy_context.parentNode.parentNode.getAttribute("data-fileId");var s=BX.proxy_context.parentNode.parentNode.getAttribute("data-chatId");this.openPopupMenu(BX.proxy_context,"historyFileMenu",true,{fileId:t,chatId:s});return BX.PreventDefault(e)}),this))}};BX.MessengerChat.prototype.linesLivechatFormShow=function(e,t,s){return false};BX.MessengerChat.prototype.linesLivechatFormHide=function(){return this.linesLivechatFormShow()};BX.MessengerChat.prototype.linesOpenMessenger=function(e,t){t=t||{};BX.MessengerCommon.linesOpenSession(e,t)};BX.MessengerChat.prototype.linesCreateLead=function(){var e=this.getChatId();var t=BX.MessengerCommon.linesGetSession(this.chat[e]);if(t.crm=="N"){BX.MessengerCommon.linesCreateLead(e)}};BX.MessengerChat.prototype.getOpenLineSettings=function(e){if(typeof BX.MessengerCommon.BXIM.messenger.openlines.settings!=="undefined"){var t=BX.MessengerCommon.linesGetSession(this.chat[e]);if(t&&typeof t.lineId!=="undefined"&&typeof BX.MessengerCommon.BXIM.messenger.openlines.settings[t.lineId]!=="undefined"){return BX.MessengerCommon.BXIM.messenger.openlines.settings[t.lineId]}}return{}};BX.MessengerChat.prototype.linesCloseDialog=function(){var e=this.getChatId();var t=this.getOpenLineSettings(e);if(typeof t.confirm_close==="undefined"||t.confirm_close!=="Y"){BX.MessengerCommon.linesCloseDialog(e,true)}else{this.BXIM.openConfirm(BX.message("IM_DIALOG_CLOSE_CONFIRM"),[new BX.PopupWindowButton({text:BX.message("IM_DIALOG_CLOSE_YES"),className:"popup-window-button-decline",events:{click:function(){BX.MessengerCommon.linesCloseDialog(e,true);this.popupWindow.close()}}}),new BX.PopupWindowButton({text:BX.message("IM_M_CHAT_BTN_CANCEL"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true)}};BX.MessengerChat.prototype.linesMarkAsSpam=function(e){var t=this.getChatId();var s=this.getOpenLineSettings(t);if(typeof s.confirm_close==="undefined"||s.confirm_close!=="Y"){BX.MessengerCommon.linesMarkAsSpam(t)}else{this.BXIM.openConfirm(BX.message("IM_DIALOG_SPAM_CONFIRM"),[new BX.PopupWindowButton({text:BX.message("IM_DIALOG_CLOSE_YES"),className:"popup-window-button-decline",events:{click:function(){BX.MessengerCommon.linesMarkAsSpam(t);this.popupWindow.close()}}}),new BX.PopupWindowButton({text:BX.message("IM_M_CHAT_BTN_CANCEL"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})],true)}};BX.MessengerChat.prototype.linesInterceptSession=function(){var e=this.getChatId();BX.MessengerCommon.linesInterceptSession(e)};BX.MessengerChat.prototype.linesTogglePinMode=function(){var e=this.getChatId();var t;var s=BX.MessengerCommon.linesGetSession(this.chat[e]);if(s.pin=="Y"){t="N"}else{t="Y"}BX.MessengerCommon.linesActivatePinMode(e,t)};BX.MessengerChat.prototype.linesToggleSilentMode=function(){var e=this.getChatId();var t;if(this.linesSilentMode[e]){BX.removeClass(this.popupMessengerHiddenModeButton,"bx-messenger-textarea-hidden-active");t="N"}else{BX.addClass(this.popupMessengerHiddenModeButton,"bx-messenger-textarea-hidden-active");t="Y"}this.linesSilentMode[e]=t=="Y";this.tooltip(this.popupMessengerHiddenModeButton,BX.message(t=="Y"?"IM_OL_CHAT_STEALTH_ON":"IM_OL_CHAT_STEALTH_OFF"),{offsetLeft:15,showOnce:t=="Y"?"OL_STEALTH_ON":"OL_STEALTH_OFF"})};BX.MessengerChat.prototype.linesOpenTransferDialog=function(e){if(this.BXIM.messenger.popupMessengerDialog&&BX.hasClass(this.BXIM.messenger.popupMessengerDialog,"bx-messenger-chat-load-last-message")){return false}if(this.popupTransferDialog!=null){this.popupTransferDialog.close();return false}if(this.popupChatDialog!=null){this.popupChatDialog.close();return false}BX.MessengerCommon.contactListSearchClear();this.linesTransferUser=0;var t=e.bind?e.bind:null;e.maxUsers=1;this.popupTransferDialog=new BX.PopupWindow("bx-messenger-popup-transfer",t,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:true,offsetTop:5,offsetLeft:BX.MessengerCommon.isPage()?5:-162,autoHide:true,buttons:[new BX.PopupWindowButton({text:BX.message("IM_OL_INVITE_TRANSFER"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){var e=this.getChatId();this.linesSendTransfer(e)}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_M_CHAT_BTN_CANCEL"),events:{click:BX.delegate((function(){this.popupTransferDialog.close()}),this)}})],closeByEsc:true,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){this.popupTransferDialog=null;this.popupTransferDialogContactListElements=null}),this)},content:BX.create("div",{props:{className:"bx-messenger-popup-newchat-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-popup-newchat-caption"},html:BX.message("IM_OL_TRANSFER_TEXT")}),BX.create("div",{props:{className:"bx-messenger-popup-newchat-box bx-messenger-popup-newchat-dest bx-messenger-popup-newchat-dest-even"},children:[this.popupTransferDialogDestElements=BX.create("span",{props:{className:"bx-messenger-dest-items"}}),this.popupTransferDialogContactListSearch=BX.create("input",{props:{className:"bx-messenger-input"},attrs:{type:"text",placeholder:BX.message(this.BXIM.bitrixIntranet?"IM_M_SEARCH_PLACEHOLDER_CP":"IM_M_SEARCH_PLACEHOLDER"),value:""}})]}),this.popupTransferDialogContactListElements=BX.create("div",{props:{className:"bx-messenger-popup-newchat-box bx-messenger-popup-newchat-cl bx-messenger-recent-wrap"},children:[]})]})});BX.MessengerCommon.contactListPrepareSearch("popupTransferDialogContactListElements",this.popupTransferDialogContactListElements,this.popupTransferDialogContactListSearch.value,{viewChat:false,viewOpenChat:false,viewOffline:false,viewBot:false,viewTransferOlQueue:true,viewOnlyIntranet:true,viewOfflineWithPhones:false});BX.bindDelegate(this.popupTransferDialogContactListElements,"click",{className:"bx-messenger-chatlist-more"},BX.delegate(this.toggleChatListGroup,this));if(!BX.MessengerTheme.isDark())this.popupTransferDialog.setAngle({offset:BX.MessengerCommon.isPage()?32:198});this.popupTransferDialog.show();this.popupTransferDialogContactListSearch.focus();BX.addClass(this.popupTransferDialog.popupContainer,"bx-messenger-mark");BX.bind(this.popupTransferDialog.popupContainer,"click",BX.PreventDefault);BX.bind(this.popupTransferDialogContactListSearch,"keyup",BX.delegate((function(t){if(t.keyCode==16||t.keyCode==17||t.keyCode==18||t.keyCode==20||t.keyCode==244||t.keyCode==224||t.keyCode==91)return false;if(t.keyCode==27&&this.popupTransferDialogContactListSearch.value!="")BX.MessengerCommon.preventDefault(t);if(t.keyCode==27){this.popupTransferDialogContactListSearch.value=""}if(t.keyCode==8){var s=null;var i=BX.util.objectSort(this.popupChatDialogUsers,"date","asc");for(var n=0;n<i.length;n++){s=i[n].id}if(s){delete this.popupChatDialogUsers[s];this.linesRedrawTransferDialogDest()}}if(t.keyCode==13){this.popupTransferDialogContactListSearch.value="";var a=BX.findChildByClassName(this.popupTransferDialogContactListElements,"bx-messenger-cl-item");if(a){if(this.popupTransferDialogContactListSearch.value!=""){this.popupTransferDialogContactListSearch.value=""}if(this.linesTransferUser>0){e.maxUsers=e.maxUsers+1;if(e.maxUsers>0)BX.show(this.popupTransferDialogContactListSearch);this.linesTransferUser=0}else{if(e.maxUsers>0){var o=a.getAttribute("data-userId").toString();if(o.startsWith("queue")&&!this.BXIM.messenger.openlines.canTransferToLine){BX.UI.InfoHelper.show("limit_contact_center_ol_chat_transfer");return false}e.maxUsers=e.maxUsers-1;if(e.maxUsers<=0)BX.hide(this.popupTransferDialogContactListSearch);this.linesTransferUser=o}}this.linesRedrawTransferDialogDest()}}BX.MessengerCommon.contactListPrepareSearch("popupTransferDialogContactListElements",this.popupTransferDialogContactListElements,this.popupTransferDialogContactListSearch.value,{viewChat:false,viewOpenChat:false,viewOffline:false,viewBot:false,viewTransferOlQueue:true,viewOnlyIntranet:true,viewOfflineWithPhones:false,timeout:100})}),this));BX.bindDelegate(this.popupTransferDialogDestElements,"click",{className:"bx-messenger-dest-del"},BX.delegate((function(){this.linesTransferUser=0;e.maxUsers=e.maxUsers+1;if(e.maxUsers>0)BX.show(this.popupTransferDialogContactListSearch);this.linesRedrawTransferDialogDest()}),this));BX.bindDelegate(this.popupTransferDialogContactListElements,"click",{className:"bx-messenger-cl-item"},BX.delegate((function(t){if(this.popupTransferDialogContactListSearch.value!=""){this.popupTransferDialogContactListSearch.value="";BX.MessengerCommon.contactListPrepareSearch("popupTransferDialogContactListElements",this.popupTransferDialogContactListElements,"",{viewChat:false,viewOpenChat:false,viewOffline:false,viewBot:false,viewTransferOlQueue:true,viewOnlyIntranet:true,viewOfflineWithPhones:false})}if(this.linesTransferUser){e.maxUsers=e.maxUsers+1;this.linesTransferUser=0}else{if(e.maxUsers<=0)return false;var s=BX.proxy_context.getAttribute("data-userId").toString();if(s.startsWith("queue")&&!this.BXIM.messenger.openlines.canTransferToLine){BX.UI.InfoHelper.show("limit_contact_center_ol_chat_transfer");return false}e.maxUsers=e.maxUsers-1;this.linesTransferUser=s}if(e.maxUsers<=0)BX.hide(this.popupTransferDialogContactListSearch);else BX.show(this.popupTransferDialogContactListSearch);this.linesRedrawTransferDialogDest();return BX.PreventDefault(t)}),this))};BX.MessengerChat.prototype.linesRedrawTransferDialogDest=function(){var e="";var t=0;var s=this.linesTransferUser.toString().substr(0,5)=="queue";var i=s?this.linesTransferUser.toString().substr(5):0;if(s){var n=this.linesTransferUser;for(var a=0;a<this.openlines.queue.length;a++){if(this.openlines.queue[a].id==i){n=this.openlines.queue[a].name;break}}t++;e+='<span class="bx-messenger-dest-block bx-messenger-dest-block-queue">'+'<span class="bx-messenger-dest-text">'+n+"</span>"+'<span class="bx-messenger-dest-del" data-userId="'+this.linesTransferUser+'"></span></span>'}else if(this.linesTransferUser>0){t++;e+='<span class="bx-messenger-dest-block'+(this.users[this.linesTransferUser].extranet?" bx-messenger-dest-block-extranet":"")+'">'+'<span class="bx-messenger-dest-text">'+this.users[this.linesTransferUser].name+"</span>"+'<span class="bx-messenger-dest-del" data-userId="'+this.linesTransferUser+'"></span></span>'}this.popupTransferDialogDestElements.innerHTML=e;this.popupTransferDialogDestElements.parentNode.scrollTop=this.popupTransferDialogDestElements.parentNode.offsetHeight;if(BX.util.even(t))BX.addClass(this.popupTransferDialogDestElements.parentNode,"bx-messenger-popup-newchat-dest-even");else BX.removeClass(this.popupTransferDialogDestElements.parentNode,"bx-messenger-popup-newchat-dest-even");this.popupTransferDialogContactListSearch.focus()};BX.MessengerChat.prototype.linesSendTransfer=function(e){if(this.BXIM.messenger.blockJoinChat[e])return false;if(this.chat[e]&&this.chat[e].entity_type!="LINES")return false;if(this.linesTransferUser<=0)return false;if(this.popupTransferDialog)this.popupTransferDialog.close();this.BXIM.messenger.blockJoinChat[e]=true;if(!BX.MessengerCommon.userInChat(e))BX.MessengerCommon.dialogCloseCurrent(true);else BX.MessengerCommon.dialogCloseCurrent(false);if(this.linesTransferUser.toString().substr(0,5)=="queue"){var t=this.linesTransferUser.substr(5);for(var s=0;s<this.BXIM.messenger.openlines.queue.length;s++){if(this.BXIM.messenger.openlines.queue[s].id==t){this.BXIM.messenger.openlines.queue[s].transfer_count=parseInt(this.BXIM.messenger.openlines.queue[s].transfer_count)+1}}}BX.ajax({url:this.BXIM.pathToAjax+"?LINES_TRANSFER&V="+this.BXIM.revision+"&logTag="+BX.MessengerCommon.getLogTrackingParams({name:"imopenlines.operator.transfer",dialog:BX.MessengerCommon.getDialogDataForTracking("chat"+e),data:{timTransferType:this.linesTransferUser.toString().substr(0,5)=="queue"?"queue":"user"}}),method:"POST",dataType:"json",timeout:60,data:{COMMAND:"transfer",CHAT_ID:e,TRANSFER_ID:this.linesTransferUser,IM_OPEN_LINES:"Y",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(){this.BXIM.messenger.blockJoinChat[e]=false}),this),onfailure:BX.delegate((function(){this.BXIM.messenger.blockJoinChat[e]=false}),this)})};BX.MessengerChat.prototype.linesCommentHeadAdd=function(e,t,s){if(!e){e=null}if(!t){t=null}var i=BX.proxy_context.getAttribute("data-sessionId");var n=BX.proxy_context.getAttribute("data-context");var a=BX.proxy_context;if(this.openlines){if(this.openlines.voteRatingHead){var o=this.openlines.voteRatingHead[i];if(o&&o!=null){e=o}}if(this.openlines.voteCommentHead){var r=this.openlines.voteCommentHead[i];if(r&&r!=null){t=r}}}if(this.popupRatingCommentHead){this.popupRatingCommentHead.destroy()}var l=BX.delegate((function(){var e=BX.proxy_context.getAttribute("data-rating");var t=BX.findChildren(BX("bx-messenger-popup-head-rating"),{class:"bx-lines-rating-popup-star"},true);if(t){t.forEach((function(t,s,i){if(t.getAttribute("data-rating")==e){BX.addClass(t,"bx-lines-rating-popup-star-active")}else{BX.removeClass(t,"bx-lines-rating-popup-star-active")}}))}}),this);this.popupRatingCommentHead=new BX.PopupWindow("bx-messenger-popup-head-rating",BX.proxy_context,{darkMode:BX.MessengerTheme.isDark(),targetContainer:document.body,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,lightShadow:true,bindOptions:{position:"top"},overlay:{opacity:0,backgroundColor:"#000000"},className:"bx-lines-rating-popup-window",autoHide:true,closeByEsc:true,bindOnResize:false,closeIcon:true,buttons:[new BX.PopupWindowButton({text:n==="history"?BX.message("IM_OL_COMMENT_HEAD_BUTTON_VOTE"):BX.message("IM_OL_COMMENT_HEAD_BUTTON_SAVE"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){var e=BX.findChild(BX("bx-messenger-popup-head-rating"),{class:"bx-lines-comment-head-textarea"},true);if(e){var t=e.value}if(t&&t.length>1e4){t=t.substr(0,1e4)+"..."}if(n!=="history"){var o=null;if(t!==null){a.innerText=t?t:BX.message("IM_OL_COMMENT_HEAD_ADD")}}else{var r=BX.findChild(BX("bx-messenger-popup-head-rating"),{class:"bx-lines-rating-popup-star-active"},true);if(r){var o=r.getAttribute("data-rating")}if(s&&o)s.setAttribute("data-rating",o)}if(BX("bx-messenger-popup-history")&&t!==null){var l=BX.findChildren(BX("bx-messenger-popup-history"),{class:"bx-messenger-content-item-vote-comment-edit","data-sessionId":i},true);if(l){l.forEach((function(e,s,i){e.innerText=t?t:BX.message("IM_OL_COMMENT_HEAD_ADD")}))}}if(BX("bx-messenger-popup-history")&&o!==null){var p=BX.findChildren(BX("bx-messenger-popup-history"),{class:"bx-lines-rating-box-current","data-sessionId":i},true);if(p){p.forEach((function(e,t,s){e.style.width=o*20+"%"}))}}BX.MessengerCommon.linesVoteHeadSend(i,o,t);this.popupRatingCommentHead.close()}),this)}})],events:{onPopupClose:BX.delegate((function(){BX.proxy_context.destroy()}),this),onPopupDestroy:BX.delegate((function(){this.popupRatingCommentHead=null}),this)},content:BX.create("div",{props:{className:"bx-lines-rating-popup"},children:[n!=="history"?BX.create("span",{props:{className:"bx-lines-rating-popup-im-title"},html:BX.message("IM_OL_COMMENT_HEAD")}):null,n==="history"?BX.create("div",{props:{className:"bx-lines-rating-popup-title"},children:[BX.create("div",{props:{className:"bx-lines-rating-popup-stars-title"},html:BX.message("IM_OL_VOTE")+": "}),BX.create("div",{props:{className:"bx-lines-rating-popup-stars-wrapper"},children:[BX.create("div",{attrs:{"data-rating":5,"data-sessionId":i},props:{className:"bx-lines-rating-popup-star"+(e==5?" bx-lines-rating-popup-star-active":"")},events:{click:l}}),BX.create("div",{attrs:{"data-rating":4,"data-sessionId":i},props:{className:"bx-lines-rating-popup-star"+(e==4?" bx-lines-rating-popup-star-active":"")},events:{click:l}}),BX.create("div",{attrs:{"data-rating":3,"data-sessionId":i},props:{className:"bx-lines-rating-popup-star"+(e==3?" bx-lines-rating-popup-star-active":"")},events:{click:l}}),BX.create("div",{attrs:{"data-rating":2,"data-sessionId":i},props:{className:"bx-lines-rating-popup-star"+(e==2?" bx-lines-rating-popup-star-active":"")},events:{click:l}}),BX.create("div",{attrs:{"data-rating":1,"data-sessionId":i},props:{className:"bx-lines-rating-popup-star"+(e==1?" bx-lines-rating-popup-star-active":"")},events:{click:l}})]})]}):null,BX.create("textarea",{props:{className:"bx-lines-comment-head-textarea"},html:t,attrs:{placeholder:BX.message("IM_OL_COMMENT_HEAD_TEXT"),"data-sessionId":i}})]})});BX.addClass(this.popupRatingCommentHead.popupContainer,"bx-messenger-mark");this.popupRatingCommentHead.show()};BX.MessengerChat.prototype.showNewRecent=function(){if(!this.popupContactListElementsWrap||!this.popupNewRecentWrap){return false}BX.addClass(this.popupContactListElementsWrap,"bx-messenger-recent-wrap-hidden");BX.removeClass(this.popupNewRecentWrap,"bx-messenger-new-recent-wrap-hidden")};BX.MessengerChat.prototype.hideNewRecent=function(){if(!this.popupContactListElementsWrap||!this.popupNewRecentWrap){return false}BX.removeClass(this.popupContactListElementsWrap,"bx-messenger-recent-wrap-hidden");BX.addClass(this.popupNewRecentWrap,"bx-messenger-new-recent-wrap-hidden")};BX.IM.Desktop=function(e,t){this.BXIM=e;this.initDate=new Date;this.clientVersion=false;this.markup=BX("placeholder-messanger");this.htmlWrapperHead=null;this.showNotifyId={};this.showMessageId={};this.lastSetIcon=null;this.preventEsc=0;this.videoConfList=[];this.topmostWindow=null;this.topmostWindowTimeout=null;this.topmostWindowCloseTimeout=null;this.minCallVideoWidth=320;this.minCallVideoHeight=180;this.minCallWidth=320;this.minCallHeight=35;this.minHistoryWidth=608;this.minHistoryDiskWidth=780;this.minHistoryHeight=593;this.minSettingsWidth=620;this.startSettingsHeight=BX.browser.IsMac()?448:357;this.minSettingsHeight=137;this.callToggleCount=0;if(this.BXIM.init&&BX.MessengerCommon.isPage()){BX.MessengerWindow.addTab({id:"config",title:BX.message("IM_SETTINGS"),order:150,target:false,events:{open:BX.delegate((function(e){this.BXIM.openSettings({active:BX.MessengerWindow.getCurrentTab()})}),this)}});BX.MessengerWindow.addSeparator({order:500});if(!this.BXIM.bitrix24net){BX.MessengerWindow.addTab({id:"im-lf",title:BX.message("IM_DESKTOP_GO_SITE_2").replace("#COUNTER#",""),order:550,target:false,events:{open:BX.delegate((function(){BX.MessengerWindow.browse(BX.MessengerWindow.getCurrentUrl()+this.BXIM.path.lf)}),this)}})}if(this.BXIM.animationSupport&&/Microsoft Windows NT 5/i.test(navigator.userAgent))this.BXIM.animationSupport=false;if(BX.MessengerCommon.isDesktop())this.BXIM.changeFocus(BX.desktop.windowIsFocused());if(typeof BXDesktopSystem!="undefined"){BX.bind(window,"keydown",BX.delegate((function(e){if(e.keyCode==81&&(e.ctrlKey==true||e.metaKey==true)){clearTimeout(this.forceDesktopCloseTimeout);if(this.forceDesktopClose){console.log("NOTICE: Forced exit from desktop.");BXDesktopSystem.Shutdown();return true}console.log("NOTICE: Prevent forced exit from the desktop.");this.forceDesktopClose=true;this.forceDesktopCloseTimeout=setTimeout(function(){this.forceDesktopClose=false}.bind(this),3e3)}}),this))}if(this.BXIM.context=="DESKTOP"||this.BXIM.context=="POPUP-FULLSCREEN"){BX.bind(window,"keydown",BX.delegate((function(e){if(!BX.MessengerWindow.isPopupShow())return false;if(!(BX.MessengerWindow.getCurrentTab()=="im"||BX.MessengerWindow.getCurrentTab()=="notify"||BX.MessengerWindow.getCurrentTab()=="im-phone"||BX.MessengerWindow.getCurrentTab()=="im-ol"))return false;if(e.keyCode==27){if(this.preventEsc>0){}else if(this.messenger.popupSmileMenu){this.messenger.popupSmileMenu.destroy()}else if(BX.MessengerSupport24.isPopupShown()){BX.MessengerSupport24.closePopup()}else if(this.disk.isFilePopupShown()){this.disk.closeFilePopup()}else if(this.messenger.popupPopupMenu){this.messenger.popupPopupMenu.destroy()}else if(this.messenger.popupChatDialog&&this.messenger.popupChatDialogContactListSearch.value.length>=0){this.messenger.popupChatDialogContactListSearch.value=""}else if(this.BXIM.extraOpen){this.messenger.extraClose(true)}else if(this.messenger.renameChatDialogInput&&this.messenger.renameChatDialogInput.value.length>0){this.messenger.renameChatDialogInput.value=BX.util.htmlspecialcharsback(this.messenger.chat[this.messenger.currentTab.toString().substr(4)].name);this.messenger.popupMessengerTextarea.focus()}else if(this.messenger.popupContactListSearchInput&&(this.messenger.popupContactListSearchInput.value.length>0||this.messenger.chatList)){BX.MessengerCommon.contactListSearch({keyCode:27});this.messenger.popupMessengerTextarea.focus()}else if(this.BXIM.callController.hasActiveCall()){}else if(this.BXIM.callController.feedbackPopup){this.BXIM.callController.feedbackPopup.destroy()}else{if(BX.util.trim(this.messenger.popupMessengerEditTextarea.value).length>0){this.messenger.editMessageCancel()}else if(BX.util.trim(this.messenger.popupMessengerTextarea.value).length<=0){this.messenger.textareaHistory[this.messenger.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.messenger.popupMessengerTextarea.value="";if(BX.MessengerCommon.isDesktop()){BX.desktop.windowCommand("hide")}else if(this.BXIM.context=="DESKTOP"&&this.messenger.popupMessenger){this.messenger.popupMessenger.destroy()}}else if(e.shiftKey){this.messenger.textareaHistory[this.messenger.currentTab]="";BX.MessengerProxy.clearTextareaHistory(this.currentTab);this.messenger.popupMessengerTextarea.value=""}}}else if(e.altKey==true){if(e.keyCode==49||e.keyCode==50||e.keyCode==51||e.keyCode==52||e.keyCode==53||e.keyCode==54||e.keyCode==55||e.keyCode==56||e.keyCode==57){this.messenger.openMessenger(this.messenger.recent[parseInt(e.keyCode)-49].id);BX.PreventDefault(e)}else if(e.keyCode==48){this.BXIM.openContactList();BX.PreventDefault(e)}}}),this))}if(BX.MessengerCommon.isDesktop()){BX.desktop.syncPause(false);BX.desktop.addCustomEvent("bxImClickNewMessage",BX.delegate((function(e){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");this.BXIM.openMessenger(e)}),this));BX.desktop.addCustomEvent("bxImClickCloseMessage",BX.delegate((function(e){}),this));BX.desktop.addCustomEvent("bxImClickCloseNotify",BX.delegate((function(e){this.BXIM.notify.viewNotify(e)}),this));BX.desktop.addCustomEvent("bxImClickNotify",BX.delegate((function(e,t){BX.desktop.windowCommand("show");if(t){BX.MessengerCommon.openLink(t)}else{BX.desktop.changeTab("notify");this.BXIM.openNotify()}}),this));BX.desktop.addCustomEvent("bxCallDecline",BX.delegate((function(){var e=this.webrtc.callVideo;this.webrtc.callSelfDisabled=true;this.webrtc.callCommand(this.webrtc.callChatId,"decline",{ACTIVE:this.webrtc.callActive?"Y":"N",INITIATOR:this.webrtc.initiator?"Y":"N"});this.BXIM.playSound("stop");this.webrtc.callOverlayClose()}),this));BX.desktop.addCustomEvent("bxPhoneAnswer",BX.delegate((function(){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");this.BXIM.stopRepeatSound("ringtone");this.webrtc.phoneIncomingAnswer();this.closeTopmostWindow()}),this));BX.desktop.addCustomEvent("bxPhoneSkip",BX.delegate((function(){this.webrtc.phoneCallFinish();this.webrtc.callAbort();this.webrtc.callOverlayClose()}),this));BX.desktop.addCustomEvent("bxCallOpenDialog",BX.delegate((function(){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");if(this.BXIM.dialogOpen){if(this.webrtc.callOverlayUserId>0){this.messenger.openChatFlag=false;BX.MessengerCommon.openDialog(this.webrtc.callOverlayUserId,false,false)}else{this.messenger.openChatFlag=true;BX.MessengerCommon.openDialog("chat"+this.webrtc.callOverlayChatId,false,false)}}else{if(this.webrtc.callOverlayUserId>0){this.messenger.openChatFlag=false;this.messenger.currentTab=this.webrtc.callOverlayUserId}else{this.messenger.openChatFlag=true;this.messenger.currentTab="chat"+this.webrtc.callOverlayChatId}this.messenger.extraClose(true,false)}this.webrtc.callOverlayToggleSize(false)}),this));BX.desktop.addCustomEvent("bxConferenceLoadComplete",BX.delegate((function(){this.messenger.updateMessageCount(false)}),this));BX.desktop.addCustomEvent("bxConferenceOpenChat",BX.delegate((function(e){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");this.messenger.openMessenger(e)}),this));BX.desktop.addCustomEvent("bxConferenceOpenProfile",BX.delegate((function(e){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");var t=BX.MessengerCommon.getUserParam(e).profile;BX.SidePanel.Instance.open(t)}),this));BX.desktop.addCustomEvent("bxCallMuteMic",BX.delegate((function(){if(this.webrtc.phoneCurrentCall)this.webrtc.phoneToggleAudio();else this.webrtc.toggleAudio();var e=BX.findChildByClassName(BX("bx-messenger-call-overlay-button-mic"),"bx-messenger-call-overlay-button-mic");if(e)BX.toggleClass(e,"bx-messenger-call-overlay-button-mic-off")}),this));BX.desktop.addCustomEvent("bxCallAnswer",BX.delegate((function(e,t,s,i){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");this.webrtc.callActive=true;BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_ANSWER&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"answer",CHAT_ID:e,CALL_TO_GROUP:i?"Y":"N",RECIPIENT_ID:this.callUserId,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(){this.webrtc.callDialog()}),this)})}),this));BX.desktop.addCustomEvent("bxCallJoin",BX.delegate((function(e,t,s,i){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");this.webrtc.callAbort();this.webrtc.callOverlayClose(false);this.webrtc.callInvite(i?"chat"+e:t,s)}),this));BX.desktop.addCustomEvent("bxImClearHistory",BX.delegate((function(e){this.messenger.history[e]=[];this.messenger.showMessage[e]=[];if(this.BXIM.init)BX.MessengerCommon.drawTab(e)}),this));BX.desktop.addCustomEvent("bxSaveColor",BX.delegate((function(e){BX.MessengerCommon.setColor(e.color,e.chatId)}),this));BX.desktop.addCustomEvent("bxImClickConfirmNotify",BX.delegate((function(e){delete this.BXIM.notify.notify[e];delete this.BXIM.notify.unreadNotify[e];delete this.BXIM.notify.flashNotify[e];this.BXIM.notify.updateNotifyCount(false);if(this.BXIM.openNotify)this.BXIM.notify.openNotify(true,true)}),this));BX.desktop.addCustomEvent("BXUserAway",BX.delegate(this.onAwayAction,this));BX.desktop.addCustomEvent("BXApplicationClick",BX.delegate(this.onApplicationClick,this));BX.desktop.addCustomEvent("BXWakeAction",BX.delegate(this.onWakeAction,this));BX.desktop.addCustomEvent("BXForegroundChanged",BX.delegate((function(e){clearTimeout(this.BXIM.windowFocusTimeout);this.BXIM.windowFocusTimeout=setTimeout(BX.delegate((function(){this.BXIM.changeFocus(e);if(this.BXIM.isFocus()&&BX.MessengerCommon.getCounter(this.messenger.currentTab)){BX.MessengerCommon.readMessage(this.messenger.currentTab)}}),this),e?500:0)}),this));BX.desktop.addCustomEvent("BXTopmostMoved",BX.delegate((function(e,t){e=parseInt(e);t=parseInt(t);if(e>=0&&t>=0){BXDesktopSystem.StoreSettings("global_topmost_x",""+e);BXDesktopSystem.StoreSettings("global_topmost_y",""+t)}}),this));BX.desktop.addCustomEvent("BXTrayMenu",BX.delegate((function(){var t=e.notify.getCounter("**");var s=e.notify.getCounter("im_notify");var i=e.notify.getCounter("im_message");BX.desktop.addTrayMenuItem({Id:"messenger",Order:100,Title:(BX.message("IM_DESKTOP_OPEN_MESSENGER")||"").replace("#COUNTER#",i>0?"("+i+")":""),Callback:function(){BX.desktop.windowCommand("show");BX.desktop.changeTab("im");e.messenger.openMessenger(e.messenger.currentTab)},Default:true});BX.desktop.addTrayMenuItem({Id:"notify",Order:120,Title:(BX.message("IM_DESKTOP_OPEN_NOTIFY")||"").replace("#COUNTER#",s>0?"("+s+")":""),Callback:function(){BX.desktop.windowCommand("show");BX.desktop.changeTab("notify");e.notify.openNotify(false,true)}});BX.desktop.addTrayMenuItem({Id:"bdisk",Order:130,Title:BX.message("IM_DESKTOP_BDISK"),Callback:function(){if(BX.desktop.diskAttachStatus()){BX.desktop.diskOpenFolder()}else{BX.desktop.windowCommand("show");BX.desktop.changeTab("disk")}}});BX.desktop.addTrayMenuItem({Id:"site",Order:140,Title:(BX.message("IM_DESKTOP_GO_SITE_2")||"").replace("#COUNTER#",t>0?"("+t+")":""),Callback:function(){BX.desktop.browse(BX.desktop.getCurrentUrl())}});BX.desktop.addTrayMenuItem({Id:"separator1",IsSeparator:true,Order:150});BX.desktop.addTrayMenuItem({Id:"settings",Order:160,Title:BX.message("IM_DESKTOP_SETTINGS"),Callback:function(){e.openSettings()}});BX.desktop.addTrayMenuItem({Id:"separator2",IsSeparator:true,Order:1e3});BX.desktop.addTrayMenuItem({Id:"logout",Order:1010,Title:BX.message("IM_DESKTOP_LOGOUT"),Callback:function(){BX.desktop.logout(false,"tray_menu")}})}),this));BX.desktop.addCustomEvent("BXProtocolUrl",BX.delegate((function(e,t){console.log("BXProtocolUrl",e,t?JSON.stringify(t):"");t=t?t:{};if(t.bitrix24net&&t.bitrix24net=="Y"&&!this.BXIM.bitrix24net)return false;for(var s in t){t[s]=decodeURIComponent(t[s])}if(e=="messenger"){if(t.dialog){this.BXIM.openMessenger(t.dialog)}else if(t.chat){this.BXIM.openMessenger("chat"+t.chat)}else{this.BXIM.openMessenger()}if(t.tab){BX.MessengerWindow.changeTab(t.tab,true)}BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(e=="chat"&&t.id){this.BXIM.openMessenger("chat"+t.id);BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(e=="chat"&&t.create){this.BXIM.openMessenger();this.BXIM.messenger.openChatCreateForm(t.create);BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(e=="videoconf"){this.openVideoconf(t.code)}else if(e=="notify"){this.BXIM.openNotify({force:true});BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(e=="history"&&t.user){if(t.dialog){this.BXIM.openHistory(t.dialog)}else if(t.chat){this.BXIM.openHistory("chat"+t.chat)}BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(e=="callto"){if(t.video){this.BXIM.callTo(t.video,true);BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(t.audio){this.BXIM.callTo(t.audio,false);BX.desktop.setActiveWindow();BX.desktop.windowCommand("show")}else if(t.phone){if(t.params){this.webrtc.phoneCall(unescape(t.phone),BX.desktopUtils.decodeParamsJson(t.params))}else{this.BXIM.phoneTo(unescape(t.phone))}}}else if(e=="calllist"){if(!t.id)return;this.BXIM.startCallList(t.id,BX.desktopUtils.decodeParams(t.params))}}),this));BX.addCustomEvent("onPullEvent-webdav",(function(e,t){BX.desktop.diskReportStorageNotification(e,t)}))}BX.addCustomEvent("onPullEvent-main",BX.delegate((function(e,t){if(e=="user_counter"&&t[BX.message("SITE_ID")]){var s=[/^\*\*/,"^tasks_total$","^calendar$"];var i={};for(const e in t[BX.message("SITE_ID")]){s.map((s=>{if(e.match(s)){i[e]=parseInt(t[BX.message("SITE_ID")][e])}}))}if(Object.keys(i).length>0){this.notify.updateNotifyCounters(i)}}}),this))}if(BX.MessengerCommon.isDesktop()&&this.BXIM.init){BX.desktop.addCustomEvent("bxSaveSettings",BX.delegate((function(e){if(this.BXIM.messenger!=null){if(this.BXIM.settings.viewBirthday!=e.viewBirthday){BX.MessengerCommon.applyBirthdaySettings(e.viewBirthday)}if(this.BXIM.settings.viewCommonUsers!=e.viewCommonUsers){BX.MessengerCommon.applyViewCommonUsers(e.viewCommonUsers)}}this.BXIM.settings=e;if(this.BXIM.messenger!=null){var t=BX.MessengerWindow.currentTab=="im-ol"||BX.MessengerWindow.currentTab=="im";BX.MessengerCommon.drawTab(this.messenger.currentTab,true,0,t);BX.MessengerCommon.userListRedraw(true);if(this.BXIM.messenger.popupMessengerTextareaSendType){this.BXIM.messenger.popupMessengerTextareaSendType.innerHTML=this.BXIM.settings.sendByEnter?"Enter":BX.browser.IsMac()?"&#8984;+Enter":"Ctrl+Enter"}BX.MessengerTheme.theme=this.BXIM.settings.enableDarkTheme;this.BXIM.messenger.toggleDarkTheme()}if(this.BXIM.webrtc!=null){this.BXIM.webrtc.readDefaults()}}),this))}};BX.IM.Desktop.prototype.run=function(){return BX.MessengerCommon.isPage()};BX.IM.Desktop.prototype.ready=function(){return BX.MessengerCommon.isDesktop()};BX.IM.Desktop.prototype.getCurrentUrl=function(){if(!BX.MessengerCommon.isDesktop())return false;return BX.desktop.getCurrentUrl()};BX.IM.Desktop.prototype.enableInVersion=function(e){if(typeof BXDesktopSystem=="undefined")return false;return this.getApiVersion()>=parseInt(e)};BX.IM.Desktop.prototype.getApiVersion=function(e){if(typeof BXDesktopSystem=="undefined")return 0;if(!this.clientVersion){this.clientVersion=BXDesktopSystem.GetProperty("versionParts")}return e?this.clientVersion.join("."):this.clientVersion[3]};BX.IM.Desktop.prototype.addCustomEvent=function(e,t){if(!BX.MessengerCommon.isDesktop())return false;BX.desktop.addCustomEvent(e,t)};BX.IM.Desktop.prototype.onCustomEvent=function(e,t,s){if(!BX.MessengerCommon.isDesktop())return false;if(typeof s==="undefined"){BX.desktop.onCustomEvent(e,t)}else{BX.desktop.onCustomEvent(e,t,s)}};BX.IM.Desktop.prototype.windowCommand=function(e,t){if(!BX.MessengerCommon.isDesktop())return false;if(typeof t=="undefined")BX.desktop.windowCommand(e);else BX.desktop.windowCommand(t,e)};BX.IM.Desktop.prototype.browse=function(e){if(!BX.MessengerCommon.isDesktop())return false;BX.desktop.browse(e)};BX.IM.Desktop.prototype.drawOnPlaceholder=function(e){if(this.markup==null||!BX.type.isDomNode(e))return false;this.markup.innerHTML="";this.markup.appendChild(e)};BX.IM.Desktop.prototype.openNewNotify=function(e,t,s){if(!BX.MessengerCommon.isDesktop())return;if(t=="")return false;if(this.showNotifyId[e])return false;this.showNotifyId[e]=true;BXDesktopSystem.ExecuteCommand("notification.show.html",this.getHtmlPage(t,s,{},"im-notify-popup"))};BX.IM.Desktop.prototype.openNewMessage=function(e,t,s){if(!BX.MessengerCommon.isDesktop())return;if(t=="")return false;if(this.showMessageId[e])return false;this.showMessageId[e]=true;BXDesktopSystem.ExecuteCommand("notification.show.html",this.getHtmlPage(t,s,true,"im-notify-popup"))};BX.IM.Desktop.prototype.adjustSize=function(){documentOffsetHeight=document.body.offsetHeight;if(BX.MessengerCommon.isPage()&&this.BXIM.context=="POPUP-FULLSCREEN"&&BX.MessengerCommon.isIntranet()){if(!BX.MessengerWindow.content.parentNode||!this.BXIM.messenger.popupMessengerContent){return false}documentOffsetHeight=BX.MessengerWindow.content.offsetHeight;if(this.initHeight<=0){this.initHeight=this.BXIM.messenger.popupMessengerContent.offsetHeight}var e=documentOffsetHeight-this.initHeight;this.initHeight=documentOffsetHeight}else if(BX.MessengerCommon.isPage()){if(this.BXIM.context=="POPUP-FULLSCREEN"&&BX.hasClass(BX.MessengerWindow.popup,"bx-im-fullscreen-closed")){return false}if(this.BXIM.context=="LINES"){if(window.innerHeight<BX.MessengerWindow.minHeight){return false}}else if(BX.MessengerWindow.content){documentOffsetHeight=BX.MessengerWindow.content.offsetHeight}var e=documentOffsetHeight-this.initHeight;this.initHeight=documentOffsetHeight}else if(!BX.MessengerCommon.isDesktop()||!this.BXIM.init||!this.BXIM.messenger||!this.BXIM.notify){return false}else{if(window.innerHeight<BX.MessengerWindow.minHeight)return false;var e=documentOffsetHeight-this.initHeight;this.initHeight=documentOffsetHeight}this.BXIM.messenger.popupMessengerBodySize=Math.max(this.BXIM.messenger.popupMessengerBodySize+e,this.BXIM.messenger.popupMessengerBodySizeMin-(this.BXIM.messenger.popupMessengerTextareaSize-30));if(this.BXIM.messenger.popupMessengerBody!=null){this.BXIM.messenger.popupMessengerBody.style.height=this.BXIM.messenger.popupMessengerBodySize+"px";this.BXIM.messenger.popupMessengerBodyPanel.style.height=this.BXIM.messenger.popupMessengerBodyDialog.offsetHeight+"px";this.BXIM.messenger.redrawChatHeader()}this.BXIM.messenger.popupContactListElementsSize=Math.max(this.BXIM.messenger.popupContactListElementsSize+e,this.BXIM.messenger.popupContactListElementsSizeMin);if(this.BXIM.messenger.popupContactListElements!=null)this.BXIM.messenger.popupContactListElements.style.height=this.BXIM.messenger.popupContactListElementsSize+"px";this.BXIM.messenger.popupMessengerFullHeight=documentOffsetHeight;if(this.BXIM.messenger.popupMessengerExtra!=null)this.BXIM.messenger.popupMessengerExtra.style.height=this.BXIM.messenger.popupMessengerFullHeight+"px";this.BXIM.notify.popupNotifySize=Math.max(this.BXIM.notify.popupNotifySize+e,this.BXIM.notify.popupNotifySizeMin);if(this.BXIM.notify.popupNotifyItem!=null)this.BXIM.notify.popupNotifyItem.style.height=this.BXIM.notify.popupNotifySize+"px";if(this.BXIM.webrtc.callOverlay){this.BXIM.webrtc.callOverlay.style.transition="none";this.BXIM.webrtc.callOverlay.style.width=(this.BXIM.messenger.popupMessengerExtra.style.display=="block"?this.BXIM.messenger.popupMessengerExtra.offsetWidth-1:this.BXIM.messenger.popupMessengerDialog.offsetWidth-1)+"px";this.BXIM.webrtc.callOverlay.style.height=this.BXIM.messenger.popupMessengerFullHeight-1+"px"}if(this.BXIM.messenger.chatCreateFormBody){BX.style(this.BXIM.messenger.chatCreateFormBody,"height",this.BXIM.messenger.popupMessengerBodySize+"px")}if(this.BXIM.messenger.popupCreateChatTextarea){BX.style(this.BXIM.messenger.popupCreateChatTextarea,"height",this.BXIM.messenger.popupMessengerTextareaSize+"px")}this.BXIM.messenger.closeMenuPopup();if(BX.MessengerCommon.isDesktop()){clearTimeout(this.BXIM.adjustSizeTimeout);this.BXIM.adjustSizeTimeout=setTimeout(BX.delegate((function(){this.BXIM.setLocalConfig("global_msz_v2",{wz:this.BXIM.messenger.popupMessengerFullWidth,ta2:this.BXIM.messenger.popupMessengerTextareaSize,b:this.BXIM.messenger.popupMessengerBodySize,cl:this.BXIM.messenger.popupContactListSize,hi:this.BXIM.messenger.popupHistoryItemsSize,fz:this.BXIM.messenger.popupMessengerFullHeight,ez:this.BXIM.messenger.popupContactListElementsSize,nz:this.BXIM.notify.popupNotifySize,hf:this.BXIM.messenger.popupHistoryFilterVisible,dw:window.innerWidth,dh:window.innerHeight,place:"desktop"});if(this.BXIM.webrtc.callOverlay)this.BXIM.webrtc.callOverlay.style.transition=""}),this),500)}return true};BX.IM.Desktop.prototype.autoResize=function(e){if(!BX.MessengerCommon.isDesktop())return;BX.desktop.resize()};BX.IM.Desktop.prototype.openSettings=function(e,t,s){if(!BX.MessengerCommon.isDesktop())return false;s=s||{};if(s.minSettingsWidth)this.minSettingsWidth=s.minSettingsWidth;if(s.minSettingsHeight)this.minSettingsHeight=s.minSettingsHeight;BX.desktop.createWindow("settings",BX.delegate((function(s){s.SetProperty("clientSize",{Width:this.minSettingsWidth,Height:this.startSettingsHeight});s.SetProperty("minClientSize",{Width:this.minSettingsWidth,Height:this.minSettingsHeight});s.SetProperty("resizable",false);s.SetProperty("title",BX.message("IM_SETTINGS"));s.ExecuteCommand("html.load",this.getHtmlPage(e,t,{}))}),this),true)};BX.IM.Desktop.prototype.openVideoconf=function(e){if(!BX.MessengerCommon.isDesktop()){return false}var t=null;var s=[{width:2560,height:1440},{width:2048,height:1152},{width:1920,height:1080},{width:1600,height:900},{width:1366,height:768},{width:1024,height:576}];for(var i=0;i<s.length;i++){t=s[i];if(screen.width>s[i].width&&screen.height>s[i].height){break}}this.videoConfList=this.videoConfList.filter((function(e){return!!BX.desktop.findWindow(e)}));this.videoConfList.push("videoconf"+e);BX.desktop.createWindow("videoconf"+e,BX.delegate((function(s){s.SetProperty("title",BX.message("IM_M_CALL_VIDEOCONF"));s.SetProperty("clientSize",{Width:t.width,Height:t.height});s.SetProperty("minClientSize",{Width:940,Height:400});s.SetProperty("backgroundColor","#2B3038");s.ExecuteCommand("html.load",'<script>location.href="/desktop_app/router.php?alias='+e+'&videoconf";<\/script>')}),this),true);return true};BX.IM.Desktop.prototype.showActiveVideocall=function(){this.callToggleCount++;if(this.callToggleCount%2==0){return true}if(this.BXIM.callController.hasActiveCall()&&this.BXIM.callController.callView&&this.BXIM.callController.callView.visible){this.BXIM.callController.unfold()}this.videoConfList=this.videoConfList.filter((function(e){var t=BX.desktop.findWindow(e);if(t){BX.desktop.windowCommand(t,"show")}return!!t}))};BX.IM.Desktop.prototype.openHistory=function(e,t,s){if(!BX.MessengerCommon.isDesktop())return false;BX.desktop.createWindow("history",BX.delegate((function(i){var n={chat:{},users:{},files:{}};var a=this.messenger.disk.enable;if(e.toString().substr(0,4)=="chat"){var o=e.substr(4);n["chat"][o]=this.messenger.chat[o];n["files"][o]=this.disk.files[o];for(var r=0;r<this.messenger.userInChat[o].length;r++)n["users"][this.messenger.userInChat[o][r]]=this.messenger.users[this.messenger.userInChat[o][r]]}else{o=this.messenger.userChat[e]?this.messenger.userChat[e]:0;n["userChat"]={};n["userChat"][e]=o;n["users"][e]=this.messenger.users[e];n["users"][this.BXIM.userId]=this.messenger.users[this.BXIM.userId];n["files"][o]=this.disk.files[o]}i.SetProperty("clientSize",{Width:a?this.minHistoryDiskWidth:this.minHistoryWidth,Height:this.minHistoryHeight});i.SetProperty("minClientSize",{Width:a?this.minHistoryDiskWidth:this.minHistoryWidth,Height:this.minHistoryHeight});i.SetProperty("resizable",false);i.ExecuteCommand("html.load",this.getHtmlPage(t,s,n));i.SetProperty("title",BX.message("IM_M_HISTORY"))}),this))};BX.IM.Desktop.prototype.openCallFloatDialog=function(){if(!this.BXIM.init||!BX.MessengerCommon.isDesktop()||!this.webrtc||!this.webrtc.callActive||this.topmostWindow||this.phoneTransferEnabled)return false;if(this.webrtc.callVideo&&!this.webrtc.callStreamMain)return false;if(!this.webrtc.callOverlayTitleBlock)return false;this.openTopmostWindow("callFloatDialog",'BXIM.webrtc.callFloatDialog("'+BX.util.jsencode(this.webrtc.callOverlayTitleBlock.innerHTML.replace(/<\/?[^>]+>/gi," "))+'", "'+(this.webrtc.callVideo?this.webrtc.callOverlayVideoMain.src:"")+'", '+(this.webrtc.audioMuted?1:0)+")",{},"im-desktop-call")};BX.IM.Desktop.prototype.closeCallFloatDialog=function(){if(!BX.MessengerCommon.isDesktop()||!this.topmostWindow)return false;if(this.webrtc.callActive){if(this.webrtc.callOverlayUserId>0&&this.webrtc.callOverlayUserId==this.messenger.currentTab){this.closeTopmostWindow()}else if(this.webrtc.callOverlayChatId>0&&this.webrtc.callOverlayChatId==this.messenger.currentTab.toString().substr(4)){this.closeTopmostWindow()}}else{this.closeTopmostWindow()}};BX.IM.Desktop.prototype.openTopmostWindow=function(e,t,s,i){if(!BX.MessengerCommon.isDesktop())return false;this.closeTopmostWindow();console.log("openTopmostWindow init",e,t);clearTimeout(this.topmostWindowTimeout);this.topmostWindowTimeout=setTimeout(BX.delegate((function(){if(this.topmostWindow)return false;console.log("openTopmostWindow show",e);this.topmostWindow=BXDesktopSystem.ExecuteCommand("topmost.show.html",this.getHtmlPage("",t,s,i))}),this),500)};BX.IM.Desktop.prototype.closeTopmostWindow=function(){clearTimeout(this.topmostWindowTimeout);clearTimeout(this.topmostWindowCloseTimeout);if(!this.topmostWindow)return false;console.log("closeTopmostWindow init");if(this.topmostWindow&&this.topmostWindow.document)BX.desktop.windowCommand(this.topmostWindow,"hide");this.topmostWindowCloseTimeout=setTimeout(BX.delegate((function(){if(this.topmostWindow&&this.topmostWindow.document){console.log("closeTopmostWindow close");BX.desktop.windowCommand(this.topmostWindow,"close");this.topmostWindow=null}}),this),300)};BX.IM.Desktop.prototype.getHtmlPage=function(e,t,s,i){if(!BX.MessengerCommon.isDesktop())return;e=e||"";t=t||"";i=i||"";var n=typeof s=="undefined"||typeof s!="object"?{}:s;s=typeof s!="undefined";if(e!=""&&BX.type.isDomNode(e)){e=e.outerHTML}if(t!=""&&BX.type.isDomNode(t)){t=t.outerHTML}if(t!=""){t='<script type="text/javascript">BX.ready(function(){'+t+"});<\/script>"}var a="";if(s==true){a='<script type="text/javascript">'+"BX.ready(function() {"+"BXIM = new BX.IM(null, {"+"'init': false,"+"'debug': "+this.BXIM.debug+","+"'next': "+this.BXIM.next+","+"'betaAvailable': "+this.BXIM.betaAvailable+","+"'colors' : "+(this.BXIM.colors?JSON.stringify(this.BXIM.colors):"false")+","+"'colorsHex' : "+(this.BXIM.colorsHex?JSON.stringify(this.BXIM.colorsHex):"false")+","+"'ppStatus': false,"+"'ppServerStatus': false,"+"'updateStateInterval': '"+this.BXIM.updateStateInterval+"',"+"'openChatEnable': "+this.BXIM.messenger.openChatEnable+","+"'xmppStatus': "+this.BXIM.xmppStatus+","+"'isAdmin': "+this.BXIM.isAdmin+","+"'isUtfMode': "+this.BXIM.isUtfMode+","+"'bitrixNetwork': "+this.BXIM.bitrixNetwork+","+"'bitrix24': "+this.BXIM.bitrix24+","+"'bitrix24blocked': "+this.BXIM.bitrix24blocked+","+"'bitrix24net': "+this.BXIM.bitrix24net+","+"'bitrixIntranet': "+this.BXIM.bitrixIntranet+","+"'bitrixXmpp': "+this.BXIM.bitrixXmpp+","+"'bitrixMobile': "+this.BXIM.bitrixMobile+","+"'bitrixOpenLines': "+this.BXIM.bitrixOpenLines+","+"'bitrixCrm': "+this.BXIM.bitrixCrm+","+"'desktop': "+BX.MessengerCommon.isPage()+","+"'desktopStatus': "+this.BXIM.desktopStatus+","+"'desktopVersion': "+this.BXIM.desktopVersion+","+"'language': '"+this.BXIM.language+"',"+"'settings' : "+JSON.stringify(this.BXIM.settings)+","+"'settingsNotifyBlocked' : "+JSON.stringify(this.BXIM.settingsNotifyBlocked)+","+"'settingsView' : "+JSON.stringify(this.BXIM.settingsView)+","+"'files' : "+(n.files?JSON.stringify(n.files):"{}")+","+"'notify' : "+(n.notify?JSON.stringify(n.notify):"{}")+","+"'users' : "+(n.users?JSON.stringify(n.users):"{}")+","+"'chat' : "+(n.chat?JSON.stringify(n.chat):"{}")+","+"'userChat' : "+(n.userChat?JSON.stringify(n.userChat):"{}")+","+"'userInChat' : "+(n.userInChat?JSON.stringify(n.userInChat):"{}")+","+"'hrphoto' : "+(n.hrphoto?JSON.stringify(n.hrphoto):"{}")+","+"'phoneCrm' : "+(n.phoneCrm?JSON.stringify(n.phoneCrm):"{}")+","+"'generalChatId': "+this.BXIM.messenger.generalChatId+","+"'canSendMessageGeneralChat': "+this.BXIM.messenger.canSendMessageGeneralChat+","+"'userId': "+this.BXIM.userId+","+"'userEmail': '"+this.BXIM.userEmail+"',"+"'userColor': '"+this.BXIM.userColor+"',"+"'userGender': '"+this.BXIM.userGender+"',"+"'userExtranet': "+this.BXIM.userExtranet+","+"'disk': {'enable': "+(this.disk?this.disk.enable:false)+", 'external': "+(this.disk?this.disk.external:false)+"},"+"'path' : "+JSON.stringify(this.BXIM.path)+"});"+"if (BX.SidePanel) { BX.SidePanel.Instance.anchorBinding = false; }"+"});"+"<\/script>"}if(BX.MessengerTheme.isDark()){i=i+" bx-messenger-dark"}if(BX.desktop.isPopupPageLoaded()){return'<div class="im-desktop im-desktop-popup bx-messenger-mark '+i+'"><div id="placeholder-messanger">'+e+"</div>"+a+t+"</div>"}else{if(this.htmlWrapperHead==null){this.htmlWrapperHead=document.head.outerHTML.replace(/BX\.PULL\.start\([^)]*\);/g,"")}return"<!DOCTYPE html><html>"+this.htmlWrapperHead+'<div><div class="im-desktop im-desktop-popup bx-messenger-mark '+i+'"><div id="placeholder-messanger">'+e+"</div>"+a+t+"</div></body></html>"}};BX.IM.Desktop.prototype.onAwayAction=function(e,t){BX.ajax({url:this.BXIM.pathToAjax+"?IDLE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_IDLE:"Y",IM_AJAX_CALL:"Y",IDLE:e?"Y":"N",MANUAL:t?"Y":"N",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e&&e.BITRIX_SESSID){BX.message({bitrix_sessid:e.BITRIX_SESSID})}if(e.ERROR=="AUTHORIZE_ERROR"&&BX.MessengerCommon.isDesktop()&&this.messenger.sendAjaxTry<3){this.messenger.sendAjaxTry++;BX.onCustomEvent(window,"onImError",[e.ERROR])}else if(e.ERROR=="SESSION_ERROR"&&this.messenger.sendAjaxTry<2){this.messenger.sendAjaxTry++;BX.onCustomEvent(window,"onImError",[e.ERROR,e.BITRIX_SESSID])}else{if(e.ERROR=="AUTHORIZE_ERROR"||e.ERROR=="SESSION_ERROR"){BX.onCustomEvent(window,"onImError",[e.ERROR])}}}),this)})};BX.IM.Desktop.prototype.onWakeAction=function(){BX.desktop.setIconStatus("offline");this.BXIM.messenger.toggleDarkTheme();BX.MessengerCommon.checkInternetConnection((function(){var e=BXIM.desktop.initDate;var t=new Date;if(e.getDate()+""+e.getMonth()+""+e.getFullYear()==t.getDate()+""+t.getMonth()+""+t.getFullYear()){BX.PULL.restart()}else{BX.desktop.windowReload()}}),BX.delegate((function(){BX.desktop.login()}),this),10)};BX.IM.Desktop.prototype.onApplicationClick=function(){this.showActiveVideocall();return true};BX.IM.Desktop.prototype.birthdayStatus=function(e){if(!BX.MessengerCommon.isDesktop())return false;if(typeof e!="boolean"){return this.BXIM.getLocalConfig("birthdayStatus",true)}else{this.BXIM.setLocalConfig("birthdayStatus",e);return e}};BX.IM.Desktop.prototype.isTwoWindowMode=function(){return!!BXDesktopSystem.IsTwoWindowsMode()};BX.IM.Desktop.prototype.setTwoWindowMode=function(e){if(!BX.MessengerCommon.isDesktop()){return false}if(e){if(this.isTwoWindowMode()){return true}BXDesktopSystem.V10()}else{if(!this.isTwoWindowMode()){return true}BXDesktopSystem.V8()}this.BXIM.openConfirm(BX.message("IM_M_BITRIX24_WINDOW_MODE_NOTICE"),[new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})]);return true};BX.IM.Desktop.prototype.sliderStatus=function(e){if(!(BX.MessengerCommon.isDesktop()&&BX.MessengerCommon.isSliderBindingsEnable())){return false}if(typeof e!="boolean"){return this.BXIM.getLocalConfig("sliderStatus",true)}else{this.BXIM.setLocalConfig("sliderStatus",e);if(e){(opener?opener:top).BX.SidePanel.Instance.enableAnchorBinding()}else{(opener?opener:top).BX.SidePanel.Instance.disableAnchorBinding()}return e}};BX.IM.Desktop.prototype.changeTab=function(e){return false};BX.IM.Desktop.prototype.setBrowserIconBadge=function(e,t){if(this.getApiVersion()<57){return false}if(typeof t!=="string"){t=""}if(this.lastCounter===e){return true}this.lastCounter=e;BXDesktopSystem.SetBrowserIconBadge(e,t);return true};BX.IM.Desktop.prototype.setPreventEsc=function(e){e=!!e;if(e){this.preventEsc++}else{this.preventEsc--;if(this.preventEsc<0){this.preventEsc=0}}if(this.BXIM.messenger&&this.BXIM.messenger.popupMessenger){this.BXIM.messenger.popupMessenger.setClosingByEsc(this.preventEsc<=0)}};BX.PopupWindowDesktop=function(){this.closeByEsc=true;this.setClosingByEsc=function(e){this.closeByEsc=e};this.close=function(){if(!this.closeByEsc){return}if(BX.MessengerCommon.isDesktop()){BX.desktop.windowCommand("close")}else if(BX.MessengerCommon.isPage()){BX.MessengerWindow.closePopup()}};this.destroy=function(){if(!this.closeByEsc){return}if(BX.MessengerCommon.isDesktop()){BX.desktop.windowCommand("close")}else if(BX.MessengerCommon.isPage()){BX.MessengerWindow.closePopup()}}};BX.IM.WebRTC=function(e,t){if(this.parent){this.parent.constructor.apply(this,arguments)}this.BXIM=e;this.screenSharing=new BX.IM.ScreenSharing(this,t);this.panel=t.panel;this.desktop=t.desktopClass;this.callToPhone=false;this.callOverlayFullScreen=false;this.callToMobile=false;this.callAspectCheckInterval=null;this.callAspectHorizontal=true;this.callInviteTimeout=null;this.callNotify=null;this.callAllowTimeout=null;this.callDialogAllow=null;this.callOverlay=null;this.callOverlayMinimize=null;this.callOverlayChatId=0;this.callOverlayUserId=0;this.callSelfDisabled=false;this.callOverlayPhotoSelf=null;this.callOverlayPhotoUsers={};this.callOverlayVideoUsers={};this.callOverlayVideoPhotoUsers={};this.callOverlayPhotoCompanion=null;this.callOverlayPhotoMini=null;this.callOverlayVideoMain=null;this.callOverlayVideoReserve=null;this.callOverlayVideoSelf=null;this.callOverlayProgressBlock=null;this.callOverlayStatusBlock=null;this.callOverlayButtonsBlock=null;this.callView=null;this.phoneEnabled=t.phoneEnabled;this.phoneCanPerformCalls=t.phoneCanPerformCalls;this.phoneDeviceActive=t.phoneDeviceActive=="Y";this.phoneCanCallUserNumber=t.phoneCanCallUserNumber=="Y";this.phoneCallerID="";this.phoneLogin="";this.phoneServer="";this.phoneCheckBalance=false;this.phoneCallHistory={};this.phoneHistory=this.BXIM.getLocalConfig("phone-history")||[];this.phoneSDKinit=false;this.phoneMicAccess=false;this.phoneIncoming=false;this.phoneCallId="";this.phoneCallTime=0;this.phoneCallConfig={};this.phoneCallExternal=false;this.phoneCallDevice="WEBRTC";this.phonePortalCall=false;this.phoneNumber="";this.phoneFullNumber="";this.phoneNumberUser="";this.phoneParams={};this.phoneAPI=null;this.phoneDisconnectAfterCallFlag=true;this.phoneCurrentCall=null;this.phoneCrm=t.phoneCrm?t.phoneCrm:{};this.phoneMicMuted=false;this.phoneHolded=false;this.phoneRinging=0;this.phoneTransferEnabled=false;this.phoneTransferTargetType="user";this.phoneTransferTargetId="";this.phoneTransferCallId="";this.phoneConnectedInterval=null;this.phoneDeviceDelayTimeout=null;this.phoneLines=null;this.phoneDefaultLineId=t.phoneDefaultLineId||false;this.phoneAvailableLines=t.phoneAvailableLines||[];this.phoneCallView=false;this.foldedPhoneCallView=BX.FoldedCallView.getInstance();this.callListId=0;this.lastCallListCallParams=null;this.debug=false;this.phoneKeypad=null;this.popupTransferDialog=null;this.popupTransferDialogDestElements=null;this.popupTransferDialogContactListSearch=null;this.popupTransferDialogContactListElements=null;if(this.setTurnServer){this.setTurnServer({turnServer:t.turnServer||"",turnServerFirefox:t.turnServerFirefox||"",turnServerLogin:t.turnServerLogin||"",turnServerPassword:t.turnServerPassword||""})}this.readDefaults();this.restoreFoldedCallView();var s=false;if(this.enabled){s=true}else{if(!this.BXIM.desktopStatus){this.initAudio(true)}}if(this.phoneEnabled&&(this.phoneDeviceActive||this.enabled)){s=true}BX.MessengerCommon.pullPhoneEvent();if(s){this.initAudio();if(BX.browser.SupportLocalStorage()){BX.addCustomEvent(window,"onLocalStorageSet",this.storageSet.bind(this))}BX.garbage((function(){if(this.callInit&&!this.callActive){if(this.initiator){this.callCommand(this.callChatId,"decline",{ACTIVE:this.callActive?"Y":"N",INITIATOR:this.initiator?"Y":"N"},false);this.callAbort()}}if(this.callActive){if(this.phoneCallView&&(this.phoneCallExternal||this.phoneCallDevice==="PHONE")){if(this.phoneCallView.canBeUnloaded()){BX.localStorage.set("bxim-folded-call-card",{phoneCallId:this.phoneCallId,phoneCrm:this.phoneCrm,phoneCallDevice:this.phoneCallDevice,phoneCallExternal:this.phoneCallExternal,callView:this.phoneCallView.getState()},15)}}else{this.callCommand(this.callChatId,"errorAccess",{},false)}}this.callOverlayClose()}),this)}this.initialize()};if(BX.inheritWebrtc)BX.inheritWebrtc(BX.IM.WebRTC);BX.IM.WebRTC.prototype.ready=function(){return this.enabled};BX.IM.WebRTC.prototype.initialize=function(){BX.addCustomEvent("onImDialogOpen",this.onImDialogOpen.bind(this));BX.addCustomEvent("onPullEvent-im",this.onPullEvent.bind(this))};BX.IM.WebRTC.prototype.onImDialogOpen=function(e){if(this.callView)this.callOverlayToggleSize()};BX.IM.WebRTC.prototype.onPullEvent=function(e,t){if(e!="call")return;this.log("Incoming",t.command,t.senderId,JSON.stringify(t));var s={join:this.onPullEventJoin.bind(this),invite:this.onPullEventInvite.bind(this),invite_join:this.onPullEventInvite.bind(this),invite_user:this.onPullEventInviteUser.bind(this),wait:this.onPullEventWait.bind(this),answer:this.onPullEventAnswer.bind(this),ready:this.onPullEventReady.bind(this),errorAccess:this.onPullEventErrorAccess.bind(this),reconnect:this.onPullEventReconnect.bind(this),signaling:this.onPullEventSignaling.bind(this),waitTimeout:this.onPullEventWaitTimeout.bind(this),busy_self:this.onPullEventBusySelf.bind(this),callToPhone:this.onPullEventCallToPhone.bind(this),busy:this.onPullEventBusy.bind(this),decline:this.onPullEventDecline.bind(this),answer_self:this.onPullEventAnswerSelf.bind(this),decline_self:this.onPullEventDeclineSelf.bind(this)};if(s[t.command]){s[t.command].call(this,t)}else{console.log("Unknown call command "+t.command)}};BX.IM.WebRTC.prototype.onPullEventJoin=function(e){for(var t in e.users){e.users[t].last_activity_date=e.users[t].last_activity_date?new Date(e.users[t].last_activity_date):false;e.users[t].mobile_last_date=e.users[t].mobile_last_date?new Date(e.users[t].mobile_last_date):false;e.users[t].idle=e.users[t].idle?new Date(e.users[t].idle):false;e.users[t].absent=e.users[t].absent?new Date(e.users[t].absent):false;this.messenger.users[t]=e.users[t]}for(var t in e.hrphoto)this.messenger.hrphoto[t]=e.hrphoto[t];if(this.callInit||this.callActive){setTimeout(BX.delegate((function(){BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_BUSY&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"busy",CHAT_ID:e.chatId,RECIPIENT_ID:e.senderId,VIDEO:e.video?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}),this),e.callToGroup?1e3:0)}else{if(BX.MessengerCommon.isDesktop()||!this.BXIM.desktopStatus){this.messenger.openMessenger("chat"+e.chatId);this.BXIM.repeatSound("ringtone",5e3);this.callNotifyWait(e.chatId,e.senderId,e.video,e.callToGroup,true)}if(BX.MessengerCommon.isDesktop()&&!this.BXIM.windowFocus){var s={users:{},chat:{},userInChat:{},hrphoto:{}};if(e.callToGroup){s["chat"][e.chatId]=this.messenger.chat[e.chatId];s["userInChat"][e.chatId]=this.messenger.userInChat[e.chatId]}for(var t=0;t<this.messenger.userInChat[e.chatId].length;t++){s["users"][this.messenger.userInChat[e.chatId][t]]=this.messenger.users[this.messenger.userInChat[e.chatId][t]];s["hrphoto"][this.messenger.userInChat[e.chatId][t]]=this.messenger.hrphoto[this.messenger.userInChat[e.chatId][t]]}this.desktop.openTopmostWindow("callNotifyWaitDesktop","BXIM.webrtc.callNotifyWaitDesktop("+e.chatId+",'"+e.senderId+"', "+(e.video?1:0)+", "+(e.callToGroup?1:0)+", true);",s,"im-desktop-call")}}};BX.IM.WebRTC.prototype.onPullEventInvite=function(e){console.trace("Trying to call deprecated function onPullEventInvite");return;for(var t in e.users){e.users[t].last_activity_date=e.users[t].last_activity_date?new Date(e.users[t].last_activity_date):false;e.users[t].mobile_last_date=e.users[t].mobile_last_date?new Date(e.users[t].mobile_last_date):false;e.users[t].idle=e.users[t].idle?new Date(e.users[t].idle):false;e.users[t].absent=e.users[t].absent?new Date(e.users[t].absent):false;this.messenger.users[t]=e.users[t]}for(var t in e.hrphoto)this.messenger.hrphoto[t]=e.hrphoto[t];for(var t in e.chat){e.chat[t].date_create=new Date(e.chat[t].date_create);this.messenger.chat[t]=e.chat[t]}for(var t in e.userInChat)this.messenger.userInChat[t]=e.userInChat[t];if(!this.enabled&&!this.BXIM.desktopStatus){this.callView=new BX.IM.Call.View({toUserId:this.BXIM.userId,fromUserId:e.senderId,groupCall:this.callToGroup,users:this.callToGroup?this.messenger.userInChat(e.senderId):[e.senderId],video:e.video,progress:"offline",status:BX.MessengerCommon.isDesktop()?BX.message("IM_M_CALL_ST_NO_WEBRTC_3"):BX.message("IM_M_CALL_ST_NO_WEBRTC_2"),uiState:this.BXIM.platformName==""?BX.IM.Call.UiState.Finished:BX.IM.Call.UiState.Unsupported});this.bindCallViewCallbacks();this.callView.show();this.callOverlayDeleteEvents({closeNotify:false});return}if(this.callInit||this.callActive){if(e.command=="invite"){if(this.callChatId==e.chatId){this.callCommand(e.chatId,"busy_self");this.callOverlayClose(false)}else{setTimeout(BX.delegate((function(){BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_BUSY&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"busy",CHAT_ID:e.chatId,RECIPIENT_ID:e.senderId,VIDEO:e.video?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}),this),e.callToGroup?1e3:0)}}else if(this.initiator&&this.callChatId==e.chatId){this.initiator=false;this.callDialog();BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_ANSWER&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"answer",CHAT_ID:this.callChatId,CALL_TO_GROUP:this.callToGroup?"Y":"N",RECIPIENT_ID:this.callUserId,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}}else{if(BX.MessengerCommon.isDesktop()||!this.BXIM.desktopStatus){this.BXIM.repeatSound("ringtone",5e3);this.callCommand(e.chatId,"wait");if(BX.MessengerCommon.isPage()){BX.MessengerWindow.changeTab("im")}if(e.isMobile){this.callToMobile=true}this.callNotifyWait(e.chatId,e.senderId,e.video,e.callToGroup)}if(BX.MessengerCommon.isDesktop()&&!this.BXIM.isFocus("all")){var s={users:{},chat:{},userInChat:{},hrphoto:{}};if(e.callToGroup){s["chat"][e.chatId]=this.messenger.chat[e.chatId];s["userInChat"][e.chatId]=this.messenger.userInChat[e.chatId]}for(var t=0;t<this.messenger.userInChat[e.chatId].length;t++){s["users"][this.messenger.userInChat[e.chatId][t]]=this.messenger.users[this.messenger.userInChat[e.chatId][t]];s["hrphoto"][this.messenger.userInChat[e.chatId][t]]=this.messenger.hrphoto[this.messenger.userInChat[e.chatId][t]]}this.desktop.openTopmostWindow("callNotifyWaitDesktop","BXIM.webrtc.callNotifyWaitDesktop("+e.chatId+",'"+e.senderId+"', "+(e.video?1:0)+", "+(e.callToGroup?1:0)+");",s,"im-desktop-call")}}};BX.IM.WebRTC.prototype.onPullEventInviteUser=function(e){if(!this.callInit||this.callChatId!=e.lastChatId)return;for(var t in e.users){e.users[t].last_activity_date=e.users[t].last_activity_date?new Date(e.users[t].last_activity_date):false;e.users[t].mobile_last_date=e.users[t].mobile_last_date?new Date(e.users[t].mobile_last_date):false;e.users[t].idle=e.users[t].idle?new Date(e.users[t].idle):false;e.users[t].absent=e.users[t].absent?new Date(e.users[t].absent):false;this.messenger.users[t]=e.users[t]}for(var t in e.hrphoto)this.messenger.hrphoto[t]=e.hrphoto[t];this.callChatId=e.chatId;this.callView.redraw()};BX.IM.WebRTC.prototype.onPullEventWait=function(e){if(this.callActive||!this.callInit||this.callChatId!=e.chatId)return;if(!this.callToGroup){clearTimeout(this.callDialtoneTimeout);this.callDialtoneTimeout=setTimeout(BX.delegate((function(){this.BXIM.repeatSound("dialtone",5e3)}),this),2e3)}this.callWait(e.senderId)};BX.IM.WebRTC.prototype.onPullEventAnswer=function(e){if(!this.initiator||this.callChatId!=e.chatId)return;this.callDialog();if(e.isMobile){this.callToMobile=true}};BX.IM.WebRTC.prototype.onPullEventReady=function(e){if(this.callActive&&this.callStreamSelf==null){clearTimeout(this.callAllowTimeout);this.callAllowTimeout=setTimeout(BX.delegate((function(){this.BXIM.playSound("error");this.callView.setProgress("offline");this.callCommand(this.callChatId,"errorAccess");this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callAbort(BX.message("IM_M_CALL_ST_NO_ACCESS_3"))}),this),6e4)}this.log("Opponent "+e.senderId+" ready!");this.connected[e.senderId]=true};BX.IM.WebRTC.prototype.onPullEventErrorAccess=function(e){if(this.callChatId!=e.chatId)return false;if(this.callInit&&e.callToGroup)return this.onGroupCallUserError(e.senderId);if(!this.callActive||e.callToGroup&&!e.closeConnect)return false;this.BXIM.playSound("error");this.callOverlayProgress("offline");this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callAbort(BX.message("IM_M_CALL_ST_NO_ACCESS_2"))};BX.IM.WebRTC.prototype.onPullEventReconnect=function(e){if(!this.callActive||this.callChatId!=e.chatId)return false;clearTimeout(this.pcConnectTimeout[e.senderId]);clearTimeout(this.initPeerConnectionTimeout[e.senderId]);if(this.pc[e.senderId])this.pc[e.senderId].close();delete this.pc[e.senderId];delete this.pcStart[e.senderId];if(this.callStreamMain==this.callStreamUsers[e.senderId])this.callStreamMain=null;this.callStreamUsers[e.senderId]=null;this.initPeerConnection(e.senderId)};BX.IM.WebRTC.prototype.onPullEventSignaling=function(e){if(!this.callActive||this.callChatId!=e.chatId)return false;this.signalingPeerData(e.senderId,e.peer)};BX.IM.WebRTC.prototype.onPullEventWaitTimeout=function(e){if(this.callChatId!=e.chatId)return false;if(this.callInit&&e.callToGroup)return this.onGroupCallUserError(e.senderId);if(!this.callInit||e.callToGroup&&!e.closeConnect)return false;this.callAbort();this.callOverlayClose()};BX.IM.WebRTC.prototype.onPullEventBusySelf=function(e){if(!this.callInit||this.callChatId!=e.chatId)return false;this.callAbort();this.callOverlayClose()};BX.IM.WebRTC.prototype.onPullEventCallToPhone=function(e){if(!this.callInit||this.callChatId!=e.chatId)return false;this.callAbort();this.callOverlayClose()};BX.IM.WebRTC.prototype.onPullEventBusy=function(e){if(this.callChatId!=e.chatId)return false;if(this.callInit&&e.callToGroup)return this.onGroupCallUserError(e.senderId);if(!this.callInit||e.callToGroup&&!e.closeConnect)return false;this.BXIM.playSound("error");this.callView.setProgress("offline");this.callView.setUiState(BX.Im.Call.UiState.Finished);this.callAbort(BX.message("IM_M_CALL_ST_BUSY"))};BX.IM.WebRTC.prototype.onPullEventDecline=function(e){if(this.callChatId!=e.chatId)return false;if(this.callInit&&e.callToGroup)return this.onGroupCallUserError(e.senderId);if(!this.callInit||e.callToGroup&&!e.closeConnect)return false;if(this.callInitUserId!=this.BXIM.userId||this.callActive){var t=this.callVideo;this.callOverlayStatus(BX.message("IM_M_CALL_ST_DECLINE"));this.BXIM.playSound("stop");this.callOverlayClose()}else if(this.callInitUserId==this.BXIM.userId){this.BXIM.playSound("error");this.callOverlayProgress("offline");this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callAbort(BX.message("IM_M_CALL_ST_DECLINE"))}else{this.callAbort()}};BX.IM.WebRTC.prototype.onPullEventAnswerSelf=function(e){if(this.callSelfDisabled||this.callActive)return false;this.BXIM.stopRepeatSound("ringtone");this.BXIM.stopRepeatSound("dialtone");this.callOverlayClose(true)};BX.IM.WebRTC.prototype.onPullEventDeclineSelf=function(e){if(this.callSelfDisabled||this.callChatId!=e.chatId)return false;this.BXIM.stopRepeatSound("ringtone");this.BXIM.stopRepeatSound("dialtone");this.callOverlayClose(true)};BX.IM.WebRTC.prototype.onGroupCallUserError=function(e){this.connected[e]=false;delete this.pc[e];delete this.pcStart[e];if(this.callStreamUsers[e]){this.callView.removeRemoteStream(e)}this.callView.setProgress(BX.IM.Call.UiProgress.Wait);this.callView.setStatus(BX.message(this.callToGroup?"IM_M_CALL_ST_WAIT_ACCESS_3":"IM_M_CALL_ST_WAIT_ACCESS_2"))};BX.IM.WebRTC.prototype.restoreFoldedCallView=function(){var e=this;var t=BX.localStorage.get("bxim-folded-call-card");if(!BX.type.isPlainObject(t))return;this.callActive=true;this.phoneCallId=t.phoneCallId;this.phoneCrm=t.phoneCrm;this.phoneCallDevice=t.phoneCallDevice;this.phoneCallExternal=t.phoneCallExternal;var s=t.callView;s.BXIM=this.BXIM;this.phoneCallView=new BX.PhoneCallView(t.callView);if(this.phoneCallExternal){this.phoneCallView.setUiState(BX.PhoneCallView.UiState.externalCard);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connected);this.bindPhoneViewCallbacksExternalCall(this.phoneCallView)}else{this.bindPhoneViewCallbacks(this.phoneCallView)}if(this.phoneCallExternal){BX.localStorage.set("viExternalCard",true,5);this.phoneConnectedInterval=setInterval((function(){if(e.phoneCallExternal){BX.localStorage.set("viExternalCard",true,5)}}),5e3)}setTimeout(function(){BX.MessengerCommon.phoneCommand("getCall",{CALL_ID:e.phoneCallId},true,(function(t){if(!t.FOUND||t.FOUND!=="Y"){e.phoneCallId="";e.callActive=false;e.phoneCallExternal=false;e.callSelfDisabled=false;clearInterval(e.BXIM.webrtc.phoneConnectedInterval);BX.localStorage.set("viExternalCard",false);if(e.phoneCallView){e.phoneCallView.dispose();e.phoneCallView=null}}}))}.bind(this),0)};BX.IM.WebRTC.prototype.readDefaults=function(){if(!localStorage)return;this.defaultMicrophone=localStorage.getItem("bx-im-settings-default-microphone");this.defaultCamera=localStorage.getItem("bx-im-settings-default-camera");this.defaultSpeaker=localStorage.getItem("bx-im-settings-default-speaker");this.enableMicAutoParameters=localStorage.getItem("bx-im-settings-enable-mic-auto-parameters")!=="N"};BX.IM.WebRTC.prototype.initAudio=function(e){if(e===true){this.panel.appendChild(this.BXIM.audio.error=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-error.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-error.mp3",type:"audio/mpeg"}})]}));return false}this.panel.appendChild(this.BXIM.audio.dialtone=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-dialtone.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-dialtone.mp3",type:"audio/mpeg"}})]}));this.panel.appendChild(this.BXIM.audio.ringtone=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-ringtone.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-ringtone.mp3",type:"audio/mpeg"}})]}));this.panel.appendChild(this.BXIM.audio.start=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-start.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-start.mp3",type:"audio/mpeg"}})]}));this.panel.appendChild(this.BXIM.audio.stop=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-stop.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-stop.mp3",type:"audio/mpeg"}})]}));this.panel.appendChild(this.BXIM.audio.error=BX.create("audio",{props:{className:"bx-messenger-audio"},children:[BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-error.ogg",type:"audio/ogg; codecs=vorbis"}}),BX.create("source",{attrs:{src:"/bitrix/js/im/audio/video-error.mp3",type:"audio/mpeg"}})]}));if(typeof this.BXIM.audio.stop.play=="undefined"){this.BXIM.settings.enableSound=false}};BX.IM.WebRTC.prototype.startGetUserMedia=function(e,t){clearTimeout(this.callDialtoneTimeout);this.BXIM.stopRepeatSound("ringtone");this.BXIM.stopRepeatSound("dialtone");var s=true;clearTimeout(this.callInviteTimeout);clearTimeout(this.callDialogAllowTimeout);if(s){this.callDialogAllowTimeout=setTimeout(BX.delegate((function(){this.callDialogAllowShow()}),this),1500)}this.parent.startGetUserMedia.apply(this,arguments)};BX.IM.WebRTC.prototype.onUserMediaSuccess=function(e){clearTimeout(this.callAllowTimeout);var t=this.parent.onUserMediaSuccess.apply(this,arguments);if(!t)return false;if(this.callDialogAllow)this.callDialogAllow.close();if(this.callView){this.callView.setProgress("online");this.callView.setStatus(BX.message(this.callToGroup?"IM_M_CALL_ST_WAIT_ACCESS_3":"IM_M_CALL_ST_WAIT_ACCESS_2"));this.callView.setLocalStream(this.callStreamSelf)}this.callCommand(this.callChatId,"ready");if(BX.MessengerCommon.isDesktop()&&this.BXIM.init){BX.desktop.syncPause(true)}};BX.IM.WebRTC.prototype.onUserMediaError=function(e){clearTimeout(this.callAllowTimeout);var t=this.parent.onUserMediaError.apply(this,arguments);if(!t)return false;if(this.callDialogAllow)this.callDialogAllow.close();if(this.useFallbackConstraints===false){this.useFallbackConstraints=true;this.startGetUserMedia(this.lastUserMediaParams["video"],this.lastUserMediaParams["audio"])}else{this.BXIM.playSound("error");this.callOverlayProgress("offline");this.callCommand(this.callChatId,"errorAccess");if(location.protocol.indexOf("https")===-1){this.callAbort(BX.message("IM_M_CALL_ST_NO_ACCESS_HTTPS"))}else{this.callAbort(BX.message("IM_M_CALL_ST_NO_ACCESS"))}this.callView.setUiState(BX.IM.Call.UiState.Finished)}};BX.IM.WebRTC.prototype.setLocalAndSend=function(e,t){var s=this.parent.setLocalAndSend.apply(this,arguments);if(!s)return false;BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_SIGNALING&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"signaling",CHAT_ID:this.callChatId,RECIPIENT_ID:e,PEER:JSON.stringify(t),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}});return true};BX.IM.WebRTC.prototype.onRemoteStreamAdded=function(e,t,s){if(!this.callView)return;this.callView.setUiState(BX.IM.Call.UiState.Connected);this.callView.setRemoteStream(e,this.callStreamUsers[e]);if(s){this.callView.setStatus(BX.message("IM_M_CALL_ST_ONLINE"));if(BX.MessengerCommon.isDesktop())BX.desktop.onCustomEvent("bxCallChangeMainVideo",[URL.createObjectURL(this.callStreamUsers[e])]);if(!this.BXIM.windowFocus)this.desktop.openCallFloatDialog()}if(this.initiator)this.callCommand(this.callChatId,"start",{CALL_TO_GROUP:this.callToGroup?"Y":"N",RECIPIENT_ID:e})};BX.IM.WebRTC.prototype.onRemoteStreamRemoved=function(e,t){this.callView.removeRemoteStream(e)};BX.IM.WebRTC.prototype.onIceCandidate=function(e,t){BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_SIGNALING&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"signaling",CHAT_ID:this.callChatId,RECIPIENT_ID:e,PEER:JSON.stringify(t),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})};BX.IM.WebRTC.prototype.peerConnectionError=function(e,t){if(this.callDialogAllow)this.callDialogAllow.close();if(!this.callView)return;this.callCommand(this.callChatId,"errorAccess");this.callOverlayDeleteEvents();this.callView.setProgress("offline");this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callView.setStatus(BX.message("IM_M_CALL_ST_CON_ERROR"))};BX.IM.WebRTC.prototype.peerConnectionGetStats=function(){if(this.detectedBrowser!="chrome")return false;if(this.callUserId<=0||!this.pc[this.callUserId]||!this.pc[this.callUserId].getStats||this.callToGroup||this.callToPhone)return false;this.pc[this.callUserId].getStats((function(e){console.log(e)}))};BX.IM.WebRTC.prototype.peerConnectionReconnect=function(e){var t=this.parent.peerConnectionReconnect.apply(this,arguments);if(!t)return false;BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_RECONNECT&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"reconnect",CHAT_ID:this.callChatId,RECIPIENT_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(){this.initPeerConnection(e,true)}),this)});return true};BX.IM.WebRTC.prototype.callSupport=function(e,t){t=t?t:this.messenger;var s=true;if(typeof e!="undefined"){if(parseInt(e)>0){s=t.users[e]&&t.users[e].status!="guest"&&!t.users[e].bot&&!t.users[e].network}else{if(t.chat[e.toString().substr(4)]&&t.chat[e.toString().substr(4)].type=="open"){s=false}else{s=t.userInChat[e.toString().substr(4)]&&t.userInChat[e.toString().substr(4)].length<=4}}}return this.BXIM.ppServerStatus&&this.enabled&&s};BX.IM.WebRTC.prototype.callInvite=function(e,t,s){console.trace("Trying to call deprecated function callInvite");return;if(BX.localStorage.get("viInitedCall"))return false;if(BX.MessengerCommon.isPage()&&BX.MessengerWindow.currentTab!="im"){BX.MessengerWindow.changeTab("im")}if(!this.callSupport()){if(!BX.MessengerCommon.isDesktop()){this.BXIM.openConfirm(BX.message("IM_CALL_NO_WEBRT"),[this.BXIM.platformName==""?null:new BX.PopupWindowButton({text:BX.message("IM_M_CALL_BTN_DOWNLOAD"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){window.open(BX.browser.IsMac()?"http://dl.bitrix24.com/b24/bitrix24_desktop.dmg":"http://dl.bitrix24.com/b24/bitrix24_desktop.exe","desktopApp");BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})])}return false}var i=false;if(parseInt(e)>0){if(this.messenger.users[e]&&this.messenger.users[e].status=="guest"){this.BXIM.openConfirm(BX.message("IM_CALL_USER_OFFLINE"));return false}else if(!this.messenger.users[e]){BX.MessengerCommon.getUserParam(e)}e=parseInt(e)}else{e=e.toString().substr(4);if(!this.messenger.userInChat[e]||this.messenger.userInChat[e].length<=1){return false}else if(!this.messenger.userInChat[e]||this.messenger.userInChat[e].length>4){this.BXIM.openConfirm(BX.message("IM_CALL_CHAT_LARGE"));return false}i=true}t=t==true;s=t===true&&s===true;if(!this.callActive&&!this.callInit&&e>0){this.initiator=true;this.callInitUserId=this.BXIM.userId;this.callInit=true;this.callActive=false;this.callUserId=i?0:e;this.callChatId=i?e:0;this.callToGroup=i;this.callGroupUsers=i?this.messenger.userInChat[e]:[];this.callVideo=t;this.callView=new BX.IM.Call.View({messenger:this.messenger,toUserId:e,fromUserId:this.BXIM.userId,groupCall:this.callToGroup,users:this.callToGroup?this.messenger.userInChat[e]:[e],videoCall:t,status:BX.message("IM_M_CALL_ST_CONNECT"),uiState:BX.IM.Call.UiState.Outgoing});this.bindCallViewCallbacks();this.callView.show();this.BXIM.playSound("start");BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_INVITE&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"invite",CHAT_ID:e,CHAT:i?"Y":"N",VIDEO:t?"Y":"N",IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e.ERROR==""){this.callChatId=e.CHAT_ID;for(var t in e.USERS){e.USERS[t].last_activity_date=e.USERS[t].last_activity_date?new Date(e.USERS[t].last_activity_date):false;e.USERS[t].mobile_last_date=e.USERS[t].mobile_last_date?new Date(e.USERS[t].mobile_last_date):false;e.USERS[t].idle=e.USERS[t].idle?new Date(e.USERS[t].idle):false;e.USERS[t].absent=e.USERS[t].absent?new Date(e.USERS[t].absent):false;this.messenger.users[t]=e.USERS[t]}for(var t in e.HR_PHOTO)this.messenger.hrphoto[t]=e.HR_PHOTO[t];if(e.CALL_ENABLED&&this.callToGroup){for(var t in e.USERS_CONNECT){this.connected[t]=true}this.initiator=false;this.callInitUserId=0;this.callInit=true;this.callActive=false;this.callUserId=0;this.callChatId=e.CHAT_ID;this.callToGroup=e.CALL_TO_GROUP;this.callGroupUsers=this.messenger.userInChat[e.CHAT_ID];this.callVideo=e.CALL_VIDEO;this.callDialog();return false}this.callView.setTitle(this.callOverlayTitle());this.callView.updatePhoto();var s=this.callToGroup?"chat"+this.callChatId:this.callUserId;var i=this.callToGroup;var n=this.callVideo;this.callInviteTimeout=setTimeout(BX.delegate((function(){this.callView.setProgress(BX.IM.Call.UiProgress.Offline);this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callAbort(BX.message(i?"IM_M_CALL_ST_NO_WEBRTC_1":"IM_M_CALL_ST_NO_WEBRTC"));this.callCommand(this.callChatId,"errorOffline")}),this),3e4)}else{this.callView.setProgress(BX.IM.Call.UiProgress.Offline);this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callAbort(e.ERROR);this.callCommand(this.callChatId,"errorOffline")}}),this),onfailure:BX.delegate((function(){this.callAbort(BX.message("IM_M_CALL_ERR"));this.callOverlayClose()}),this)})}};BX.IM.WebRTC.prototype.callWait=function(){if(!this.callSupport())return false;this.callOverlayStatus(BX.message(this.callToGroup?"IM_M_CALL_ST_WAIT_2":"IM_M_CALL_ST_WAIT"));clearTimeout(this.callInviteTimeout);this.callInviteTimeout=setTimeout(BX.delegate((function(){if(!this.initiator){this.callAbort();this.callOverlayClose();return false}this.BXIM.playSound("error");this.callView.setProgress(BX.IM.Call.UiProgress.Offline);this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callCommand(this.callChatId,"waitTimeout");this.callAbort(BX.message(this.callToGroup?"IM_M_CALL_ST_NO_ANSWER_2":"IM_M_CALL_ST_NO_ANSWER"))}),this),2e4)};BX.IM.WebRTC.prototype.callChangeMainVideo=function(e){var t=this.callOverlayVideoMain.getAttribute("data-userId");if(t==e||!this.callStreamUsers[e])return false;BX.addClass(this.callOverlayVideoMain,"bx-messenger-call-video-main-block-animation");clearTimeout(this.callChangeMainVideoTimeout);this.callChangeMainVideoTimeout=setTimeout(BX.delegate((function(){this.callOverlayVideoMain.setAttribute("data-userId",e);this.attachMediaStream(this.callOverlayVideoMain,this.callStreamUsers[e]);if(BX.MessengerCommon.isDesktop())BX.desktop.onCustomEvent("bxCallChangeMainVideo",[this.callOverlayVideoMain.src]);BX.addClass(this.callOverlayVideoUsers[e].parentNode,"bx-messenger-call-video-block-hide");BX.addClass(this.callOverlayVideoUsers[e].parentNode,"bx-messenger-call-video-hide");this.callOverlayVideoUsers[e].parentNode.setAttribute("title","");if(this.callStreamUsers[t]){this.attachMediaStream(this.callOverlayVideoUsers[t],this.callStreamUsers[t]);BX.removeClass(this.callOverlayVideoUsers[t].parentNode,"bx-messenger-call-video-hide")}this.callOverlayVideoUsers[t].parentNode.setAttribute("title",BX.message("IM_CALL_MAGNIFY"));BX.removeClass(this.callOverlayVideoUsers[t].parentNode,"bx-messenger-call-video-block-hide");BX.removeClass(this.callOverlayVideoMain,"bx-messenger-call-video-main-block-animation")}),this),400)};BX.IM.WebRTC.prototype.callInviteUserToChat=function(e){if(this.callChatId<=0||this.messenger.popupChatDialogSendBlock)return false;var t="";if(e.length==0){if(this.messenger.popupChatDialog!=null)this.messenger.popupChatDialog.close();return false}if(t!=""){this.BXIM.openConfirm(t);return false}if(this.screenSharing.callInit){this.screenSharing.callDecline()}this.messenger.popupChatDialogSendBlock=true;if(this.messenger.popupChatDialog!=null)this.messenger.popupChatDialog.buttons[0].setClassName("popup-window-button-disable");BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_INVITE_USER&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:60,data:{IM_CALL:"Y",COMMAND:"invite_user",USERS:JSON.stringify(e),CHAT_ID:this.callChatId,RECIPIENT_ID:this.callUserId,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){this.messenger.popupChatDialogSendBlock=false;if(this.messenger.popupChatDialog!=null)this.messenger.popupChatDialog.buttons[0].setClassName("popup-window-button-accept");if(e.ERROR==""){this.messenger.popupChatDialogSendBlock=false;if(this.messenger.popupChatDialog!=null)this.messenger.popupChatDialog.close()}else{this.BXIM.openConfirm(e.ERROR)}}),this)})};BX.IM.WebRTC.prototype.callCommand=function(e,t,s,i){if(!this.callSupport())return false;e=parseInt(e);i=i!=false;s=typeof s=="object"?s:{};if(e>0){BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_SHARED&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,async:i,data:{IM_CALL:"Y",COMMAND:t,CHAT_ID:e,RECIPIENT_ID:this.callUserId,PARAMS:JSON.stringify(s),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(){if(this.callDialogAllow)this.callDialogAllow.close()}),this)})}};BX.IM.WebRTC.prototype.callDialog=function(){if(!this.callSupport())return false;clearTimeout(this.callInviteTimeout);clearTimeout(this.callDialogAllowTimeout);if(this.callDialogAllow)this.callDialogAllow.close();this.callActive=true;if(!this.callView)return;if(this.messenger.popupMessenger==null){this.messenger.openMessenger(this.callUserId)}this.callView.setProgress("wait");this.callView.setStatus(BX.message("IM_M_CALL_ST_WAIT_ACCESS"));if(this.callToMobile)this.callView.setCallWithMobile(true);this.callView.setFloating(false);this.callView.setUiSize(BX.IM.Call.UiSize.Full);this.callView.setUiState(BX.IM.Call.UiState.Connecting);this.startGetUserMedia(this.callVideo)};BX.IM.WebRTC.prototype.toggleScreenSharing=function(){if(this.screenSharing.callInit&&this.screenSharing.initiator){this.screenSharing.callDecline()}else{this.screenSharing.callInvite()}return true};BX.IM.WebRTC.prototype.callOverlayShow=function(e){if(!e||!(e.toUserId||e.phoneNumber)||!(e.fromUserId||e.phoneNumber)||!e.buttons)return false;if(this.callOverlay!=null){this.callOverlayClose(false,true)}this.messenger.closeMenuPopup();e.video=e.video!=false;e.callToGroup=e.callToGroup==true;e.callToPhone=e.callToPhone==true;e.minimize=typeof e.minimize=="undefined"?this.messenger.popupMessenger==null:e.minimize==true;e.status=e.status?e.status:"";e.progress=e.progress?e.progress:"connect";this.callOverlayMinimize=e.prepare?true:e.minimize;var t=null;if(this.BXIM.dialogOpen)t=this.messenger.popupMessengerBody;else if(this.BXIM.notifyOpen)t=this.messenger.popupNotifyItem;if(t){if(BX.MessengerCommon.isScrollMin(t)){setTimeout(BX.delegate((function(){BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-call")}),this),e.minimize?0:400)}else{BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-call");t.scrollTop=t.scrollTop+50}}else{BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-call")}if(!this.callOverlayMinimize)BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-call-maxi");var s={width:!this.messenger.popupMessenger?"610px":(this.messenger.popupMessengerExtra.style.display=="block"?this.messenger.popupMessengerExtra.offsetWidth+1:this.messenger.popupMessengerDialog.offsetWidth+1)+"px",height:this.messenger.popupMessengerFullHeight+2+"px",marginLeft:this.messenger.popupContactListSize+"px"};if(this.messenger.popupMessenger==null){s["marginTop"]="-1px"}var i=e.callToGroup?this.callGroupOverlayShow(e):this.callUserOverlayShow(e);this.callOverlay=BX.create("div",{props:{className:"bx-messenger-call-overlay "+(e.callToGroup?" bx-messenger-call-overlay-group ":"")+(this.callOverlayMinimize?"bx-messenger-call-overlay-mini":"bx-messenger-call-overlay-maxi")},style:s,children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-lvl-1"},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-lvl-2"},children:[BX.create("div",{props:{className:"bx-messenger-call-video-main"},children:[BX.create("div",{props:{className:"bx-messenger-call-video-main-wrap"},children:[BX.create("div",{props:{className:"bx-messenger-call-video-main-watermark"},children:[BX.create("img",{props:{className:"bx-messenger-call-video-main-watermark-img"},attrs:{src:"/bitrix/js/im/images/watermark_"+(this.BXIM.language=="ru"?"ru":"en")+".png"}})]}),BX.create("div",{props:{className:"bx-messenger-call-video-main-cell"},children:[BX.create("div",{props:{className:"bx-messenger-call-video-main-bg"},children:[this.callOverlayVideoMain=BX.create("video",{attrs:{autoplay:true},props:{className:"bx-messenger-call-video-main-block"}}),this.callOverlayVideoReserve=BX.create("video",{attrs:{autoplay:true},props:{className:"bx-messenger-hide"}})]})]})]})]})]})]}),this.callOverlayBody=BX.create("div",{props:{className:"bx-messenger-call-overlay-body"},children:i})]});if(e.prepare){BX.addClass(this.callOverlay,"bx-messenger-call-overlay-float");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-show")}else if(this.messenger.popupMessenger!=null){this.messenger.setClosingByEsc(false);this.messenger.popupMessengerContent.insertBefore(this.callOverlay,this.messenger.popupMessengerContent.firstChild)}else if(this.callNotify!=null){BX.addClass(this.callOverlay,"bx-messenger-call-overlay-float");this.callNotify.setContent(this.callOverlay)}else{this.callNotify=new BX.PopupWindow("bx-messenger-call-notify",null,{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:true,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){this.destroy()},onPopupDestroy:BX.delegate((function(){BX.unbind(window,"scroll",this.popupCallNotifyEvent);this.callNotify=null}),this)},content:this.callOverlay});this.callNotify.show();BX.addClass(this.callOverlay,"bx-messenger-call-overlay-float");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-show");BX.addClass(this.callNotify.popupContainer.children[0],"bx-messenger-popup-window-transparent");setTimeout(BX.delegate((function(){if(this.callNotify){this.callNotify.adjustPosition()}}),this),500);BX.bind(window,"scroll",this.popupCallNotifyEvent=BX.proxy((function(){this.callNotify.adjustPosition()}),this))}setTimeout(BX.delegate((function(){BX.addClass(this.callOverlay,"bx-messenger-call-overlay-show")}),this),100);this.callOverlayStatus(e.status);this.callView.setUiState(BX.IM.Call.UiState.Finished);this.callOverlayProgress(e.progress);return true};BX.IM.WebRTC.prototype.callGroupOverlayShow=function(e){var t=e.fromUserId!=this.BXIM.userId;var s=e.fromUserId!=this.BXIM.userId?e.fromUserId:e.toUserId;var i=this.callOverlayTitle();this.callOverlayChatId=s;var n=[];var a=[];for(var o=0;o<this.messenger.userInChat[s].length;o++){var r=this.messenger.userInChat[s][o];var l=BX.MessengerCommon.getHrPhoto(r,this.messenger.users[r].color);n.push(BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-left"},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-block"},children:[this.callOverlayPhotoUsers[r]=BX.create("img",{props:{className:"bx-messenger-call-overlay-photo-img"},attrs:{"data-userId":r,src:l.src,style:l.color?"background-color: "+l.color:""}})]})]}));if(r==this.BXIM.userId)continue;var l=BX.MessengerCommon.getHrPhoto(r,this.messenger.users[r].color);a.push(BX.create("div",{props:{className:"bx-messenger-call-video-mini bx-messenger-call-video-hide"},attrs:{"data-userId":r},events:{click:BX.delegate((function(){this.callChangeMainVideo(BX.proxy_context.getAttribute("data-userId"))}),this)},children:[this.callOverlayVideoUsers[r]=BX.create("video",{attrs:{autoplay:true},props:{className:"bx-messenger-call-video-mini-block"}}),BX.create("div",{props:{className:"bx-messenger-call-video-mini-photo"},children:[this.callOverlayVideoPhotoUsers[r]=BX.create("img",{props:{className:"bx-messenger-call-video-mini-photo-img"},attrs:{src:l.src,style:l.color?"background-color: "+l.color:""}})]})]}))}var l=BX.MessengerCommon.getHrPhoto(this.BXIM.userId,this.messenger.users[this.BXIM.userId].color);return[BX.create("div",{props:{className:"bx-messenger-call-overlay-line-maxi"},attrs:{title:BX.message("IM_M_CALL_BTN_RETURN")},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-line-maxi-block"}})]}),BX.create("div",{props:{className:"bx-messenger-call-video-users"},children:a}),BX.create("div",{props:{className:"bx-messenger-call-overlay-title"},children:[this.callOverlayTitleBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-title-block"},html:i})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-photo"},children:n}),BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-progress-group"},children:[this.callOverlayProgressBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-progress"}})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-status"},children:[this.callOverlayStatusBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-status-block"}})]}),BX.create("div",{props:{className:"bx-messenger-call-video-mini"},children:[this.callOverlayVideoSelf=BX.create("video",{attrs:{autoplay:true},props:{className:"bx-messenger-call-video-mini-block"}}),BX.create("div",{props:{className:"bx-messenger-call-video-mini-photo"},children:[this.callOverlayPhotoMini=BX.create("img",{props:{className:"bx-messenger-call-video-mini-photo-img"},attrs:{src:l.src,style:l.color?"background-color: "+l.color:""}})]})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-buttons"},children:[this.callOverlayButtonsBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-buttons-block"}})]})]};BX.IM.WebRTC.prototype.callUserOverlayShow=function(e){var t=e.toUserId==this.BXIM.userId;var s=t?e.fromUserId:e.toUserId;var i=this.callOverlayTitle();this.callOverlayUserId=s;var n=BX.MessengerCommon.getHrPhoto(s,this.messenger.users[s].color);var a=BX.MessengerCommon.getHrPhoto(this.BXIM.userId,this.messenger.users[this.BXIM.userId].color);return[BX.create("div",{props:{className:"bx-messenger-call-overlay-line-maxi"},attrs:{title:BX.message("IM_M_CALL_BTN_RETURN")},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-line-maxi-block"}})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-title"},children:[this.callOverlayTitleBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-title-block"},html:i})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-photo"},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-left"},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-block"},children:[this.callOverlayPhotoCompanion=BX.create("img",{props:{className:"bx-messenger-call-overlay-photo-img"},attrs:{"data-userId":s,src:n.src,style:n.color?"background-color: "+n.color:""}})]})]}),this.callOverlayProgressBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-progress"+(t?"":" bx-messenger-call-overlay-photo-progress-incoming")}}),BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-right"},children:[BX.create("div",{props:{className:"bx-messenger-call-overlay-photo-block"},children:[this.callOverlayPhotoSelf=BX.create("img",{props:{className:"bx-messenger-call-overlay-photo-img"},attrs:{"data-userId":this.BXIM.userId,src:a.src,style:a.color?"background-color: "+a.color:""}})]})]})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-status"},children:[this.callOverlayStatusBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-status-block"}})]}),BX.create("div",{props:{className:"bx-messenger-call-video-mini"},children:[this.callOverlayVideoSelf=BX.create("video",{attrs:{autoplay:true},props:{className:"bx-messenger-call-video-mini-block"}}),BX.create("div",{props:{className:"bx-messenger-call-video-mini-photo"},children:[this.callOverlayPhotoMini=BX.create("img",{props:{className:"bx-messenger-call-video-mini-photo-img"},attrs:{src:a.src,style:a.color?"background-color: "+a.color:""}})]})]}),BX.create("div",{props:{className:"bx-messenger-call-overlay-buttons"},children:[this.callOverlayButtonsBlock=BX.create("div",{props:{className:"bx-messenger-call-overlay-buttons-block"}})]})]};BX.IM.WebRTC.prototype.bindCallViewCallbacks=function(){if(!this.callView)return;this.callView.setCallback("onClose",this.onCallViewClose.bind(this));this.callView.setCallback("onDestroy",this.onCallViewDestroy.bind(this));this.callView.setCallback("onButtonClick",this.onCallViewButtonClick.bind(this));this.callView.setCallback("onMaximizeClick",this.onCallViewMaximizeClick.bind(this))};BX.IM.WebRTC.prototype.onCallViewButtonClick=function(e){var t=e.buttonName;var s={answer:this.onCallViewAnswerButtonClick.bind(this),decline:this.onCallViewDeclineButtonClick.bind(this),hangup:this.onCallViewHangupButtonClick.bind(this),showChat:this.onCallViewShowChatButtonClick.bind(this),hideChat:this.onCallViewHideChatButtonClick.bind(this),inviteUsers:this.onCallViewInviteUsersButtonClick.bind(this),toggleMute:this.onCallViewToggleMuteButtonClick.bind(this),toggleScreenSharing:this.onCallViewToggleScreenSharingButtonClick.bind(this),showHistory:this.onCallViewShowHistoryButtonClick.bind(this),redial:this.onCallViewRedialButtonClick.bind(this),close:this.onCallViewCloseButtonClick.bind(this),download:this.onCallViewDownloadButtonClick.bind(this)};if(BX.type.isFunction(s[t])){s[t].call(this,e)}};BX.IM.WebRTC.prototype.onCallViewAnswerButtonClick=function(e){this.BXIM.stopRepeatSound("ringtone");if(e.join){var t=this.callToGroup;var s=this.callChatId;var i=this.callUserId;var n=this.callVideo;this.callAbort();this.callOverlayClose(false);this.callInvite(t?"chat"+s:i,n)}else{this.callDialog();BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_ANSWER&V="+this.BXIM.revision,method:"POST",dataType:"json",timeout:30,data:{IM_CALL:"Y",COMMAND:"answer",CHAT_ID:this.callChatId,CALL_TO_GROUP:this.callToGroup?"Y":"N",RECIPIENT_ID:this.callUserId,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}});this.desktop.closeTopmostWindow()}};BX.IM.WebRTC.prototype.onCallViewDeclineButtonClick=function(e){this.BXIM.stopRepeatSound("ringtone");this.callSelfDisabled=true;this.callCommand(this.callChatId,"decline",{ACTIVE:this.callActive?"Y":"N",INITIATOR:this.initiator?"Y":"N"});this.callAbort();this.callOverlayClose()};BX.IM.WebRTC.prototype.onCallViewHangupButtonClick=function(e){var t=this.callVideo;this.callSelfDisabled=true;this.callCommand(this.callChatId,"decline",{ACTIVE:this.callActive?"Y":"N",INITIATOR:this.initiator?"Y":"N"});this.BXIM.playSound("stop");this.callAbort();this.callOverlayClose()};BX.IM.WebRTC.prototype.onCallViewShowChatButtonClick=function(e){this.callOverlayToggleSize()};BX.IM.WebRTC.prototype.onCallViewHideChatButtonClick=function(e){this.callOverlayToggleSize()};BX.IM.WebRTC.prototype.onCallViewInviteUsersButtonClick=function(e){if(this.messenger.userInChat[this.callChatId]&&this.messenger.userInChat[this.callChatId].length==4){this.BXIM.openConfirm(BX.message("IM_CALL_GROUP_MAX_USERS"));return false}this.messenger.openChatDialog({chatId:this.callChatId,type:"CALL_INVITE_USER",bind:e.node,maxUsers:4})};BX.IM.WebRTC.prototype.onCallViewToggleMuteButtonClick=function(e){this.audioMuted=e.audioMuted;this.toggleAudio(false)};BX.IM.WebRTC.prototype.onCallViewToggleScreenSharingButtonClick=function(e){if(!this.desktop.enableInVersion(30)){this.BXIM.openConfirm({title:BX.message("IM_M_CALL_SCREEN"),message:BX.message("IM_M_CALL_SCREEN_ERROR")});return false}this.toggleScreenSharing()};BX.IM.WebRTC.prototype.onCallViewShowHistoryButtonClick=function(e){this.messenger.openHistory(this.messenger.currentTab)};BX.IM.WebRTC.prototype.onCallViewRedialButtonClick=function(e){var t=this.callToGroup?"chat"+this.callChatId:this.callUserId;var s=this.callVideo;if(this.phoneCount(this.messenger.phones[t])>0){this.messenger.openPopupMenu(e.node,"callPhoneMenu",true,{userId:t,video:s})}else{this.callInvite(t,s)}};BX.IM.WebRTC.prototype.onCallViewCloseButtonClick=function(e){this.callOverlayClose()};BX.IM.WebRTC.prototype.onCallViewDownloadButtonClick=function(e){window.open(BX.browser.IsMac()?"http://dl.bitrix24.com/b24/bitrix24_desktop.dmg":"http://dl.bitrix24.com/b24/bitrix24_desktop.exe","desktopApp");this.callOverlayClose()};BX.IM.WebRTC.prototype.onCallViewClose=function(e){this.callView.destroy()};BX.IM.WebRTC.prototype.onCallViewDestroy=function(e){this.callView=null};BX.IM.WebRTC.prototype.onCallViewMaximizeClick=function(e){if(this.BXIM.dialogOpen){if(this.callOverlayUserId>0){this.messenger.openChatFlag=false;BX.MessengerCommon.openDialog(this.callOverlayUserId,false)}else{this.messenger.openChatFlag=true;BX.MessengerCommon.openDialog("chat"+this.callOverlayChatId,false)}}else{if(this.callOverlayUserId>0){this.messenger.openChatFlag=false;this.messenger.currentTab=this.callOverlayUserId}else{this.messenger.openChatFlag=true;this.messenger.currentTab="chat"+this.callOverlayChatId}this.messenger.extraClose(true,false)}this.callView.setUiSize(BX.IM.Call.UiSize.Full)};BX.IM.WebRTC.prototype.callPhoneOverlayMeter=function(e){if(!this.phoneCurrentCall||this.phoneCurrentCall.state()!="CONNECTED")return false;var t=5;if(100==e)t=5;else if(e>=99)t=4;else if(e>=97)t=3;else if(e>=95)t=2;else t=1;this.phoneCallView.setQuality(t);return t};BX.IM.WebRTC.prototype.overlayEnterFullScreen=function(){if(this.callOverlayFullScreen){BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen");if(document.cancelFullScreen)document.cancelFullScreen();else if(document.mozCancelFullScreen)document.mozCancelFullScreen();else if(document.webkitCancelFullScreen)document.webkitCancelFullScreen()}else{BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen");if(this.detectedBrowser=="chrome"){BX.bind(window,"webkitfullscreenchange",this.callOverlayFullScreenBind=BX.proxy(this.overlayEventFullScreen,this));this.messenger.popupMessengerContent.webkitRequestFullScreen(this.messenger.popupMessengerContent.ALLOW_KEYBOARD_INPUT)}else if(this.detectedBrowser=="firefox"){BX.bind(window,"mozfullscreenchange",this.callOverlayFullScreenBind=BX.proxy(this.overlayEventFullScreen,this));this.messenger.popupMessengerContent.mozRequestFullScreen(this.messenger.popupMessengerContent.ALLOW_KEYBOARD_INPUT)}}};BX.IM.WebRTC.prototype.overlayEventFullScreen=function(){if(this.callOverlayFullScreen){if(this.detectedBrowser=="chrome")BX.unbind(window,"webkitfullscreenchange",this.callOverlayFullScreenBind);else if(this.detectedBrowser=="firefox")BX.unbind(window,"mozfullscreenchange",this.callOverlayFullScreenBind);BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen");if(BX.browser.IsChrome()){BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen-chrome-hack");setTimeout(BX.delegate((function(){BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen-chrome-hack")}),this),100)}this.callOverlayFullScreen=false;this.messenger.resizeMainWindow()}else{BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen");this.callOverlayFullScreen=true;this.messenger.resizeMainWindow()}this.messenger.popupMessengerBody.scrollTop=this.messenger.popupMessengerBody.scrollHeight-this.messenger.popupMessengerBody.offsetHeight};BX.IM.WebRTC.prototype.callOverlayToggleSize=function(e){if(this.callView==null)return false;if(!this.ready()){this.callOverlayClose(true);return false}var t=typeof e=="boolean"?!e:this.callOverlayMinimize;var s=false;if(this.messenger.popupMessenger!=null&&!this.BXIM.dialogOpen)s=true;else if(this.messenger.popupMessenger!=null&&this.callOverlayUserId>0&&this.callOverlayUserId!=this.messenger.currentTab)s=true;else if(this.messenger.popupMessenger!=null&&this.callOverlayChatId>0&&this.callOverlayChatId!=this.messenger.currentTab.toString().substr(4))s=true;else if(this.messenger.popupMessenger!=null&&this.callOverlayUserId==0&&this.callOverlayChatId==0&&this.phoneNumber)s=true;if(t){this.callOverlayMinimize=false;this.callView.setUiSize(BX.IM.Call.UiSize.Full)}else{this.callOverlayMinimize=true;if(s){this.callView.setUiSize(BX.IM.Call.UiSize.Line)}else{this.callView.setUiSize(BX.IM.Call.UiSize.Minimized)}if(this.BXIM.isFocus())BX.MessengerCommon.readMessage(this.messenger.currentTab);if(this.BXIM.isFocus()&&this.notify.notifyUpdateCount>0)this.notify.viewNotifyAll()}if(this.callOverlayUserId>0&&this.callOverlayUserId==this.messenger.currentTab){this.desktop.closeTopmostWindow()}else if(this.callOverlayChatId>0&&this.callOverlayChatId==this.messenger.currentTab.toString().substr(4)){this.desktop.closeTopmostWindow()}else{this.desktop.openCallFloatDialog()}};BX.IM.WebRTC.prototype.callOverlayClose=function(e,t){if(this.callOverlay==null&&this.callView==null)return false;this.audioMuted=true;this.toggleAudio(false);t=t==true;if(!t&&this.callOverlayFullScreen){if(this.detectedBrowser=="firefox"){BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-fullscreen");BX.remove(this.messenger.popupMessengerContent);BX.hide(this.messenger.popupMessenger.popupContainer);setTimeout(BX.delegate((function(){this.messenger.popupMessenger.destroy();this.messenger.openMessenger(this.messenger.currentTab)}),this),200)}else{this.overlayEnterFullScreen()}}if(this.messenger.popupMessenger!=null){var s=null;if(this.BXIM.dialogOpen)s=this.messenger.popupMessengerBody;else if(this.BXIM.notifyOpen)s=this.messenger.popupNotifyItem;if(s){if(BX.MessengerCommon.isScrollMax(s)){BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-call")}else{BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-call");s.scrollTop=s.scrollTop-50}}else{BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-call")}BX.removeClass(this.messenger.popupMessengerContent,"bx-messenger-call-maxi")}this.messenger.closeMenuPopup();e=e!=false;if(e)this.callView.closeAnimated();else this.callView.close();if(e){setTimeout(BX.delegate((function(){BX.remove(this.callOverlay);this.callOverlay=null;this.callOverlayButtonsBlock=null;this.callOverlayTitleBlock=null;this.callOverlayMeter=null;this.callOverlayStatusBlock=null;this.callOverlayProgressBlock=null;this.callOverlayMinimize=null;this.callOverlayChatId=0;this.callOverlayUserId=0;this.callOverlayPhotoSelf=null;this.callOverlayPhotoUsers={};this.callOverlayVideoUsers={};this.callOverlayVideoPhotoUsers={};this.callOverlayPhotoCompanion=null;this.callSelfDisabled=false;if(this.BXIM.isFocus())BX.MessengerCommon.readMessage(this.messenger.currentTab)}),this),300)}else{BX.remove(this.callOverlay);this.callOverlay=null;this.callOverlayButtonsBlock=null;this.callOverlayStatusBlock=null;this.callOverlayProgressBlock=null;this.callOverlayMinimize=null;this.callOverlayChatId=0;this.callOverlayUserId=0;this.callOverlayPhotoSelf=null;this.callOverlayPhotoUsers={};this.callOverlayVideoUsers={};this.callOverlayVideoPhotoUsers={};this.callOverlayPhotoCompanion=null;this.callSelfDisabled=false;if(this.BXIM.isFocus())BX.MessengerCommon.readMessage(this.messenger.currentTab)}if(t){this.BXIM.stopRepeatSound("ringtone");this.BXIM.stopRepeatSound("dialtone")}else{this.callOverlayDeleteEvents()}this.desktop.closeTopmostWindow()};BX.IM.WebRTC.prototype.callAbort=function(e){this.callOverlayDeleteEvents();if(e&&this.phoneCallView){if(this.phoneCallView)this.phoneCallView.setStatusText(e);else if(this.callView)this.callView.setStatus(e)}};BX.IM.WebRTC.prototype.callOverlayDeleteEvents=function(e){e=e||{};this.desktop.closeTopmostWindow();var t=e.closeNotify!==false;if(t&&this.callNotify)this.callNotify.destroy();var s=null;if(this.phoneCallId){s=this.phoneCallId}else if(this.callToGroup){s="chat"+this.callChatId}else{s="user"+this.callUserId}BX.onCustomEvent(window,"onImCallEnd",{CALL_ID:s});clearInterval(this.callAspectCheckInterval);if(BX.MessengerCommon.isDesktop()&&this.BXIM.init){BX.desktop.syncPause(false)}this.deleteEvents();this.callToMobile=false;this.callToPhone=false;if(this.messenger.popupMessenger){this.messenger.popupMessenger.setClosingByEsc(true);this.messenger.dialogStatusRedraw()}this.phoneCallFinish();clearTimeout(this.callDialtoneTimeout);this.BXIM.stopRepeatSound("ringtone");this.BXIM.stopRepeatSound("dialtone");clearTimeout(this.callInviteTimeout);clearTimeout(this.callDialogAllowTimeout);if(this.callDialogAllow)this.callDialogAllow.close()};BX.IM.WebRTC.prototype.callOverlayProgress=function(e){if(this.phoneCallView)this.phoneCallView.setProgress(e);else if(this.callView)this.callView.setProgress(e)};BX.IM.WebRTC.prototype.callOverlayStatus=function(e){if(!BX.type.isNotEmptyString(e))return false;if(this.phoneCallView)this.phoneCallView.setStatusText(e);else if(this.callView)this.callView.setStatus(e)};BX.IM.WebRTC.prototype.callOverlayTitle=function(){var e="";var t=this.callInitUserId!=this.BXIM.userId;if(this.callToGroup){e=this.messenger.chat[this.callChatId].name;if(e.length>85)e=e.substr(0,85)+"...";e=BX.message("IM_CALL_GROUP_"+(this.callVideo?"VIDEO":"VOICE")+(t?"_FROM":"_TO")).replace("#CHAT#",e)}else{e=BX.message("IM_M_CALL_"+(this.callVideo?"VIDEO":"VOICE")+(t?"_FROM":"_TO")).replace("#USER#",this.messenger.users[this.callUserId].name)}return e};BX.IM.WebRTC.prototype.setCallOverlayTitle=function(e){if(this.phoneCallView){this.phoneCallView.setTitle(e)}};BX.IM.WebRTC.prototype.callOverlayTimer=function(e){tate=typeof e=="undefined"?"start":e;if(e=="start"){this.phoneCallTimeInterval=setInterval(BX.delegate((function(){this.phoneCallTime++}),this),1e3)}else if(e=="pause"){clearInterval(this.phoneCallTimeInterval)}else{clearInterval(this.phoneCallTimeInterval)}};BX.IM.WebRTC.prototype.callOverlayDrawCrm=function(){if(!this.callOverlayCrmBlock||!this.phoneCrm.FOUND)return false;this.callOverlayCrmBlock.innerHTML="";if(this.phoneCrm.FOUND=="Y"){BX.removeClass(this.callOverlay,"bx-messenger-call-overlay-mini");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-maxi");BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-call-maxi");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-crm");BX.removeClass(this.callOverlay,"bx-messenger-call-overlay-crm-short");var e=this.phoneCrm.CONTACT&&this.phoneCrm.CONTACT.NAME?this.phoneCrm.CONTACT.NAME:"";if(this.phoneCrm.ACTIVITY_URL){e='<a href="'+this.phoneCrm.SHOW_URL+'" target="_blank" class="bx-messenger-call-crm-about-link">'+e+"</a>"}var t=BX.create("div",{props:{className:"bx-messenger-call-crm-about"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-about-block bx-messenger-call-crm-about-contact"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-header"},html:BX.message("IM_CRM_ABOUT_CONTACT")}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-avatar"},html:this.phoneCrm.CONTACT&&this.phoneCrm.CONTACT.PHOTO?'<img src="'+this.phoneCrm.CONTACT.PHOTO+'" class="bx-messenger-call-crm-about-block-avatar-img">':""}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-line-1"},html:e}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-line-2"},html:this.phoneCrm.CONTACT&&this.phoneCrm.CONTACT.POST?this.phoneCrm.CONTACT.POST:""})]}),this.phoneCrm.COMPANY?BX.create("div",{props:{className:"bx-messenger-call-crm-about-block bx-messenger-call-crm-about-company"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-header"},html:BX.message("IM_CRM_ABOUT_COMPANY")}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-line-1"},html:this.phoneCrm.COMPANY})]}):null]});var s=BX.create("div",{props:{className:"bx-messenger-call-crm-about"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-about-block bx-messenger-call-crm-about-contact"},children:this.phoneCrm.RESPONSIBILITY&&this.phoneCrm.RESPONSIBILITY.NAME?[BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-header"},html:BX.message("IM_CRM_RESPONSIBILITY")}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-avatar"},html:this.phoneCrm.RESPONSIBILITY.PHOTO?'<img src="'+this.phoneCrm.RESPONSIBILITY.PHOTO+'" class="bx-messenger-call-crm-about-block-avatar-img">':""}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-line-1"},html:this.phoneCrm.RESPONSIBILITY.NAME?this.phoneCrm.RESPONSIBILITY.NAME:""}),BX.create("div",{props:{className:"bx-messenger-call-crm-about-block-line-2"},html:this.phoneCrm.RESPONSIBILITY.POST?this.phoneCrm.RESPONSIBILITY.POST:""})]:[]})]});var i=null;if(this.phoneCrm.ACTIVITY_URL||this.phoneCrm.INVOICE_URL||this.phoneCrm.DEAL_URL){i=BX.create("div",{props:{className:"bx-messenger-call-crm-buttons"},children:[this.phoneCrm.ACTIVITY_URL?BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.ACTIVITY_URL},props:{className:"bx-messenger-call-crm-button"},html:BX.message("IM_CRM_BTN_ACTIVITY")}):null,this.phoneCrm.DEAL_URL?BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.DEAL_URL},props:{className:"bx-messenger-call-crm-button"},html:BX.message("IM_CRM_BTN_DEAL")}):null,this.phoneCrm.INVOICE_URL?BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.INVOICE_URL},props:{className:"bx-messenger-call-crm-button"},html:BX.message("IM_CRM_BTN_INVOICE")}):null,this.phoneCrm.CURRENT_CALL_URL?BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.CURRENT_CALL_URL},props:{className:"bx-messenger-call-crm-link"},html:"+ "+BX.message("IM_CRM_BTN_CURRENT_CALL")}):null]})}var n=null;if(this.phoneCrm.ACTIVITIES&&this.phoneCrm.ACTIVITIES.length>0){crmArActivities=[];for(var a=0;a<this.phoneCrm.ACTIVITIES.length;a++){crmArActivities.push(BX.create("div",{props:{className:"bx-messenger-call-crm-activities-item"},children:[BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.ACTIVITIES[a].URL},props:{className:"bx-messenger-call-crm-activities-name"},html:this.phoneCrm.ACTIVITIES[a].TITLE}),BX.create("div",{props:{className:"bx-messenger-call-crm-activities-status"},html:(this.phoneCrm.ACTIVITIES[a].OVERDUE=="Y"?'<span class="bx-messenger-call-crm-activities-dot"></span>':"")+this.phoneCrm.ACTIVITIES[a].DATE})]}))}n=BX.create("div",{props:{className:"bx-messenger-call-crm-activities"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-activities-header"},html:BX.message("IM_CRM_ACTIVITIES")}),BX.create("div",{props:{className:"bx-messenger-call-crm-activities-items"},children:crmArActivities})]})}var o=null;if(this.phoneCrm.DEALS&&this.phoneCrm.DEALS.length>0){crmArDeals=[];for(var a=0;a<this.phoneCrm.DEALS.length;a++){crmArDeals.push(BX.create("div",{props:{className:"bx-messenger-call-crm-deals-item"},children:[BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.DEALS[a].URL},props:{className:"bx-messenger-call-crm-deals-name"},html:this.phoneCrm.DEALS[a].TITLE}),BX.create("div",{props:{className:"bx-messenger-call-crm-deals-status"},html:this.phoneCrm.DEALS[a].STAGE})]}))}o=BX.create("div",{props:{className:"bx-messenger-call-crm-deals"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-deals-header"},html:BX.message("IM_CRM_DEALS")}),BX.create("div",{props:{className:"bx-messenger-call-crm-deals-items"},children:crmArDeals})]})}var r=[];if(n&&o){r=[BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),t,n,o,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),i]}else{if(n||o){r=[BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),t,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),s,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),n?n:o,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),i]}else if(!n&&!o&&i){BX.addClass(this.callOverlay,"bx-messenger-call-overlay-crm-short");this.callOverlayCrmBlock.innerHTML="";r=[BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),t,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),s,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),i]}else{BX.addClass(this.callOverlay,"bx-messenger-call-overlay-crm-short");this.callOverlayCrmBlock.innerHTML="";r=[BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),t,BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-space"}}),s]}}}else if(this.phoneCrm.LEAD_URL||this.phoneCrm.CONTACT_URL){BX.removeClass(this.callOverlay,"bx-messenger-call-overlay-mini");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-maxi");BX.addClass(this.messenger.popupMessengerContent,"bx-messenger-call-maxi");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-crm");BX.addClass(this.callOverlay,"bx-messenger-call-overlay-crm-short");r=[BX.create("div",{props:{className:"bx-messenger-call-crm-phone-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-phone-icon"},children:[BX.create("div",{props:{className:"bx-messenger-call-crm-phone-icon-block"}})]}),BX.create("div",{props:{className:"bx-messenger-call-crm-phone-space"}}),BX.create("div",{props:{className:"bx-messenger-call-crm-buttons bx-messenger-call-crm-buttons-center"},children:[this.phoneCrm.CONTACT_URL?BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.CONTACT_URL},props:{className:"bx-messenger-call-crm-button"},html:BX.message("IM_CRM_BTN_NEW_CONTACT")}):null,this.phoneCrm.LEAD_URL?BX.create("a",{attrs:{target:"_blank",href:this.phoneCrm.LEAD_URL},props:{className:"bx-messenger-call-crm-button"},html:BX.message("IM_CRM_BTN_NEW_LEAD")}):null]})]}BX.adjust(this.callOverlayCrmBlock,{children:r})};BX.IM.WebRTC.prototype.callDialogAllowShow=function(e){if(BX.MessengerCommon.isDesktop())return false;if(this.phoneMicAccess)return false;e=e!=false;if(!this.phoneAPI){if(this.callStreamSelf!=null)return false;if(e&&!this.callActive)return false}if(this.callDialogAllow)this.callDialogAllow.close();this.callDialogAllow=new BX.IM.Call.HardwareDialog({bindNode:this.messenger.popupMessengerDialog,offsetTop:this.messenger.popupMessengerDialog?this.callOverlayMinimize?-20:-this.messenger.popupMessengerDialog.offsetHeight/2-100:-20,offsetLeft:this.callOverlay?this.callOverlay.offsetWidth/2-170:0,onDestroy:function(){this.callDialogAllow=null}.bind(this)});this.callDialogAllow.show()};BX.IM.WebRTC.prototype.callNotifyWait=function(e,t,s,i,n){console.trace("Deprecated function callNotifyWait called");return;if(!this.callSupport())return false;n=n==true;s=s==true;i=i==true;this.initiator=false;this.callInitUserId=t;this.callInit=true;this.callActive=false;this.callUserId=i?0:t;this.callChatId=e;this.callToGroup=i;this.callGroupUsers=this.messenger.userInChat[e];this.callVideo=s;this.callView=new BX.IM.Call.View({messenger:this.messenger,toUserId:this.BXIM.userId,fromUserId:this.callToGroup?e:t,groupCall:this.callToGroup,users:this.callToGroup?this.messenger.userInChat[e]:[t],videoCall:s,title:this.callOverlayTitle(),status:BX.message(this.callToGroup?"IM_M_CALL_ST_INVITE_2":"IM_M_CALL_ST_INVITE"),uiState:BX.IM.Call.UiState.Incoming,callWithMobile:this.callToMobile,floating:!this.messenger.popupMessenger,join:n});this.bindCallViewCallbacks();this.callView.show();if(!this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){var a={title:BX.message("IM_PHONE_DESC"),text:BX.util.htmlspecialcharsback(this.callOverlayTitle()),icon:this.callUserId?this.messenger.users[this.callUserId].avatar:"",tag:"im-call",onshow:function(){var e=this;setTimeout((function(){e.close()}),5e3)},onclick:function(){window.focus();this.close()}};this.BXIM.notifyManager.nativeNotify(a)}};BX.IM.WebRTC.prototype.callNotifyWaitDesktop=function(e,t,s,i,n){this.BXIM.ppServerStatus=true;if(!this.callSupport()||!this.desktop.ready())return false;n=n==true;s=s==true;i=i==true;this.initiator=false;this.callInitUserId=t;this.callInit=true;this.callActive=false;this.callUserId=i?0:t;this.callChatId=e;this.callToGroup=i;this.callGroupUsers=this.messenger.userInChat[e];this.callVideo=s;this.callOverlayShow({prepare:true,toUserId:this.BXIM.userId,fromUserId:this.callToGroup?e:t,callToGroup:this.callToGroup,video:s,status:BX.message(this.callToGroup?"IM_M_CALL_ST_INVITE_2":"IM_M_CALL_ST_INVITE"),buttons:[{text:BX.message("IM_M_CALL_BTN_ANSWER"),className:"bx-messenger-call-overlay-button-answer",events:{click:BX.delegate((function(){if(n)BX.desktop.onCustomEvent("main","bxCallJoin",[e,t,s,i]);else BX.desktop.onCustomEvent("main","bxCallAnswer",[e,t,s,i]);BX.desktop.windowCommand("close")}),this)}},{text:BX.message("IM_M_CALL_BTN_HANGUP"),className:"bx-messenger-call-overlay-button-hangup",events:{click:BX.delegate((function(){BX.desktop.onCustomEvent("main","bxCallDecline",[]);BX.desktop.windowCommand("close")}),this)}}]});this.desktop.drawOnPlaceholder(this.callOverlay);BX.desktop.setWindowPosition({X:STP_CENTER,Y:STP_VCENTER,Width:470,Height:120})};BX.IM.WebRTC.prototype.callFloatDialog=function(e,t,s){if(!BX.MessengerCommon.isDesktop())return false;this.audioMuted=s;var i=t?this.desktop.minCallVideoWidth:this.desktop.minCallWidth;var n=t?this.desktop.minCallVideoHeight:this.desktop.minCallHeight;var a={width:i+"px",height:n+"px"};this.callOverlay=BX.create("div",{props:{className:"bx-messenger-call-float"+(t?"":" bx-messenger-call-float-audio")},style:a,children:[this.callOverlayVideoMain=!t?null:BX.create("video",{attrs:{autoplay:true,src:t},props:{className:"bx-messenger-call-float-video"},events:{click:BX.delegate((function(){BX.desktop.onCustomEvent("main","bxCallOpenDialog",[])}),this)}}),BX.create("div",{props:{className:"bx-messenger-call-float-buttons"},children:[BX.create("div",{props:{className:"bx-messenger-call-float-button bx-messenger-call-float-button-mic"+(this.audioMuted?" bx-messenger-call-float-button-mic-disabled":"")},events:{click:BX.delegate((function(e){this.audioMuted=!this.audioMuted;BX.desktop.onCustomEvent("main","bxCallMuteMic",[this.audioMuted]);BX.toggleClass(BX.proxy_context,"bx-messenger-call-float-button-mic-disabled");var t=BX.findChildByClassName(BX.proxy_context,"bx-messenger-call-float-button-text");t.innerHTML=BX.message("IM_M_CALL_BTN_MIC")+" "+BX.message("IM_M_CALL_BTN_MIC_"+(this.audioMuted?"OFF":"ON"));BX.PreventDefault(e)}),this)},children:[BX.create("span",{props:{className:"bx-messenger-call-float-button-icon"}}),BX.create("span",{props:{className:"bx-messenger-call-float-button-text"},html:BX.message("IM_M_CALL_BTN_MIC")+" "+BX.message("IM_M_CALL_BTN_MIC_"+(this.audioMuted?"OFF":"ON"))})]}),BX.create("div",{props:{className:"bx-messenger-call-float-button bx-messenger-call-float-button-decline"},events:{click:BX.delegate((function(e){BX.desktop.onCustomEvent("main","bxCallDecline",[]);BX.desktop.windowCommand("close");BX.PreventDefault(e)}),this)},children:[BX.create("span",{props:{className:"bx-messenger-call-float-button-icon"}}),BX.create("span",{props:{className:"bx-messenger-call-float-button-text"},html:BX.message("IM_M_CALL_BTN_HANGUP")})]})]})]});this.desktop.drawOnPlaceholder(this.callOverlay);BX.desktop.setWindowMinSize({Width:i,Height:n});BX.desktop.setWindowResizable(false);BX.desktop.setWindowClosable(false);BX.desktop.setWindowResizable(false);BX.desktop.setWindowTitle(BX.util.htmlspecialcharsback(BX.util.htmlspecialcharsback(e)));if(BXDesktopSystem.QuerySettings("global_topmost_x",null)){BX.desktop.setWindowPosition({X:parseInt(BXDesktopSystem.QuerySettings("global_topmost_x",STP_RIGHT)),Y:parseInt(BXDesktopSystem.QuerySettings("global_topmost_y",STP_TOP)),Width:i,Height:n,Mode:STP_FRONT});if(!BX.browser.IsMac())BX.desktop.setWindowPosition({X:parseInt(BXDesktopSystem.QuerySettings("global_topmost_x",STP_RIGHT)),Y:parseInt(BXDesktopSystem.QuerySettings("global_topmost_y",STP_TOP)),Width:i,Height:n,Mode:STP_FRONT})}else{BX.desktop.setWindowPosition({X:STP_RIGHT,Y:STP_TOP,Width:i,Height:n,Mode:STP_FRONT});if(!BX.browser.IsMac())BX.desktop.setWindowPosition({X:STP_RIGHT,Y:STP_TOP,Width:i,Height:n,Mode:STP_FRONT})}if(t){clearInterval(this.callAspectCheckInterval);this.callAspectCheckInterval=setInterval(BX.delegate((function(){if(this.callOverlayVideoMain.offsetWidth<this.callOverlayVideoMain.offsetHeight){if(this.callAspectHorizontal){this.callAspectHorizontal=false;BX.addClass(this.callOverlay,"bx-messenger-call-overlay-aspect-vertical");BX.desktop.setWindowSize({Width:this.desktop.minCallVideoHeight,Height:this.desktop.minCallVideoWidth})}}else{if(!this.callAspectHorizontal){this.callAspectHorizontal=true;BX.removeClass(this.callOverlay,"bx-messenger-call-overlay-aspect-vertical");BX.desktop.setWindowSize({Width:this.desktop.minCallVideoWidth,Height:this.desktop.minCallVideoHeight})}}}),this),500)}BX.desktop.addCustomEvent("bxCallChangeMainVideo",BX.delegate((function(e){this.callOverlayVideoMain.src=e}),this))};BX.IM.WebRTC.prototype.storageSet=function(e){if(e.key=="vite"){if(e.value===true||!this.BXIM.webrtc.callSelfDisabled){this.phoneTransferEnabled=e.value}}else if(e.key=="viExternalCard"){if(e.value===false){this.hideExternalCall()}}};BX.IM.WebRTC.prototype.phoneSupport=function(){return this.phoneEnabled&&(this.phoneDeviceActive||this.ready())};BX.IM.WebRTC.prototype.phoneMute=function(){if(!this.phoneCurrentCall)return false;this.phoneMicMuted=true;this.phoneCurrentCall.muteMicrophone()};BX.IM.WebRTC.prototype.phoneUnmute=function(){if(!this.phoneCurrentCall)return false;this.phoneMicMuted=false;this.phoneCurrentCall.unmuteMicrophone()};BX.IM.WebRTC.prototype.phoneToggleAudio=function(){if(!this.phoneCurrentCall)return false;if(this.phoneMicMuted){this.phoneCurrentCall.unmuteMicrophone();this.phoneCallView.setMuted(false)}else{this.phoneCurrentCall.muteMicrophone()}this.phoneMicMuted=!this.phoneMicMuted};BX.IM.WebRTC.prototype.phoneDeviceCall=function(e){var t=true;if(typeof e=="boolean"){this.BXIM.setLocalConfig("viDeviceCallBlock",!e);BX.localStorage.set("viDeviceCallBlock",!e,86400);if(this.phoneCallView)this.phoneCallView.setDeviceCall(e)}else{var s=this.BXIM.getLocalConfig("viDeviceCallBlock");if(!s){s=BX.localStorage.get("viDeviceCallBlock")}t=this.phoneDeviceActive&&s!=true}return t};BX.IM.WebRTC.prototype.openKeyPad=function(e){if(BX.message["voximplantCanMakeCalls"]=="N"){BX.loadExt("voximplant.common").then((function(){BX.Voximplant.openLimitSlider()}));return}this.loadPhoneLines().then(function(){this._doOpenKeyPad(e)}.bind(this))};BX.IM.WebRTC.prototype.closeKeyPad=function(){if(this.phoneKeypad){this.phoneKeypad.close()}};BX.IM.WebRTC.prototype._doOpenKeyPad=function(e){var t;var s;var i;var n=this.messenger.externalMenu&&!this.callActive?"left":"top";var a=this.messenger.externalMenu?this.callActive?120:76:94;if(!this.phoneSupport()&&!(this.BXIM.desktopStatus&&this.BXIM.desktopVersion>=18)&&!this.isRestLine(this.phoneDefaultLineId)){if(!BX.MessengerCommon.isDesktop()){this.BXIM.openConfirm(BX.message("IM_CALL_NO_WEBRT"),[this.BXIM.platformName==""?null:new BX.PopupWindowButton({text:BX.message("IM_M_CALL_BTN_DOWNLOAD"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){window.open(BX.browser.IsMac()?"http://dl.bitrix24.com/b24/bitrix24_desktop.dmg":"http://dl.bitrix24.com/b24/bitrix24_desktop.exe","desktopApp");BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})])}return false}if(this.callInit||this.callActive||this.phoneCurrentCall||BX.localStorage.get("viInitedCall")||BX.localStorage.get("viExternalCard")){return false}if(this.phoneKeypad!==null){this.phoneKeypad.close();return false}if(this.messenger.popupMessenger){if(!this.callActive){if(this.messenger.externalMenu){t=BX("bx-desktop-tab-im-phone");s=-110;i=60}else if(this.messenger.popupContactListSearchCall){BX.addClass(this.messenger.popupContactListSearchCall,"bx-messenger-input-search-call-active");t=this.messenger.popupContactListSearchCall;s=-10;i=-52}else if(this.messenger.popupMessengerPanelButtonCall3){t=this.messenger.popupMessengerPanelButtonCall3;s=-10;i=-52}}else{t=BX("bx-messenger-call-overlay-button-keypad");s=7;i=BX.MessengerCommon.isPage()?-90:-65;if(BX.MessengerCommon.isPage()){BX.MessengerWindow.closeTab("im-phone")}}}else{t=this.notify.panelButtonCall;s=this.notify.panelButtonCallOffsetTop?this.notify.panelButtonCallOffsetTop:5;i=this.notify.panelButtonCallOffsetLeft?this.notify.panelButtonCallOffsetLeft:-75;n=this.notify.panelButtonCallAnlgePosition?this.notify.panelButtonCallAnlgePosition:n;a=this.notify.panelButtonCallAnlgeOffset?this.notify.panelButtonCallAnlgeOffset:a}this.messenger.setClosingByEsc(false);this.phoneKeypad=new BX.PhoneKeypad({bindElement:t,offsetTop:s,offsetLeft:i,anglePosition:n,angleOffset:a,defaultLineId:this.phoneDefaultLineId,lines:this.phoneLines,availableLines:this.phoneAvailableLines,history:this.phoneGetHistory(),onDial:function(e){var t={};this.phoneKeypad.close();if(e.lineId){t["LINE_ID"]=e.lineId}this.phoneCall(e.phoneNumber,t)}.bind(this),onClose:function(){this.phoneKeypad=null;if(this.messenger.popupMessenger&&this.messenger.externalMenu&&BX.MessengerCommon.isPage()){if(BX.MessengerWindow.lastTabTarget!="im"){BX.MessengerWindow.changeTab(this.BXIM.dialogOpen?"im":"notify")}else{BX.MessengerWindow.closeTab("im-phone")}}this.messenger.setClosingByEsc(true);BX.removeClass(this.messenger.popupContactListSearchCall,"bx-messenger-input-search-call-active")}.bind(this)});this.phoneKeypad.show()};BX.IM.WebRTC.prototype.phoneCount=function(e){var t=0;if(typeof e==="object"){if(e.PERSONAL_MOBILE)t++;else if(e.PERSONAL_PHONE)t++;else if(e.WORK_PHONE)t++}return t};BX.IM.WebRTC.prototype.phoneDisconnectAfterCall=function(e){if(BX.MessengerCommon.isDesktop()){e=false}this.phoneDisconnectAfterCallFlag=e===false?false:true;return true};BX.IM.WebRTC.prototype.phoneDisplayExternal=function(e){var t=e.phoneNumber;this.phoneLog(t,e);this.phoneNumberUser=BX.util.htmlspecialchars(t);t=BX.MessengerCommon.phoneCorrect(t);if(typeof e!="object")e={};if(this.callActive||this.callInit)return;if(this.phoneCallView)return;this.initiator=true;this.callInitUserId=this.BXIM.userId;this.callInit=true;this.callActive=false;this.callUserId=0;this.callChatId=0;this.callToGroup=0;this.callGroupUsers=[];this.phoneNumber=t;this.phoneCallView=new BX.PhoneCallView({BXIM:this.BXIM,callId:e.callId,config:e.config,direction:BX.PhoneCallView.Direction.outgoing,phoneNumber:this.phoneNumber,statusText:BX.message("IM_M_CALL_ST_CONNECT"),hasSipPhone:true,deviceCall:true,portalCall:e.portalCall,portalCallUserId:e.portalCallUserId,portalCallData:e.portalCallData,portalCallQueueName:e.portalCallQueueName,crm:e.showCrmCard,crmEntityType:e.crmEntityType,crmEntityId:e.crmEntityId,crmData:this.phoneCrm});this.bindPhoneViewCallbacks(this.phoneCallView);this.phoneCallView.setUiState(BX.PhoneCallView.UiState.idle);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connected);this.phoneCallView.show()};BX.IM.WebRTC.prototype.loadPhoneLines=function(){return new Promise(function(e,t){if(this.phoneLines){return e(this.phoneLines)}var s=false;BX.ajax.runAction("voximplant.callView.getLines").then(function(t){this.phoneLines=t.data;BX.localStorage.set("bx-im-phone-lines",this.phoneLines,86400);if(!s){e(this.phoneLines)}}.bind(this)).catch((function(e){console.error(e);t(e)}));var i=BX.localStorage.get("bx-im-phone-lines");if(i){this.phoneLines=i;e(i);s=true}}.bind(this))};BX.IM.WebRTC.prototype.isRestLine=function(e){if(!this.phoneLines){throw new Error("Phone lines are not loaded. Call BX.IM.WebRTC.loadPhoneLines prior to using this method")}if(this.phoneLines.hasOwnProperty(e))return this.phoneLines[e].TYPE==="REST";else return false};BX.IM.WebRTC.prototype.setPhoneNumber=function(e){var t=/(\+?\d+)([;#]*)([\d,]*)/.exec(e);this.phoneFullNumber=e;if(t){this.phoneNumber=t[1]}};BX.IM.WebRTC.prototype.phoneCall=function(e,t){this.loadPhoneLines().then(function(){this._doPhoneCall(e,t)}.bind(this))};BX.IM.WebRTC.prototype._doPhoneCall=function(e,t){if(BX.localStorage.get("viInitedCall"))return false;if(this.phoneCallView)return false;if(this.callActive||this.callInit)return false;this.closeKeyPad();if(e!=""){this.phoneAddToHistory(e)}var s=BX.type.isPlainObject(t)&&t["LINE_ID"]?t["LINE_ID"]:this.phoneDefaultLineId;if(this.isRestLine(s)){BX.MessengerCommon.phoneStartCallViaRestApp(e,s,t);return true}this.phoneLog(e,t);this.phoneNumberUser=BX.util.htmlspecialchars(e);numberOriginal=e;if(typeof t!="object")t={};var i=BX.MessengerCommon.phoneCorrect(e);if(i.length<=0){this.BXIM.openConfirm({title:BX.message("IM_PHONE_WRONG_NUMBER"),message:BX.message("IM_PHONE_WRONG_NUMBER_DESC")});return false}this.setPhoneNumber(i);if(!this.phoneSupport()){if(!BX.MessengerCommon.isDesktop()){this.BXIM.openConfirm(BX.message("IM_CALL_NO_WEBRT"),[new BX.PopupWindowButton({text:BX.message("IM_M_CALL_BTN_DOWNLOAD"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){window.open(BX.browser.IsMac()?"http://dl.bitrix24.com/b24/bitrix24_desktop.dmg":"http://dl.bitrix24.com/b24/bitrix24_desktop.exe","desktopApp");BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})])}return false}this.initiator=true;this.callInitUserId=this.BXIM.userId;this.callInit=true;this.callActive=false;this.callUserId=0;this.callChatId=0;this.callToGroup=0;this.phoneCallExternal=this.phoneDeviceCall();this.callGroupUsers=[];this.phoneParams=t;this.phoneCallView=new BX.PhoneCallView({phoneNumber:this.phoneFullNumber,callTitle:this.phoneNumberUser,fromUserId:this.BXIM.userId,direction:BX.PhoneCallView.Direction.outgoing,uiState:BX.PhoneCallView.UiState.connectingOutgoing,status:BX.message("IM_M_CALL_ST_CONNECT"),hasSipPhone:this.phoneDeviceActive,deviceCall:this.phoneCallExternal,BXIM:this.BXIM,crmData:this.phoneCrm,autoFold:t["AUTO_FOLD"]===true});this.bindPhoneViewCallbacks(this.phoneCallView);this.phoneCallView.show();this.BXIM.playSound("start");if(this.phoneCallExternal){this.phoneCallDevice="PHONE";this.phoneCallView.setProgress("wait");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_PHONE_NOTICE"));BX.MessengerCommon.phoneCommand("deviceStartCall",{NUMBER:numberOriginal.toString().replace(/[^0-9+*#,;]/g,""),PARAMS:t},true,function(e){if(e.ERROR){this.phoneCallView.setProgress("error");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_PHONE_ERROR"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle)}else{this.phoneCallId=e.CALL_ID;this.phoneCallExternal=e.EXTERNAL==true;this.phoneCallConfig=e.CONFIG;this.phoneCallView.setProgress("wait");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_WAIT_PHONE"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingOutgoing);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting)}if(BX.MessengerCommon.isDesktop()){BX.desktop.changeTab("im");BX.desktop.windowCommand("show");this.BXIM.desktop.closeTopmostWindow()}}.bind(this))}else{this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_CALL_INIT"));this.phoneApiInit().then(function(){this.phoneOnSDKReady()}.bind(this))}};BX.IM.WebRTC.prototype.phoneAddToHistory=function(e){var t=this.phoneHistory;var s=t.indexOf(e);if(s===0){}else if(s>0){t.splice(s,s);this.phoneHistory=[e].concat(t)}else{this.phoneHistory=[e].concat(t.slice(0,4))}this.BXIM.setLocalConfig("phone-history",this.phoneHistory)};BX.IM.WebRTC.prototype.phoneGetHistory=function(){return this.phoneHistory};BX.IM.WebRTC.prototype.startCallList=function(e,t){e=parseInt(e);if(e==0||this.callActive||this.callInit||this.phoneCallView||this.isCallListMode())return false;this.callListId=e;this.phoneCallView=new BX.PhoneCallView({crm:true,callListId:e,callListStatusId:t.callListStatusId,callListItemIndex:t.callListItemIndex,direction:BX.PhoneCallView.Direction.outgoing,makeCall:t.makeCall===true,uiState:BX.PhoneCallView.UiState.outgoing,BXIM:this.BXIM,webformId:t.webformId||0,webformSecCode:t.webformSecCode||"",hasSipPhone:this.phoneDeviceActive,deviceCall:this.phoneDeviceCall(),crmData:this.phoneCrm});this.bindPhoneViewCallbacks(this.phoneCallView);this.phoneCallView.show();return true};BX.IM.WebRTC.prototype.isCallListMode=function(){return this.callListId>0};BX.IM.WebRTC.prototype.callListMakeCall=function(e){this.loadPhoneLines().then(function(){this._doCallListMakeCall(e)}.bind(this))};BX.IM.WebRTC.prototype._doCallListMakeCall=function(e){if(this.isRestLine(this.phoneDefaultLineId)){BX.MessengerCommon.phoneStartCallViaRestApp(e.phoneNumber,this.phoneDefaultLineId,{ENTITY_TYPE:"CRM_"+e.crmEntityType,ENTITY_ID:e.crmEntityId,CALL_LIST_ID:e.callListId});return true}if(BX.localStorage.get("viInitedCall"))return false;if(this.callActive||this.callInit)return false;if(!this.phoneCallView)return false;this.lastCallListCallParams=e;if(typeof params!="object")params={};if(!this.phoneSupport()){this.phoneCallView.setStatusText(BX.message("IM_CALL_NO_WEBRT"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);return false}var t=e.phoneNumber;var s=t;var i=BX.MessengerCommon.phoneCorrect(t);if(i.length<=0){this.phoneCallView.setStatusText(BX.message("IM_PHONE_WRONG_NUMBER_DESC").replace("<br/>","\n"));return false}this.initiator=true;this.callInitUserId=this.BXIM.userId;this.callInit=true;this.callActive=false;this.callUserId=0;this.callChatId=0;this.callToGroup=0;this.phoneCallExternal=this.phoneDeviceCall();this.callGroupUsers=[];this.setPhoneNumber(i);this.phoneParams={ENTITY_TYPE:"CRM_"+e.crmEntityType,ENTITY_ID:e.crmEntityId,CALL_LIST_ID:e.callListId};this.BXIM.playSound("start");if(this.phoneCallExternal){this.phoneCallDevice="PHONE";this.phoneCallView.setProgress("wait");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_PHONE_NOTICE"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingOutgoing);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting);BX.MessengerCommon.phoneCommand("deviceStartCall",{NUMBER:s.toString().replace(/[^0-9+*#,;]/g,""),PARAMS:this.phoneParams},true,function(e){if(e.ERROR){this.phoneCallView.setProgress("error");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_PHONE_ERROR"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle)}else{this.phoneCallId=e.CALL_ID;this.phoneCallExternal=params.EXTERNAL==true;this.phoneCallConfig=params.CONFIG;this.phoneCallView.setProgress("wait");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_WAIT_PHONE"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingOutgoing);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting)}if(BX.MessengerCommon.isDesktop()){BX.desktop.changeTab("im");BX.desktop.windowCommand("show");this.BXIM.desktop.closeTopmostWindow()}}.bind(this))}else{this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_CALL_INIT"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingOutgoing);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting);this.phoneApiInit().then(function(){this.phoneOnSDKReady()}.bind(this))}};BX.IM.WebRTC.prototype.phoneIncomingAnswer=function(){this.BXIM.stopRepeatSound("ringtone");this.callSelfDisabled=true;BX.MessengerCommon.phoneCommand("answer",{CALL_ID:this.phoneCallId});this.closeKeyPad();this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingIncoming);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting);this.phoneApiInit().then(function(){BX.MessengerCommon.phoneCommand("ready",{CALL_ID:this.phoneCallId})}.bind(this))};BX.IM.WebRTC.prototype.phoneApiInit=function(){var e=new BX.Promise;if(!this.phoneSupport()){e.reject("Telephony is not supported");return e}if(this.phoneAPI&&this.phoneAPI.connected()){if(this.defaultMicrophone){this.phoneAPI.useAudioSource(this.defaultMicrophone)}if(this.defaultSpeaker){VoxImplant.Hardware.AudioDeviceManager.get().setDefaultAudioSettings({outputId:this.defaultSpeaker})}e.resolve();return e}var t={useRTCOnly:true,micRequired:true,videoSupport:false,progressTone:false};if(this.enableMicAutoParameters===false){t.audioConstraints={optional:[{echoCancellation:false},{googEchoCancellation:false},{googEchoCancellation2:false},{googDAEchoCancellation:false},{googAutoGainControl:false},{googAutoGainControl2:false},{mozAutoGainControl:false},{googNoiseSuppression:false},{googNoiseSuppression2:false},{googHighpassFilter:false},{googTypingNoiseDetection:false},{googAudioMirroring:false}]}}BX.Voximplant.getClient({debug:this.debug,apiParameters:t}).then(function(t){this.phoneAPI=t;if(this.defaultMicrophone){this.phoneAPI.useAudioSource(this.defaultMicrophone)}if(this.defaultSpeaker){VoxImplant.Hardware.AudioDeviceManager.get().setDefaultAudioSettings({outputId:this.defaultSpeaker})}if(BX.MessengerCommon.isDesktop()&&BX.type.isFunction(this.phoneAPI.setLoggerCallback)){this.phoneAPI.enableSilentLogging();this.phoneAPI.setLoggerCallback(function(e){this.phoneLog(e.label+": "+e.message)}.bind(this))}this.phoneAPI.addEventListener(VoxImplant.Events.ConnectionFailed,this.phoneOnConnectionFailed.bind(this));this.phoneAPI.addEventListener(VoxImplant.Events.ConnectionClosed,this.phoneOnConnectionClosed.bind(this));this.phoneAPI.addEventListener(VoxImplant.Events.IncomingCall,this.phoneOnIncomingCall.bind(this));this.phoneAPI.addEventListener(VoxImplant.Events.MicAccessResult,this.phoneOnMicResult.bind(this));this.phoneAPI.addEventListener(VoxImplant.Events.SourcesInfoUpdated,this.phoneOnInfoUpdated.bind(this));this.phoneAPI.addEventListener(VoxImplant.Events.NetStatsReceived,this.phoneOnNetStatsReceived.bind(this));e.resolve()}.bind(this)).catch(function(t){BX.MessengerCommon.phoneCommand("connectionError",{CALL_ID:this.BXIM.webrtc.phoneCallId,ERROR:t});this.phoneCallFinish();this.BXIM.playSound("error");this.callOverlayProgress("offline");this.callAbort(BX.message("IM_PHONE_ERROR"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.error);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);e.reject("Could not connect to Voximplant cloud")}.bind(this));return e;if(this.phoneAPI){if(this.phoneSDKinit){if(this.phoneIncoming){BX.MessengerCommon.phoneCommand("ready",{CALL_ID:this.phoneCallId})}else if(this.callInitUserId==this.BXIM.userId){this.phoneOnSDKReady()}}else{this.phoneOnSDKReady()}return true}this.phoneAPI=VoxImplant.getInstance();this.phoneAPI.addEventListener(VoxImplant.Events.SDKReady,BX.delegate(this.phoneOnSDKReady,this));this.phoneAPI.addEventListener(VoxImplant.Events.ConnectionEstablished,BX.delegate(this.phoneOnConnectionEstablished,this));this.phoneAPI.addEventListener(VoxImplant.Events.ConnectionFailed,BX.delegate(this.phoneOnConnectionFailed,this));this.phoneAPI.addEventListener(VoxImplant.Events.ConnectionClosed,BX.delegate(this.phoneOnConnectionClosed,this));this.phoneAPI.addEventListener(VoxImplant.Events.IncomingCall,BX.delegate(this.phoneOnIncomingCall,this));this.phoneAPI.addEventListener(VoxImplant.Events.AuthResult,BX.delegate(this.phoneOnAuthResult,this));this.phoneAPI.addEventListener(VoxImplant.Events.MicAccessResult,BX.delegate(this.phoneOnMicResult,this));this.phoneAPI.addEventListener(VoxImplant.Events.SourcesInfoUpdated,BX.delegate(this.phoneOnInfoUpdated,this));this.phoneAPI.addEventListener(VoxImplant.Events.NetStatsReceived,BX.delegate(this.phoneOnNetStatsReceived,this));var t={useRTCOnly:true,micRequired:true,videoSupport:false,progressTone:false};if(this.debug){t.showDebugInfo=true;t.showWarnings=true;t.prettyPrint=true}if(this.enableMicAutoParameters===false){t.audioConstraints={optional:[{echoCancellation:false},{googEchoCancellation:false},{googEchoCancellation2:false},{googDAEchoCancellation:false},{googAutoGainControl:false},{googAutoGainControl2:false},{mozAutoGainControl:false},{googNoiseSuppression:false},{googNoiseSuppression2:false},{googHighpassFilter:false},{googTypingNoiseDetection:false},{googAudioMirroring:false}]}}this.phoneAPI.init(t);if(this.defaultMicrophone){this.phoneAPI.useAudioSource(this.defaultMicrophone)}if(BX.MessengerCommon.isDesktop()&&BX.type.isFunction(this.phoneAPI.setLoggerCallback)){this.phoneAPI.enableSilentLogging();this.phoneAPI.setLoggerCallback(function(e){this.phoneLog(e.label+": "+e.message)}.bind(this))}this.phoneSDKinit=true;return true};BX.IM.WebRTC.prototype.phoneOnSDKReady=function(e){this.phoneLog("SDK ready");e=e||{};e.delay=e.delay||false;if(!e.delay&&this.phoneDeviceActive){if(!this.phoneIncoming&&!this.phoneDeviceCall()){if(BX.MessengerCommon.isPage()){BX.MessengerWindow.changeTab("im")}if(BX.MessengerCommon.isDesktop()){BX.desktop.windowCommand("show");this.desktop.closeTopmostWindow()}this.callOverlayProgress("wait");this.callDialogAllowTimeout=setTimeout(BX.delegate((function(){this.phoneOnSDKReady({delay:true})}),this),5e3);return false}}if(BX.MessengerCommon.isDesktop()&&this.BXIM.init){BX.desktop.syncPause(true)}if(!this.phoneAPI.connected()){this.phoneAPI.connect(false);clearTimeout(this.callDialogAllowTimeout);this.callDialogAllowTimeout=setTimeout(BX.delegate((function(){this.callDialogAllowShow()}),this),1500);this.phoneCallView.setProgress("wait");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_WAIT_ACCESS"));this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting);if(this.phoneIncoming)this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingIncoming);else this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingOutgoing)}else{this.phoneLog("Connection exists");this.phoneCallView.setProgress("connect");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_CONNECT"));this.phoneOnAuthResult({result:true});this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting);if(this.phoneIncoming)this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingIncoming);else this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connectingOutgoing)}};BX.IM.WebRTC.prototype.phoneOnConnectionEstablished=function(e){BX.MessengerCommon.phoneOnConnectionEstablished(e);this.phoneAPI.requestOneTimeLoginKey(this.phoneLogin+"@"+this.phoneServer)};BX.IM.WebRTC.prototype.phoneOnConnectionFailed=function(e){BX.MessengerCommon.phoneOnConnectionFailed(e)};BX.IM.WebRTC.prototype.phoneOnConnectionClosed=function(e){BX.MessengerCommon.phoneOnConnectionClosed(e)};BX.IM.WebRTC.prototype.phoneOnIncomingCall=function(e){BX.MessengerCommon.phoneOnIncomingCall(e)};BX.IM.WebRTC.prototype.phoneOnAuthResult=function(e){BX.MessengerCommon.phoneOnAuthResult(e)};BX.IM.WebRTC.prototype.phoneOnMicResult=function(e){BX.MessengerCommon.phoneOnMicResult(e)};BX.IM.WebRTC.prototype.phoneOnInfoUpdated=function(e){this.phoneLog("Info updated",this.phoneAPI.audioSources(),this.phoneAPI.videoSources())};BX.IM.WebRTC.prototype.phoneOnCallConnected=function(e){if(BX.MessengerCommon.isDesktop()&&this.BXIM.init){BX.desktop.syncPause(true)}this.BXIM.stopRepeatSound("ringtone",5e3);BX.localStorage.set("viInitedCall",true,7);clearInterval(this.phoneConnectedInterval);this.phoneConnectedInterval=setInterval((function(){BX.localStorage.set("viInitedCall",true,7)}),5e3);this.desktop.closeTopmostWindow();this.phoneLog("Call connected",e);this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connected);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connected);this.phoneCallView.setProgress("online");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_ONLINE"));this.callActive=true;if(!this.BXIM.windowFocus)this.desktop.openCallFloatDialog()};BX.IM.WebRTC.prototype.phoneOnCallDisconnected=function(e){BX.MessengerCommon.phoneOnCallDisconnected(e)};BX.IM.WebRTC.prototype.phoneOnCallFailed=function(e){BX.MessengerCommon.phoneOnCallFailed(e)};BX.IM.WebRTC.prototype.phoneOnProgressToneStart=function(e){BX.MessengerCommon.phoneOnProgressToneStart(e)};BX.IM.WebRTC.prototype.phoneOnProgressToneStop=function(e){BX.MessengerCommon.phoneOnProgressToneStop(e)};BX.IM.WebRTC.prototype.phoneOnNetStatsReceived=function(e){BX.MessengerCommon.phoneOnNetStatsReceived(e)};BX.IM.WebRTC.prototype.phoneCallFinish=function(){BX.MessengerCommon.phoneCallFinish()};BX.IM.WebRTC.prototype.bindPhoneViewCallbacks=function(e){if(!e instanceof BX.PhoneCallView)return false;e.setCallback("mute",function(){this.phoneMute()}.bind(this));e.setCallback("unmute",function(){this.phoneUnmute()}.bind(this));e.setCallback("hold",function(){BX.MessengerCommon.phoneHold()}.bind(this));e.setCallback("unhold",function(){BX.MessengerCommon.phoneUnhold()}.bind(this));e.setCallback("answer",this.phoneIncomingAnswer.bind(this));e.setCallback("skip",function(){BX.MessengerCommon.phoneCommand("skip",{CALL_ID:this.BXIM.webrtc.phoneCallId});this.phoneCallFinish();this.callAbort();this.phoneCallView.close()}.bind(this));e.setCallback("hangup",function(){if(this.phoneCallExternal&&this.phoneCallId){BX.MessengerCommon.phoneCommand("deviceHungup",{CALL_ID:this.phoneCallId})}this.phoneCallFinish();this.callAbort();this.BXIM.playSound("stop");this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_FINISHED"));this.phoneCallView.setCallState(BX.PhoneCallView.CallState.idle);if(this.isCallListMode()){this.phoneCallView.setUiState(BX.PhoneCallView.UiState.outgoing);if(this.phoneCallView.isFolded()){this.phoneCallView.unfold()}}else{this.phoneCallView.close()}}.bind(this));e.setCallback("transfer",function(e){if(e.type=="user"||e.type=="pstn"||e.type=="queue"){this.phoneTransferTargetType=e.type;this.phoneTransferTargetId=e.target;this.sendInviteTransfer()}else{console.error("Unknown transfer type",e)}}.bind(this));e.setCallback("cancelTransfer",this.cancelInviteTransfer.bind(this));e.setCallback("completeTransfer",this.completeTransfer.bind(this));e.setCallback("callListMakeCall",this.callListMakeCall.bind(this));e.setCallback("close",function(){this.callListId=0;if(this.phoneCallView){this.phoneCallView.dispose();this.phoneCallView=null}if(this.phoneCallDevice=="PHONE"){this.phoneCallId="";this.callActive=false;this.callInit=false;this.phoneCallExternal=false;this.callSelfDisabled=false;clearInterval(this.BXIM.webrtc.phoneConnectedInterval);BX.localStorage.set("viExternalCard",false)}}.bind(this));e.setCallback("switchDevice",function(e){var t=e.phoneNumber;var s=this.lastCallListCallParams;if(this.phoneCallExternal&&this.phoneCallId){BX.MessengerCommon.phoneCommand("deviceHungup",{CALL_ID:this.phoneCallId})}this.phoneCallFinish();this.callAbort();this.phoneDeviceCall(!this.phoneDeviceCall());this.phoneCallView.setDeviceCall(this.phoneDeviceCall());if(this.isCallListMode()){this.callListMakeCall(s)}else{this.phoneCallView.close();this.phoneCall(t)}}.bind(this));e.setCallback("qualityGraded",function(e){var t={COMMAND:"gradeQuality",grade:e};if(this.phoneCurrentCall)this.phoneCurrentCall.sendMessage(JSON.stringify(t))}.bind(this));e.setCallback("dialpadButtonClicked",function(e){BX.MessengerCommon.phoneSendDTMF(e)}.bind(this))};BX.IM.WebRTC.prototype.phoneIncomingWait=function(e){e.isCallback=!!e.isCallback;this.phoneLog("incoming call",JSON.stringify(e));if(!this.phoneSupport()){if(!BX.MessengerCommon.isDesktop()){this.BXIM.openConfirm(BX.message("IM_CALL_NO_WEBRT"),[new BX.PopupWindowButton({text:BX.message("IM_M_CALL_BTN_DOWNLOAD"),className:"popup-window-button-accept",events:{click:BX.delegate((function(){window.open(BX.browser.IsMac()?"http://dl.bitrix24.com/b24/bitrix24_desktop.dmg":"http://dl.bitrix24.com/b24/bitrix24_desktop.exe","desktopApp");BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})])}return false}this.phoneNumberUser=BX.util.htmlspecialchars(e.callerId);e.callerId=e.callerId.replace(/[^a-zA-Z0-9\.]/g,"");if(this.callActive||this.callInit)return false;this.initiator=true;this.callInitUserId=0;this.callInit=true;this.callActive=false;this.callUserId=0;this.callChatId=0;this.callToGroup=0;this.callGroupUsers=[];this.phoneIncoming=true;this.phoneCallId=e.callId;this.phoneNumber=e.callerId;this.phoneParams={};var t;if(e.isCallback)t=BX.PhoneCallView.Direction.callback;else t=BX.PhoneCallView.Direction.incoming;this.phoneCallView=new BX.PhoneCallView({BXIM:this.BXIM,userId:this.BXIM.userId,phoneNumber:this.phoneNumber,lineNumber:e.lineNumber,companyPhoneNumber:e.companyPhoneNumber,callTitle:this.phoneNumberUser,direction:t,transfer:this.phoneTransferEnabled,statusText:e.isCallback?BX.message("IM_PHONE_INVITE_CALLBACK"):BX.message("IM_PHONE_INVITE"),crm:e.showCrmCard,crmEntityType:e.crmEntityType,crmEntityId:e.crmEntityId,crmActivityId:e.crmActivityId,crmActivityEditUrl:e.crmActivityEditUrl,callId:this.phoneCallId,crmData:this.phoneCrm});this.bindPhoneViewCallbacks(this.phoneCallView);this.phoneCallView.setUiState(BX.PhoneCallView.UiState.incoming);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connecting);if(e.config){this.phoneCallView.setConfig(e.config)}this.phoneCallView.show();if(e.portalCall){this.phoneCallView.setPortalCall(true);this.phoneCallView.setPortalCallData(e.portalCallData);this.phoneCallView.setPortalCallUserId(e.portalCallUserId)}if(!this.BXIM.windowFocus&&this.BXIM.notifyManager.nativeNotifyGranted()){var s={title:BX.message("IM_PHONE_DESC"),text:BX.util.htmlspecialcharsback(this.phoneCallView.getTitle()),icon:this.callUserId?this.messenger.users[this.callUserId].avatar:"",tag:"im-call"};s.onshow=function(){var e=this;setTimeout((function(){e.close()}),5e3)};s.onclick=function(){window.focus();this.close()};this.BXIM.notifyManager.nativeNotify(s)}};BX.IM.WebRTC.prototype.sendInviteTransfer=function(){if(!this.phoneCurrentCall&&this.phoneCallDevice=="WEBRTC")return false;if(!this.phoneTransferTargetType||!this.phoneTransferTargetId)return false;if(this.popupTransferDialog)this.popupTransferDialog.close();BX.MessengerCommon.phoneCommand("startTransfer",{CALL_ID:this.phoneCallId,TARGET_TYPE:this.phoneTransferTargetType,TARGET_ID:this.phoneTransferTargetId}).then(function(e){if(e.SUCCESS=="Y"){this.phoneTransferEnabled=true;BX.localStorage.set("vite",true,1);this.phoneTransferCallId=e.DATA.CALL.CALL_ID;this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_TRANSFER"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.transferring)}else{console.error("Could not start call transfer. Error: ",e.ERRORS)}}.bind(this))};BX.IM.WebRTC.prototype.cancelInviteTransfer=function(){if(!this.phoneCurrentCall&&this.phoneCallDevice=="WEBRTC")return false;this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_ONLINE"));this.phoneCallView.setUiState(BX.PhoneCallView.UiState.connected);if(this.phoneTransferEnabled){BX.MessengerCommon.phoneCommand("cancelTransfer",{CALL_ID:this.phoneTransferCallId})}this.phoneTransferTargetId=0;this.phoneTransferTargetType="";this.phoneTransferCallId="";this.phoneTransferEnabled=false;BX.localStorage.set("vite",false,1)};BX.IM.WebRTC.prototype.errorInviteTransfer=function(e,t){if(!this.phoneTransferEnabled)return false;if(e=="403"||e=="410"||e=="486"){this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_TRANSFER_"+e))}else{this.phoneCallView.setStatusText(BX.message("IM_M_CALL_ST_TRANSFER_1"))}this.BXIM.playSound("error",true);this.phoneCallView.setUiState(BX.PhoneCallView.UiState.transferFailed);this.phoneTransferTargetId=0;this.phoneTransferTargetType="";this.phoneTransferCallId="";this.phoneTransferEnabled=false;BX.localStorage.set("vite",false,1)};BX.IM.WebRTC.prototype.completeTransfer=function(){BX.MessengerCommon.phoneCommand("completeTransfer",{CALL_ID:this.phoneTransferCallId})};BX.IM.WebRTC.prototype.startMicTest=function(){var e,t,s,i,n,a;var o;var r={audio:{deviceId:{ideal:this.defaultMicrophone}},video:{deviceId:{ideal:this.defaultCamera}}};var l;var p="waiting";var h=this;var c=[];var u=BX.create("div",{props:{className:"bx-messenger-mic-test"},children:[BX.create("div",{props:{className:"bx-messenger-mic-test-videos"},children:[BX.create("div",{props:{className:"bx-messenger-mic-test-video-wrap"},children:[n=BX.create("video",{props:{className:"bx-messenger-mic-test-video-self"}})]}),BX.create("div",{props:{className:"bx-messenger-mic-test-video-wrap"},children:[a=BX.create("video",{props:{className:"bx-messenger-mic-test-video-self"},events:{ended:function(){p="idle";t.innerText=BX.message("IM_CALL_MIC_TEST_PLAY_START");e.disabled=false}}})]})]}),BX.create("div",{props:{className:"bx-messenger-mic-test-buttons"},children:[e=BX.create("button",{text:BX.message("IM_CALL_MIC_TEST_RECORD_START"),events:{click:function(){if(p=="idle"){o=new MediaRecorder(h.micTestVideoStream,{mimeType:"video/webm; codecs=vp9"});o.start();o.ondataavailable=function(e){c.push(e.data)};o.onstop=function(){l=new Blob(c,{type:"video/webm"});a.srcObject=l;p="idle";t.disabled=false;e.innerText=BX.message("IM_CALL_MIC_TEST_RECORD_START")};a.src=null;e.innerText=BX.message("IM_CALL_MIC_TEST_RECORD_STOP");t.disabled=true;p="recording"}else if(p=="recording"){o.stop()}else if(p=="playing"){}}}}),t=BX.create("button",{text:BX.message("IM_CALL_MIC_TEST_PLAY_START"),events:{click:function(){if(p=="idle"){a.play();p="playing";t.innerText=BX.message("IM_CALL_MIC_TEST_PLAY_STOP");e.disabled=true}else if(p=="playing"){a.pause();p="idle";t.innerText=BX.message("IM_CALL_MIC_TEST_PLAY_START");e.disabled=false}}}}),s=BX.create("button",{text:BX.message("IM_CALL_MIC_TEST_CLOSE"),events:{click:function(){BX.webrtc.stopMediaStream(h.micTestVideoStream);h.micTestVideoStream=null;BX.remove(u)}}})]}),i=BX.create("div",{props:{className:"bx-messenger-mic-test-button-exit"}})]});this.messenger.popupMessengerContent.insertBefore(u,this.messenger.popupMessengerContent.firstChild);n.volume=0;e.disabled=true;t.disabled=true;navigator.mediaDevices.getUserMedia(r).then((function(t){h.micTestVideoStream=t;n.srcObject=h.micTestVideoStream;n.play();p="idle";e.disabled=false}))};BX.IM.WebRTC.prototype.showExternalCall=function(e){var t=this;var s;if(this.phoneCallView)return;setTimeout((function(){BX.localStorage.set("viExternalCard",true,5)}),100);clearInterval(this.phoneConnectedInterval);this.phoneConnectedInterval=setInterval((function(){if(t.phoneCallExternal){BX.localStorage.set("viExternalCard",true,5)}}),5e3);this.phoneCallId=e.callId;this.callActive=true;this.phoneCallExternal=true;if(e.isCallback)s=BX.PhoneCallView.Direction.callback;else if(e.fromUserId>0)s=BX.PhoneCallView.Direction.outgoing;else s=BX.PhoneCallView.Direction.incoming;this.phoneCallView=new BX.PhoneCallView({BXIM:this.BXIM,callId:e.callId,direction:s,phoneNumber:e.phoneNumber,lineNumber:e.lineNumber,companyPhoneNumber:e.companyPhoneNumber,fromUserId:e.fromUserId,toUserId:e.toUserId,crm:e.showCrmCard,crmEntityType:e.crmEntityType,crmEntityId:e.crmEntityId,crmBindings:e.crmBindings,crmActivityId:e.crmActivityId,crmActivityEditUrl:e.crmActivityEditUrl,crmData:this.phoneCrm,isExternalCall:true});this.bindPhoneViewCallbacksExternalCall(this.phoneCallView);this.phoneCallView.setUiState(BX.PhoneCallView.UiState.externalCard);this.phoneCallView.setCallState(BX.PhoneCallView.CallState.connected);this.phoneCallView.setConfig(e.config);this.phoneCallView.show();if(e.portalCall){this.phoneCallView.setPortalCall(true);this.phoneCallView.setPortalCallData(e.portalCallData);this.phoneCallView.setPortalCallUserId(e.portalCallUserId)}};BX.IM.WebRTC.prototype.bindPhoneViewCallbacksExternalCall=function(e){e.setCallback("close",function(){if(this.phoneCallView){this.phoneCallView.dispose();this.phoneCallView=null}this.phoneCallId="";this.callActive=false;this.phoneCallExternal=false;this.callSelfDisabled=false;clearInterval(this.BXIM.webrtc.phoneConnectedInterval);BX.localStorage.set("viExternalCard",false)}.bind(this))};BX.IM.WebRTC.prototype.hideExternalCall=function(e){if(this.phoneCallView&&!this.phoneCallView.isCallListMode()){this.phoneCallView.autoClose()}};BX.IM.WebRTC.prototype.phoneLog=function(){if(BX.MessengerCommon.isDesktop()){var e="";for(var t=0;t<arguments.length;t++){if(BX.type.isPlainObject(arguments[t])){try{e=e+" | "+JSON.stringify(arguments[t])}catch(t){e=e+" | (circular structure)"}}else{e=e+" | "+arguments[t]}}BX.desktop.log("phone."+this.BXIM.userEmail+".log",e.substr(3))}if(this.debug){if(console){try{console.log("Phone Log",JSON.stringify(arguments))}catch(e){console.log("Phone Log",arguments[0])}}}};BX.IM.ScreenSharing=function(e,t){if(this.parent){this.parent.constructor.apply(this,arguments)}t=t||{};this.webrtc=e;this.BXIM=this.webrtc.BXIM;this.debug=true;this.sdpConstraints={mandatory:{OfferToReceiveAudio:false,OfferToReceiveVideo:true}};this.oneway=true;this.sourceSelf=null;this.sourceOpponent=null;this.callWindowBeforeUnload=null;BX.addCustomEvent("onImCallEnd",BX.delegate((function(e,t){this.callDecline(false)}),this));BX.addCustomEvent("onPullEvent-im",BX.delegate((function(e,t){if(e=="screenSharing"){if(t.command=="inactive"){this.callDecline(false)}else if(!this.webrtc.callActive||this.webrtc.callUserId!=t.senderId){this.callCommand("inactive")}else{this.log("Incoming",t.command,t.senderId,JSON.stringify(t));if(t.command=="invite"){if(this.callInit){this.deleteEvents()}this.initiator=false;this.callVideo=true;this.callInit=true;this.callUserId=t.senderId;this.callInitUserId=t.senderId;this.callAnswer()}else if(t.command=="answer"&&this.initiator){this.startScreenSharing()}else if(t.command=="decline"){this.callDecline()}else if(t.command=="ready"){this.log("Opponent "+t.senderId+" ready!");this.connected[t.senderId]=true}else if(t.command=="reconnect"){clearTimeout(this.pcConnectTimeout[t.senderId]);clearTimeout(this.initPeerConnectionTimeout[t.senderId]);if(this.pc[t.senderId])this.pc[t.senderId].close();delete this.pc[t.senderId];delete this.pcStart[t.senderId];if(this.callStreamMain==this.callStreamUsers[t.senderId])this.callStreamMain=null;this.callStreamUsers[t.senderId]=null;this.initPeerConnection(t.senderId)}else if(t.command=="signaling"&&this.callActive){this.signalingPeerData(t.senderId,t.peer)}else{this.log('Command "'+t.command+'" skip')}}}}),this));BX.garbage((function(){if(this.callInit){this.callCommand("decline",true)}}),this)};if(BX.inheritWebrtc)BX.inheritWebrtc(BX.IM.ScreenSharing);BX.IM.ScreenSharing.prototype.startScreenSharing=function(){var e={mandatory:{chromeMediaSource:"screen",googLeakyBucket:true,maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:5}};this.startGetUserMedia(e,false)};BX.IM.ScreenSharing.prototype.onUserMediaSuccess=function(e){var t=this.parent.onUserMediaSuccess.apply(this,arguments);if(!t)return false;if(this.initiator){BX.addClass(this.webrtc.callOverlay,"bx-messenger-call-overlay-screen-sharing-self");this.attachMediaStream(this.webrtc.callOverlayVideoSelf,this.callStreamSelf)}this.callCommand("ready");return true};BX.IM.ScreenSharing.prototype.onUserMediaError=function(e){var t=this.parent.onUserMediaError.apply(this,arguments);if(!t)return false;this.callDecline();return true};BX.IM.ScreenSharing.prototype.setLocalAndSend=function(e,t){var s=this.parent.setLocalAndSend.apply(this,arguments);if(!s)return false;BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_SIGNALING",method:"POST",dataType:"json",timeout:30,data:{IM_SHARING:"Y",COMMAND:"signaling",USER_ID:e,PEER:JSON.stringify(t),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}});return true};BX.IM.ScreenSharing.prototype.onRemoteStreamAdded=function(e,t,s){if(!s)return false;BX.addClass(this.webrtc.callOverlay,"bx-messenger-call-overlay-screen-sharing");this.attachMediaStream(this.webrtc.callOverlayVideoReserve,this.webrtc.callStreamMain);this.webrtc.callOverlayVideoReserve.play();this.attachMediaStream(this.webrtc.callOverlayVideoMain,this.callStreamMain);this.webrtc.callOverlayVideoMain.play();return true};BX.IM.ScreenSharing.prototype.onRemoteStreamRemoved=function(e,t){};BX.IM.ScreenSharing.prototype.onIceCandidate=function(e,t){BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_SIGNALING",method:"POST",dataType:"json",timeout:30,data:{IM_SHARING:"Y",COMMAND:"signaling",USER_ID:e,PEER:JSON.stringify(t),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})};BX.IM.ScreenSharing.prototype.peerConnectionError=function(e,t){this.callDecline()};BX.IM.ScreenSharing.prototype.peerConnectionReconnect=function(e){var t=this.parent.peerConnectionReconnect.apply(this,arguments);if(!t)return false;BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_RECONNECT",method:"POST",dataType:"json",timeout:30,data:{IM_SHARING:"Y",COMMAND:"reconnect",USER_ID:e,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(){this.initPeerConnection(e,true)}),this)});return true};BX.IM.ScreenSharing.prototype.deleteEvents=function(){BX.removeClass(this.webrtc.callOverlay,"bx-messenger-call-overlay-screen-sharing-self");BX.removeClass(this.webrtc.callOverlay,"bx-messenger-call-overlay-screen-sharing");this.webrtc.callOverlayVideoReserve.src="";this.attachMediaStream(this.webrtc.callOverlayVideoSelf,this.webrtc.callStreamSelf);this.attachMediaStream(this.webrtc.callOverlayVideoMain,this.webrtc.callStreamMain);this.webrtc.callOverlayVideoMain.play();this.webrtc.callOverlayVideoSelf.play();this.parent.deleteEvents.apply(this,arguments);var e=BX.findChildByClassName(BX("bx-messenger-call-overlay-button-screen"),"bx-messenger-call-overlay-button-screen");if(e)BX.removeClass(e,"bx-messenger-call-overlay-button-screen-off");return true};BX.IM.ScreenSharing.prototype.callInvite=function(){if(this.callInit){this.deleteEvents()}this.initiator=true;this.callVideo=true;this.callInit=true;this.callActive=true;this.callUserId=this.webrtc.callUserId;this.callInitUserId=BXIM.userId;this.callCommand("invite");var e=BX.findChildByClassName(BX("bx-messenger-call-overlay-button-screen"),"bx-messenger-call-overlay-button-screen");if(e)BX.addClass(e,"bx-messenger-call-overlay-button-screen-off")};BX.IM.ScreenSharing.prototype.callAnswer=function(){this.callActive=true;this.startGetUserMedia();this.callCommand("answer")};BX.IM.ScreenSharing.prototype.callDecline=function(e){if(!this.callInit)return false;e=e!==false;if(e){this.callCommand("decline")}this.deleteEvents()};BX.IM.ScreenSharing.prototype.callCommand=function(e,t){if(!this.signalingReady())return false;BX.ajax({url:this.BXIM.pathToCallAjax+"?CALL_COMMAND",method:"POST",dataType:"json",timeout:30,async:t!=false,data:{IM_SHARING:"Y",COMMAND:e,USER_ID:this.callUserId,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})};BX.IM.DiskManager=function(e,t){this.BXIM=e;this.notify=t.notifyClass;this.desktop=t.desktopClass;this.enable=t.enable;this.enableExternal=t.enableExternal;this.lightVersion=e.ieVersion==8||e.ieVersion==9;this.formBlocked={};this.formAgents={};this.files=t.files;for(var s in this.files){this.files[s].date=new Date(this.files[s].date)}this.filesProgress={};this.filesMessage={};this.filesRegister={};this.fileTmpId=1;this.timeout={};BX.garbage((function(){var e={};var t=0;for(var s in this.filesMessage){e[s]=this.filesMessage[s];if(this.messenger.message[e[s]]){t=this.messenger.message[e[s]].chatId}}if(t>0){BX.ajax({url:this.BXIM.pathToFileAjax+"?FILE_TERMINATE&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,async:false,data:{IM_FILE_UNREGISTER:"Y",CHAT_ID:t,FILES:JSON.stringify(this.filesProgress),MESSAGES:JSON.stringify(e),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()}})}}),this)};BX.IM.DiskManager.prototype.getFileMenuIcon=function(){if(!this.enable){return null}this.messenger.popupMessengerFileForm=BX.create("form",{attrs:{action:this.BXIM.pathToFileAjax,style:this.lightVersion?"z-index: 0;":""},props:{className:"bx-messenger-textarea-file-form"},children:[BX.create("input",{attrs:{type:"hidden",name:"IM_FILE_UPLOAD",value:"Y"}}),this.messenger.popupMessengerFileFormChatId=BX.create("input",{attrs:{type:"hidden",name:"CHAT_ID",value:0}}),this.messenger.popupMessengerFileFormRegChatId=BX.create("input",{attrs:{type:"hidden",name:"REG_CHAT_ID",value:0}}),this.messenger.popupMessengerFileFormRegMessageId=BX.create("input",{attrs:{type:"hidden",name:"REG_MESSAGE_ID",value:0}}),this.messenger.popupMessengerFileFormRegParams=BX.create("input",{attrs:{type:"hidden",name:"REG_PARAMS",value:""}}),this.messenger.popupMessengerFileFormRegMessageHidden=BX.create("input",{attrs:{type:"hidden",name:"REG_MESSAGE_HIDDEN",value:"N"}}),BX.create("input",{attrs:{type:"hidden",name:"IM_AJAX_CALL",value:"Y"}}),this.messenger.popupMessengerFileFormInput=BX.create("input",{attrs:{type:"file",multiple:"true",title:this.BXIM.ieVersion>1?BX.message("IM_F_UPLOAD_MENU"):" "},props:{className:"bx-messenger-textarea-file-popup-input"}})]});this.fileMenuIconClassName="bx-messenger-textarea-icon bx-messenger-textarea-file"+(this.lightVersion?" bx-messenger-textarea-file-light":"");return BX.create("div",{attrs:{title:BX.message("IM_F_UPLOAD_MENU")},props:{className:this.fileMenuIconClassName},events:{click:BX.delegate((function(e){if(!this.isFilePopupShown()){if(this.messenger.popupMessengerConnectionStatusState!="online"){return false}if(parseInt(this.messenger.popupMessengerFileFormChatId.value)<=0){return false}if(this.messenger.popupMessengerFileFormInput.getAttribute("disabled")){return BX.PreventDefault(e)}}this.toggleFilePopup()}),this)}})};BX.IM.DiskManager.prototype.isFilePopupShown=function(){return!!this.filePopup};BX.IM.DiskManager.prototype.toggleFilePopup=function(){if(!this.isFilePopupShown()){BX.onCustomEvent("onImOpenFileMenu",[]);this.createFilePopup()}this.filePopup.toggle()};BX.IM.DiskManager.prototype.closeFilePopup=function(){if(!this.isFilePopupShown()){return}this.filePopup.destroy();this.filePopup=null};BX.IM.DiskManager.prototype.createFilePopup=function(){const e=document.getElementsByClassName(this.fileMenuIconClassName)[0];if(!e){return}const t=[{text:BX.message("IM_F_UPLOAD_MENU_1"),onclick:()=>{this.closeFilePopup()}},{text:BX.message("IM_F_UPLOAD_MENU_2"),onclick:()=>{this.openFileDialog();this.closeFilePopup()}}];const s={targetContainer:document.body,bindOptions:{position:"top"},lightShadow:false,autoHide:true,closeByEsc:true,animation:"fading",zIndex:BX.MessengerCommon.getDefaultZIndex()+200,events:{onPopupClose:function(){BXIM.disk.closeFilePopup()}}};if(BX.MessengerTheme.isDark()){s.angle=false;s.className="popup-window-dark bx-messenger-mark"}else{s.angle={offset:36}}const i="bx-messenger-popup-file";this.filePopup=new BX.PopupMenuWindow(i,e,t,s);const n=document.getElementById("popup-window-content-menu-popup-"+i).firstChild.firstChild.firstChild.lastChild;n.appendChild(this.messenger.popupMessengerFileForm)};BX.IM.DiskManager.prototype.drawHistoryFiles=function(e,t,s){if(!this.enable)return[];if(typeof this.files[e]=="undefined")return[];var i=[];if(typeof t!="object"){t=parseInt(t);if(typeof this.files[e][t]=="undefined")return[];i.push(t)}else{i=t}s=s||{};var n=true;var a=[];for(var o=0;o<i.length;o++){var r=this.files[e][i[o]];if(!r)continue;if(!(r.status=="done"||r.status=="error"))continue;var l=BX.MessengerCommon.formatDate(r.date,[["tommorow","tommorow"],["today","today"],["yesterday","yesterday"],["",BX.Main.Date.convertBitrixFormat(BX.message("FORMAT_DATE"))]]);var p=BX.create("span",{props:{className:"bx-messenger-file-user"},children:[BX.create("span",{props:{className:"bx-messenger-file-author"},html:this.messenger.users[r.authorId]?this.messenger.users[r.authorId].name:r.authorName}),BX.create("span",{props:{className:"bx-messenger-file-date"},html:l})]});var h=null;if(r.type=="image"&&(r.preview||r.urlPreview)){if(r.urlPreview){var c=BX.create("img",{attrs:{src:r.urlPreview},props:{className:"bx-messenger-file-image-text"}})}else if(r.preview&&typeof r.preview!="string"){var c=r.preview}else{var c=BX.create("img",{attrs:{src:r.preview},props:{className:"bx-messenger-file-image-text"}})}if(n&&r.urlShow){h=BX.create("div",{props:{className:"bx-messenger-file-preview"},children:[BX.create("span",{props:{className:"bx-messenger-file-image"},children:[BX.create("a",{attrs:{href:r.urlShow,target:"_blank"},props:{className:"bx-messenger-file-image-src"},children:[c]})]}),BX.create("br")]})}else{h=BX.create("div",{props:{className:"bx-messenger-file-preview"},children:[BX.create("span",{props:{className:"bx-messenger-file-image"},children:[BX.create("span",{props:{className:"bx-messenger-file-image-src"},children:[c]})]}),BX.create("br")]})}}var u=r.name;if(u.length>23){u=u.substr(0,10)+"..."+u.substr(u.length-10,u.length)}var d=BX.create("span",{attrs:{title:r.name},props:{className:"bx-messenger-file-title"},html:u});if(n&&(r.urlShow||r.urlDownload)){if(BX.desktopUtils.canDownload()){d=BX.create("span",{props:{className:"bx-messenger-file-title-href"},events:{click:function(){BX.desktopUtils.downloadFile(r.urlShow?r.urlShow:r.urlDownload,r.name)}.bind(this)},children:[d]})}else{d=BX.create("a",{props:{className:"bx-messenger-file-title-href"},attrs:{href:r.urlShow?r.urlShow:r.urlDownload,target:"_blank"},children:[d]})}}d=BX.create("div",{props:{className:"bx-messenger-file-attrs"},children:[d,BX.create("span",{props:{className:"bx-messenger-file-size"},html:BX.UploaderUtils.getFormattedSize(r.size)}),BX.create("span",{attrs:{title:BX.message("IM_F_MENU")},props:{className:"bx-messenger-file-menu"}})]});var m=null;if(r.status=="error"){m=BX.create("span",{props:{className:"bx-messenger-file-status-error"},html:r.errorText?r.errorText:BX.message("IM_F_ERROR")})}if(i.length==1&&s.showInner=="Y"){a=[p,d,h,m]}else{a.push(BX.create("div",{attrs:{id:"im-file-history-panel-"+r.id,"data-chatId":r.chatId,"data-fileId":r.id},props:{className:"bx-messenger-file"},children:[p,d,h,m]}))}if(i.length==1&&s.getElement=="Y"){a=a[0]}}return a};BX.IM.DiskManager.prototype.chatDialogInit=function(){if(!this.messenger.popupMessengerFileFormInput||!BX.Uploader)return false;this.formAgents["imDialog"]=BX.Uploader.getInstance({id:"imDialog",allowUpload:"A",uploadMethod:"immediate",showImage:true,filesInputMultiple:true,input:this.messenger.popupMessengerFileFormInput,dropZone:this.messenger.popupMessengerBodyDialog,fields:{regTmpMessageId:{value:null},regHiddenMessageId:{value:null},regParams:{value:null},preview:{params:{width:"500",height:"500"}}}});BX.addCustomEvent(this.formAgents["imDialog"],"onAttachFiles",BX.delegate((function(e,t,s){if(this.messenger.popupMessengerFileFormInput.getAttribute("disabled"))return false;var i=s.form.CHAT_ID.value;if(this.messenger.chat[i]&&this.messenger.chat[i].type=="open"&&!BX.MessengerCommon.userInChat(i)){while(e.length>0){e.pop()}}else if(this.messenger.chat[i]&&i==this.messenger.generalChatId&&!this.messenger.canSendMessageGeneralChat){while(e.length>0){e.pop()}}}),this));BX.addCustomEvent(this.formAgents["imDialog"].dropZone,"dragEnter",BX.delegate((function(e){if(this.messenger.currentTab.toString().substr(0,4)=="chat"){var t=this.messenger.getChatId();if(this.messenger.chat[t].type=="open"){if(!BX.MessengerCommon.userInChat(t))return false}if(t==this.messenger.generalChatId&&!this.messenger.canSendMessageGeneralChat){return false}if(this.messenger.chat[t]&&this.messenger.chat[t].type==="announcement"&&this.messenger.chat[t].manager_list&&!this.messenger.chat[t].manager_list.map((function(e){return parseInt(e)})).includes(parseInt(this.BXIM.userId))){return false}}if(parseInt(this.messenger.popupMessengerFileFormChatId.value)<=0||this.messenger.popupMessengerFileFormInput.getAttribute("disabled"))return false;var s=false;if(e&&e["dataTransfer"]&&e["dataTransfer"]["types"]){for(var i in e["dataTransfer"]["types"]){if(e["dataTransfer"]["types"][i]==="Files"){s=true;break}}}if(s===false)return false;BX.style(this.messenger.popupMessengerFileDropZone,"display","block");BX.style(this.messenger.popupMessengerFileDropZone,"width",this.messenger.popupMessengerBodyDialog.offsetWidth-2+"px");BX.style(this.messenger.popupMessengerFileDropZone,"height",this.messenger.popupMessengerBodyDialog.offsetHeight-2+"px");clearTimeout(this.messenger.popupMessengerFileDropZoneTimeout);this.messenger.popupMessengerFileDropZoneTimeout=setTimeout(BX.delegate((function(){BX.addClass(this.messenger.popupMessengerFileDropZone,"bx-messenger-file-dropzone-active")}),this),10)}),this));BX.addCustomEvent(this.formAgents["imDialog"].dropZone,"dragLeave",BX.delegate((function(){if(this.messenger.currentTab.toString().substr(0,4)=="chat"&&this.messenger.chat[this.messenger.currentTab.substr(4)].type=="open"){if(!BX.MessengerCommon.userInChat(this.messenger.currentTab.substr(4)))return false}BX.removeClass(this.messenger.popupMessengerFileDropZone,"bx-messenger-file-dropzone-active");clearTimeout(this.messenger.popupMessengerFileDropZoneTimeout);this.messenger.popupMessengerFileDropZoneTimeout=setTimeout(BX.delegate((function(){BX.style(this.messenger.popupMessengerFileDropZone,"display","none");BX.style(this.messenger.popupMessengerFileDropZone,"width",0);BX.style(this.messenger.popupMessengerFileDropZone,"height",0)}),this),300)}),this));BX.addCustomEvent(this.formAgents["imDialog"],"onError",BX.delegate(BX.MessengerCommon.diskChatDialogUploadError,BX.MessengerCommon));BX.addCustomEvent(this.formAgents["imDialog"],"onFileinputIsReinited",BX.delegate((function(e){if(!e&&!this.formAgents["imDialog"].fileInput)return false;this.messenger.popupMessengerFileFormInput=e?e:this.formAgents["imDialog"].fileInput;if(parseInt(this.messenger.popupMessengerFileFormChatId.value)<=0){this.messenger.popupMessengerFileFormInput.setAttribute("disabled",true)}}),this));BX.addCustomEvent(this.formAgents["imDialog"],"onFileIsCreated",BX.delegate((function(e,t,s){BX.MessengerCommon.diskChatDialogFileInited(e,t,s);BX.addCustomEvent(t,"onUploadStart",BX.delegate(BX.MessengerCommon.diskChatDialogFileStart,BX.MessengerCommon));BX.addCustomEvent(t,"onUploadProgress",BX.delegate(BX.MessengerCommon.diskChatDialogFileProgress,BX.MessengerCommon));BX.addCustomEvent(t,"onUploadDone",BX.delegate(BX.MessengerCommon.diskChatDialogFileDone,BX.MessengerCommon));BX.addCustomEvent(t,"onUploadError",BX.delegate(BX.MessengerCommon.diskChatDialogFileError,BX.MessengerCommon))}),this));if(BX.DiskFileDialog){if(!this.flagFileDialogInited){BX.addCustomEvent(BX.DiskFileDialog,"inited",BX.proxy(this.initEventFileDialog,this));this.flagFileDialogInited=true}BX.addCustomEvent(BX.DiskFileDialog,"loadItems",BX.delegate((function(e,t){if(t!="im-file-dialog")return false;BX.DiskFileDialog.target[t]=e.replace("/bitrix/tools/disk/uf.php",this.BXIM.pathToFileAjax)}),this))}};BX.IM.DiskManager.prototype.saveToDiskAction=function(e,t){var s=BX.Disk.showActionModal({html:BX.message("IM_DISK_VIEWER_DESCR_PROCESS_SAVE_FILE_TO_OWN_FILES").replace("#NAME#",'<a href="#" class="bx-viewer-file-link">'+e.title+"</a>"),showLoaderIcon:true,autoHide:false});var i=BX.rest.callMethod("im.disk.file.save",{FILE_ID:t.fileId});if(i){i.then(function(e){var t=e.data();var s=BXIM.path.disk.localFile.replace("_FILE_ID_",t.file.id);BX.Disk.showActionModal({html:BX.message("IM_DISK_VIEWER_DESCR_SAVE_FILE_TO_OWN_FILES").replace("#NAME#",t.file.name).replace("#FOLDER#",'<a href="'+s+'" target="_blank">'+t.folder.name+"</a>"),showLoaderIcon:false,autoHide:true})}.bind(this)).catch(function(e){s.destroy()}.bind(this))}};BX.IM.DiskManager.prototype.saveToDisk=function(e,t,s){if(!this.files[e]||!this.files[e][t])return false;if(this.files[e][t].saveToDiskBlock)return false;s=s||{};this.files[e][t].saveToDiskBlock=true;var i=s.boxId?s.boxId:"im-file";var n=BX(i+"-"+t);var a=BX.findChildByClassName(n,"bx-messenger-file-download-disk");if(a){BX.addClass(a,"bx-messenger-file-download-block");a.innerHTML=BX.message("IM_SAVING")}else if(i=="im-file-history-panel"){a=BX.findChildByClassName(n,"bx-messenger-file-date");if(a){BX.addClass(a.parentNode.parentNode,"bx-messenger-file-download-block");a.setAttribute("data-date",a.innerHTML);a.innerHTML=BX.message("IM_SAVING")}}BX.ajax({url:this.BXIM.pathToFileAjax+"?FILE_SAVE_TO_DISK&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,data:{IM_FILE_SAVE_TO_DISK:"Y",CHAT_ID:e,FILE_ID:t,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(s){this.files[e][t].saveToDiskBlock=false;var n=BX(i+"-"+t);var a=BX.findChildByClassName(n,"bx-messenger-file-download-disk");if(a){BX.removeClass(a,"bx-messenger-file-download-block");a.innerHTML=BX.message("IM_F_DOWNLOAD_DISK")}else if(i=="im-file-history-panel"){a=BX.findChildByClassName(n,"bx-messenger-file-date");if(a){BX.removeClass(a.parentNode.parentNode,"bx-messenger-file-download-block");a.innerHTML=a.getAttribute("data-date")}a=BX.findChildByClassName(n,"bx-messenger-file-title")}if(a&&s.ERROR==""){var o=this.BXIM.path.disk.localFile.replace("_FILE_ID_",s.NEW_FILE_ID);this.messenger.tooltip(a,BX.message("IM_F_SAVE_OK_2").replace("#URL_START#",'<a href="'+o+'" target="_blank" class="bx-messenger-file-link">').replace("#URL_END#","</a>"))}else{this.messenger.tooltip(a,BX.message("IM_F_SAVE_ERR"))}}),this),onfailure:BX.delegate((function(){this.files[e][t].saveToDiskBlock=false;var s=BX(i+"-"+t);var n=BX.findChildByClassName(s,"bx-messenger-file-download-disk");if(n){BX.removeClass(n,"bx-messenger-file-download-block");n.innerHTML=BX.message("IM_F_DOWNLOAD_DISK");this.messenger.tooltip(n,BX.message("IM_F_SAVE_ERR"))}else if(i=="im-file-history-panel"){n=BX.findChildByClassName(s,"bx-messenger-file-date");if(n){BX.removeClass(n.parentNode.parentNode,"bx-messenger-file-download-block");n.innerHTML=n.getAttribute("data-date")}}}),this)})};BX.IM.DiskManager.prototype.deleteFile=function(e,t,s){if(!this.files[e]||!this.files[e][t])return false;if(this.files[e][t].saveToDiskBlock)return false;s=s||{};this.files[e][t].saveToDiskBlock=true;var i=s.boxId?s.boxId:"im-file";var n=BX(i+"-"+t);var a=BX.findChildByClassName(n,"bx-messenger-file-download-disk");if(a){BX.addClass(a,"bx-messenger-file-download-block");a.innerHTML=BX.message("IM_DELETING")}else if(i=="im-file-history-panel"){a=BX.findChildByClassName(n,"bx-messenger-file-date");if(a){BX.addClass(a.parentNode.parentNode,"bx-messenger-file-download-block");a.setAttribute("data-date",a.innerHTML);a.innerHTML=BX.message("IM_DELETING")}}BX.ajax({url:this.BXIM.pathToFileAjax+"?FILE_DELETE&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,data:{IM_FILE_DELETE:"Y",CHAT_ID:e,FILE_ID:t,IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(s){delete this.files[e][t];var n=BX.MessengerCommon.getRecipientByChatId(e);if(BX("im-file-history-"+t)){this.messenger.drawHistory(n)}if(BX("im-file-"+t)){BX.MessengerCommon.drawTab(n,true)}var a=BX(i+"-"+t);BX.style(a,"transform","scale(0, 0)");BX.style(a,"height",a.offsetHeight+"px");setTimeout((function(){BX.style(a,"height","0px")}),500);setTimeout((function(){BX.remove(a)}),700);this.messenger.loadHistoryFiles(e,true)}),this),onfailure:BX.delegate((function(){this.files[e][t].saveToDiskBlock=false;var s=BX(i+"-"+t);var n=BX.findChildByClassName(s,"bx-messenger-file-download-disk");if(n){BX.removeClass(n,"bx-messenger-file-download-block");n.innerHTML=BX.message("IM_F_DOWNLOAD_DISK");this.messenger.tooltip(n,BX.message("IM_F_SAVE_ERR"))}else if(i=="im-file-history-panel"){n=BX.findChildByClassName(s,"bx-messenger-file-date");if(n){BX.removeClass(n.parentNode.parentNode,"bx-messenger-file-download-block");n.innerHTML=n.getAttribute("data-date")}}}),this)})};BX.IM.DiskManager.prototype.openFileDialog=function(){this.messenger.setClosingByEsc(false);BX.ajax({url:this.BXIM.pathToFileAjax+"?action=selectFile&dialogName=im-file-dialog",method:"GET",skipAuthCheck:true,timeout:30,onsuccess:BX.delegate((function(e){if(typeof e=="object"&&e.error){this.messenger.setClosingByEsc(true)}}),this),onfailure:BX.delegate((function(){this.messenger.setClosingByEsc(true)}),this)})};BX.IM.DiskManager.prototype.initEventFileDialog=function(e){if(e!="im-file-dialog"||!BX.DiskFileDialog)return false;BX.DiskFileDialog.obCallback[e]={saveButton:BX.delegate((function(e,t,s){this.uploadFromDisk(e,t,s)}),this),popupShow:BX.delegate((function(){BX.DiskFileDialog.popupWindow.params.zIndex+=BX.MessengerCommon.getDefaultZIndex();BX.DiskFileDialog.popupWindow.adjustPosition();BX.bind(BX.DiskFileDialog.popupWindow.popupContainer,"click",BX.MessengerCommon.preventDefault);this.messenger.setClosingByEsc(false)}),this),popupDestroy:BX.delegate((function(){this.messenger.setClosingByEsc(true)}),this)};BX.DiskFileDialog.openDialog(e)};BX.IM.DiskManager.prototype.uploadFromDisk=function(e,t,s,i){i=i||"";var n=this.messenger.popupMessengerFileFormChatId.value;if(!this.files[n])this.files[n]={};var a=[];for(var o in s){var r=o.replace("n","");this.files[n]["disk"+r]={id:"disk"+r,templateId:"disk"+r,chatId:n,date:new Date(s[o].modifyDateInt*1e3),type:"file",preview:"",name:s[o].name,size:s[o].sizeInt,status:"upload",progress:-1,authorId:this.BXIM.userId,authorName:this.messenger.users[this.BXIM.userId].name,urlPreview:"",urlShow:"",urlDownload:""};a.push("disk"+r)}var l=0;if(this.messenger.chat[n]){l="chat"+n}else{for(var p in this.messenger.userChat){if(this.messenger.userChat[p]==n){l=p;break}}}if(!l)return false;var h="N";if(l.toString().substr(0,4)=="chat"&&this.BXIM.messenger.linesSilentMode&&this.BXIM.messenger.linesSilentMode[n]){h="Y"}var c="tempFile"+this.fileTmpId;this.messenger.message[c]={id:c,chatId:n,senderId:this.BXIM.userId,recipientId:l,date:new Date,text:BX.MessengerCommon.prepareText(i,true,true,true),textOriginal:i,params:{FILE_ID:a,CLASS:h=="Y"?"bx-messenger-content-item-system":""}};if(!this.messenger.showMessage[l])this.messenger.showMessage[l]=[];this.messenger.showMessage[l].push(c);BX.MessengerCommon.drawMessage(l,this.messenger.message[c]);BX.MessengerCommon.drawProgessMessage(c);this.messenger.sendMessageFlag++;this.messenger.popupMessengerFileFormInput.setAttribute("disabled",true);BX.ajax({url:this.BXIM.pathToFileAjax+"?FILE_UPLOAD_FROM_DISK&V="+this.BXIM.revision,method:"POST",dataType:"json",skipAuthCheck:true,timeout:30,data:{IM_FILE_UPLOAD_FROM_DISK:"Y",CHAT_ID:n,RECIPIENT_ID:l,MESSAGE:i,MESSAGE_TMP_ID:c,OL_SILENT:h,FILES:JSON.stringify(a),IM_AJAX_CALL:"Y",sessid:BX.bitrix_sessid()},onsuccess:BX.delegate((function(e){if(e.ERROR!=""){this.messenger.sendMessageFlag--;delete this.messenger.message[c];BX.MessengerCommon.drawTab(l);return false}this.messenger.sendMessageFlag--;var t=[];var s={};for(var i in e.FILES){var n=e.FILES[i];if(parseInt(n.id)>0){n.date=new Date(n.date);this.files[e.CHAT_ID][n.id]=n;delete this.files[e.CHAT_ID][i];if(BX("im-file-"+i)){BX("im-file-"+i).setAttribute("data-fileId",n.id);BX("im-file-"+i).id="im-file-"+n.id;BX.MessengerCommon.diskRedrawFile(e.CHAT_ID,n.id)}t.push(n.id)}else{this.files[e.CHAT_ID][i]["status"]="error";BX.MessengerCommon.diskRedrawFile(e.CHAT_ID,i)}}this.messenger.message[e.MESSAGE_ID]=BX.clone(this.messenger.message[e.MESSAGE_TMP_ID]);this.messenger.message[e.MESSAGE_ID]["id"]=e.MESSAGE_ID;this.messenger.message[e.MESSAGE_ID]["params"]["FILE_ID"]=t;if(this.messenger.popupMessengerLastMessage==e.MESSAGE_TMP_ID)this.messenger.popupMessengerLastMessage=e.MESSAGE_ID;delete this.messenger.message[e.MESSAGE_TMP_ID];var a=BX.util.array_search(""+e.MESSAGE_TMP_ID+"",this.messenger.showMessage[e.RECIPIENT_ID]);if(this.messenger.showMessage[e.RECIPIENT_ID][a])this.messenger.showMessage[e.RECIPIENT_ID][a]=""+e.MESSAGE_ID+"";if(BX("im-message-"+e.MESSAGE_TMP_ID)){BX("im-message-"+e.MESSAGE_TMP_ID).id="im-message-"+e.MESSAGE_ID;var o=BX.findChild(this.messenger.popupMessengerBodyWrap,{attribute:{"data-messageid":""+e.MESSAGE_TMP_ID}},true);if(o){o.setAttribute("data-messageid",""+e.MESSAGE_ID+"");if(o.getAttribute("data-blockmessageid")==""+e.MESSAGE_TMP_ID)o.setAttribute("data-blockmessageid",""+e.MESSAGE_ID+"")}else{var r=BX.findChild(this.messenger.popupMessengerBodyWrap,{attribute:{"data-blockmessageid":""+e.MESSAGE_TMP_ID}},true);if(r){r.setAttribute("data-blockmessageid",""+e.MESSAGE_ID+"")}}var p=BX.findChildByClassName(o,"bx-messenger-content-item-date");if(p)p.innerHTML=" &nbsp; "+BX.MessengerCommon.formatDate(this.messenger.message[e.MESSAGE_ID].date,BX.MessengerCommon.getDateFormatType("MESSAGE"))}BX.MessengerCommon.clearProgessMessage(e.MESSAGE_ID);if(this.messenger.history[e.RECIPIENT_ID])this.messenger.history[e.RECIPIENT_ID].push(e.MESSAGE_ID);else this.messenger.history[e.RECIPIENT_ID]=[e.MESSAGE_ID];if(BX.MessengerCommon.enableScroll(this.messenger.popupMessengerBody,200)){if(this.BXIM.animationSupport){if(this.messenger.popupMessengerBodyAnimation!=null)this.messenger.popupMessengerBodyAnimation.stop();(this.messenger.popupMessengerBodyAnimation=new BX.easing({duration:800,start:{scroll:this.messenger.popupMessengerBody.scrollTop},finish:{scroll:this.messenger.popupMessengerBody.scrollHeight-this.messenger.popupMessengerBody.offsetHeight},transition:BX.easing.makeEaseInOut(BX.easing.transitions.quart),step:BX.delegate((function(e){this.messenger.popupMessengerBody.scrollTop=e.scroll}),this)})).animate()}else{this.messenger.popupMessengerBody.scrollTop=this.messenger.popupMessengerBody.scrollHeight-this.messenger.popupMessengerBody.offsetHeight}}this.messenger.popupMessengerFileFormInput.removeAttribute("disabled")}),this),onfailure:BX.delegate((function(){this.messenger.sendMessageFlag--;delete this.messenger.message[c];BX.MessengerCommon.drawTab(l)}),this)});this.fileTmpId++};BX.IM.DiskManager.prototype.uploadFromClipboard=function(e,t){var s=e.map((function(e){var t=BX.UploaderUtils.dataURLToBlob(e.source);t.name=e.name;return t}));t=t.trim();this.formAgents["imDialog"].messageText=t?t:"";this.formAgents["imDialog"].onChange(s);return true};BX.IM.DiskManager.prototype.chatAvatarInit=function(){if(!BX.Uploader)return false;if(this.messenger.popupMessengerPanelAvatarUpload2){this.formAgents["popupMessengerPanelAvatarUpload2"]=BX.Uploader.getInstance({id:"popupMessengerPanelAvatarUpload2",allowUpload:"I",uploadMethod:"immediate",showImage:false,input:this.messenger.popupMessengerPanelAvatarUpload2,dropZone:this.messenger.popupMessengerPanelAvatarUpload2.parentNode});BX.addCustomEvent(this.formAgents["popupMessengerPanelAvatarUpload2"],"onFileinputIsReinited",BX.delegate((function(e){if(!e&&!this.formAgents["popupMessengerPanelAvatarUpload2"].fileInput)return false;this.messenger.popupMessengerPanelAvatarUpload2=e?e:this.formAgents["popupMessengerPanelAvatarUpload2"].fileInput}),this));BX.addCustomEvent(this.formAgents["popupMessengerPanelAvatarUpload2"],"onFileIsInited",BX.delegate((function(e,t,s){this.chatAvatarAttached(s);BX.addCustomEvent(t,"onUploadDone",BX.delegate(this.chatAvatarDone,this));BX.addCustomEvent(t,"onUploadError",BX.delegate(this.chatAvatarError,this))}),this))}if(this.messenger.popupMessengerPanelAvatarUpload3){this.formAgents["popupMessengerPanelAvatarUpload3"]=BX.Uploader.getInstance({id:"popupMessengerPanelAvatarUpload3",allowUpload:"I",uploadMethod:"immediate",showImage:false,input:this.messenger.popupMessengerPanelAvatarUpload3,dropZone:this.messenger.popupMessengerPanelAvatarUpload3.parentNode});BX.addCustomEvent(this.formAgents["popupMessengerPanelAvatarUpload3"],"onFileinputIsReinited",BX.delegate((function(e){if(!e&&!this.formAgents["popupMessengerPanelAvatarUpload3"].fileInput)return false;this.messenger.popupMessengerPanelAvatarUpload3=e?e:this.formAgents["popupMessengerPanelAvatarUpload3"].fileInput}),this));BX.addCustomEvent(this.formAgents["popupMessengerPanelAvatarUpload3"],"onFileIsInited",BX.delegate((function(e,t,s){this.chatAvatarAttached(s);BX.addCustomEvent(t,"onUploadDone",BX.delegate(this.chatAvatarDone,this));BX.addCustomEvent(t,"onUploadError",BX.delegate(this.chatAvatarError,this))}),this))}};BX.IM.DiskManager.prototype.avatarFormIsBlocked=function(e,t,s){var i=this.formBlocked[t+"_"+e];var n=BX.MessengerCommon.checkRestriction(e,"AVATAR")?true:false;if(this.messenger.chat[e]&&this.messenger.chat[e].type==="announcement"&&this.messenger.chat[e].manager_list&&!this.messenger.chat[e].manager_list.map((function(e){return parseInt(e)})).includes(parseInt(this.BXIM.userId))){n=true}if(this.messenger.currentTab!="chat"+e){return i}var a=this.formAgents[t]&&this.formAgents[t].fileInput?this.formAgents[t].fileInput:null;if(a){if(i||n){a.title="";a.disabled=true;a.style.cursor="default"}else{a.title=BX.message("IM_M_AVATAR_UPLOAD");a.removeAttribute("disabled");a.style.cursor=""}}if(s){if(i){BX.addClass(s.firstChild,"bx-messenger-panel-avatar-progress-on")}else{BX.removeClass(s.firstChild,"bx-messenger-panel-avatar-progress-on")}BX.removeClass(s,"bx-messenger-panel-avatar-upload-error")}return i||n};BX.IM.DiskManager.prototype.chatAvatarAttached=function(e){if(!e.form.CHAT_ID)return false;this.formBlocked[e.id+"_"+e.form.CHAT_ID.value]=true;this.avatarFormIsBlocked(e.form.CHAT_ID.value,e.id,e.form)};BX.IM.DiskManager.prototype.chatAvatarDone=function(e,t,s,i){this.formBlocked[s.id+"_"+t.file.chatId]=false;this.avatarFormIsBlocked(t.file.chatId,s.id,s.form);this.messenger.updateChatAvatar(t.file.chatId,t.file.chatAvatar)};BX.IM.DiskManager.prototype.chatAvatarError=function(e,t,s,i){var n=s.streams.packages.getItem(i).data;this.formBlocked[s.id+"_"+n.CHAT_ID]=false;this.avatarFormIsBlocked(n.CHAT_ID,s.id,s.form);BX.addClass(s.form,"bx-messenger-panel-avatar-upload-error");s.fileInput.title=t.error};BX.IM.NotifyManager=function(e){this.stack=[];this.stackTimeout=null;this.stackPopup={};this.stackPopupTimeout={};this.stackPopupTimeout2={};this.stackPopupId=0;this.stackOverflow=false;this.blockNativeNotify=false;this.blockNativeNotifyTimeout=null;this.notifyShow=0;this.notifyHideTime=5e3;this.notifyHeightCurrent=10;this.notifyHeightMax=0;this.notifyGarbageTimeout=null;this.notifyAutoHide=true;this.notifyAutoHideTimeout=null;if(BX.browser.SupportLocalStorage()){BX.addCustomEvent(window,"onLocalStorageSet",BX.proxy(this.storageSet,this))}this.BXIM=e};BX.IM.NotifyManager.prototype.storageSet=function(e){if(e.key=="mnnb"){this.blockNativeNotify=true;clearTimeout(this.blockNativeNotifyTimeout);this.blockNativeNotifyTimeout=setTimeout(BX.delegate((function(){this.blockNativeNotify=false}),this),1e3)}};BX.IM.NotifyManager.prototype.add=function(e){if(typeof e!="object"||!e.html)return false;if(BX.type.isDomNode(e.html))e.html=e.html.outerHTML;this.stack.push(e);if(!this.stackOverflow)this.setShowTimer(300)};BX.IM.NotifyManager.prototype.remove=function(e){delete this.stack[e]};BX.IM.NotifyManager.prototype.draw=function(){this.show()};BX.IM.NotifyManager.prototype.show=function(){this.notifyHeightMax=document.body.offsetHeight;var e=BX.GetWindowScrollPos();for(var t=0;t<this.stack.length;t++){if(typeof this.stack[t]=="undefined")continue;var s=new BX.PopupWindow("bx-im-notify-flash-"+this.stackPopupId,{top:"-1000px",left:0},{targetContainer:document.body,darkMode:BX.MessengerTheme.isDark(),lightShadow:true,zIndex:BX.MessengerCommon.getDefaultZIndex()+1e4,events:{onPopupClose:BX.delegate((function(){BX.removeClass(BX.proxy_context.popupContainer,"bx-notifyManager-animation");BX.addClass(BX.proxy_context.popupContainer,"bx-notifyManager-animation-close");this.notifyShow--;this.notifyHeightCurrent-=BX.proxy_context.popupContainer.offsetHeight+10;this.stackOverflow=false;setTimeout(BX.delegate((function(){this.destroy()}),BX.proxy_context),400)}),this),onPopupDestroy:BX.delegate((function(){BX.unbindAll(BX.findChildByClassName(BX.proxy_context.popupContainer,"bx-notifier-item-delete"));BX.unbindAll(BX.proxy_context.popupContainer);delete this.stackPopup[BX.proxy_context.uniquePopupId];delete this.stackPopupTimeout[BX.proxy_context.uniquePopupId];delete this.stackPopupTimeout2[BX.proxy_context.uniquePopupId]}),this)},bindOnResize:false,content:BX.create("div",{props:{className:"bx-notifyManager-item"},html:this.stack[t].html})});BX.addClass(s.popupContainer,"bx-messenger-mark");if(BX.MessengerTheme.isDark())BX.addClass(s.popupContainer,"bx-messenger-dark");s.notifyParams=this.stack[t];s.notifyParams.id=t;s.show();BX.onCustomEvent(window,"onNotifyManagerShow",[this.stack[t]]);s.popupContainer.style.left=document.body.offsetWidth-s.popupContainer.offsetWidth-10+"px";s.popupContainer.style.opacity=0;if(this.notifyHeightMax<this.notifyHeightCurrent+s.popupContainer.offsetHeight+10){if(this.notifyShow>0){s.destroy();this.stackOverflow=true;break}}BX.addClass(s.popupContainer,"bx-notifyManager-animation");BX.addClass(s.popupContainer,"bx-messenger-mark");s.popupContainer.style.opacity=1;s.popupContainer.style.top=e.scrollTop+this.notifyHeightCurrent+"px";this.notifyHeightCurrent=this.notifyHeightCurrent+s.popupContainer.offsetHeight+10;this.stackPopupId++;this.notifyShow++;this.remove(t);this.stackPopupTimeout[s.uniquePopupId]=null;BX.bind(s.popupContainer,"mouseover",BX.delegate((function(){this.clearAutoHide()}),this));BX.bind(s.popupContainer,"mouseout",BX.delegate((function(){this.setAutoHide(this.notifyHideTime/2)}),this));BX.bind(s.popupContainer,"contextmenu",BX.delegate((function(e){if(this.stackPopup[BX.proxy_context.id].notifyParams.tag)this.closeByTag(this.stackPopup[BX.proxy_context.id].notifyParams.tag);else this.stackPopup[BX.proxy_context.id].close();return BX.PreventDefault(e)}),this));var i=BX.findChildren(s.popupContainer,{tagName:"a"},true);for(var n=0;n<i.length;n++){if(i[n].href!="#")i[n].target="_blank"}BX.bind(BX.findChildByClassName(s.popupContainer,"bx-notifier-item-delete"),"click",BX.delegate((function(e){var t=BX.proxy_context.parentNode.parentNode.parentNode.parentNode.id.replace("popup-window-content-","");if(this.stackPopup[t].notifyParams.close)this.stackPopup[t].notifyParams.close(this.stackPopup[t]);this.stackPopup[t].close();if(this.notifyAutoHide==false){this.clearAutoHide();this.setAutoHide(this.notifyHideTime/2)}return BX.PreventDefault(e)}),this));BX.bindDelegate(s.popupContainer,"click",{className:"bx-notifier-item-button-confirm"},BX.delegate((function(e){var t=BX.proxy_context.getAttribute("data-id");this.BXIM.notify.confirmRequest({notifyId:t,notifyValue:BX.proxy_context.getAttribute("data-value"),notifyURL:BX.proxy_context.getAttribute("data-url"),notifyTag:this.BXIM.notify.notify[t]&&this.BXIM.notify.notify[t].tag?this.BXIM.notify.notify[t].tag:null,groupDelete:BX.proxy_context.getAttribute("data-group")!=null},true);for(var s in this.stackPopup){if(this.stackPopup[s].notifyParams.notifyId==t)this.stackPopup[s].close()}if(this.notifyAutoHide==false){this.clearAutoHide();this.setAutoHide(this.notifyHideTime/2)}return BX.PreventDefault(e)}),this));if(s.notifyParams.click){s.popupContainer.style.cursor="pointer";BX.bind(s.popupContainer,"click",BX.delegate((function(e){this.notifyParams.click(this);if(this.notifyParams.notifyId!="network")return BX.PreventDefault(e)}),s))}this.stackPopup[s.uniquePopupId]=s}if(this.stack.length>0){this.clearAutoHide(true);this.setAutoHide(this.notifyHideTime)}this.garbage()};BX.IM.NotifyManager.prototype.closeByTag=function(e){for(var t=0;t<this.stack.length;t++){if(typeof this.stack[t]!="undefined"&&this.stack[t].tag==e){delete this.stack[t]}}for(var t in this.stackPopup){if(this.stackPopup[t].notifyParams&&this.stackPopup[t].notifyParams.tag==e){this.stackPopup[t].close()}}};BX.IM.NotifyManager.prototype.setShowTimer=function(e){clearTimeout(this.stackTimeout);this.stackTimeout=setTimeout(BX.delegate(this.draw,this),e)};BX.IM.NotifyManager.prototype.setAutoHide=function(e){this.notifyAutoHide=true;clearTimeout(this.notifyAutoHideTimeout);this.notifyAutoHideTimeout=setTimeout(BX.delegate((function(){for(var t in this.stackPopupTimeout){this.stackPopupTimeout[t]=setTimeout(BX.delegate((function(){this.close()}),this.stackPopup[t]),e-1e3);this.stackPopupTimeout2[t]=setTimeout(BX.delegate((function(){this.setShowTimer(300)}),this),e-700)}}),this),1e3)};BX.IM.NotifyManager.prototype.clearAutoHide=function(e){clearTimeout(this.notifyGarbageTimeout);this.notifyAutoHide=false;e=e==true;if(e){clearTimeout(this.stackTimeout);for(var t in this.stackPopupTimeout){clearTimeout(this.stackPopupTimeout[t]);clearTimeout(this.stackPopupTimeout2[t])}}else{clearTimeout(this.notifyAutoHideTimeout);this.notifyAutoHideTimeout=setTimeout(BX.delegate((function(){clearTimeout(this.stackTimeout);for(var e in this.stackPopupTimeout){clearTimeout(this.stackPopupTimeout[e]);clearTimeout(this.stackPopupTimeout2[e])}}),this),300)}};BX.IM.NotifyManager.prototype.garbage=function(){clearTimeout(this.notifyGarbageTimeout);this.notifyGarbageTimeout=setTimeout(BX.delegate((function(){var e=[];for(var t=0;t<this.stack.length;t++){if(typeof this.stack[t]!="undefined")e.push(this.stack[t])}this.stack=e}),this),1e4)};BX.IM.NotifyManager.prototype.nativeNotify=function(e,t){if(!e.title||e.title.length<=0)return false;if(this.blockNativeNotify)return false;if(!t){setTimeout(BX.delegate((function(){if(this.blockNativeNotify)return false;this.nativeNotify(e,true)}),this),Math.floor(Math.random()*151)+50);return true}BX.localStorage.set("mnnb",true,1);var s=new Notification(e.title,{tag:e.tag?e.tag:"",body:e.text?e.text:"",icon:e.icon?e.icon:""});if(typeof e.onshow=="function")s.onshow=e.onshow;if(typeof e.onclick=="function")s.onclick=e.onclick;if(typeof e.onclose=="function")s.onclose=e.onclose;if(typeof e.onerror=="function")s.onerror=e.onerror;return true};BX.IM.NotifyManager.prototype.nativeNotifyShow=function(){this.show()};BX.IM.NotifyManager.prototype.nativeNotifyGranted=function(){var e=BX.localStorage.get("imNativeNotify");return e&&window.Notification&&window.Notification.permission&&window.Notification.permission.toLowerCase()=="granted"};BX.IM.NotifyManager.prototype.nativeNotifyAccessForm=function(){if(BX.MessengerCommon.isDesktop()){return this.nativeDesktopNotifyAccessForm()}clearTimeout(this.BXIM.messenger.popupMessengerTopLineTimeout);if(!this.BXIM.messenger.popupMessengerTopLine)return false;var e=BX.localStorage.get("imNativeNotify");if(!this.BXIM.xmppStatus&&!this.BXIM.desktopStatus&&window.Notification&&window.Notification.permission&&window.Notification.permission.toLowerCase()!=="denied"){clearTimeout(this.popupMessengerDesktopTimeout);var t=BX.delegate((function(){BX.localStorage.set("imNativeNotify",true,3e6);Notification.requestPermission();this.BXIM.messenger.hideTopLine()}),this);var s=BX.delegate((function(){BX.localStorage.set("imNativeNotify",false,3e6);this.BXIM.saveSettings({nativeNotify:this.BXIM.settings.nativeNotify});this.BXIM.messenger.hideTopLine()}),this);this.BXIM.messenger.showTopLine(BX.message("IM_WN_MAC")+"<br />"+BX.message("IM_WN_TEXT"),[{title:BX.message("IM_WN_ACCEPT"),callback:t},{title:BX.message("IM_DESKTOP_INSTALL_N"),callback:s}],BX.delegate((function(){BX.localStorage.set("imNativeNotify",false,86400);this.BXIM.messenger.hideTopLine()}),this))}else{return false}return true};BX.IM.NotifyManager.prototype.nativeDesktopNotifyAccessForm=function(){clearTimeout(this.popupMessengerDesktopTimeout);var e=BX.delegate((function(){BXDesktopSystem.Notify("Native notification","","The desktop application requests the right to display notifications");BX.desktop.setLocalConfig("nativeNotify",true);this.BXIM.messenger.hideTopLine()}),this);var t=BX.delegate((function(){BX.desktop.setLocalConfig("nativeNotify",false);this.BXIM.messenger.hideTopLine()}),this);this.BXIM.messenger.showTopLine(BX.message("IM_WN_MAC")+"<br />"+BX.message("IM_WN_TEXT"),[{title:BX.message("IM_WN_ACCEPT"),callback:e},{title:BX.message("IM_DESKTOP_INSTALL_N"),callback:t}],BX.delegate((function(){this.BXIM.messenger.hideTopLine()}),this))};BX.IM.LevelMeter=function(e){this.element=e;this.maximumLevel=1;this.mediaStream=null;this.audioContext=null;this.mediaStreamNode=null;this.scriptNode=null;this.instant=0;this.slow=0;this.clip=0;this.supported=window.AudioContext||window.webkitAudioContext;this.animationInterval=null;this.mask=BX.create("div",{attrs:{className:"bx-messenger-settings-level-meter-mask"}});this.filler=BX.create("div",{attrs:{className:"bx-messenger-settings-level-meter-filler"}});this.element.appendChild(this.mask);this.mask.appendChild(this.filler)};BX.IM.LevelMeter.prototype.render=function(){var e=Math.floor(this.slow*100);this.filler.style.width=e+"%"};BX.IM.LevelMeter.prototype.attachMediaStream=function(e){var t=this;if(!(e instanceof MediaStream))return;if(e.getAudioTracks().length==0)return;this.stop();this.audioContext=new(window.AudioContext||window.webkitAudioContext);this.scriptNode=this.audioContext.createScriptProcessor(2048,1,1);this.scriptNode.connect(this.audioContext.destination);this.mediaStream=e;this.mediaStreamNode=this.audioContext.createMediaStreamSource(this.mediaStream);this.mediaStreamNode.connect(this.scriptNode);this.scriptNode.onaudioprocess=function(e){var s=e.inputBuffer.getChannelData(0);var i;var n=0;var a=0;for(i=0;i<s.length;++i){n+=s[i]*s[i];if(Math.abs(s[i])>.99){a+=1}}t.instant=Math.sqrt(n/s.length);t.slow=.75*t.slow+.25*t.instant;t.clip=a/s.length};this.animationInterval=setInterval(this.render.bind(this),200)};BX.IM.LevelMeter.prototype.getVolume=function(){return{instant:this.instant,slow:this.slow}};BX.IM.LevelMeter.prototype.stop=function(){if(this.scriptNode)this.scriptNode.disconnect();if(this.mediaStreamNode)this.mediaStreamNode.disconnect();if(this.audioContext)this.audioContext.close();if(this.animationInterval)clearInterval(this.animationInterval);this.scriptNode=null;this.mediaStreamNode=null;this.mediaStream=null;this.audioContext=null;this.animationInterval=null}})();BX.PopupWindowSlider=function(){this.closeByEsc=true;this.setClosingByEsc=function(e){this.closeByEsc=e};this.close=function(){};this.destroy=function(){}};var MessengerSlider=function(){this.instances=new Map;BX.addCustomEvent("SidePanel.Slider:onCloseByEsc",function(e){var t=e.getSlider().getUrl().toString();if(!t.startsWith("im:slider")){return false}if(!this.canCloseByEsc()){e.denyAction()}}.bind(this));BX.addCustomEvent("SidePanel.Slider:onClose",function(e){var t=e.getSlider().getUrl().toString();if(!t.startsWith("im:slider")){if(this.BXIM&&this.count()<=0){setTimeout(function(){this.BXIM.updateCounter()}.bind(this),300)}return true}if(!this.canClose()){e.denyAction();return false}if(this.BXIM){this.BXIM.messenger.closeMenuPopup();if(this.BXIM.messenger.popupHistory){this.BXIM.messenger.popupHistory.destroy()}}if(BX.DiskFileDialog&&BX.DiskFileDialog.popupWindow){BX.DiskFileDialog.popupWindow.close()}var s=parseInt(t.substr(10));this.instances.delete(s);this.recover(this.getCurrent())}.bind(this));BX.addCustomEvent("SidePanel.Slider:onDestroy",function(e){var t=e.getSlider().getUrl().toString();if(!t.startsWith("im:slider")){return false}var s=parseInt(t.substr(10));this.instances.delete(s);this.recover(this.getCurrent());if(this.BXIM&&this.count()<=0){this.BXIM.messenger.closeMessenger();this.BXIM.updateCounter()}}.bind(this));BX.ready((function(){if(typeof BX.ZIndexManager!=="undefined"){var e=BX.ZIndexManager.getOrAddStack(document.body);e.baseIndex=1200;e.sort()}}))};MessengerSlider.prototype.count=function(){return this.instances.size};MessengerSlider.prototype.getCurrent=function(){return this.instances.get(this.getCurrentId())};MessengerSlider.prototype.getCurrentId=function(){return this.count()};MessengerSlider.prototype.getNextId=function(){return this.getCurrentId()+1};MessengerSlider.prototype.isOpen=function(){return this.count()>0};MessengerSlider.prototype.isFocus=function(){if(!this.isOpen()){return false}var e=BX.SidePanel.Instance.getTopSlider();if(!e){return false}if(e.getUrl().toString().startsWith("im:slider")){return true}return false};MessengerSlider.prototype.isSomeOpen=function(){return!!BX.SidePanel.Instance.getTopSlider()};MessengerSlider.prototype.canOpen=function(e){return true;if(!this.BXIM.callController.hasActiveCall()){return true}this.BXIM.openConfirm(BX.message("IM_M_CALL_OPEN_CHAT"),[new BX.PopupWindowButton({text:BX.message("IM_M_CALL_CLOSE_CHAT_YES"),className:"popup-window-button-decline",events:{click:BX.delegate((function(){this.BXIM.callController.currentCall.hangup();BX.proxy_context.popupWindow.close();this.BXIM.openMessenger(e)}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_M_CALL_CLOSE_CHAT_NO"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})]);return false};MessengerSlider.prototype.canClose=function(){if(!this.BXIM.callController.hasActiveCall()||!this.BXIM.callController.currentCall){return true}this.BXIM.openConfirm(BX.message("IM_M_CALL_CLOSE_CHAT"),[new BX.PopupWindowButton({text:BX.message("IM_M_CALL_CLOSE_CHAT_YES"),className:"popup-window-button-decline",events:{click:BX.delegate((function(){if(this.BXIM.callController.currentCall){this.BXIM.callController.currentCall.hangup()}else if(this.BXIM.callController.callView){this.BXIM.callController.callView.close()}this.close();BX.proxy_context.popupWindow.close()}),this)}}),new BX.PopupWindowButton({text:BX.message("IM_M_CALL_CLOSE_CHAT_NO"),className:"popup-window-button",events:{click:function(){this.popupWindow.close()}}})]);return false};MessengerSlider.prototype.canCloseByEsc=function(){var e=true;if(this.BXIM.messenger.popupSmileMenu){}if(this.BXIM.disk.isFilePopupShown()){}else if(this.BXIM.messenger.popupMessengerFileButton!=null&&BX.hasClass(this.BXIM.messenger.popupMessengerFileButton,"bx-messenger-textarea-file-active")){}else if(this.BXIM.messenger.popupPopupMenu){}else if(this.BXIM.messenger.popupChatDialog&&this.BXIM.messenger.popupChatDialogContactListSearch.value.length>=0){}else if(this.BXIM.extraOpen){}else if(this.BXIM.messenger.renameChatDialogInput&&this.BXIM.messenger.renameChatDialogInput.value.length>0){}else if(this.BXIM.messenger.popupContactListSearchInput&&(this.BXIM.messenger.popupContactListSearchInput.value.length>0||this.BXIM.messenger.chatList)){}else{if(BX.util.trim(this.BXIM.messenger.popupMessengerEditTextarea.value).length>0){}else if(BX.util.trim(this.BXIM.messenger.popupMessengerTextarea.value).length<=0&&!this.BXIM.callController.hasActiveCall()){e=false}}return!e};MessengerSlider.prototype.recover=function(e){if(!e||!e.getData().has("currentTab")){return false}var t=e.getData().get("currentTab");e.getData().delete("currentTab");e.getContentContainer().appendChild(BX.MessengerWindow.content);this.BXIM.messenger.openChatFlag=t.toString().substr(0,4)=="chat";BX.MessengerCommon.openDialog(t,this.BXIM.dialogOpen?false:true);e.closeLoader();return true};MessengerSlider.prototype.open=function(){return new Promise(function(e,t){if(this.isFocus()){return e()}var s=this.getNextId();var i=this.getCurrent();if(i){i.showLoader();i.getContentContainer().innerHTML="";i.getData().set("currentTab",this.BXIM.messenger.currentTab)}var n="/bitrix/js/im/images/im-loader"+(BX.MessengerTheme.isDark()?".dark":"")+".min.svg";if(this.BXIM.messenger.externalMenu){n="/bitrix/js/im/images/im-loader-page"+(BX.MessengerTheme.isDark()?".dark":"")+".min.svg"}BX.SidePanel.Instance.open("im:slider:"+s,{data:{rightBoundary:0},cacheable:false,animationDuration:100,customLeftBoundary:0,loader:n,contentCallback:function(e){return BX.MessengerWindow.content},label:{text:BX.message("IM_SLIDER_TITLE")},events:{onOpenComplete:function(t){e()},onLoad:function(e){e.slider.showLoader();BX.MessengerWindow.drawAppearance();BX.MessengerWindow.drawTabs();BX.MessengerWindow.adjustSize();if(BX.MessengerTheme.isDark()){e.slider.getContentContainer().classList.add("bx-messenger-dark")}}}});this.instances.set(s,BX.SidePanel.Instance.getSlider("im:slider:"+s))}.bind(this))};MessengerSlider.prototype.close=function(){if(!this.isOpen()){return false}BX.SidePanel.Instance.close("im:slider:"+this.getCurrentId())};MessengerSlider.prototype.setBxIm=function(e){this.BXIM=e};BX.MessengerSlider=new MessengerSlider;var MessengerCalls=function(){this.calls=[]};MessengerCalls.prototype.draw=function(e,t){t=t||false;e.dialogId=e.dialogId.toString();e.time=+new Date+15e3;var s=this.calls.findIndex((function(t){return t.dialogId===e.dialogId}));if(s>-1){this.calls[s]=e;if(t){BX.MessengerCommon.recentListRedraw()}}else{this.calls.push(e);BX.MessengerCommon.recentListRedraw()}};MessengerCalls.prototype.hide=function(e){e=e.toString();this.calls=this.calls.filter((function(t){return t.dialogId!==e}));BX.MessengerCommon.recentListRedraw()};MessengerCalls.prototype.get=function(){return this.calls};MessengerCalls.prototype.hasActiveCall=function(e){if(!this.BXIM||this.BXIM.callController.hasActiveCall()){return true}e=e?e.toString():"";var t;if(e){t=function(t){return t.dialogId===e&&t.state==="join"}}else{t=function(e){return e.state==="join"}}var s=this.calls.find(t);return!!s};MessengerCalls.prototype.hasWaitCall=function(e){if(this.hasActiveCall()){return false}e=e?e.toString():"";var t;if(e){t=function(t){return t.dialogId===e&&t.state==="wait"}}else{t=function(e){return e.state==="wait"}}var s=this.calls.find(t);return!!s};MessengerCalls.prototype.hasActiveSharing=function(e){if(!this.BXIM||!this.BXIM.callController.hasActiveCall()||!this.BXIM.callController.currentCall.isScreenSharingStarted()){return false}return true};MessengerCalls.prototype.drawElement=function(e){if(!e||!e.dialogId)return null;var t=e.dialogId;var s=t.includes("chat");if(s){entity=this.BXIM.messenger.chat[t.substr(4)]||null}else{entity=this.BXIM.messenger.users[t]||null}if(!entity){this.hide(e.dialogId);return false}var i=entity.avatar?entity.avatar:e.call.associatedEntity.avatar||this.BXIM.pathToBlankImage;var n=e.call.associatedEntity.name||entity.name;var a=entity.color||"#3e99ce";var o=s&&a?"bx-messenger-cl-avatar-status-hide":"";var r="";var l="bx-messenger-cl-item bx-messenger-cl-item-call bx-messenger-cl-id-"+t;if(t.includes("chat")){r="bx-messenger-cl-avatar-"+entity.type;l+=" bx-messenger-cl-item-chat bx-messenger-cl-item-chat-"+entity.type}else{l+=" bx-messenger-cl-status-"+BX.MessengerCommon.getUserStatus(entity)}if(e.state==="join"){l+=" bx-messenger-cl-item-call-join"}else{l+=" bx-messenger-cl-item-call-wait"}if(!(e.state==="wait"&&s||e.state==="join"&&this.BXIM.callController.hasActiveCall())){l+=" bx-messenger-cl-item-call-single"}var p="private";if(t.includes("chat")){p=entity.type}var h=BX.MessengerCommon.getAvatarStyle({avatar:i,color:entity.color});return BX.create("span",{props:{className:l},events:{click:this.onClick.bind(this)},attrs:{"data-userId":t,"data-callState":e.state,"data-name":BX.util.htmlspecialcharsback(n),"data-status":"call","data-avatar":i,"data-userIsChat":t.includes("chat"),"data-chatType":p,"data-isPinned":false,"data-userIsQueue":false},html:'<span title="'+n+'" class="bx-messenger-cl-avatar '+r+" "+o+'">'+'<span class="bx-messenger-cl-avatar-img'+(a?" bx-messenger-cl-avatar-img-default":"")+'" '+h+"></span>"+'<span class="bx-messenger-cl-status"></span>'+"</span>"+'<span class="bx-messenger-cl-user">'+'<div class="bx-messenger-cl-user-title'+(entity.extranet?" bx-messenger-user-extranet":"")+'" title="'+n+'">'+n+"</div>"+(e.state==="wait"&&s?'<div class="bx-messenger-cl-user-desc">'+BX.message("IM_M_CALL_BTN_JOIN")+"</div>":"")+(e.state==="join"&&this.BXIM.callController.hasActiveCall()?'<div class="bx-messenger-cl-user-desc">'+BX.message(s?"IM_M_CALL_BTN_DISCONNECT":"IM_M_CALL_BTN_HANGUP")+"</div>":"")+"</span>"})};MessengerCalls.prototype.onClick=function(e){var t;if(e.target.className.includes("bx-messenger-cl-item")){t=e.target}else{t=BX.findParent(e.target,{className:"bx-messenger-cl-item"})}var s=t.getAttribute("data-userId");var i=t.getAttribute("data-callState");var n=t.getAttribute("data-chatType");if(n==="videoconf"){var a=BX.MessengerCommon.getVideoconfLink(s);if(a){this.BXIM.openVideoconfByUrl(a)}BX.MessengerCommon.openDialog(s);return BX.MessengerCommon.preventDefault(e)}else if(i==="join"){if(e.target.className==="bx-messenger-cl-user-desc"){this.BXIM.callController.leaveCurrentCall()}else{this.BXIM.callController.unfold();BX.MessengerCommon.openDialog(s)}return BX.MessengerCommon.preventDefault(e)}var o=this.calls.find((function(e){return e.dialogId===s}));if(e.target.className==="bx-messenger-cl-user-desc"){BXIM.messenger.openPopupMenu(e.target,"callJoin",true,{currentCall:o});return BX.MessengerCommon.preventDefault(e)}};MessengerCalls.prototype.onCallCreated=function(e){var t=e.call;t.addEventListener(BX.Call.Event.onJoin,this.onCallJoin.bind(this));t.addEventListener(BX.Call.Event.onLeave,this.onCallLeave.bind(this));t.addEventListener(BX.Call.Event.onDestroy,this.onCallDestroy.bind(this));this.draw({dialogId:t.associatedEntity.id,name:t.associatedEntity.name,call:t,state:"wait"})};MessengerCalls.prototype.onCallJoin=function(e){this.draw({dialogId:e.call.associatedEntity.id,call:e.call,state:"join"},true)};MessengerCalls.prototype.onCallLeave=function(e){this.draw({dialogId:e.call.associatedEntity.id,call:e.call,state:"wait"},true)};MessengerCalls.prototype.onCallDestroy=function(e){this.hide(e.call.associatedEntity.id)};MessengerCalls.prototype.setBxIm=function(e){this.BXIM=e;if(!this.BXIM.init){return false}BX.addCustomEvent(window,"CallEvents::callCreated",this.onCallCreated.bind(this));BX.addCustomEvent(window,"CallController::onFold",function(){BX.MessengerCommon.readMessage(this.BXIM.messenger.currentTab)}.bind(this));return true};BX.MessengerCalls=new MessengerCalls;var MessengerPromo=function(){this.promo={"im:video:01042020:web":BX.message("IM_PROMO_VIDEO_01042020_WEB"),"ol:crmform:17092021:web":BX.message("IM_PROMO_CRMFORM_17092021_WEB"),"imbot:support24:25112021:web":BX.message("IM_PROMO_SUPPORT24_QUESTIONS_25112021_WEB")};this.promoActive={}};MessengerPromo.prototype.init=function(e,t){this.BXIM=t;if(!this.BXIM.init){return false}if(!e||!Array.isArray(e)){return false}e.forEach(function(e){this.promoActive[e]=true}.bind(this))};MessengerPromo.prototype.showConfirm=function(e){if(!this.promoActive[e]){return false}var t=[new BX.PopupWindowButton({text:BX.message("IM_NOTIFY_CONFIRM_CLOSE"),className:"popup-window-button-accept",events:{click:BX.delegate((function(e){BX.proxy_context.popupWindow.close()}),this)}})];var s=this.promo[e]?this.promo[e].split("#BR#").join("<br>"):"";this.BXIM.openConfirm(s,t);this.read(e);this.save(e);return true};MessengerPromo.prototype.show=function(e,t,s){if(!this.promoActive[e]){return false}var i=this.promo[e]?this.promo[e].split("#BR#").join("<br>"):"";s=s||{};if(typeof s.angleDarkMode==="undefined"){s.angleDarkMode=true}if(typeof s.autoHide==="undefined"){s.autoHide=false}this.BXIM.messenger.tooltip(t,i,s);this.read(e);this.save(e);return true};MessengerPromo.prototype.needToShow=function(e){if(!this.promoActive[e]){return false}return true};MessengerPromo.prototype.read=function(e){this.promoActive[e]=false};MessengerPromo.prototype.save=function(e){BX.rest.callMethod("im.promotion.read",{id:e})};BX.MessengerPromo=new MessengerPromo;var MessengerLimit=function(){this.limit={}};MessengerLimit.prototype.init=function(e,t){this.BXIM=t;if(!this.BXIM.init){return false}if(!e||!Array.isArray(e)){return false}e.forEach(function(e){this.limit[e.id]=e}.bind(this))};MessengerLimit.prototype.isActive=function(e){return this.limit[e]&&this.limit[e].active||false};MessengerLimit.prototype.getArticleCode=function(e){return this.limit[e]&&this.limit[e].articleCode?this.limit[e].articleCode:""};MessengerLimit.prototype.showHelpSlider=function(e){var t=this.getArticleCode(e);if(!t){console.warn("Limit article not found",e);return false}BX.UI.InfoHelper.show(t);return true};MessengerLimit.prototype.disableExtensions=function(){if(this.isActive("call_screen_sharing")){var e=BX.Call.Controller.FeatureState.Limited;if(this.BXIM.userExtranet){e=BX.Call.Controller.FeatureState.Disabled}this.BXIM.callController.setFeatureScreenSharing(e)}if(this.isActive("call_record")){var t=BX.Call.Controller.FeatureState.Limited;if(this.BXIM.userExtranet){t=BX.Call.Controller.FeatureState.Disabled}this.BXIM.callController.setFeatureRecord(t)}if(!BX.desktop){return true}var s=BX.desktop.getBackgroundImage();if(s.id==="none"){return true}if(s.id==="blur"||s.id==="gaussianBlur"){if(this.isActive("call_blur_background")){BX.desktop.setCallBackground("","none")}return true}if(this.isActive("call_background")){BX.desktop.setCallBackground("","none")}return true};BX.MessengerLimit=new MessengerLimit;var MessengerTheme=function(){this.theme="auto"};MessengerTheme.prototype.init=function(e,t){this.BXIM=t;if(typeof e==="string"){this.theme=e}else if(e===true){this.theme="dark"}if(!this.isAvailable()){return}if(this.isDark()){document.body.classList.add("bx-theme-dark")}if(this.BXIM.settings.isCurrentThemeDark!==this.isDark()){this.BXIM.settings.isCurrentThemeDark=this.isDark();if(this.BXIM.init){this.BXIM.saveSettings({isCurrentThemeDark:this.BXIM.settings.isCurrentThemeDark})}}this.onChange(function(e){this.BXIM.messenger.toggleDarkTheme(true)}.bind(this))};MessengerTheme.prototype.isAvailable=function(){if(BX.browser.IsIE11()){return false}if(typeof window.matchMedia==="undefined"){return false}var e=window.matchMedia("(prefers-color-scheme: dark)");if(!e){return false}if(typeof window.matchMedia("(prefers-color-scheme: dark)").addEventListener!=="function"){return false}return true};MessengerTheme.prototype.onChange=function(e){window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",(function(t){e(t.matches===true)}))};MessengerTheme.prototype.isDark=function(){if(this.theme!=="auto"){return this.theme==="dark"}if(this.BXIM.desktop.ready()&&this.BXIM.desktop.getApiVersion()>=59){return BXDesktopSystem.IsDarkTheme()}if(!this.isAvailable()){return false}return window.matchMedia("(prefers-color-scheme: dark)").matches};BX.MessengerTheme=new MessengerTheme;var MessengerExternalList=function(){this.list=null;this.popupList=[]};MessengerExternalList.prototype.init=function(e,t){this.BXIM=t;if(!this.BXIM.init){return false}if(!e){return false}this.list=BX(e);if(!this.list){return false}BX.bind(this.list,"scroll",function(){if(this.BXIM.messenger.checkRecentNeedLoad(this.list,true)){this.BXIM.messenger.recentListLoadMore()}if(this.BXIM.messenger.popupPopupMenu!=null&&this.BXIM.messenger.popupPopupMenuDateCreate+500<+new Date&&this.BXIM.messenger.popupPopupMenu.uniquePopupId.replace("bx-messenger-popup-","")=="contactList"){this.BXIM.messenger.popupPopupMenu.close()}this.popupList.forEach((function(e){e.close()}))}.bind(this))};MessengerExternalList.prototype.getNode=function(){return this.list};MessengerExternalList.prototype.isAvailable=function(){return this.list!==null};MessengerExternalList.prototype.update=function(e){if(!this.isAvailable()){return false}if(!e){e=BX.MessengerCommon.recentListPrepare()}this.list.innerHTML="";this.list.appendChild(e);return true};MessengerExternalList.prototype.getElement=function(e,t){if(!this.isAvailable()){return false}t=!!t;var s=this.list.getElementsByClassName("bx-messenger-cl-id-"+e);if(!s){return null}return t?s:s[0]};MessengerExternalList.prototype.canShowMessage=function(e){if(!this.isAvailable()){return false}if(BX.MessengerSlider.isOpen()){return false}var t=this.getElement(e);if(!t){return false}var s=BX.MessengerCommon.isElementVisibleOnScreen(t,this.list,true);if(!s.top||!s.bottom){return false}return true};MessengerExternalList.prototype.showMessage=function(e){if(!this.isAvailable()){return false}if(BX.MessengerSlider.isOpen()){return false}if(typeof e.dialogId==="undefined"||typeof e.title==="undefined"||typeof e.text==="undefined"){return false}var t=e.dialogId;var s=this.getElement(t);if(!s){return false}var i=BX.MessengerCommon.isElementVisibleOnScreen(s,this.list,true);if(!i.top||!i.bottom){return false}var n;n=new BX.PopupWindow("bx-messenger-welcome-"+ +new Date,s,{targetContainer:document.body,className:"bx-messenger-welcome",cacheable:false,bindOptions:{forceBindPosition:true},animation:{showClassName:"bx-messenger-welcome-animation-show",closeClassName:"bx-messenger-welcome-animation-hide",closeAnimationType:"animation"},events:{onPopupShow:function(e){e.imTimer=setTimeout((function(){e.close()}),5e3)}.bind(this),onPopupDestroy:function(e){clearTimeout(e.imTimer);this.popupList=this.popupList.filter((function(t){return t!==e}));e=null}.bind(this)},content:BX.create("div",{attrs:{className:"bx-messenger-welcome-box"},events:{click:function(e){this.BXIM.openMessenger(t);n.close()}.bind(this),mouseenter:function(e){clearTimeout(n.imTimer)}.bind(this),mouseleave:function(e){n.imTimer=setTimeout((function(){n.close()}),2e3)}.bind(this)},children:[BX.create("div",{attrs:{className:"bx-messenger-welcome-title"},text:e.title}),BX.create("div",{attrs:{className:"bx-messenger-welcome-text"},text:e.text})]})});this.popupList.push(n);n.show();n.setOffset({offsetTop:-n.popupContainer.offsetHeight+1,offsetLeft:-n.popupContainer.offsetWidth+13});n.adjustPosition();if(this.BXIM.settings.status!=="dnd"&&!this.BXIM.desktopStatus){this.BXIM.playSound("newMessage1")}return true};BX.MessengerExternalList=new MessengerExternalList;var DesktopZoomLevel=function(){this.level=undefined};DesktopZoomLevel.prototype.init=function(e){this.BXIM=e;if(!this.isAvailable()){return}this.openNotify=BX.throttle(this._openNotify,300,this);window.addEventListener("BXZoomChanged",function(e){var t=e.detail[0];t=this.roundLevel(t);if(t===this.level){return}this.level=t;this.openNotify()}.bind(this))};DesktopZoomLevel.prototype.isAvailable=function(){if(!this.BXIM.desktop.enableInVersion(66)){return false}return true};DesktopZoomLevel.prototype.set=function(e){if(!this.isAvailable()){return false}e=parseFloat(e);if(isNaN(e)){return false}if(0>e&&e<-2.4){e=-2.4}else if(e>2.4){e=2.4}this.level=this.roundLevel(e);BXDesktopWindow.SetZoomLevel(e);this.openNotify();return true};DesktopZoomLevel.prototype.get=function(){if(!this.isAvailable()){return 0}var e=BXDesktopWindow.GetZoomLevel();this.level=this.roundLevel(e);return e};DesktopZoomLevel.prototype.roundLevel=function(e){e=parseFloat(e);if(isNaN(e)){return 0}return Math.round(e*Math.pow(10,1))/Math.pow(10,1)};DesktopZoomLevel.prototype._openNotify=function(){if(!this.BXIM.init){return false}var e=Math.round(100+this.level/2.4*100);BX.UI.Notification.Center.notify({content:BX.message("IM_D_ZOOM_LEVEL").replace("#PERCENT#",e),category:"im-zoom-level",blinkOnUpdate:false,position:"top-right",autoHide:true,autoHideDelay:5e3,closeButton:true,width:260,actions:[{title:BX.message("IM_D_ZOOM_LEVEL_RESET"),events:{click:function(){this.set(0)}.bind(this)}}]});if(typeof BX.desktop!=="undefined"){BX.desktop.closeWindow(["history","settings"])}};BX.DesktopZoomLevel=new DesktopZoomLevel;var DesktopFinder=function(){this.setDefaultVars()};DesktopFinder.prototype.setDefaultVars=function(){this.popup=null;this.iconSearch=null;this.iconResult=null;this.input=null;this.inputText="";this.buttonNext=null;this.buttonPrev=null;this.buttonClose=null;this.resultShow=false;this.resultCurrent=0;this.resultTotal=0};DesktopFinder.prototype.init=function(e){this.BXIM=e;if(!this.isAvailable()){return}BX.bind(window,"keydown",this.onGlobalKeyDown.bind(this));BX.bind(window,"keyup",this.onGlobalKeyUp.bind(this));window.addEventListener("BXFindCount",function(e){if(!this.popup){return}var t=e.detail[0];var s=e.detail[1];this.updateSearchResult(t,s)}.bind(this))};DesktopFinder.prototype.isAvailable=function(){if(!this.BXIM.desktop.enableInVersion(66)){return false}return true};DesktopFinder.prototype.openPopup=function(){if(this.popup){return true}this.popup=BX.create("div",{props:{className:"bx-desktop-client-search popup-window"},children:[BX.create("div",{props:{className:"popup-window-content"},children:[BX.create("span",{props:{className:"bx-desktop-client-search-input-wrap"},children:[BX.create("div",{props:{className:"bx-desktop-client-search-input ui-ctl ui-ctl-textbox ui-ctl-after-icon ui-ctl-sm ui-ctl-round"},children:[this.iconSearch=BX.create("div",{props:{className:"bx-desktop-search-input-icon ui-ctl-after ui-ctl-icon-search"}}),this.iconResult=BX.create("div",{props:{className:"bx-desktop-client-search-result ui-ctl-after"}}),this.input=BX.create("input",{props:{className:"bx-desktop-client-search-input-tag ui-ctl-element"},attrs:{type:"text",autofocus:"true",placeholder:BX.message("IM_DESKTOP_FIND_TEXT")}})]})]}),this.buttonNext=BX.create("button",{props:{className:"bx-desktop-client-search-button bx-desktop-client-search-button-next"},attrs:{title:BX.message("IM_DESKTOP_FIND_NEXT")}}),this.buttonPrev=BX.create("button",{props:{className:"bx-desktop-client-search-button bx-desktop-client-search-button-prev"},attrs:{title:BX.message("IM_DESKTOP_FIND_PREV")}}),this.buttonClose=BX.create("button",{props:{className:"bx-desktop-client-search-button bx-desktop-client-search-button-close"},attrs:{title:BX.message("IM_DESKTOP_FIND_CLOSE")}})]})]});BX.bind(this.input,"keyup",this.onInputKeyUp.bind(this));BX.bind(this.buttonNext,"click",this.onButtonNext.bind(this));BX.bind(this.buttonPrev,"click",this.onButtonPrev.bind(this));BX.bind(this.buttonClose,"click",this.onButtonClose.bind(this));document.body.insertBefore(this.popup,document.body.firstChild);this.BXIM.desktop.setPreventEsc(true);this.input.focus();return true};DesktopFinder.prototype.closePopup=function(){if(!this.popup){return true}this.BXIM.desktop.setPreventEsc(false);BX.remove(this.popup);this.setDefaultVars();return true};DesktopFinder.prototype.updateSearchResult=function(e,t){this.resultCurrent=e===0?1:e;this.resultTotal=t;if(this.resultTotal<=0){if(this.resultShow){BX.show(this.iconSearch);BX.hide(this.iconResult);this.iconResult.innerHTML="";this.resultShow=false}return true}if(!this.resultShow){BX.hide(this.iconSearch);BX.show(this.iconResult);this.resultShow=true}this.iconResult.innerHTML=BX.message("IM_DESKTOP_FIND_RESULT").replace("#CURRENT#",this.resultCurrent).replace("#TOTAL#",this.resultTotal);return true};DesktopFinder.prototype.onGlobalKeyDown=function(e){if((e.metaKey==true||e.ctrlKey==true)&&e.keyCode==70){if(this.popup){this.input.focus()}else{this.openPopup()}}if(!this.popup){return true}if((e.metaKey==true||e.ctrlKey==true)&&e.keyCode===71){if(e.shiftKey){BXDesktopWindow.Find(this.input.value,false,true)}else{BXDesktopWindow.Find(this.input.value,true,true)}}return true};DesktopFinder.prototype.onGlobalKeyUp=function(e){if(!this.popup){return true}if(e.keyCode===13){if(!this.input.value){return true}if(e.shiftKey){BXDesktopWindow.Find(this.input.value,false,true)}else{BXDesktopWindow.Find(this.input.value,true,true)}return true}if(e.keyCode===27){if(this.input.value.length>0){BXDesktopWindow.StopFind();this.input.value="";setTimeout(function(){this.closePopup();this.openPopup()}.bind(this),100)}else{this.closePopup();BXDesktopWindow.StopFind()}return true}};DesktopFinder.prototype.onInputKeyUp=function(e){var t=e.target.value;if(t===this.inputText){return true}this.inputText=t;if(t.length===0){this.closePopup();this.openPopup();return true}BXDesktopWindow.Find(t,true,false);return true};DesktopFinder.prototype.onButtonNext=function(e){BXDesktopWindow.Find(this.input.value,true,true);return true};DesktopFinder.prototype.onButtonPrev=function(e){BXDesktopWindow.Find(this.input.value,false,true);return true};DesktopFinder.prototype.onButtonClose=function(e){this.closePopup();BXDesktopWindow.StopFind();return true};BX.DesktopFinder=new DesktopFinder;var MessengerSupport24=function(){this.loader=null;this.questionPlaceholderId="bx-messenger-support24-question-placeholder";this.questionLoaderId="bx-messenger-support24-question-loader";this.isInit=false};MessengerSupport24.prototype.init=function(e){this.BXIM=e;this.isInit=true};MessengerSupport24.prototype.createPopup=function(){if(!this.isInit){return}var e=document.getElementsByClassName("bx-messenger-textarea-icon-marketplace-app-question")[0];var t=BX.MessengerTheme.isDark();var s="bx-messenger-support24-question-popup-header";var i="bx-messenger-support24-question-loader-svg-circle";var n="bx-messenger-support24-question-loader-title";if(t){s+=" "+s+"-dark";i+=" "+i+"-dark";n+=" "+n+"-dark"}this.popup=new BX.PopupWindow("bx-messenger-popup-support24-question",e,{targetContainer:document.body,bindOptions:{position:"top"},width:520,height:288,offsetTop:0,offsetLeft:-38,padding:0,lightShadow:false,autoHide:true,closeByEsc:true,closeIcon:{height:"35px",width:"35px"},animation:"fading",darkMode:t,zIndex:BX.MessengerCommon.getDefaultZIndex()+200,content:'<div class="bx-messenger-iframe-title-box">'+'<div class="'+s+'">'+'<span class="bx-messenger-support24-question-popup-title">'+BX.message("IM_SUPPORT24_REQUEST_TITLE")+"</span>"+"</div>"+"</div>"+'<div class="bx-messenger-support24-question-placeholder" id="bx-messenger-support24-question-placeholder">'+'<div class="bx-messenger-support24-question-loader" id="'+this.questionLoaderId+'">'+'<div class="main-ui-loader main-ui-show" style="width: 45px; height: 45px;" data-is-shown="true">'+'<svg class="main-ui-loader-svg" viewBox="25 25 50 50">'+'<circle class="main-ui-loader-svg-circle '+i+'" cx="50" cy="50" r="20" fill="none" stroke-miterlimit="10"/>'+"</svg>"+"</div>"+"</div>"+'<div class="'+n+'">'+BX.message("IM_SUPPORT24_REQUEST_LOADING")+"</div>"+"</div>",events:{onPopupClose:function(){BX.MessengerSupport24.question=null;BX.MessengerSupport24.popup=null;this.destroy()}}});BX.addClass(this.popup.popupContainer,"bx-messenger-mark")};MessengerSupport24.prototype.isPopupShown=function(){if(!this.popup){return false}return this.popup.isShown()};MessengerSupport24.prototype.togglePopup=function(){if(!this.popup){this.createPopup();var e={nodeId:this.questionPlaceholderId,popupContext:this};BX.Runtime.loadExtension("imbot.support24.question").then(function(t){new t.Question(e,this)}.bind(this))}if(!this.isPopupShown()){this.BXIM.messenger.closeMenuPopup();if(!BX.MessengerTheme.isDark()){this.popup.setAngle({offset:74})}else{this.popup.setAngle(false)}}this.popup.toggle()};MessengerSupport24.prototype.closePopup=function(){if(!this.popup){return}this.popup.close()};BX.MessengerSupport24=new MessengerSupport24;var DesktopExternalOpener=function(){};DesktopExternalOpener.prototype.init=function(e){this.BXIM=e;this.userIsAway=false;if(BX.MessengerCommon.isDesktop()){BX.desktop.addCustomEvent("BXUserAway",this.onUserAway.bind(this))}BX.PULL.subscribe({moduleId:"im",command:"desktopOpenPage",callback:this.onOpenPageRequest.bind(this)})};DesktopExternalOpener.prototype.onOpenPageRequest=function(e){if(!BX.MessengerCommon.isDesktop()||this.userIsAway){return false}if(BXDesktopSystem.IsBrowserMode()){var t=location.protocol+"//"+location.hostname+e.url;BXDesktopSystem.CreateTab(t);return true}BX.MessengerCommon.openLink(e.url)};DesktopExternalOpener.prototype.onUserAway=function(e){if(!BX.MessengerCommon.isDesktop()){return false}this.userIsAway=e};BX.DesktopExternalOpener=new DesktopExternalOpener;var ImEventHandler=function(){};ImEventHandler.prototype.init=function(e){this.BXIM=e;if(!this.BXIM.init){return false}this.bindEvents()};ImEventHandler.prototype.bindEvents=function(){if(!BX.Messenger.Embedding){this.BXIM.errorMessage=BX.message("IM_M_OLD_REVISION");return false}var e=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.subscribe(e.dialog.open,function(e){BX.MessengerProxy.addChatData(e.data);var t=e.data.target===BX.Messenger.Embedding.Const.OpenTarget.auto;this.BXIM.openMessenger(e.data.dialogId,undefined,!t)}.bind(this));BX.Event.EventEmitter.subscribe(e.dialog.call,function(e){this.BXIM.callTo(e.data.dialogId,true)}.bind(this));BX.Event.EventEmitter.subscribe(e.dialog.openHistory,function(e){BX.MessengerProxy.addChatData(e.data);this.BXIM.messenger.openHistory(e.data.dialogId)}.bind(this));BX.Event.EventEmitter.subscribe(e.dialog.hide,function(e){BX.MessengerProxy.addChatData(e.data);BX.MessengerCommon.recentListHide(e.data.dialogId)}.bind(this));BX.Event.EventEmitter.subscribe(e.dialog.leave,function(e){BX.MessengerProxy.addChatData(e.data);BX.MessengerCommon.leaveFromChat(e.data.dialogId.slice(4))}.bind(this))};BX.ImEventHandler=new ImEventHandler;var MessengerProxy=function(){};MessengerProxy.prototype.init=function(e){this.BXIM=e;BX.addCustomEvent("onImDrawTab",BX.delegate(function(e){this.clearRecentLike(e.id)}.bind(this)));BX.addCustomEvent("onImDraftChange",BX.delegate(function(e){this.setDraftMessage(e.id,e.text)}.bind(this)))};MessengerProxy.prototype.sendSettingsChangeEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.dialog.settingsChange,e)};MessengerProxy.prototype.getOption=function(e){if(e in this.BXIM.settings){return this.BXIM.settings[e]}return null};MessengerProxy.prototype.isDarkTheme=function(){return BX.MessengerTheme.isDark()};MessengerProxy.prototype.isSliderOpened=function(){return BX.MessengerSlider.isOpen()};MessengerProxy.prototype.canInvite=function(){return this.BXIM.canInvite};MessengerProxy.prototype.getGeneralChatId=function(){return this.BXIM.messenger.generalChatId};MessengerProxy.prototype.getCurrentDialogId=function(){var e=this.BXIM.messenger.currentTab;if(!BX.MessengerCommon.isChatId(e)){e=parseInt(e)}return e};MessengerProxy.prototype.playNewUserSound=function(){if(this.BXIM.settings.status==="dnd"||this.BXIM.desktopStatus){return false}this.BXIM.playSound("newMessage1")};MessengerProxy.prototype.getCallController=function(){return this.BXIM.callController};MessengerProxy.prototype.getPushServerStatus=function(){return this.BXIM.ppServerStatus};MessengerProxy.prototype.sendOpenSearchEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.recent.openSearch,{query:e})};MessengerProxy.prototype.sendUpdateSearchEvent=function(e,t){var s=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(s.recent.updateSearch,{query:e,keyCode:t})};MessengerProxy.prototype.sendCloseSearchEvent=function(){var e=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(e.recent.closeSearch)};MessengerProxy.prototype.clearRecentLike=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.recent.clearLike,{dialogId:e})};MessengerProxy.prototype.getTextareaHistory=function(){return this.BXIM.messenger.textareaHistory};MessengerProxy.prototype.setDraftMessage=function(e,t){var s=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(s.recent.setDraftMessage,{dialogId:e,text:t})};MessengerProxy.prototype.updateTextareaHistory=function(e){var t=this.getTextareaHistory();var s;if(typeof t[e]==="undefined"||!t[e]){s=""}else{s=t[e]}this.setDraftMessage(e,s)};MessengerProxy.prototype.clearTextareaHistory=function(e){this.setDraftMessage(e,"")};MessengerProxy.prototype.sendHideChatEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.recent.hideChat,{dialogId:e})};MessengerProxy.prototype.sendLeaveChatEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.recent.leaveChat,{dialogId:e})};MessengerProxy.prototype.sendCounterChangeEvent=function(e,t){var s=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(s.recent.setCounter,{dialogId:e,counter:t})};MessengerProxy.prototype.sendSetMessageEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.recent.setMessage,e)};MessengerProxy.prototype.sendClearHistoryEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.dialog.clearHistory,{dialogId:e})};MessengerProxy.prototype.addChatData=function(e){var t=e.dialogId;var s=t.startsWith("chat");if(s&&!this.BXIM.messenger.chat[t.substring(4)]){var i=t.substring(4);var n=e.chat;this.BXIM.messenger.chat[i]={avatar:n.avatar,color:n.color,id:n.id,name:BX.util.htmlspecialchars(n.name),type:n.type,entity_id:n.entity_id,entity_data_1:n.entity_data_1,entity_data_2:n.entity_data_2}}else if(!s&&!this.BXIM.messenger.users[t]){var a=e.user;this.BXIM.messenger.users[t]={id:t,first_name:BX.util.htmlspecialchars(a.firstName),last_name:BX.util.htmlspecialchars(a.lastName),name:BX.util.htmlspecialchars(a.name),gender:a.gender,status:a.status,work_position:BX.util.htmlspecialchars(a.workPosition),avatar:e.chat.avatar,color:e.chat.color,bot:a.bot,absent:a.absent,extranet:a.extranet,network:a.network,idle:a.idle,last_activity_date:a.lastActivityDate,mobile_last_date:a.mobileLastDate}}if(s&&!this.BXIM.messenger.userInChat[t.substring(4)]){var i=t.substring(4);var o=this.BXIM.userId;this.BXIM.messenger.userInChat[i]=[o]}};MessengerProxy.prototype.updateRecent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.recent.updateState,{items:e})};MessengerProxy.prototype.sendClosePopupEvent=function(){var e=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(e.dialog.closePopup)};MessengerProxy.prototype.clearSearchInput=function(){BX.MessengerCommon.contactListSearchClear()};MessengerProxy.prototype.isCurrentUserExtranet=function(){return this.BXIM.userExtranet};MessengerProxy.prototype.sendAccessDeniedErrorEvent=function(e){var t=BX.Messenger.Embedding.Const.EventType;BX.Event.EventEmitter.emit(t.dialog.errors.accessDenied,{dialogId:e})};BX.MessengerProxy=new MessengerProxy;
/* End */
;
//# sourceMappingURL=kernel_im.map.js